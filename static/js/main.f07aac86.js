/*! For license information please see main.f07aac86.js.LICENSE.txt */
(()=>{var e={16:function(e,t,n){var a;!function(e,r){function s(e){var t=this,n="";t.next=function(){var e=t.x^t.x>>>2;return t.x=t.y,t.y=t.z,t.z=t.w,t.w=t.v,(t.d=t.d+362437|0)+(t.v=t.v^t.v<<4^e^e<<1)|0},t.x=0,t.y=0,t.z=0,t.w=0,t.v=0,e===(0|e)?t.x=e:n+=e;for(var a=0;a<n.length+64;a++)t.x^=0|n.charCodeAt(a),a==n.length&&(t.d=t.x<<10^t.x>>>4),t.next()}function i(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t.v=e.v,t.d=e.d,t}function o(e,t){var n=new s(e),a=t&&t.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},r.int32=n.next,r.quick=r,a&&("object"==typeof a&&i(a,n),r.state=function(){return i(n,{})}),r}r&&r.exports?r.exports=o:n.amdD&&n.amdO?void 0===(a=function(){return o}.call(t,n,t,r))||(r.exports=a):this.xorwow=o}(0,e=n.nmd(e),n.amdD)},43:(e,t,n)=>{"use strict";e.exports=n(202)},66:function(e,t,n){var a;!function(e,r){function s(e){var t=this,n="";t.x=0,t.y=0,t.z=0,t.w=0,t.next=function(){var e=t.x^t.x<<11;return t.x=t.y,t.y=t.z,t.z=t.w,t.w^=t.w>>>19^e^e>>>8},e===(0|e)?t.x=e:n+=e;for(var a=0;a<n.length+64;a++)t.x^=0|n.charCodeAt(a),t.next()}function i(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t}function o(e,t){var n=new s(e),a=t&&t.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},r.int32=n.next,r.quick=r,a&&("object"==typeof a&&i(a,n),r.state=function(){return i(n,{})}),r}r&&r.exports?r.exports=o:n.amdD&&n.amdO?void 0===(a=function(){return o}.call(t,n,t,r))||(r.exports=a):this.xor128=o}(0,e=n.nmd(e),n.amdD)},108:()=>{},153:(e,t,n)=>{"use strict";var a=n(43),r=Symbol.for("react.element"),s=Symbol.for("react.fragment"),i=Object.prototype.hasOwnProperty,o=a.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,l={key:!0,ref:!0,__self:!0,__source:!0};function u(e,t,n){var a,s={},u=null,c=null;for(a in void 0!==n&&(u=""+n),void 0!==t.key&&(u=""+t.key),void 0!==t.ref&&(c=t.ref),t)i.call(t,a)&&!l.hasOwnProperty(a)&&(s[a]=t[a]);if(e&&e.defaultProps)for(a in t=e.defaultProps)void 0===s[a]&&(s[a]=t[a]);return{$$typeof:r,type:e,key:u,ref:c,props:s,_owner:o.current}}t.Fragment=s,t.jsx=u,t.jsxs=u},173:(e,t,n)=>{e.exports=n(497)()},202:(e,t)=>{"use strict";var n=Symbol.for("react.element"),a=Symbol.for("react.portal"),r=Symbol.for("react.fragment"),s=Symbol.for("react.strict_mode"),i=Symbol.for("react.profiler"),o=Symbol.for("react.provider"),l=Symbol.for("react.context"),u=Symbol.for("react.forward_ref"),c=Symbol.for("react.suspense"),p=Symbol.for("react.memo"),d=Symbol.for("react.lazy"),h=Symbol.iterator;var f={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},m=Object.assign,g={};function y(e,t,n){this.props=e,this.context=t,this.refs=g,this.updater=n||f}function b(){}function x(e,t,n){this.props=e,this.context=t,this.refs=g,this.updater=n||f}y.prototype.isReactComponent={},y.prototype.setState=function(e,t){if("object"!==typeof e&&"function"!==typeof e&&null!=e)throw Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables.");this.updater.enqueueSetState(this,e,t,"setState")},y.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},b.prototype=y.prototype;var v=x.prototype=new b;v.constructor=x,m(v,y.prototype),v.isPureReactComponent=!0;var w=Array.isArray,k=Object.prototype.hasOwnProperty,N={current:null},S={key:!0,ref:!0,__self:!0,__source:!0};function I(e,t,a){var r,s={},i=null,o=null;if(null!=t)for(r in void 0!==t.ref&&(o=t.ref),void 0!==t.key&&(i=""+t.key),t)k.call(t,r)&&!S.hasOwnProperty(r)&&(s[r]=t[r]);var l=arguments.length-2;if(1===l)s.children=a;else if(1<l){for(var u=Array(l),c=0;c<l;c++)u[c]=arguments[c+2];s.children=u}if(e&&e.defaultProps)for(r in l=e.defaultProps)void 0===s[r]&&(s[r]=l[r]);return{$$typeof:n,type:e,key:i,ref:o,props:s,_owner:N.current}}function T(e){return"object"===typeof e&&null!==e&&e.$$typeof===n}var C=/\/+/g;function E(e,t){return"object"===typeof e&&null!==e&&null!=e.key?function(e){var t={"=":"=0",":":"=2"};return"$"+e.replace(/[=:]/g,(function(e){return t[e]}))}(""+e.key):t.toString(36)}function $(e,t,r,s,i){var o=typeof e;"undefined"!==o&&"boolean"!==o||(e=null);var l=!1;if(null===e)l=!0;else switch(o){case"string":case"number":l=!0;break;case"object":switch(e.$$typeof){case n:case a:l=!0}}if(l)return i=i(l=e),e=""===s?"."+E(l,0):s,w(i)?(r="",null!=e&&(r=e.replace(C,"$&/")+"/"),$(i,t,r,"",(function(e){return e}))):null!=i&&(T(i)&&(i=function(e,t){return{$$typeof:n,type:e.type,key:t,ref:e.ref,props:e.props,_owner:e._owner}}(i,r+(!i.key||l&&l.key===i.key?"":(""+i.key).replace(C,"$&/")+"/")+e)),t.push(i)),1;if(l=0,s=""===s?".":s+":",w(e))for(var u=0;u<e.length;u++){var c=s+E(o=e[u],u);l+=$(o,t,r,c,i)}else if(c=function(e){return null===e||"object"!==typeof e?null:"function"===typeof(e=h&&e[h]||e["@@iterator"])?e:null}(e),"function"===typeof c)for(e=c.call(e),u=0;!(o=e.next()).done;)l+=$(o=o.value,t,r,c=s+E(o,u++),i);else if("object"===o)throw t=String(e),Error("Objects are not valid as a React child (found: "+("[object Object]"===t?"object with keys {"+Object.keys(e).join(", ")+"}":t)+"). If you meant to render a collection of children, use an array instead.");return l}function R(e,t,n){if(null==e)return e;var a=[],r=0;return $(e,a,"","",(function(e){return t.call(n,e,r++)})),a}function A(e){if(-1===e._status){var t=e._result;(t=t()).then((function(t){0!==e._status&&-1!==e._status||(e._status=1,e._result=t)}),(function(t){0!==e._status&&-1!==e._status||(e._status=2,e._result=t)})),-1===e._status&&(e._status=0,e._result=t)}if(1===e._status)return e._result.default;throw e._result}var _={current:null},F={transition:null},D={ReactCurrentDispatcher:_,ReactCurrentBatchConfig:F,ReactCurrentOwner:N};function O(){throw Error("act(...) is not supported in production builds of React.")}t.Children={map:R,forEach:function(e,t,n){R(e,(function(){t.apply(this,arguments)}),n)},count:function(e){var t=0;return R(e,(function(){t++})),t},toArray:function(e){return R(e,(function(e){return e}))||[]},only:function(e){if(!T(e))throw Error("React.Children.only expected to receive a single React element child.");return e}},t.Component=y,t.Fragment=r,t.Profiler=i,t.PureComponent=x,t.StrictMode=s,t.Suspense=c,t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=D,t.act=O,t.cloneElement=function(e,t,a){if(null===e||void 0===e)throw Error("React.cloneElement(...): The argument must be a React element, but you passed "+e+".");var r=m({},e.props),s=e.key,i=e.ref,o=e._owner;if(null!=t){if(void 0!==t.ref&&(i=t.ref,o=N.current),void 0!==t.key&&(s=""+t.key),e.type&&e.type.defaultProps)var l=e.type.defaultProps;for(u in t)k.call(t,u)&&!S.hasOwnProperty(u)&&(r[u]=void 0===t[u]&&void 0!==l?l[u]:t[u])}var u=arguments.length-2;if(1===u)r.children=a;else if(1<u){l=Array(u);for(var c=0;c<u;c++)l[c]=arguments[c+2];r.children=l}return{$$typeof:n,type:e.type,key:s,ref:i,props:r,_owner:o}},t.createContext=function(e){return(e={$$typeof:l,_currentValue:e,_currentValue2:e,_threadCount:0,Provider:null,Consumer:null,_defaultValue:null,_globalName:null}).Provider={$$typeof:o,_context:e},e.Consumer=e},t.createElement=I,t.createFactory=function(e){var t=I.bind(null,e);return t.type=e,t},t.createRef=function(){return{current:null}},t.forwardRef=function(e){return{$$typeof:u,render:e}},t.isValidElement=T,t.lazy=function(e){return{$$typeof:d,_payload:{_status:-1,_result:e},_init:A}},t.memo=function(e,t){return{$$typeof:p,type:e,compare:void 0===t?null:t}},t.startTransition=function(e){var t=F.transition;F.transition={};try{e()}finally{F.transition=t}},t.unstable_act=O,t.useCallback=function(e,t){return _.current.useCallback(e,t)},t.useContext=function(e){return _.current.useContext(e)},t.useDebugValue=function(){},t.useDeferredValue=function(e){return _.current.useDeferredValue(e)},t.useEffect=function(e,t){return _.current.useEffect(e,t)},t.useId=function(){return _.current.useId()},t.useImperativeHandle=function(e,t,n){return _.current.useImperativeHandle(e,t,n)},t.useInsertionEffect=function(e,t){return _.current.useInsertionEffect(e,t)},t.useLayoutEffect=function(e,t){return _.current.useLayoutEffect(e,t)},t.useMemo=function(e,t){return _.current.useMemo(e,t)},t.useReducer=function(e,t,n){return _.current.useReducer(e,t,n)},t.useRef=function(e){return _.current.useRef(e)},t.useState=function(e){return _.current.useState(e)},t.useSyncExternalStore=function(e,t,n){return _.current.useSyncExternalStore(e,t,n)},t.useTransition=function(){return _.current.useTransition()},t.version="18.3.1"},218:e=>{"use strict";e.exports="SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED"},234:(e,t)=>{"use strict";function n(e,t){var n=e.length;e.push(t);e:for(;0<n;){var a=n-1>>>1,r=e[a];if(!(0<s(r,t)))break e;e[a]=t,e[n]=r,n=a}}function a(e){return 0===e.length?null:e[0]}function r(e){if(0===e.length)return null;var t=e[0],n=e.pop();if(n!==t){e[0]=n;e:for(var a=0,r=e.length,i=r>>>1;a<i;){var o=2*(a+1)-1,l=e[o],u=o+1,c=e[u];if(0>s(l,n))u<r&&0>s(c,l)?(e[a]=c,e[u]=n,a=u):(e[a]=l,e[o]=n,a=o);else{if(!(u<r&&0>s(c,n)))break e;e[a]=c,e[u]=n,a=u}}}return t}function s(e,t){var n=e.sortIndex-t.sortIndex;return 0!==n?n:e.id-t.id}if("object"===typeof performance&&"function"===typeof performance.now){var i=performance;t.unstable_now=function(){return i.now()}}else{var o=Date,l=o.now();t.unstable_now=function(){return o.now()-l}}var u=[],c=[],p=1,d=null,h=3,f=!1,m=!1,g=!1,y="function"===typeof setTimeout?setTimeout:null,b="function"===typeof clearTimeout?clearTimeout:null,x="undefined"!==typeof setImmediate?setImmediate:null;function v(e){for(var t=a(c);null!==t;){if(null===t.callback)r(c);else{if(!(t.startTime<=e))break;r(c),t.sortIndex=t.expirationTime,n(u,t)}t=a(c)}}function w(e){if(g=!1,v(e),!m)if(null!==a(u))m=!0,F(k);else{var t=a(c);null!==t&&D(w,t.startTime-e)}}function k(e,n){m=!1,g&&(g=!1,b(T),T=-1),f=!0;var s=h;try{for(v(n),d=a(u);null!==d&&(!(d.expirationTime>n)||e&&!$());){var i=d.callback;if("function"===typeof i){d.callback=null,h=d.priorityLevel;var o=i(d.expirationTime<=n);n=t.unstable_now(),"function"===typeof o?d.callback=o:d===a(u)&&r(u),v(n)}else r(u);d=a(u)}if(null!==d)var l=!0;else{var p=a(c);null!==p&&D(w,p.startTime-n),l=!1}return l}finally{d=null,h=s,f=!1}}"undefined"!==typeof navigator&&void 0!==navigator.scheduling&&void 0!==navigator.scheduling.isInputPending&&navigator.scheduling.isInputPending.bind(navigator.scheduling);var N,S=!1,I=null,T=-1,C=5,E=-1;function $(){return!(t.unstable_now()-E<C)}function R(){if(null!==I){var e=t.unstable_now();E=e;var n=!0;try{n=I(!0,e)}finally{n?N():(S=!1,I=null)}}else S=!1}if("function"===typeof x)N=function(){x(R)};else if("undefined"!==typeof MessageChannel){var A=new MessageChannel,_=A.port2;A.port1.onmessage=R,N=function(){_.postMessage(null)}}else N=function(){y(R,0)};function F(e){I=e,S||(S=!0,N())}function D(e,n){T=y((function(){e(t.unstable_now())}),n)}t.unstable_IdlePriority=5,t.unstable_ImmediatePriority=1,t.unstable_LowPriority=4,t.unstable_NormalPriority=3,t.unstable_Profiling=null,t.unstable_UserBlockingPriority=2,t.unstable_cancelCallback=function(e){e.callback=null},t.unstable_continueExecution=function(){m||f||(m=!0,F(k))},t.unstable_forceFrameRate=function(e){0>e||125<e?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):C=0<e?Math.floor(1e3/e):5},t.unstable_getCurrentPriorityLevel=function(){return h},t.unstable_getFirstCallbackNode=function(){return a(u)},t.unstable_next=function(e){switch(h){case 1:case 2:case 3:var t=3;break;default:t=h}var n=h;h=t;try{return e()}finally{h=n}},t.unstable_pauseExecution=function(){},t.unstable_requestPaint=function(){},t.unstable_runWithPriority=function(e,t){switch(e){case 1:case 2:case 3:case 4:case 5:break;default:e=3}var n=h;h=e;try{return t()}finally{h=n}},t.unstable_scheduleCallback=function(e,r,s){var i=t.unstable_now();switch("object"===typeof s&&null!==s?s="number"===typeof(s=s.delay)&&0<s?i+s:i:s=i,e){case 1:var o=-1;break;case 2:o=250;break;case 5:o=1073741823;break;case 4:o=1e4;break;default:o=5e3}return e={id:p++,callback:r,priorityLevel:e,startTime:s,expirationTime:o=s+o,sortIndex:-1},s>i?(e.sortIndex=s,n(c,e),null===a(u)&&e===a(c)&&(g?(b(T),T=-1):g=!0,D(w,s-i))):(e.sortIndex=o,n(u,e),m||f||(m=!0,F(k))),e},t.unstable_shouldYield=$,t.unstable_wrapCallback=function(e){var t=h;return function(){var n=h;h=t;try{return e.apply(this,arguments)}finally{h=n}}}},262:function(e,t,n){var a;!function(e,r){function s(e){var t=this,n="";t.next=function(){var e=t.b,n=t.c,a=t.d,r=t.a;return e=e<<25^e>>>7^n,n=n-a|0,a=a<<24^a>>>8^r,r=r-e|0,t.b=e=e<<20^e>>>12^n,t.c=n=n-a|0,t.d=a<<16^n>>>16^r,t.a=r-e|0},t.a=0,t.b=0,t.c=-1640531527,t.d=1367130551,e===Math.floor(e)?(t.a=e/4294967296|0,t.b=0|e):n+=e;for(var a=0;a<n.length+20;a++)t.b^=0|n.charCodeAt(a),t.next()}function i(e,t){return t.a=e.a,t.b=e.b,t.c=e.c,t.d=e.d,t}function o(e,t){var n=new s(e),a=t&&t.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},r.int32=n.next,r.quick=r,a&&("object"==typeof a&&i(a,n),r.state=function(){return i(n,{})}),r}r&&r.exports?r.exports=o:n.amdD&&n.amdO?void 0===(a=function(){return o}.call(t,n,t,r))||(r.exports=a):this.tychei=o}(0,e=n.nmd(e),n.amdD)},288:function(e,t,n){var a;!function(e,r){function s(e){var t=this;t.next=function(){var e,n,a=t.w,r=t.X,s=t.i;return t.w=a=a+1640531527|0,n=r[s+34&127],e=r[s=s+1&127],n^=n<<13,e^=e<<17,n^=n>>>15,e^=e>>>12,n=r[s]=n^e,t.i=s,n+(a^a>>>16)|0},function(e,t){var n,a,r,s,i,o=[],l=128;for(t===(0|t)?(a=t,t=null):(t+="\0",a=0,l=Math.max(l,t.length)),r=0,s=-32;s<l;++s)t&&(a^=t.charCodeAt((s+32)%t.length)),0===s&&(i=a),a^=a<<10,a^=a>>>15,a^=a<<4,a^=a>>>13,s>=0&&(i=i+1640531527|0,r=0==(n=o[127&s]^=a+i)?r+1:0);for(r>=128&&(o[127&(t&&t.length||0)]=-1),r=127,s=512;s>0;--s)a=o[r+34&127],n=o[r=r+1&127],a^=a<<13,n^=n<<17,a^=a>>>15,n^=n>>>12,o[r]=a^n;e.w=i,e.X=o,e.i=r}(t,e)}function i(e,t){return t.i=e.i,t.w=e.w,t.X=e.X.slice(),t}function o(e,t){null==e&&(e=+new Date);var n=new s(e),a=t&&t.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},r.int32=n.next,r.quick=r,a&&(a.X&&i(a,n),r.state=function(){return i(n,{})}),r}r&&r.exports?r.exports=o:n.amdD&&n.amdO?void 0===(a=function(){return o}.call(t,n,t,r))||(r.exports=a):this.xor4096=o}(0,e=n.nmd(e),n.amdD)},334:(e,t,n)=>{var a=n(359),r=n(66),s=n(16),i=n(538),o=n(288),l=n(262),u=n(430);u.alea=a,u.xor128=r,u.xorwow=s,u.xorshift7=i,u.xor4096=o,u.tychei=l,e.exports=u},353:e=>{e.exports=n;var t=null;try{t=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch(I){}function n(e,t,n){this.low=0|e,this.high=0|t,this.unsigned=!!n}function a(e){return!0===(e&&e.__isLong__)}n.prototype.__isLong__,Object.defineProperty(n.prototype,"__isLong__",{value:!0}),n.isLong=a;var r={},s={};function i(e,t){var n,a,i;return t?(i=0<=(e>>>=0)&&e<256)&&(a=s[e])?a:(n=l(e,(0|e)<0?-1:0,!0),i&&(s[e]=n),n):(i=-128<=(e|=0)&&e<128)&&(a=r[e])?a:(n=l(e,e<0?-1:0,!1),i&&(r[e]=n),n)}function o(e,t){if(isNaN(e))return t?y:g;if(t){if(e<0)return y;if(e>=h)return k}else{if(e<=-f)return N;if(e+1>=f)return w}return e<0?o(-e,t).neg():l(e%d|0,e/d|0,t)}function l(e,t,a){return new n(e,t,a)}n.fromInt=i,n.fromNumber=o,n.fromBits=l;var u=Math.pow;function c(e,t,n){if(0===e.length)throw Error("empty string");if("NaN"===e||"Infinity"===e||"+Infinity"===e||"-Infinity"===e)return g;if("number"===typeof t?(n=t,t=!1):t=!!t,(n=n||10)<2||36<n)throw RangeError("radix");var a;if((a=e.indexOf("-"))>0)throw Error("interior hyphen");if(0===a)return c(e.substring(1),t,n).neg();for(var r=o(u(n,8)),s=g,i=0;i<e.length;i+=8){var l=Math.min(8,e.length-i),p=parseInt(e.substring(i,i+l),n);if(l<8){var d=o(u(n,l));s=s.mul(d).add(o(p))}else s=(s=s.mul(r)).add(o(p))}return s.unsigned=t,s}function p(e,t){return"number"===typeof e?o(e,t):"string"===typeof e?c(e,t):l(e.low,e.high,"boolean"===typeof t?t:e.unsigned)}n.fromString=c,n.fromValue=p;var d=4294967296,h=d*d,f=h/2,m=i(1<<24),g=i(0);n.ZERO=g;var y=i(0,!0);n.UZERO=y;var b=i(1);n.ONE=b;var x=i(1,!0);n.UONE=x;var v=i(-1);n.NEG_ONE=v;var w=l(-1,2147483647,!1);n.MAX_VALUE=w;var k=l(-1,-1,!0);n.MAX_UNSIGNED_VALUE=k;var N=l(0,-2147483648,!1);n.MIN_VALUE=N;var S=n.prototype;S.toInt=function(){return this.unsigned?this.low>>>0:this.low},S.toNumber=function(){return this.unsigned?(this.high>>>0)*d+(this.low>>>0):this.high*d+(this.low>>>0)},S.toString=function(e){if((e=e||10)<2||36<e)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative()){if(this.eq(N)){var t=o(e),n=this.div(t),a=n.mul(t).sub(this);return n.toString(e)+a.toInt().toString(e)}return"-"+this.neg().toString(e)}for(var r=o(u(e,6),this.unsigned),s=this,i="";;){var l=s.div(r),c=(s.sub(l.mul(r)).toInt()>>>0).toString(e);if((s=l).isZero())return c+i;for(;c.length<6;)c="0"+c;i=""+c+i}},S.getHighBits=function(){return this.high},S.getHighBitsUnsigned=function(){return this.high>>>0},S.getLowBits=function(){return this.low},S.getLowBitsUnsigned=function(){return this.low>>>0},S.getNumBitsAbs=function(){if(this.isNegative())return this.eq(N)?64:this.neg().getNumBitsAbs();for(var e=0!=this.high?this.high:this.low,t=31;t>0&&0==(e&1<<t);t--);return 0!=this.high?t+33:t+1},S.isZero=function(){return 0===this.high&&0===this.low},S.eqz=S.isZero,S.isNegative=function(){return!this.unsigned&&this.high<0},S.isPositive=function(){return this.unsigned||this.high>=0},S.isOdd=function(){return 1===(1&this.low)},S.isEven=function(){return 0===(1&this.low)},S.equals=function(e){return a(e)||(e=p(e)),(this.unsigned===e.unsigned||this.high>>>31!==1||e.high>>>31!==1)&&(this.high===e.high&&this.low===e.low)},S.eq=S.equals,S.notEquals=function(e){return!this.eq(e)},S.neq=S.notEquals,S.ne=S.notEquals,S.lessThan=function(e){return this.comp(e)<0},S.lt=S.lessThan,S.lessThanOrEqual=function(e){return this.comp(e)<=0},S.lte=S.lessThanOrEqual,S.le=S.lessThanOrEqual,S.greaterThan=function(e){return this.comp(e)>0},S.gt=S.greaterThan,S.greaterThanOrEqual=function(e){return this.comp(e)>=0},S.gte=S.greaterThanOrEqual,S.ge=S.greaterThanOrEqual,S.compare=function(e){if(a(e)||(e=p(e)),this.eq(e))return 0;var t=this.isNegative(),n=e.isNegative();return t&&!n?-1:!t&&n?1:this.unsigned?e.high>>>0>this.high>>>0||e.high===this.high&&e.low>>>0>this.low>>>0?-1:1:this.sub(e).isNegative()?-1:1},S.comp=S.compare,S.negate=function(){return!this.unsigned&&this.eq(N)?N:this.not().add(b)},S.neg=S.negate,S.add=function(e){a(e)||(e=p(e));var t=this.high>>>16,n=65535&this.high,r=this.low>>>16,s=65535&this.low,i=e.high>>>16,o=65535&e.high,u=e.low>>>16,c=0,d=0,h=0,f=0;return h+=(f+=s+(65535&e.low))>>>16,d+=(h+=r+u)>>>16,c+=(d+=n+o)>>>16,c+=t+i,l((h&=65535)<<16|(f&=65535),(c&=65535)<<16|(d&=65535),this.unsigned)},S.subtract=function(e){return a(e)||(e=p(e)),this.add(e.neg())},S.sub=S.subtract,S.multiply=function(e){if(this.isZero())return g;if(a(e)||(e=p(e)),t)return l(t.mul(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned);if(e.isZero())return g;if(this.eq(N))return e.isOdd()?N:g;if(e.eq(N))return this.isOdd()?N:g;if(this.isNegative())return e.isNegative()?this.neg().mul(e.neg()):this.neg().mul(e).neg();if(e.isNegative())return this.mul(e.neg()).neg();if(this.lt(m)&&e.lt(m))return o(this.toNumber()*e.toNumber(),this.unsigned);var n=this.high>>>16,r=65535&this.high,s=this.low>>>16,i=65535&this.low,u=e.high>>>16,c=65535&e.high,d=e.low>>>16,h=65535&e.low,f=0,y=0,b=0,x=0;return b+=(x+=i*h)>>>16,y+=(b+=s*h)>>>16,b&=65535,y+=(b+=i*d)>>>16,f+=(y+=r*h)>>>16,y&=65535,f+=(y+=s*d)>>>16,y&=65535,f+=(y+=i*c)>>>16,f+=n*h+r*d+s*c+i*u,l((b&=65535)<<16|(x&=65535),(f&=65535)<<16|(y&=65535),this.unsigned)},S.mul=S.multiply,S.divide=function(e){if(a(e)||(e=p(e)),e.isZero())throw Error("division by zero");var n,r,s;if(t)return this.unsigned||-2147483648!==this.high||-1!==e.low||-1!==e.high?l((this.unsigned?t.div_u:t.div_s)(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned):this;if(this.isZero())return this.unsigned?y:g;if(this.unsigned){if(e.unsigned||(e=e.toUnsigned()),e.gt(this))return y;if(e.gt(this.shru(1)))return x;s=y}else{if(this.eq(N))return e.eq(b)||e.eq(v)?N:e.eq(N)?b:(n=this.shr(1).div(e).shl(1)).eq(g)?e.isNegative()?b:v:(r=this.sub(e.mul(n)),s=n.add(r.div(e)));if(e.eq(N))return this.unsigned?y:g;if(this.isNegative())return e.isNegative()?this.neg().div(e.neg()):this.neg().div(e).neg();if(e.isNegative())return this.div(e.neg()).neg();s=g}for(r=this;r.gte(e);){n=Math.max(1,Math.floor(r.toNumber()/e.toNumber()));for(var i=Math.ceil(Math.log(n)/Math.LN2),c=i<=48?1:u(2,i-48),d=o(n),h=d.mul(e);h.isNegative()||h.gt(r);)h=(d=o(n-=c,this.unsigned)).mul(e);d.isZero()&&(d=b),s=s.add(d),r=r.sub(h)}return s},S.div=S.divide,S.modulo=function(e){return a(e)||(e=p(e)),t?l((this.unsigned?t.rem_u:t.rem_s)(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned):this.sub(this.div(e).mul(e))},S.mod=S.modulo,S.rem=S.modulo,S.not=function(){return l(~this.low,~this.high,this.unsigned)},S.and=function(e){return a(e)||(e=p(e)),l(this.low&e.low,this.high&e.high,this.unsigned)},S.or=function(e){return a(e)||(e=p(e)),l(this.low|e.low,this.high|e.high,this.unsigned)},S.xor=function(e){return a(e)||(e=p(e)),l(this.low^e.low,this.high^e.high,this.unsigned)},S.shiftLeft=function(e){return a(e)&&(e=e.toInt()),0===(e&=63)?this:e<32?l(this.low<<e,this.high<<e|this.low>>>32-e,this.unsigned):l(0,this.low<<e-32,this.unsigned)},S.shl=S.shiftLeft,S.shiftRight=function(e){return a(e)&&(e=e.toInt()),0===(e&=63)?this:e<32?l(this.low>>>e|this.high<<32-e,this.high>>e,this.unsigned):l(this.high>>e-32,this.high>=0?0:-1,this.unsigned)},S.shr=S.shiftRight,S.shiftRightUnsigned=function(e){if(a(e)&&(e=e.toInt()),0===(e&=63))return this;var t=this.high;return e<32?l(this.low>>>e|t<<32-e,t>>>e,this.unsigned):l(32===e?t:t>>>e-32,0,this.unsigned)},S.shru=S.shiftRightUnsigned,S.shr_u=S.shiftRightUnsigned,S.toSigned=function(){return this.unsigned?l(this.low,this.high,!1):this},S.toUnsigned=function(){return this.unsigned?this:l(this.low,this.high,!0)},S.toBytes=function(e){return e?this.toBytesLE():this.toBytesBE()},S.toBytesLE=function(){var e=this.high,t=this.low;return[255&t,t>>>8&255,t>>>16&255,t>>>24,255&e,e>>>8&255,e>>>16&255,e>>>24]},S.toBytesBE=function(){var e=this.high,t=this.low;return[e>>>24,e>>>16&255,e>>>8&255,255&e,t>>>24,t>>>16&255,t>>>8&255,255&t]},n.fromBytes=function(e,t,a){return a?n.fromBytesLE(e,t):n.fromBytesBE(e,t)},n.fromBytesLE=function(e,t){return new n(e[0]|e[1]<<8|e[2]<<16|e[3]<<24,e[4]|e[5]<<8|e[6]<<16|e[7]<<24,t)},n.fromBytesBE=function(e,t){return new n(e[4]<<24|e[5]<<16|e[6]<<8|e[7],e[0]<<24|e[1]<<16|e[2]<<8|e[3],t)}},359:function(e,t,n){var a;!function(e,r){function s(e){var t=this,n=function(){var e=4022871197,t=function(t){t=String(t);for(var n=0;n<t.length;n++){var a=.02519603282416938*(e+=t.charCodeAt(n));a-=e=a>>>0,e=(a*=e)>>>0,e+=4294967296*(a-=e)}return 2.3283064365386963e-10*(e>>>0)};return t}();t.next=function(){var e=2091639*t.s0+2.3283064365386963e-10*t.c;return t.s0=t.s1,t.s1=t.s2,t.s2=e-(t.c=0|e)},t.c=1,t.s0=n(" "),t.s1=n(" "),t.s2=n(" "),t.s0-=n(e),t.s0<0&&(t.s0+=1),t.s1-=n(e),t.s1<0&&(t.s1+=1),t.s2-=n(e),t.s2<0&&(t.s2+=1),n=null}function i(e,t){return t.c=e.c,t.s0=e.s0,t.s1=e.s1,t.s2=e.s2,t}function o(e,t){var n=new s(e),a=t&&t.state,r=n.next;return r.int32=function(){return 4294967296*n.next()|0},r.double=function(){return r()+11102230246251565e-32*(2097152*r()|0)},r.quick=r,a&&("object"==typeof a&&i(a,n),r.state=function(){return i(n,{})}),r}r&&r.exports?r.exports=o:n.amdD&&n.amdO?void 0===(a=function(){return o}.call(t,n,t,r))||(r.exports=a):this.alea=o}(0,e=n.nmd(e),n.amdD)},391:(e,t,n)=>{"use strict";var a=n(950);t.createRoot=a.createRoot,t.hydrateRoot=a.hydrateRoot},430:function(e,t,n){var a;!function(r,s,i){var o,l=256,u=i.pow(l,6),c=i.pow(2,52),p=2*c,d=255;function h(e,t,n){var a=[],d=y(g((t=1==t?{entropy:!0}:t||{}).entropy?[e,b(s)]:null==e?function(){try{var e;return o&&(e=o.randomBytes)?e=e(l):(e=new Uint8Array(l),(r.crypto||r.msCrypto).getRandomValues(e)),b(e)}catch(a){var t=r.navigator,n=t&&t.plugins;return[+new Date,r,n,r.screen,b(s)]}}():e,3),a),h=new f(a),x=function(){for(var e=h.g(6),t=u,n=0;e<c;)e=(e+n)*l,t*=l,n=h.g(1);for(;e>=p;)e/=2,t/=2,n>>>=1;return(e+n)/t};return x.int32=function(){return 0|h.g(4)},x.quick=function(){return h.g(4)/4294967296},x.double=x,y(b(h.S),s),(t.pass||n||function(e,t,n,a){return a&&(a.S&&m(a,h),e.state=function(){return m(h,{})}),n?(i.random=e,t):e})(x,d,"global"in t?t.global:this==i,t.state)}function f(e){var t,n=e.length,a=this,r=0,s=a.i=a.j=0,i=a.S=[];for(n||(e=[n++]);r<l;)i[r]=r++;for(r=0;r<l;r++)i[r]=i[s=d&s+e[r%n]+(t=i[r])],i[s]=t;(a.g=function(e){for(var t,n=0,r=a.i,s=a.j,i=a.S;e--;)t=i[r=d&r+1],n=n*l+i[d&(i[r]=i[s=d&s+t])+(i[s]=t)];return a.i=r,a.j=s,n})(l)}function m(e,t){return t.i=e.i,t.j=e.j,t.S=e.S.slice(),t}function g(e,t){var n,a=[],r=typeof e;if(t&&"object"==r)for(n in e)try{a.push(g(e[n],t-1))}catch(s){}return a.length?a:"string"==r?e:e+"\0"}function y(e,t){for(var n,a=e+"",r=0;r<a.length;)t[d&r]=d&(n^=19*t[d&r])+a.charCodeAt(r++);return b(t)}function b(e){return String.fromCharCode.apply(0,e)}if(y(i.random(),s),e.exports){e.exports=h;try{o=n(996)}catch(x){}}else void 0===(a=function(){return h}.call(t,n,t,e))||(e.exports=a)}("undefined"!==typeof self?self:this,[],Math)},497:(e,t,n)=>{"use strict";var a=n(218);function r(){}function s(){}s.resetWarningCache=r,e.exports=function(){function e(e,t,n,r,s,i){if(i!==a){var o=new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");throw o.name="Invariant Violation",o}}function t(){return e}e.isRequired=e;var n={array:e,bigint:e,bool:e,func:e,number:e,object:e,string:e,symbol:e,any:e,arrayOf:t,element:e,elementType:e,instanceOf:t,node:e,objectOf:t,oneOf:t,oneOfType:t,shape:t,exact:t,checkPropTypes:s,resetWarningCache:r};return n.PropTypes=n,n}},530:()=>{},538:function(e,t,n){var a;!function(e,r){function s(e){var t=this;t.next=function(){var e,n,a=t.x,r=t.i;return e=a[r],n=(e^=e>>>7)^e<<24,n^=(e=a[r+1&7])^e>>>10,n^=(e=a[r+3&7])^e>>>3,n^=(e=a[r+4&7])^e<<7,e=a[r+7&7],n^=(e^=e<<13)^e<<9,a[r]=n,t.i=r+1&7,n},function(e,t){var n,a=[];if(t===(0|t))a[0]=t;else for(t=""+t,n=0;n<t.length;++n)a[7&n]=a[7&n]<<15^t.charCodeAt(n)+a[n+1&7]<<13;for(;a.length<8;)a.push(0);for(n=0;n<8&&0===a[n];++n);for(8==n?a[7]=-1:a[n],e.x=a,e.i=0,n=256;n>0;--n)e.next()}(t,e)}function i(e,t){return t.x=e.x.slice(),t.i=e.i,t}function o(e,t){null==e&&(e=+new Date);var n=new s(e),a=t&&t.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},r.int32=n.next,r.quick=r,a&&(a.x&&i(a,n),r.state=function(){return i(n,{})}),r}r&&r.exports?r.exports=o:n.amdD&&n.amdO?void 0===(a=function(){return o}.call(t,n,t,r))||(r.exports=a):this.xorshift7=o}(0,e=n.nmd(e),n.amdD)},551:()=>{},579:(e,t,n)=>{"use strict";e.exports=n(153)},590:()=>{},628:(e,t)=>{"use strict";t.__esModule=!0,t.default=function(e,t){if(e&&t){var n=Array.isArray(t)?t:t.split(",");if(0===n.length)return!0;var a=e.name||"",r=(e.type||"").toLowerCase(),s=r.replace(/\/.*$/,"");return n.some((function(e){var t=e.trim().toLowerCase();return"."===t.charAt(0)?a.toLowerCase().endsWith(t):t.endsWith("/*")?s===t.replace(/\/.*$/,""):r===t}))}return!0}},730:(e,t,n)=>{"use strict";var a=n(43),r=n(853);function s(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,n=1;n<arguments.length;n++)t+="&args[]="+encodeURIComponent(arguments[n]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var i=new Set,o={};function l(e,t){u(e,t),u(e+"Capture",t)}function u(e,t){for(o[e]=t,e=0;e<t.length;e++)i.add(t[e])}var c=!("undefined"===typeof window||"undefined"===typeof window.document||"undefined"===typeof window.document.createElement),p=Object.prototype.hasOwnProperty,d=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,h={},f={};function m(e,t,n,a,r,s,i){this.acceptsBooleans=2===t||3===t||4===t,this.attributeName=a,this.attributeNamespace=r,this.mustUseProperty=n,this.propertyName=e,this.type=t,this.sanitizeURL=s,this.removeEmptyString=i}var g={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach((function(e){g[e]=new m(e,0,!1,e,null,!1,!1)})),[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach((function(e){var t=e[0];g[t]=new m(t,1,!1,e[1],null,!1,!1)})),["contentEditable","draggable","spellCheck","value"].forEach((function(e){g[e]=new m(e,2,!1,e.toLowerCase(),null,!1,!1)})),["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach((function(e){g[e]=new m(e,2,!1,e,null,!1,!1)})),"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach((function(e){g[e]=new m(e,3,!1,e.toLowerCase(),null,!1,!1)})),["checked","multiple","muted","selected"].forEach((function(e){g[e]=new m(e,3,!0,e,null,!1,!1)})),["capture","download"].forEach((function(e){g[e]=new m(e,4,!1,e,null,!1,!1)})),["cols","rows","size","span"].forEach((function(e){g[e]=new m(e,6,!1,e,null,!1,!1)})),["rowSpan","start"].forEach((function(e){g[e]=new m(e,5,!1,e.toLowerCase(),null,!1,!1)}));var y=/[\-:]([a-z])/g;function b(e){return e[1].toUpperCase()}function x(e,t,n,a){var r=g.hasOwnProperty(t)?g[t]:null;(null!==r?0!==r.type:a||!(2<t.length)||"o"!==t[0]&&"O"!==t[0]||"n"!==t[1]&&"N"!==t[1])&&(function(e,t,n,a){if(null===t||"undefined"===typeof t||function(e,t,n,a){if(null!==n&&0===n.type)return!1;switch(typeof t){case"function":case"symbol":return!0;case"boolean":return!a&&(null!==n?!n.acceptsBooleans:"data-"!==(e=e.toLowerCase().slice(0,5))&&"aria-"!==e);default:return!1}}(e,t,n,a))return!0;if(a)return!1;if(null!==n)switch(n.type){case 3:return!t;case 4:return!1===t;case 5:return isNaN(t);case 6:return isNaN(t)||1>t}return!1}(t,n,r,a)&&(n=null),a||null===r?function(e){return!!p.call(f,e)||!p.call(h,e)&&(d.test(e)?f[e]=!0:(h[e]=!0,!1))}(t)&&(null===n?e.removeAttribute(t):e.setAttribute(t,""+n)):r.mustUseProperty?e[r.propertyName]=null===n?3!==r.type&&"":n:(t=r.attributeName,a=r.attributeNamespace,null===n?e.removeAttribute(t):(n=3===(r=r.type)||4===r&&!0===n?"":""+n,a?e.setAttributeNS(a,t,n):e.setAttribute(t,n))))}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach((function(e){var t=e.replace(y,b);g[t]=new m(t,1,!1,e,null,!1,!1)})),"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach((function(e){var t=e.replace(y,b);g[t]=new m(t,1,!1,e,"http://www.w3.org/1999/xlink",!1,!1)})),["xml:base","xml:lang","xml:space"].forEach((function(e){var t=e.replace(y,b);g[t]=new m(t,1,!1,e,"http://www.w3.org/XML/1998/namespace",!1,!1)})),["tabIndex","crossOrigin"].forEach((function(e){g[e]=new m(e,1,!1,e.toLowerCase(),null,!1,!1)})),g.xlinkHref=new m("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0,!1),["src","href","action","formAction"].forEach((function(e){g[e]=new m(e,1,!1,e.toLowerCase(),null,!0,!0)}));var v=a.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,w=Symbol.for("react.element"),k=Symbol.for("react.portal"),N=Symbol.for("react.fragment"),S=Symbol.for("react.strict_mode"),I=Symbol.for("react.profiler"),T=Symbol.for("react.provider"),C=Symbol.for("react.context"),E=Symbol.for("react.forward_ref"),$=Symbol.for("react.suspense"),R=Symbol.for("react.suspense_list"),A=Symbol.for("react.memo"),_=Symbol.for("react.lazy");Symbol.for("react.scope"),Symbol.for("react.debug_trace_mode");var F=Symbol.for("react.offscreen");Symbol.for("react.legacy_hidden"),Symbol.for("react.cache"),Symbol.for("react.tracing_marker");var D=Symbol.iterator;function O(e){return null===e||"object"!==typeof e?null:"function"===typeof(e=D&&e[D]||e["@@iterator"])?e:null}var M,L=Object.assign;function z(e){if(void 0===M)try{throw Error()}catch(n){var t=n.stack.trim().match(/\n( *(at )?)/);M=t&&t[1]||""}return"\n"+M+e}var P=!1;function B(e,t){if(!e||P)return"";P=!0;var n=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(t)if(t=function(){throw Error()},Object.defineProperty(t.prototype,"props",{set:function(){throw Error()}}),"object"===typeof Reflect&&Reflect.construct){try{Reflect.construct(t,[])}catch(u){var a=u}Reflect.construct(e,[],t)}else{try{t.call()}catch(u){a=u}e.call(t.prototype)}else{try{throw Error()}catch(u){a=u}e()}}catch(u){if(u&&a&&"string"===typeof u.stack){for(var r=u.stack.split("\n"),s=a.stack.split("\n"),i=r.length-1,o=s.length-1;1<=i&&0<=o&&r[i]!==s[o];)o--;for(;1<=i&&0<=o;i--,o--)if(r[i]!==s[o]){if(1!==i||1!==o)do{if(i--,0>--o||r[i]!==s[o]){var l="\n"+r[i].replace(" at new "," at ");return e.displayName&&l.includes("<anonymous>")&&(l=l.replace("<anonymous>",e.displayName)),l}}while(1<=i&&0<=o);break}}}finally{P=!1,Error.prepareStackTrace=n}return(e=e?e.displayName||e.name:"")?z(e):""}function W(e){switch(e.tag){case 5:return z(e.type);case 16:return z("Lazy");case 13:return z("Suspense");case 19:return z("SuspenseList");case 0:case 2:case 15:return e=B(e.type,!1);case 11:return e=B(e.type.render,!1);case 1:return e=B(e.type,!0);default:return""}}function V(e){if(null==e)return null;if("function"===typeof e)return e.displayName||e.name||null;if("string"===typeof e)return e;switch(e){case N:return"Fragment";case k:return"Portal";case I:return"Profiler";case S:return"StrictMode";case $:return"Suspense";case R:return"SuspenseList"}if("object"===typeof e)switch(e.$$typeof){case C:return(e.displayName||"Context")+".Consumer";case T:return(e._context.displayName||"Context")+".Provider";case E:var t=e.render;return(e=e.displayName)||(e=""!==(e=t.displayName||t.name||"")?"ForwardRef("+e+")":"ForwardRef"),e;case A:return null!==(t=e.displayName||null)?t:V(e.type)||"Memo";case _:t=e._payload,e=e._init;try{return V(e(t))}catch(n){}}return null}function U(e){var t=e.type;switch(e.tag){case 24:return"Cache";case 9:return(t.displayName||"Context")+".Consumer";case 10:return(t._context.displayName||"Context")+".Provider";case 18:return"DehydratedFragment";case 11:return e=(e=t.render).displayName||e.name||"",t.displayName||(""!==e?"ForwardRef("+e+")":"ForwardRef");case 7:return"Fragment";case 5:return t;case 4:return"Portal";case 3:return"Root";case 6:return"Text";case 16:return V(t);case 8:return t===S?"StrictMode":"Mode";case 22:return"Offscreen";case 12:return"Profiler";case 21:return"Scope";case 13:return"Suspense";case 19:return"SuspenseList";case 25:return"TracingMarker";case 1:case 0:case 17:case 2:case 14:case 15:if("function"===typeof t)return t.displayName||t.name||null;if("string"===typeof t)return t}return null}function j(e){switch(typeof e){case"boolean":case"number":case"string":case"undefined":case"object":return e;default:return""}}function G(e){var t=e.type;return(e=e.nodeName)&&"input"===e.toLowerCase()&&("checkbox"===t||"radio"===t)}function H(e){e._valueTracker||(e._valueTracker=function(e){var t=G(e)?"checked":"value",n=Object.getOwnPropertyDescriptor(e.constructor.prototype,t),a=""+e[t];if(!e.hasOwnProperty(t)&&"undefined"!==typeof n&&"function"===typeof n.get&&"function"===typeof n.set){var r=n.get,s=n.set;return Object.defineProperty(e,t,{configurable:!0,get:function(){return r.call(this)},set:function(e){a=""+e,s.call(this,e)}}),Object.defineProperty(e,t,{enumerable:n.enumerable}),{getValue:function(){return a},setValue:function(e){a=""+e},stopTracking:function(){e._valueTracker=null,delete e[t]}}}}(e))}function q(e){if(!e)return!1;var t=e._valueTracker;if(!t)return!0;var n=t.getValue(),a="";return e&&(a=G(e)?e.checked?"true":"false":e.value),(e=a)!==n&&(t.setValue(e),!0)}function K(e){if("undefined"===typeof(e=e||("undefined"!==typeof document?document:void 0)))return null;try{return e.activeElement||e.body}catch(t){return e.body}}function X(e,t){var n=t.checked;return L({},t,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=n?n:e._wrapperState.initialChecked})}function Y(e,t){var n=null==t.defaultValue?"":t.defaultValue,a=null!=t.checked?t.checked:t.defaultChecked;n=j(null!=t.value?t.value:n),e._wrapperState={initialChecked:a,initialValue:n,controlled:"checkbox"===t.type||"radio"===t.type?null!=t.checked:null!=t.value}}function Q(e,t){null!=(t=t.checked)&&x(e,"checked",t,!1)}function Z(e,t){Q(e,t);var n=j(t.value),a=t.type;if(null!=n)"number"===a?(0===n&&""===e.value||e.value!=n)&&(e.value=""+n):e.value!==""+n&&(e.value=""+n);else if("submit"===a||"reset"===a)return void e.removeAttribute("value");t.hasOwnProperty("value")?ee(e,t.type,n):t.hasOwnProperty("defaultValue")&&ee(e,t.type,j(t.defaultValue)),null==t.checked&&null!=t.defaultChecked&&(e.defaultChecked=!!t.defaultChecked)}function J(e,t,n){if(t.hasOwnProperty("value")||t.hasOwnProperty("defaultValue")){var a=t.type;if(!("submit"!==a&&"reset"!==a||void 0!==t.value&&null!==t.value))return;t=""+e._wrapperState.initialValue,n||t===e.value||(e.value=t),e.defaultValue=t}""!==(n=e.name)&&(e.name=""),e.defaultChecked=!!e._wrapperState.initialChecked,""!==n&&(e.name=n)}function ee(e,t,n){"number"===t&&K(e.ownerDocument)===e||(null==n?e.defaultValue=""+e._wrapperState.initialValue:e.defaultValue!==""+n&&(e.defaultValue=""+n))}var te=Array.isArray;function ne(e,t,n,a){if(e=e.options,t){t={};for(var r=0;r<n.length;r++)t["$"+n[r]]=!0;for(n=0;n<e.length;n++)r=t.hasOwnProperty("$"+e[n].value),e[n].selected!==r&&(e[n].selected=r),r&&a&&(e[n].defaultSelected=!0)}else{for(n=""+j(n),t=null,r=0;r<e.length;r++){if(e[r].value===n)return e[r].selected=!0,void(a&&(e[r].defaultSelected=!0));null!==t||e[r].disabled||(t=e[r])}null!==t&&(t.selected=!0)}}function ae(e,t){if(null!=t.dangerouslySetInnerHTML)throw Error(s(91));return L({},t,{value:void 0,defaultValue:void 0,children:""+e._wrapperState.initialValue})}function re(e,t){var n=t.value;if(null==n){if(n=t.children,t=t.defaultValue,null!=n){if(null!=t)throw Error(s(92));if(te(n)){if(1<n.length)throw Error(s(93));n=n[0]}t=n}null==t&&(t=""),n=t}e._wrapperState={initialValue:j(n)}}function se(e,t){var n=j(t.value),a=j(t.defaultValue);null!=n&&((n=""+n)!==e.value&&(e.value=n),null==t.defaultValue&&e.defaultValue!==n&&(e.defaultValue=n)),null!=a&&(e.defaultValue=""+a)}function ie(e){var t=e.textContent;t===e._wrapperState.initialValue&&""!==t&&null!==t&&(e.value=t)}function oe(e){switch(e){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function le(e,t){return null==e||"http://www.w3.org/1999/xhtml"===e?oe(t):"http://www.w3.org/2000/svg"===e&&"foreignObject"===t?"http://www.w3.org/1999/xhtml":e}var ue,ce,pe=(ce=function(e,t){if("http://www.w3.org/2000/svg"!==e.namespaceURI||"innerHTML"in e)e.innerHTML=t;else{for((ue=ue||document.createElement("div")).innerHTML="<svg>"+t.valueOf().toString()+"</svg>",t=ue.firstChild;e.firstChild;)e.removeChild(e.firstChild);for(;t.firstChild;)e.appendChild(t.firstChild)}},"undefined"!==typeof MSApp&&MSApp.execUnsafeLocalFunction?function(e,t,n,a){MSApp.execUnsafeLocalFunction((function(){return ce(e,t)}))}:ce);function de(e,t){if(t){var n=e.firstChild;if(n&&n===e.lastChild&&3===n.nodeType)return void(n.nodeValue=t)}e.textContent=t}var he={animationIterationCount:!0,aspectRatio:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},fe=["Webkit","ms","Moz","O"];function me(e,t,n){return null==t||"boolean"===typeof t||""===t?"":n||"number"!==typeof t||0===t||he.hasOwnProperty(e)&&he[e]?(""+t).trim():t+"px"}function ge(e,t){for(var n in e=e.style,t)if(t.hasOwnProperty(n)){var a=0===n.indexOf("--"),r=me(n,t[n],a);"float"===n&&(n="cssFloat"),a?e.setProperty(n,r):e[n]=r}}Object.keys(he).forEach((function(e){fe.forEach((function(t){t=t+e.charAt(0).toUpperCase()+e.substring(1),he[t]=he[e]}))}));var ye=L({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function be(e,t){if(t){if(ye[e]&&(null!=t.children||null!=t.dangerouslySetInnerHTML))throw Error(s(137,e));if(null!=t.dangerouslySetInnerHTML){if(null!=t.children)throw Error(s(60));if("object"!==typeof t.dangerouslySetInnerHTML||!("__html"in t.dangerouslySetInnerHTML))throw Error(s(61))}if(null!=t.style&&"object"!==typeof t.style)throw Error(s(62))}}function xe(e,t){if(-1===e.indexOf("-"))return"string"===typeof t.is;switch(e){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}var ve=null;function we(e){return(e=e.target||e.srcElement||window).correspondingUseElement&&(e=e.correspondingUseElement),3===e.nodeType?e.parentNode:e}var ke=null,Ne=null,Se=null;function Ie(e){if(e=xr(e)){if("function"!==typeof ke)throw Error(s(280));var t=e.stateNode;t&&(t=wr(t),ke(e.stateNode,e.type,t))}}function Te(e){Ne?Se?Se.push(e):Se=[e]:Ne=e}function Ce(){if(Ne){var e=Ne,t=Se;if(Se=Ne=null,Ie(e),t)for(e=0;e<t.length;e++)Ie(t[e])}}function Ee(e,t){return e(t)}function $e(){}var Re=!1;function Ae(e,t,n){if(Re)return e(t,n);Re=!0;try{return Ee(e,t,n)}finally{Re=!1,(null!==Ne||null!==Se)&&($e(),Ce())}}function _e(e,t){var n=e.stateNode;if(null===n)return null;var a=wr(n);if(null===a)return null;n=a[t];e:switch(t){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":case"onMouseEnter":(a=!a.disabled)||(a=!("button"===(e=e.type)||"input"===e||"select"===e||"textarea"===e)),e=!a;break e;default:e=!1}if(e)return null;if(n&&"function"!==typeof n)throw Error(s(231,t,typeof n));return n}var Fe=!1;if(c)try{var De={};Object.defineProperty(De,"passive",{get:function(){Fe=!0}}),window.addEventListener("test",De,De),window.removeEventListener("test",De,De)}catch(ce){Fe=!1}function Oe(e,t,n,a,r,s,i,o,l){var u=Array.prototype.slice.call(arguments,3);try{t.apply(n,u)}catch(c){this.onError(c)}}var Me=!1,Le=null,ze=!1,Pe=null,Be={onError:function(e){Me=!0,Le=e}};function We(e,t,n,a,r,s,i,o,l){Me=!1,Le=null,Oe.apply(Be,arguments)}function Ve(e){var t=e,n=e;if(e.alternate)for(;t.return;)t=t.return;else{e=t;do{0!==(4098&(t=e).flags)&&(n=t.return),e=t.return}while(e)}return 3===t.tag?n:null}function Ue(e){if(13===e.tag){var t=e.memoizedState;if(null===t&&(null!==(e=e.alternate)&&(t=e.memoizedState)),null!==t)return t.dehydrated}return null}function je(e){if(Ve(e)!==e)throw Error(s(188))}function Ge(e){return null!==(e=function(e){var t=e.alternate;if(!t){if(null===(t=Ve(e)))throw Error(s(188));return t!==e?null:e}for(var n=e,a=t;;){var r=n.return;if(null===r)break;var i=r.alternate;if(null===i){if(null!==(a=r.return)){n=a;continue}break}if(r.child===i.child){for(i=r.child;i;){if(i===n)return je(r),e;if(i===a)return je(r),t;i=i.sibling}throw Error(s(188))}if(n.return!==a.return)n=r,a=i;else{for(var o=!1,l=r.child;l;){if(l===n){o=!0,n=r,a=i;break}if(l===a){o=!0,a=r,n=i;break}l=l.sibling}if(!o){for(l=i.child;l;){if(l===n){o=!0,n=i,a=r;break}if(l===a){o=!0,a=i,n=r;break}l=l.sibling}if(!o)throw Error(s(189))}}if(n.alternate!==a)throw Error(s(190))}if(3!==n.tag)throw Error(s(188));return n.stateNode.current===n?e:t}(e))?He(e):null}function He(e){if(5===e.tag||6===e.tag)return e;for(e=e.child;null!==e;){var t=He(e);if(null!==t)return t;e=e.sibling}return null}var qe=r.unstable_scheduleCallback,Ke=r.unstable_cancelCallback,Xe=r.unstable_shouldYield,Ye=r.unstable_requestPaint,Qe=r.unstable_now,Ze=r.unstable_getCurrentPriorityLevel,Je=r.unstable_ImmediatePriority,et=r.unstable_UserBlockingPriority,tt=r.unstable_NormalPriority,nt=r.unstable_LowPriority,at=r.unstable_IdlePriority,rt=null,st=null;var it=Math.clz32?Math.clz32:function(e){return e>>>=0,0===e?32:31-(ot(e)/lt|0)|0},ot=Math.log,lt=Math.LN2;var ut=64,ct=4194304;function pt(e){switch(e&-e){case 1:return 1;case 2:return 2;case 4:return 4;case 8:return 8;case 16:return 16;case 32:return 32;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return 4194240&e;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return 130023424&e;case 134217728:return 134217728;case 268435456:return 268435456;case 536870912:return 536870912;case 1073741824:return 1073741824;default:return e}}function dt(e,t){var n=e.pendingLanes;if(0===n)return 0;var a=0,r=e.suspendedLanes,s=e.pingedLanes,i=268435455&n;if(0!==i){var o=i&~r;0!==o?a=pt(o):0!==(s&=i)&&(a=pt(s))}else 0!==(i=n&~r)?a=pt(i):0!==s&&(a=pt(s));if(0===a)return 0;if(0!==t&&t!==a&&0===(t&r)&&((r=a&-a)>=(s=t&-t)||16===r&&0!==(4194240&s)))return t;if(0!==(4&a)&&(a|=16&n),0!==(t=e.entangledLanes))for(e=e.entanglements,t&=a;0<t;)r=1<<(n=31-it(t)),a|=e[n],t&=~r;return a}function ht(e,t){switch(e){case 1:case 2:case 4:return t+250;case 8:case 16:case 32:case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return t+5e3;default:return-1}}function ft(e){return 0!==(e=-1073741825&e.pendingLanes)?e:1073741824&e?1073741824:0}function mt(){var e=ut;return 0===(4194240&(ut<<=1))&&(ut=64),e}function gt(e){for(var t=[],n=0;31>n;n++)t.push(e);return t}function yt(e,t,n){e.pendingLanes|=t,536870912!==t&&(e.suspendedLanes=0,e.pingedLanes=0),(e=e.eventTimes)[t=31-it(t)]=n}function bt(e,t){var n=e.entangledLanes|=t;for(e=e.entanglements;n;){var a=31-it(n),r=1<<a;r&t|e[a]&t&&(e[a]|=t),n&=~r}}var xt=0;function vt(e){return 1<(e&=-e)?4<e?0!==(268435455&e)?16:536870912:4:1}var wt,kt,Nt,St,It,Tt=!1,Ct=[],Et=null,$t=null,Rt=null,At=new Map,_t=new Map,Ft=[],Dt="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(" ");function Ot(e,t){switch(e){case"focusin":case"focusout":Et=null;break;case"dragenter":case"dragleave":$t=null;break;case"mouseover":case"mouseout":Rt=null;break;case"pointerover":case"pointerout":At.delete(t.pointerId);break;case"gotpointercapture":case"lostpointercapture":_t.delete(t.pointerId)}}function Mt(e,t,n,a,r,s){return null===e||e.nativeEvent!==s?(e={blockedOn:t,domEventName:n,eventSystemFlags:a,nativeEvent:s,targetContainers:[r]},null!==t&&(null!==(t=xr(t))&&kt(t)),e):(e.eventSystemFlags|=a,t=e.targetContainers,null!==r&&-1===t.indexOf(r)&&t.push(r),e)}function Lt(e){var t=br(e.target);if(null!==t){var n=Ve(t);if(null!==n)if(13===(t=n.tag)){if(null!==(t=Ue(n)))return e.blockedOn=t,void It(e.priority,(function(){Nt(n)}))}else if(3===t&&n.stateNode.current.memoizedState.isDehydrated)return void(e.blockedOn=3===n.tag?n.stateNode.containerInfo:null)}e.blockedOn=null}function zt(e){if(null!==e.blockedOn)return!1;for(var t=e.targetContainers;0<t.length;){var n=Xt(e.domEventName,e.eventSystemFlags,t[0],e.nativeEvent);if(null!==n)return null!==(t=xr(n))&&kt(t),e.blockedOn=n,!1;var a=new(n=e.nativeEvent).constructor(n.type,n);ve=a,n.target.dispatchEvent(a),ve=null,t.shift()}return!0}function Pt(e,t,n){zt(e)&&n.delete(t)}function Bt(){Tt=!1,null!==Et&&zt(Et)&&(Et=null),null!==$t&&zt($t)&&($t=null),null!==Rt&&zt(Rt)&&(Rt=null),At.forEach(Pt),_t.forEach(Pt)}function Wt(e,t){e.blockedOn===t&&(e.blockedOn=null,Tt||(Tt=!0,r.unstable_scheduleCallback(r.unstable_NormalPriority,Bt)))}function Vt(e){function t(t){return Wt(t,e)}if(0<Ct.length){Wt(Ct[0],e);for(var n=1;n<Ct.length;n++){var a=Ct[n];a.blockedOn===e&&(a.blockedOn=null)}}for(null!==Et&&Wt(Et,e),null!==$t&&Wt($t,e),null!==Rt&&Wt(Rt,e),At.forEach(t),_t.forEach(t),n=0;n<Ft.length;n++)(a=Ft[n]).blockedOn===e&&(a.blockedOn=null);for(;0<Ft.length&&null===(n=Ft[0]).blockedOn;)Lt(n),null===n.blockedOn&&Ft.shift()}var Ut=v.ReactCurrentBatchConfig,jt=!0;function Gt(e,t,n,a){var r=xt,s=Ut.transition;Ut.transition=null;try{xt=1,qt(e,t,n,a)}finally{xt=r,Ut.transition=s}}function Ht(e,t,n,a){var r=xt,s=Ut.transition;Ut.transition=null;try{xt=4,qt(e,t,n,a)}finally{xt=r,Ut.transition=s}}function qt(e,t,n,a){if(jt){var r=Xt(e,t,n,a);if(null===r)ja(e,t,a,Kt,n),Ot(e,a);else if(function(e,t,n,a,r){switch(t){case"focusin":return Et=Mt(Et,e,t,n,a,r),!0;case"dragenter":return $t=Mt($t,e,t,n,a,r),!0;case"mouseover":return Rt=Mt(Rt,e,t,n,a,r),!0;case"pointerover":var s=r.pointerId;return At.set(s,Mt(At.get(s)||null,e,t,n,a,r)),!0;case"gotpointercapture":return s=r.pointerId,_t.set(s,Mt(_t.get(s)||null,e,t,n,a,r)),!0}return!1}(r,e,t,n,a))a.stopPropagation();else if(Ot(e,a),4&t&&-1<Dt.indexOf(e)){for(;null!==r;){var s=xr(r);if(null!==s&&wt(s),null===(s=Xt(e,t,n,a))&&ja(e,t,a,Kt,n),s===r)break;r=s}null!==r&&a.stopPropagation()}else ja(e,t,a,null,n)}}var Kt=null;function Xt(e,t,n,a){if(Kt=null,null!==(e=br(e=we(a))))if(null===(t=Ve(e)))e=null;else if(13===(n=t.tag)){if(null!==(e=Ue(t)))return e;e=null}else if(3===n){if(t.stateNode.current.memoizedState.isDehydrated)return 3===t.tag?t.stateNode.containerInfo:null;e=null}else t!==e&&(e=null);return Kt=e,null}function Yt(e){switch(e){case"cancel":case"click":case"close":case"contextmenu":case"copy":case"cut":case"auxclick":case"dblclick":case"dragend":case"dragstart":case"drop":case"focusin":case"focusout":case"input":case"invalid":case"keydown":case"keypress":case"keyup":case"mousedown":case"mouseup":case"paste":case"pause":case"play":case"pointercancel":case"pointerdown":case"pointerup":case"ratechange":case"reset":case"resize":case"seeked":case"submit":case"touchcancel":case"touchend":case"touchstart":case"volumechange":case"change":case"selectionchange":case"textInput":case"compositionstart":case"compositionend":case"compositionupdate":case"beforeblur":case"afterblur":case"beforeinput":case"blur":case"fullscreenchange":case"focus":case"hashchange":case"popstate":case"select":case"selectstart":return 1;case"drag":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"mousemove":case"mouseout":case"mouseover":case"pointermove":case"pointerout":case"pointerover":case"scroll":case"toggle":case"touchmove":case"wheel":case"mouseenter":case"mouseleave":case"pointerenter":case"pointerleave":return 4;case"message":switch(Ze()){case Je:return 1;case et:return 4;case tt:case nt:return 16;case at:return 536870912;default:return 16}default:return 16}}var Qt=null,Zt=null,Jt=null;function en(){if(Jt)return Jt;var e,t,n=Zt,a=n.length,r="value"in Qt?Qt.value:Qt.textContent,s=r.length;for(e=0;e<a&&n[e]===r[e];e++);var i=a-e;for(t=1;t<=i&&n[a-t]===r[s-t];t++);return Jt=r.slice(e,1<t?1-t:void 0)}function tn(e){var t=e.keyCode;return"charCode"in e?0===(e=e.charCode)&&13===t&&(e=13):e=t,10===e&&(e=13),32<=e||13===e?e:0}function nn(){return!0}function an(){return!1}function rn(e){function t(t,n,a,r,s){for(var i in this._reactName=t,this._targetInst=a,this.type=n,this.nativeEvent=r,this.target=s,this.currentTarget=null,e)e.hasOwnProperty(i)&&(t=e[i],this[i]=t?t(r):r[i]);return this.isDefaultPrevented=(null!=r.defaultPrevented?r.defaultPrevented:!1===r.returnValue)?nn:an,this.isPropagationStopped=an,this}return L(t.prototype,{preventDefault:function(){this.defaultPrevented=!0;var e=this.nativeEvent;e&&(e.preventDefault?e.preventDefault():"unknown"!==typeof e.returnValue&&(e.returnValue=!1),this.isDefaultPrevented=nn)},stopPropagation:function(){var e=this.nativeEvent;e&&(e.stopPropagation?e.stopPropagation():"unknown"!==typeof e.cancelBubble&&(e.cancelBubble=!0),this.isPropagationStopped=nn)},persist:function(){},isPersistent:nn}),t}var sn,on,ln,un={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},cn=rn(un),pn=L({},un,{view:0,detail:0}),dn=rn(pn),hn=L({},pn,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:In,button:0,buttons:0,relatedTarget:function(e){return void 0===e.relatedTarget?e.fromElement===e.srcElement?e.toElement:e.fromElement:e.relatedTarget},movementX:function(e){return"movementX"in e?e.movementX:(e!==ln&&(ln&&"mousemove"===e.type?(sn=e.screenX-ln.screenX,on=e.screenY-ln.screenY):on=sn=0,ln=e),sn)},movementY:function(e){return"movementY"in e?e.movementY:on}}),fn=rn(hn),mn=rn(L({},hn,{dataTransfer:0})),gn=rn(L({},pn,{relatedTarget:0})),yn=rn(L({},un,{animationName:0,elapsedTime:0,pseudoElement:0})),bn=L({},un,{clipboardData:function(e){return"clipboardData"in e?e.clipboardData:window.clipboardData}}),xn=rn(bn),vn=rn(L({},un,{data:0})),wn={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},kn={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},Nn={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function Sn(e){var t=this.nativeEvent;return t.getModifierState?t.getModifierState(e):!!(e=Nn[e])&&!!t[e]}function In(){return Sn}var Tn=L({},pn,{key:function(e){if(e.key){var t=wn[e.key]||e.key;if("Unidentified"!==t)return t}return"keypress"===e.type?13===(e=tn(e))?"Enter":String.fromCharCode(e):"keydown"===e.type||"keyup"===e.type?kn[e.keyCode]||"Unidentified":""},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:In,charCode:function(e){return"keypress"===e.type?tn(e):0},keyCode:function(e){return"keydown"===e.type||"keyup"===e.type?e.keyCode:0},which:function(e){return"keypress"===e.type?tn(e):"keydown"===e.type||"keyup"===e.type?e.keyCode:0}}),Cn=rn(Tn),En=rn(L({},hn,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0})),$n=rn(L({},pn,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:In})),Rn=rn(L({},un,{propertyName:0,elapsedTime:0,pseudoElement:0})),An=L({},hn,{deltaX:function(e){return"deltaX"in e?e.deltaX:"wheelDeltaX"in e?-e.wheelDeltaX:0},deltaY:function(e){return"deltaY"in e?e.deltaY:"wheelDeltaY"in e?-e.wheelDeltaY:"wheelDelta"in e?-e.wheelDelta:0},deltaZ:0,deltaMode:0}),_n=rn(An),Fn=[9,13,27,32],Dn=c&&"CompositionEvent"in window,On=null;c&&"documentMode"in document&&(On=document.documentMode);var Mn=c&&"TextEvent"in window&&!On,Ln=c&&(!Dn||On&&8<On&&11>=On),zn=String.fromCharCode(32),Pn=!1;function Bn(e,t){switch(e){case"keyup":return-1!==Fn.indexOf(t.keyCode);case"keydown":return 229!==t.keyCode;case"keypress":case"mousedown":case"focusout":return!0;default:return!1}}function Wn(e){return"object"===typeof(e=e.detail)&&"data"in e?e.data:null}var Vn=!1;var Un={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function jn(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return"input"===t?!!Un[e.type]:"textarea"===t}function Gn(e,t,n,a){Te(a),0<(t=Ha(t,"onChange")).length&&(n=new cn("onChange","change",null,n,a),e.push({event:n,listeners:t}))}var Hn=null,qn=null;function Kn(e){za(e,0)}function Xn(e){if(q(vr(e)))return e}function Yn(e,t){if("change"===e)return t}var Qn=!1;if(c){var Zn;if(c){var Jn="oninput"in document;if(!Jn){var ea=document.createElement("div");ea.setAttribute("oninput","return;"),Jn="function"===typeof ea.oninput}Zn=Jn}else Zn=!1;Qn=Zn&&(!document.documentMode||9<document.documentMode)}function ta(){Hn&&(Hn.detachEvent("onpropertychange",na),qn=Hn=null)}function na(e){if("value"===e.propertyName&&Xn(qn)){var t=[];Gn(t,qn,e,we(e)),Ae(Kn,t)}}function aa(e,t,n){"focusin"===e?(ta(),qn=n,(Hn=t).attachEvent("onpropertychange",na)):"focusout"===e&&ta()}function ra(e){if("selectionchange"===e||"keyup"===e||"keydown"===e)return Xn(qn)}function sa(e,t){if("click"===e)return Xn(t)}function ia(e,t){if("input"===e||"change"===e)return Xn(t)}var oa="function"===typeof Object.is?Object.is:function(e,t){return e===t&&(0!==e||1/e===1/t)||e!==e&&t!==t};function la(e,t){if(oa(e,t))return!0;if("object"!==typeof e||null===e||"object"!==typeof t||null===t)return!1;var n=Object.keys(e),a=Object.keys(t);if(n.length!==a.length)return!1;for(a=0;a<n.length;a++){var r=n[a];if(!p.call(t,r)||!oa(e[r],t[r]))return!1}return!0}function ua(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function ca(e,t){var n,a=ua(e);for(e=0;a;){if(3===a.nodeType){if(n=e+a.textContent.length,e<=t&&n>=t)return{node:a,offset:t-e};e=n}e:{for(;a;){if(a.nextSibling){a=a.nextSibling;break e}a=a.parentNode}a=void 0}a=ua(a)}}function pa(e,t){return!(!e||!t)&&(e===t||(!e||3!==e.nodeType)&&(t&&3===t.nodeType?pa(e,t.parentNode):"contains"in e?e.contains(t):!!e.compareDocumentPosition&&!!(16&e.compareDocumentPosition(t))))}function da(){for(var e=window,t=K();t instanceof e.HTMLIFrameElement;){try{var n="string"===typeof t.contentWindow.location.href}catch(a){n=!1}if(!n)break;t=K((e=t.contentWindow).document)}return t}function ha(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return t&&("input"===t&&("text"===e.type||"search"===e.type||"tel"===e.type||"url"===e.type||"password"===e.type)||"textarea"===t||"true"===e.contentEditable)}function fa(e){var t=da(),n=e.focusedElem,a=e.selectionRange;if(t!==n&&n&&n.ownerDocument&&pa(n.ownerDocument.documentElement,n)){if(null!==a&&ha(n))if(t=a.start,void 0===(e=a.end)&&(e=t),"selectionStart"in n)n.selectionStart=t,n.selectionEnd=Math.min(e,n.value.length);else if((e=(t=n.ownerDocument||document)&&t.defaultView||window).getSelection){e=e.getSelection();var r=n.textContent.length,s=Math.min(a.start,r);a=void 0===a.end?s:Math.min(a.end,r),!e.extend&&s>a&&(r=a,a=s,s=r),r=ca(n,s);var i=ca(n,a);r&&i&&(1!==e.rangeCount||e.anchorNode!==r.node||e.anchorOffset!==r.offset||e.focusNode!==i.node||e.focusOffset!==i.offset)&&((t=t.createRange()).setStart(r.node,r.offset),e.removeAllRanges(),s>a?(e.addRange(t),e.extend(i.node,i.offset)):(t.setEnd(i.node,i.offset),e.addRange(t)))}for(t=[],e=n;e=e.parentNode;)1===e.nodeType&&t.push({element:e,left:e.scrollLeft,top:e.scrollTop});for("function"===typeof n.focus&&n.focus(),n=0;n<t.length;n++)(e=t[n]).element.scrollLeft=e.left,e.element.scrollTop=e.top}}var ma=c&&"documentMode"in document&&11>=document.documentMode,ga=null,ya=null,ba=null,xa=!1;function va(e,t,n){var a=n.window===n?n.document:9===n.nodeType?n:n.ownerDocument;xa||null==ga||ga!==K(a)||("selectionStart"in(a=ga)&&ha(a)?a={start:a.selectionStart,end:a.selectionEnd}:a={anchorNode:(a=(a.ownerDocument&&a.ownerDocument.defaultView||window).getSelection()).anchorNode,anchorOffset:a.anchorOffset,focusNode:a.focusNode,focusOffset:a.focusOffset},ba&&la(ba,a)||(ba=a,0<(a=Ha(ya,"onSelect")).length&&(t=new cn("onSelect","select",null,t,n),e.push({event:t,listeners:a}),t.target=ga)))}function wa(e,t){var n={};return n[e.toLowerCase()]=t.toLowerCase(),n["Webkit"+e]="webkit"+t,n["Moz"+e]="moz"+t,n}var ka={animationend:wa("Animation","AnimationEnd"),animationiteration:wa("Animation","AnimationIteration"),animationstart:wa("Animation","AnimationStart"),transitionend:wa("Transition","TransitionEnd")},Na={},Sa={};function Ia(e){if(Na[e])return Na[e];if(!ka[e])return e;var t,n=ka[e];for(t in n)if(n.hasOwnProperty(t)&&t in Sa)return Na[e]=n[t];return e}c&&(Sa=document.createElement("div").style,"AnimationEvent"in window||(delete ka.animationend.animation,delete ka.animationiteration.animation,delete ka.animationstart.animation),"TransitionEvent"in window||delete ka.transitionend.transition);var Ta=Ia("animationend"),Ca=Ia("animationiteration"),Ea=Ia("animationstart"),$a=Ia("transitionend"),Ra=new Map,Aa="abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel".split(" ");function _a(e,t){Ra.set(e,t),l(t,[e])}for(var Fa=0;Fa<Aa.length;Fa++){var Da=Aa[Fa];_a(Da.toLowerCase(),"on"+(Da[0].toUpperCase()+Da.slice(1)))}_a(Ta,"onAnimationEnd"),_a(Ca,"onAnimationIteration"),_a(Ea,"onAnimationStart"),_a("dblclick","onDoubleClick"),_a("focusin","onFocus"),_a("focusout","onBlur"),_a($a,"onTransitionEnd"),u("onMouseEnter",["mouseout","mouseover"]),u("onMouseLeave",["mouseout","mouseover"]),u("onPointerEnter",["pointerout","pointerover"]),u("onPointerLeave",["pointerout","pointerover"]),l("onChange","change click focusin focusout input keydown keyup selectionchange".split(" ")),l("onSelect","focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" ")),l("onBeforeInput",["compositionend","keypress","textInput","paste"]),l("onCompositionEnd","compositionend focusout keydown keypress keyup mousedown".split(" ")),l("onCompositionStart","compositionstart focusout keydown keypress keyup mousedown".split(" ")),l("onCompositionUpdate","compositionupdate focusout keydown keypress keyup mousedown".split(" "));var Oa="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),Ma=new Set("cancel close invalid load scroll toggle".split(" ").concat(Oa));function La(e,t,n){var a=e.type||"unknown-event";e.currentTarget=n,function(e,t,n,a,r,i,o,l,u){if(We.apply(this,arguments),Me){if(!Me)throw Error(s(198));var c=Le;Me=!1,Le=null,ze||(ze=!0,Pe=c)}}(a,t,void 0,e),e.currentTarget=null}function za(e,t){t=0!==(4&t);for(var n=0;n<e.length;n++){var a=e[n],r=a.event;a=a.listeners;e:{var s=void 0;if(t)for(var i=a.length-1;0<=i;i--){var o=a[i],l=o.instance,u=o.currentTarget;if(o=o.listener,l!==s&&r.isPropagationStopped())break e;La(r,o,u),s=l}else for(i=0;i<a.length;i++){if(l=(o=a[i]).instance,u=o.currentTarget,o=o.listener,l!==s&&r.isPropagationStopped())break e;La(r,o,u),s=l}}}if(ze)throw e=Pe,ze=!1,Pe=null,e}function Pa(e,t){var n=t[mr];void 0===n&&(n=t[mr]=new Set);var a=e+"__bubble";n.has(a)||(Ua(t,e,2,!1),n.add(a))}function Ba(e,t,n){var a=0;t&&(a|=4),Ua(n,e,a,t)}var Wa="_reactListening"+Math.random().toString(36).slice(2);function Va(e){if(!e[Wa]){e[Wa]=!0,i.forEach((function(t){"selectionchange"!==t&&(Ma.has(t)||Ba(t,!1,e),Ba(t,!0,e))}));var t=9===e.nodeType?e:e.ownerDocument;null===t||t[Wa]||(t[Wa]=!0,Ba("selectionchange",!1,t))}}function Ua(e,t,n,a){switch(Yt(t)){case 1:var r=Gt;break;case 4:r=Ht;break;default:r=qt}n=r.bind(null,t,n,e),r=void 0,!Fe||"touchstart"!==t&&"touchmove"!==t&&"wheel"!==t||(r=!0),a?void 0!==r?e.addEventListener(t,n,{capture:!0,passive:r}):e.addEventListener(t,n,!0):void 0!==r?e.addEventListener(t,n,{passive:r}):e.addEventListener(t,n,!1)}function ja(e,t,n,a,r){var s=a;if(0===(1&t)&&0===(2&t)&&null!==a)e:for(;;){if(null===a)return;var i=a.tag;if(3===i||4===i){var o=a.stateNode.containerInfo;if(o===r||8===o.nodeType&&o.parentNode===r)break;if(4===i)for(i=a.return;null!==i;){var l=i.tag;if((3===l||4===l)&&((l=i.stateNode.containerInfo)===r||8===l.nodeType&&l.parentNode===r))return;i=i.return}for(;null!==o;){if(null===(i=br(o)))return;if(5===(l=i.tag)||6===l){a=s=i;continue e}o=o.parentNode}}a=a.return}Ae((function(){var a=s,r=we(n),i=[];e:{var o=Ra.get(e);if(void 0!==o){var l=cn,u=e;switch(e){case"keypress":if(0===tn(n))break e;case"keydown":case"keyup":l=Cn;break;case"focusin":u="focus",l=gn;break;case"focusout":u="blur",l=gn;break;case"beforeblur":case"afterblur":l=gn;break;case"click":if(2===n.button)break e;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":l=fn;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":l=mn;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":l=$n;break;case Ta:case Ca:case Ea:l=yn;break;case $a:l=Rn;break;case"scroll":l=dn;break;case"wheel":l=_n;break;case"copy":case"cut":case"paste":l=xn;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":l=En}var c=0!==(4&t),p=!c&&"scroll"===e,d=c?null!==o?o+"Capture":null:o;c=[];for(var h,f=a;null!==f;){var m=(h=f).stateNode;if(5===h.tag&&null!==m&&(h=m,null!==d&&(null!=(m=_e(f,d))&&c.push(Ga(f,m,h)))),p)break;f=f.return}0<c.length&&(o=new l(o,u,null,n,r),i.push({event:o,listeners:c}))}}if(0===(7&t)){if(l="mouseout"===e||"pointerout"===e,(!(o="mouseover"===e||"pointerover"===e)||n===ve||!(u=n.relatedTarget||n.fromElement)||!br(u)&&!u[fr])&&(l||o)&&(o=r.window===r?r:(o=r.ownerDocument)?o.defaultView||o.parentWindow:window,l?(l=a,null!==(u=(u=n.relatedTarget||n.toElement)?br(u):null)&&(u!==(p=Ve(u))||5!==u.tag&&6!==u.tag)&&(u=null)):(l=null,u=a),l!==u)){if(c=fn,m="onMouseLeave",d="onMouseEnter",f="mouse","pointerout"!==e&&"pointerover"!==e||(c=En,m="onPointerLeave",d="onPointerEnter",f="pointer"),p=null==l?o:vr(l),h=null==u?o:vr(u),(o=new c(m,f+"leave",l,n,r)).target=p,o.relatedTarget=h,m=null,br(r)===a&&((c=new c(d,f+"enter",u,n,r)).target=h,c.relatedTarget=p,m=c),p=m,l&&u)e:{for(d=u,f=0,h=c=l;h;h=qa(h))f++;for(h=0,m=d;m;m=qa(m))h++;for(;0<f-h;)c=qa(c),f--;for(;0<h-f;)d=qa(d),h--;for(;f--;){if(c===d||null!==d&&c===d.alternate)break e;c=qa(c),d=qa(d)}c=null}else c=null;null!==l&&Ka(i,o,l,c,!1),null!==u&&null!==p&&Ka(i,p,u,c,!0)}if("select"===(l=(o=a?vr(a):window).nodeName&&o.nodeName.toLowerCase())||"input"===l&&"file"===o.type)var g=Yn;else if(jn(o))if(Qn)g=ia;else{g=ra;var y=aa}else(l=o.nodeName)&&"input"===l.toLowerCase()&&("checkbox"===o.type||"radio"===o.type)&&(g=sa);switch(g&&(g=g(e,a))?Gn(i,g,n,r):(y&&y(e,o,a),"focusout"===e&&(y=o._wrapperState)&&y.controlled&&"number"===o.type&&ee(o,"number",o.value)),y=a?vr(a):window,e){case"focusin":(jn(y)||"true"===y.contentEditable)&&(ga=y,ya=a,ba=null);break;case"focusout":ba=ya=ga=null;break;case"mousedown":xa=!0;break;case"contextmenu":case"mouseup":case"dragend":xa=!1,va(i,n,r);break;case"selectionchange":if(ma)break;case"keydown":case"keyup":va(i,n,r)}var b;if(Dn)e:{switch(e){case"compositionstart":var x="onCompositionStart";break e;case"compositionend":x="onCompositionEnd";break e;case"compositionupdate":x="onCompositionUpdate";break e}x=void 0}else Vn?Bn(e,n)&&(x="onCompositionEnd"):"keydown"===e&&229===n.keyCode&&(x="onCompositionStart");x&&(Ln&&"ko"!==n.locale&&(Vn||"onCompositionStart"!==x?"onCompositionEnd"===x&&Vn&&(b=en()):(Zt="value"in(Qt=r)?Qt.value:Qt.textContent,Vn=!0)),0<(y=Ha(a,x)).length&&(x=new vn(x,e,null,n,r),i.push({event:x,listeners:y}),b?x.data=b:null!==(b=Wn(n))&&(x.data=b))),(b=Mn?function(e,t){switch(e){case"compositionend":return Wn(t);case"keypress":return 32!==t.which?null:(Pn=!0,zn);case"textInput":return(e=t.data)===zn&&Pn?null:e;default:return null}}(e,n):function(e,t){if(Vn)return"compositionend"===e||!Dn&&Bn(e,t)?(e=en(),Jt=Zt=Qt=null,Vn=!1,e):null;switch(e){case"paste":default:return null;case"keypress":if(!(t.ctrlKey||t.altKey||t.metaKey)||t.ctrlKey&&t.altKey){if(t.char&&1<t.char.length)return t.char;if(t.which)return String.fromCharCode(t.which)}return null;case"compositionend":return Ln&&"ko"!==t.locale?null:t.data}}(e,n))&&(0<(a=Ha(a,"onBeforeInput")).length&&(r=new vn("onBeforeInput","beforeinput",null,n,r),i.push({event:r,listeners:a}),r.data=b))}za(i,t)}))}function Ga(e,t,n){return{instance:e,listener:t,currentTarget:n}}function Ha(e,t){for(var n=t+"Capture",a=[];null!==e;){var r=e,s=r.stateNode;5===r.tag&&null!==s&&(r=s,null!=(s=_e(e,n))&&a.unshift(Ga(e,s,r)),null!=(s=_e(e,t))&&a.push(Ga(e,s,r))),e=e.return}return a}function qa(e){if(null===e)return null;do{e=e.return}while(e&&5!==e.tag);return e||null}function Ka(e,t,n,a,r){for(var s=t._reactName,i=[];null!==n&&n!==a;){var o=n,l=o.alternate,u=o.stateNode;if(null!==l&&l===a)break;5===o.tag&&null!==u&&(o=u,r?null!=(l=_e(n,s))&&i.unshift(Ga(n,l,o)):r||null!=(l=_e(n,s))&&i.push(Ga(n,l,o))),n=n.return}0!==i.length&&e.push({event:t,listeners:i})}var Xa=/\r\n?/g,Ya=/\u0000|\uFFFD/g;function Qa(e){return("string"===typeof e?e:""+e).replace(Xa,"\n").replace(Ya,"")}function Za(e,t,n){if(t=Qa(t),Qa(e)!==t&&n)throw Error(s(425))}function Ja(){}var er=null,tr=null;function nr(e,t){return"textarea"===e||"noscript"===e||"string"===typeof t.children||"number"===typeof t.children||"object"===typeof t.dangerouslySetInnerHTML&&null!==t.dangerouslySetInnerHTML&&null!=t.dangerouslySetInnerHTML.__html}var ar="function"===typeof setTimeout?setTimeout:void 0,rr="function"===typeof clearTimeout?clearTimeout:void 0,sr="function"===typeof Promise?Promise:void 0,ir="function"===typeof queueMicrotask?queueMicrotask:"undefined"!==typeof sr?function(e){return sr.resolve(null).then(e).catch(or)}:ar;function or(e){setTimeout((function(){throw e}))}function lr(e,t){var n=t,a=0;do{var r=n.nextSibling;if(e.removeChild(n),r&&8===r.nodeType)if("/$"===(n=r.data)){if(0===a)return e.removeChild(r),void Vt(t);a--}else"$"!==n&&"$?"!==n&&"$!"!==n||a++;n=r}while(n);Vt(t)}function ur(e){for(;null!=e;e=e.nextSibling){var t=e.nodeType;if(1===t||3===t)break;if(8===t){if("$"===(t=e.data)||"$!"===t||"$?"===t)break;if("/$"===t)return null}}return e}function cr(e){e=e.previousSibling;for(var t=0;e;){if(8===e.nodeType){var n=e.data;if("$"===n||"$!"===n||"$?"===n){if(0===t)return e;t--}else"/$"===n&&t++}e=e.previousSibling}return null}var pr=Math.random().toString(36).slice(2),dr="__reactFiber$"+pr,hr="__reactProps$"+pr,fr="__reactContainer$"+pr,mr="__reactEvents$"+pr,gr="__reactListeners$"+pr,yr="__reactHandles$"+pr;function br(e){var t=e[dr];if(t)return t;for(var n=e.parentNode;n;){if(t=n[fr]||n[dr]){if(n=t.alternate,null!==t.child||null!==n&&null!==n.child)for(e=cr(e);null!==e;){if(n=e[dr])return n;e=cr(e)}return t}n=(e=n).parentNode}return null}function xr(e){return!(e=e[dr]||e[fr])||5!==e.tag&&6!==e.tag&&13!==e.tag&&3!==e.tag?null:e}function vr(e){if(5===e.tag||6===e.tag)return e.stateNode;throw Error(s(33))}function wr(e){return e[hr]||null}var kr=[],Nr=-1;function Sr(e){return{current:e}}function Ir(e){0>Nr||(e.current=kr[Nr],kr[Nr]=null,Nr--)}function Tr(e,t){Nr++,kr[Nr]=e.current,e.current=t}var Cr={},Er=Sr(Cr),$r=Sr(!1),Rr=Cr;function Ar(e,t){var n=e.type.contextTypes;if(!n)return Cr;var a=e.stateNode;if(a&&a.__reactInternalMemoizedUnmaskedChildContext===t)return a.__reactInternalMemoizedMaskedChildContext;var r,s={};for(r in n)s[r]=t[r];return a&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=t,e.__reactInternalMemoizedMaskedChildContext=s),s}function _r(e){return null!==(e=e.childContextTypes)&&void 0!==e}function Fr(){Ir($r),Ir(Er)}function Dr(e,t,n){if(Er.current!==Cr)throw Error(s(168));Tr(Er,t),Tr($r,n)}function Or(e,t,n){var a=e.stateNode;if(t=t.childContextTypes,"function"!==typeof a.getChildContext)return n;for(var r in a=a.getChildContext())if(!(r in t))throw Error(s(108,U(e)||"Unknown",r));return L({},n,a)}function Mr(e){return e=(e=e.stateNode)&&e.__reactInternalMemoizedMergedChildContext||Cr,Rr=Er.current,Tr(Er,e),Tr($r,$r.current),!0}function Lr(e,t,n){var a=e.stateNode;if(!a)throw Error(s(169));n?(e=Or(e,t,Rr),a.__reactInternalMemoizedMergedChildContext=e,Ir($r),Ir(Er),Tr(Er,e)):Ir($r),Tr($r,n)}var zr=null,Pr=!1,Br=!1;function Wr(e){null===zr?zr=[e]:zr.push(e)}function Vr(){if(!Br&&null!==zr){Br=!0;var e=0,t=xt;try{var n=zr;for(xt=1;e<n.length;e++){var a=n[e];do{a=a(!0)}while(null!==a)}zr=null,Pr=!1}catch(r){throw null!==zr&&(zr=zr.slice(e+1)),qe(Je,Vr),r}finally{xt=t,Br=!1}}return null}var Ur=[],jr=0,Gr=null,Hr=0,qr=[],Kr=0,Xr=null,Yr=1,Qr="";function Zr(e,t){Ur[jr++]=Hr,Ur[jr++]=Gr,Gr=e,Hr=t}function Jr(e,t,n){qr[Kr++]=Yr,qr[Kr++]=Qr,qr[Kr++]=Xr,Xr=e;var a=Yr;e=Qr;var r=32-it(a)-1;a&=~(1<<r),n+=1;var s=32-it(t)+r;if(30<s){var i=r-r%5;s=(a&(1<<i)-1).toString(32),a>>=i,r-=i,Yr=1<<32-it(t)+r|n<<r|a,Qr=s+e}else Yr=1<<s|n<<r|a,Qr=e}function es(e){null!==e.return&&(Zr(e,1),Jr(e,1,0))}function ts(e){for(;e===Gr;)Gr=Ur[--jr],Ur[jr]=null,Hr=Ur[--jr],Ur[jr]=null;for(;e===Xr;)Xr=qr[--Kr],qr[Kr]=null,Qr=qr[--Kr],qr[Kr]=null,Yr=qr[--Kr],qr[Kr]=null}var ns=null,as=null,rs=!1,ss=null;function is(e,t){var n=Au(5,null,null,0);n.elementType="DELETED",n.stateNode=t,n.return=e,null===(t=e.deletions)?(e.deletions=[n],e.flags|=16):t.push(n)}function os(e,t){switch(e.tag){case 5:var n=e.type;return null!==(t=1!==t.nodeType||n.toLowerCase()!==t.nodeName.toLowerCase()?null:t)&&(e.stateNode=t,ns=e,as=ur(t.firstChild),!0);case 6:return null!==(t=""===e.pendingProps||3!==t.nodeType?null:t)&&(e.stateNode=t,ns=e,as=null,!0);case 13:return null!==(t=8!==t.nodeType?null:t)&&(n=null!==Xr?{id:Yr,overflow:Qr}:null,e.memoizedState={dehydrated:t,treeContext:n,retryLane:1073741824},(n=Au(18,null,null,0)).stateNode=t,n.return=e,e.child=n,ns=e,as=null,!0);default:return!1}}function ls(e){return 0!==(1&e.mode)&&0===(128&e.flags)}function us(e){if(rs){var t=as;if(t){var n=t;if(!os(e,t)){if(ls(e))throw Error(s(418));t=ur(n.nextSibling);var a=ns;t&&os(e,t)?is(a,n):(e.flags=-4097&e.flags|2,rs=!1,ns=e)}}else{if(ls(e))throw Error(s(418));e.flags=-4097&e.flags|2,rs=!1,ns=e}}}function cs(e){for(e=e.return;null!==e&&5!==e.tag&&3!==e.tag&&13!==e.tag;)e=e.return;ns=e}function ps(e){if(e!==ns)return!1;if(!rs)return cs(e),rs=!0,!1;var t;if((t=3!==e.tag)&&!(t=5!==e.tag)&&(t="head"!==(t=e.type)&&"body"!==t&&!nr(e.type,e.memoizedProps)),t&&(t=as)){if(ls(e))throw ds(),Error(s(418));for(;t;)is(e,t),t=ur(t.nextSibling)}if(cs(e),13===e.tag){if(!(e=null!==(e=e.memoizedState)?e.dehydrated:null))throw Error(s(317));e:{for(e=e.nextSibling,t=0;e;){if(8===e.nodeType){var n=e.data;if("/$"===n){if(0===t){as=ur(e.nextSibling);break e}t--}else"$"!==n&&"$!"!==n&&"$?"!==n||t++}e=e.nextSibling}as=null}}else as=ns?ur(e.stateNode.nextSibling):null;return!0}function ds(){for(var e=as;e;)e=ur(e.nextSibling)}function hs(){as=ns=null,rs=!1}function fs(e){null===ss?ss=[e]:ss.push(e)}var ms=v.ReactCurrentBatchConfig;function gs(e,t,n){if(null!==(e=n.ref)&&"function"!==typeof e&&"object"!==typeof e){if(n._owner){if(n=n._owner){if(1!==n.tag)throw Error(s(309));var a=n.stateNode}if(!a)throw Error(s(147,e));var r=a,i=""+e;return null!==t&&null!==t.ref&&"function"===typeof t.ref&&t.ref._stringRef===i?t.ref:(t=function(e){var t=r.refs;null===e?delete t[i]:t[i]=e},t._stringRef=i,t)}if("string"!==typeof e)throw Error(s(284));if(!n._owner)throw Error(s(290,e))}return e}function ys(e,t){throw e=Object.prototype.toString.call(t),Error(s(31,"[object Object]"===e?"object with keys {"+Object.keys(t).join(", ")+"}":e))}function bs(e){return(0,e._init)(e._payload)}function xs(e){function t(t,n){if(e){var a=t.deletions;null===a?(t.deletions=[n],t.flags|=16):a.push(n)}}function n(n,a){if(!e)return null;for(;null!==a;)t(n,a),a=a.sibling;return null}function a(e,t){for(e=new Map;null!==t;)null!==t.key?e.set(t.key,t):e.set(t.index,t),t=t.sibling;return e}function r(e,t){return(e=Fu(e,t)).index=0,e.sibling=null,e}function i(t,n,a){return t.index=a,e?null!==(a=t.alternate)?(a=a.index)<n?(t.flags|=2,n):a:(t.flags|=2,n):(t.flags|=1048576,n)}function o(t){return e&&null===t.alternate&&(t.flags|=2),t}function l(e,t,n,a){return null===t||6!==t.tag?((t=Lu(n,e.mode,a)).return=e,t):((t=r(t,n)).return=e,t)}function u(e,t,n,a){var s=n.type;return s===N?p(e,t,n.props.children,a,n.key):null!==t&&(t.elementType===s||"object"===typeof s&&null!==s&&s.$$typeof===_&&bs(s)===t.type)?((a=r(t,n.props)).ref=gs(e,t,n),a.return=e,a):((a=Du(n.type,n.key,n.props,null,e.mode,a)).ref=gs(e,t,n),a.return=e,a)}function c(e,t,n,a){return null===t||4!==t.tag||t.stateNode.containerInfo!==n.containerInfo||t.stateNode.implementation!==n.implementation?((t=zu(n,e.mode,a)).return=e,t):((t=r(t,n.children||[])).return=e,t)}function p(e,t,n,a,s){return null===t||7!==t.tag?((t=Ou(n,e.mode,a,s)).return=e,t):((t=r(t,n)).return=e,t)}function d(e,t,n){if("string"===typeof t&&""!==t||"number"===typeof t)return(t=Lu(""+t,e.mode,n)).return=e,t;if("object"===typeof t&&null!==t){switch(t.$$typeof){case w:return(n=Du(t.type,t.key,t.props,null,e.mode,n)).ref=gs(e,null,t),n.return=e,n;case k:return(t=zu(t,e.mode,n)).return=e,t;case _:return d(e,(0,t._init)(t._payload),n)}if(te(t)||O(t))return(t=Ou(t,e.mode,n,null)).return=e,t;ys(e,t)}return null}function h(e,t,n,a){var r=null!==t?t.key:null;if("string"===typeof n&&""!==n||"number"===typeof n)return null!==r?null:l(e,t,""+n,a);if("object"===typeof n&&null!==n){switch(n.$$typeof){case w:return n.key===r?u(e,t,n,a):null;case k:return n.key===r?c(e,t,n,a):null;case _:return h(e,t,(r=n._init)(n._payload),a)}if(te(n)||O(n))return null!==r?null:p(e,t,n,a,null);ys(e,n)}return null}function f(e,t,n,a,r){if("string"===typeof a&&""!==a||"number"===typeof a)return l(t,e=e.get(n)||null,""+a,r);if("object"===typeof a&&null!==a){switch(a.$$typeof){case w:return u(t,e=e.get(null===a.key?n:a.key)||null,a,r);case k:return c(t,e=e.get(null===a.key?n:a.key)||null,a,r);case _:return f(e,t,n,(0,a._init)(a._payload),r)}if(te(a)||O(a))return p(t,e=e.get(n)||null,a,r,null);ys(t,a)}return null}function m(r,s,o,l){for(var u=null,c=null,p=s,m=s=0,g=null;null!==p&&m<o.length;m++){p.index>m?(g=p,p=null):g=p.sibling;var y=h(r,p,o[m],l);if(null===y){null===p&&(p=g);break}e&&p&&null===y.alternate&&t(r,p),s=i(y,s,m),null===c?u=y:c.sibling=y,c=y,p=g}if(m===o.length)return n(r,p),rs&&Zr(r,m),u;if(null===p){for(;m<o.length;m++)null!==(p=d(r,o[m],l))&&(s=i(p,s,m),null===c?u=p:c.sibling=p,c=p);return rs&&Zr(r,m),u}for(p=a(r,p);m<o.length;m++)null!==(g=f(p,r,m,o[m],l))&&(e&&null!==g.alternate&&p.delete(null===g.key?m:g.key),s=i(g,s,m),null===c?u=g:c.sibling=g,c=g);return e&&p.forEach((function(e){return t(r,e)})),rs&&Zr(r,m),u}function g(r,o,l,u){var c=O(l);if("function"!==typeof c)throw Error(s(150));if(null==(l=c.call(l)))throw Error(s(151));for(var p=c=null,m=o,g=o=0,y=null,b=l.next();null!==m&&!b.done;g++,b=l.next()){m.index>g?(y=m,m=null):y=m.sibling;var x=h(r,m,b.value,u);if(null===x){null===m&&(m=y);break}e&&m&&null===x.alternate&&t(r,m),o=i(x,o,g),null===p?c=x:p.sibling=x,p=x,m=y}if(b.done)return n(r,m),rs&&Zr(r,g),c;if(null===m){for(;!b.done;g++,b=l.next())null!==(b=d(r,b.value,u))&&(o=i(b,o,g),null===p?c=b:p.sibling=b,p=b);return rs&&Zr(r,g),c}for(m=a(r,m);!b.done;g++,b=l.next())null!==(b=f(m,r,g,b.value,u))&&(e&&null!==b.alternate&&m.delete(null===b.key?g:b.key),o=i(b,o,g),null===p?c=b:p.sibling=b,p=b);return e&&m.forEach((function(e){return t(r,e)})),rs&&Zr(r,g),c}return function e(a,s,i,l){if("object"===typeof i&&null!==i&&i.type===N&&null===i.key&&(i=i.props.children),"object"===typeof i&&null!==i){switch(i.$$typeof){case w:e:{for(var u=i.key,c=s;null!==c;){if(c.key===u){if((u=i.type)===N){if(7===c.tag){n(a,c.sibling),(s=r(c,i.props.children)).return=a,a=s;break e}}else if(c.elementType===u||"object"===typeof u&&null!==u&&u.$$typeof===_&&bs(u)===c.type){n(a,c.sibling),(s=r(c,i.props)).ref=gs(a,c,i),s.return=a,a=s;break e}n(a,c);break}t(a,c),c=c.sibling}i.type===N?((s=Ou(i.props.children,a.mode,l,i.key)).return=a,a=s):((l=Du(i.type,i.key,i.props,null,a.mode,l)).ref=gs(a,s,i),l.return=a,a=l)}return o(a);case k:e:{for(c=i.key;null!==s;){if(s.key===c){if(4===s.tag&&s.stateNode.containerInfo===i.containerInfo&&s.stateNode.implementation===i.implementation){n(a,s.sibling),(s=r(s,i.children||[])).return=a,a=s;break e}n(a,s);break}t(a,s),s=s.sibling}(s=zu(i,a.mode,l)).return=a,a=s}return o(a);case _:return e(a,s,(c=i._init)(i._payload),l)}if(te(i))return m(a,s,i,l);if(O(i))return g(a,s,i,l);ys(a,i)}return"string"===typeof i&&""!==i||"number"===typeof i?(i=""+i,null!==s&&6===s.tag?(n(a,s.sibling),(s=r(s,i)).return=a,a=s):(n(a,s),(s=Lu(i,a.mode,l)).return=a,a=s),o(a)):n(a,s)}}var vs=xs(!0),ws=xs(!1),ks=Sr(null),Ns=null,Ss=null,Is=null;function Ts(){Is=Ss=Ns=null}function Cs(e){var t=ks.current;Ir(ks),e._currentValue=t}function Es(e,t,n){for(;null!==e;){var a=e.alternate;if((e.childLanes&t)!==t?(e.childLanes|=t,null!==a&&(a.childLanes|=t)):null!==a&&(a.childLanes&t)!==t&&(a.childLanes|=t),e===n)break;e=e.return}}function $s(e,t){Ns=e,Is=Ss=null,null!==(e=e.dependencies)&&null!==e.firstContext&&(0!==(e.lanes&t)&&(xo=!0),e.firstContext=null)}function Rs(e){var t=e._currentValue;if(Is!==e)if(e={context:e,memoizedValue:t,next:null},null===Ss){if(null===Ns)throw Error(s(308));Ss=e,Ns.dependencies={lanes:0,firstContext:e}}else Ss=Ss.next=e;return t}var As=null;function _s(e){null===As?As=[e]:As.push(e)}function Fs(e,t,n,a){var r=t.interleaved;return null===r?(n.next=n,_s(t)):(n.next=r.next,r.next=n),t.interleaved=n,Ds(e,a)}function Ds(e,t){e.lanes|=t;var n=e.alternate;for(null!==n&&(n.lanes|=t),n=e,e=e.return;null!==e;)e.childLanes|=t,null!==(n=e.alternate)&&(n.childLanes|=t),n=e,e=e.return;return 3===n.tag?n.stateNode:null}var Os=!1;function Ms(e){e.updateQueue={baseState:e.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null,interleaved:null,lanes:0},effects:null}}function Ls(e,t){e=e.updateQueue,t.updateQueue===e&&(t.updateQueue={baseState:e.baseState,firstBaseUpdate:e.firstBaseUpdate,lastBaseUpdate:e.lastBaseUpdate,shared:e.shared,effects:e.effects})}function zs(e,t){return{eventTime:e,lane:t,tag:0,payload:null,callback:null,next:null}}function Ps(e,t,n){var a=e.updateQueue;if(null===a)return null;if(a=a.shared,0!==(2&El)){var r=a.pending;return null===r?t.next=t:(t.next=r.next,r.next=t),a.pending=t,Ds(e,n)}return null===(r=a.interleaved)?(t.next=t,_s(a)):(t.next=r.next,r.next=t),a.interleaved=t,Ds(e,n)}function Bs(e,t,n){if(null!==(t=t.updateQueue)&&(t=t.shared,0!==(4194240&n))){var a=t.lanes;n|=a&=e.pendingLanes,t.lanes=n,bt(e,n)}}function Ws(e,t){var n=e.updateQueue,a=e.alternate;if(null!==a&&n===(a=a.updateQueue)){var r=null,s=null;if(null!==(n=n.firstBaseUpdate)){do{var i={eventTime:n.eventTime,lane:n.lane,tag:n.tag,payload:n.payload,callback:n.callback,next:null};null===s?r=s=i:s=s.next=i,n=n.next}while(null!==n);null===s?r=s=t:s=s.next=t}else r=s=t;return n={baseState:a.baseState,firstBaseUpdate:r,lastBaseUpdate:s,shared:a.shared,effects:a.effects},void(e.updateQueue=n)}null===(e=n.lastBaseUpdate)?n.firstBaseUpdate=t:e.next=t,n.lastBaseUpdate=t}function Vs(e,t,n,a){var r=e.updateQueue;Os=!1;var s=r.firstBaseUpdate,i=r.lastBaseUpdate,o=r.shared.pending;if(null!==o){r.shared.pending=null;var l=o,u=l.next;l.next=null,null===i?s=u:i.next=u,i=l;var c=e.alternate;null!==c&&((o=(c=c.updateQueue).lastBaseUpdate)!==i&&(null===o?c.firstBaseUpdate=u:o.next=u,c.lastBaseUpdate=l))}if(null!==s){var p=r.baseState;for(i=0,c=u=l=null,o=s;;){var d=o.lane,h=o.eventTime;if((a&d)===d){null!==c&&(c=c.next={eventTime:h,lane:0,tag:o.tag,payload:o.payload,callback:o.callback,next:null});e:{var f=e,m=o;switch(d=t,h=n,m.tag){case 1:if("function"===typeof(f=m.payload)){p=f.call(h,p,d);break e}p=f;break e;case 3:f.flags=-65537&f.flags|128;case 0:if(null===(d="function"===typeof(f=m.payload)?f.call(h,p,d):f)||void 0===d)break e;p=L({},p,d);break e;case 2:Os=!0}}null!==o.callback&&0!==o.lane&&(e.flags|=64,null===(d=r.effects)?r.effects=[o]:d.push(o))}else h={eventTime:h,lane:d,tag:o.tag,payload:o.payload,callback:o.callback,next:null},null===c?(u=c=h,l=p):c=c.next=h,i|=d;if(null===(o=o.next)){if(null===(o=r.shared.pending))break;o=(d=o).next,d.next=null,r.lastBaseUpdate=d,r.shared.pending=null}}if(null===c&&(l=p),r.baseState=l,r.firstBaseUpdate=u,r.lastBaseUpdate=c,null!==(t=r.shared.interleaved)){r=t;do{i|=r.lane,r=r.next}while(r!==t)}else null===s&&(r.shared.lanes=0);Ml|=i,e.lanes=i,e.memoizedState=p}}function Us(e,t,n){if(e=t.effects,t.effects=null,null!==e)for(t=0;t<e.length;t++){var a=e[t],r=a.callback;if(null!==r){if(a.callback=null,a=n,"function"!==typeof r)throw Error(s(191,r));r.call(a)}}}var js={},Gs=Sr(js),Hs=Sr(js),qs=Sr(js);function Ks(e){if(e===js)throw Error(s(174));return e}function Xs(e,t){switch(Tr(qs,t),Tr(Hs,e),Tr(Gs,js),e=t.nodeType){case 9:case 11:t=(t=t.documentElement)?t.namespaceURI:le(null,"");break;default:t=le(t=(e=8===e?t.parentNode:t).namespaceURI||null,e=e.tagName)}Ir(Gs),Tr(Gs,t)}function Ys(){Ir(Gs),Ir(Hs),Ir(qs)}function Qs(e){Ks(qs.current);var t=Ks(Gs.current),n=le(t,e.type);t!==n&&(Tr(Hs,e),Tr(Gs,n))}function Zs(e){Hs.current===e&&(Ir(Gs),Ir(Hs))}var Js=Sr(0);function ei(e){for(var t=e;null!==t;){if(13===t.tag){var n=t.memoizedState;if(null!==n&&(null===(n=n.dehydrated)||"$?"===n.data||"$!"===n.data))return t}else if(19===t.tag&&void 0!==t.memoizedProps.revealOrder){if(0!==(128&t.flags))return t}else if(null!==t.child){t.child.return=t,t=t.child;continue}if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}return null}var ti=[];function ni(){for(var e=0;e<ti.length;e++)ti[e]._workInProgressVersionPrimary=null;ti.length=0}var ai=v.ReactCurrentDispatcher,ri=v.ReactCurrentBatchConfig,si=0,ii=null,oi=null,li=null,ui=!1,ci=!1,pi=0,di=0;function hi(){throw Error(s(321))}function fi(e,t){if(null===t)return!1;for(var n=0;n<t.length&&n<e.length;n++)if(!oa(e[n],t[n]))return!1;return!0}function mi(e,t,n,a,r,i){if(si=i,ii=t,t.memoizedState=null,t.updateQueue=null,t.lanes=0,ai.current=null===e||null===e.memoizedState?Zi:Ji,e=n(a,r),ci){i=0;do{if(ci=!1,pi=0,25<=i)throw Error(s(301));i+=1,li=oi=null,t.updateQueue=null,ai.current=eo,e=n(a,r)}while(ci)}if(ai.current=Qi,t=null!==oi&&null!==oi.next,si=0,li=oi=ii=null,ui=!1,t)throw Error(s(300));return e}function gi(){var e=0!==pi;return pi=0,e}function yi(){var e={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return null===li?ii.memoizedState=li=e:li=li.next=e,li}function bi(){if(null===oi){var e=ii.alternate;e=null!==e?e.memoizedState:null}else e=oi.next;var t=null===li?ii.memoizedState:li.next;if(null!==t)li=t,oi=e;else{if(null===e)throw Error(s(310));e={memoizedState:(oi=e).memoizedState,baseState:oi.baseState,baseQueue:oi.baseQueue,queue:oi.queue,next:null},null===li?ii.memoizedState=li=e:li=li.next=e}return li}function xi(e,t){return"function"===typeof t?t(e):t}function vi(e){var t=bi(),n=t.queue;if(null===n)throw Error(s(311));n.lastRenderedReducer=e;var a=oi,r=a.baseQueue,i=n.pending;if(null!==i){if(null!==r){var o=r.next;r.next=i.next,i.next=o}a.baseQueue=r=i,n.pending=null}if(null!==r){i=r.next,a=a.baseState;var l=o=null,u=null,c=i;do{var p=c.lane;if((si&p)===p)null!==u&&(u=u.next={lane:0,action:c.action,hasEagerState:c.hasEagerState,eagerState:c.eagerState,next:null}),a=c.hasEagerState?c.eagerState:e(a,c.action);else{var d={lane:p,action:c.action,hasEagerState:c.hasEagerState,eagerState:c.eagerState,next:null};null===u?(l=u=d,o=a):u=u.next=d,ii.lanes|=p,Ml|=p}c=c.next}while(null!==c&&c!==i);null===u?o=a:u.next=l,oa(a,t.memoizedState)||(xo=!0),t.memoizedState=a,t.baseState=o,t.baseQueue=u,n.lastRenderedState=a}if(null!==(e=n.interleaved)){r=e;do{i=r.lane,ii.lanes|=i,Ml|=i,r=r.next}while(r!==e)}else null===r&&(n.lanes=0);return[t.memoizedState,n.dispatch]}function wi(e){var t=bi(),n=t.queue;if(null===n)throw Error(s(311));n.lastRenderedReducer=e;var a=n.dispatch,r=n.pending,i=t.memoizedState;if(null!==r){n.pending=null;var o=r=r.next;do{i=e(i,o.action),o=o.next}while(o!==r);oa(i,t.memoizedState)||(xo=!0),t.memoizedState=i,null===t.baseQueue&&(t.baseState=i),n.lastRenderedState=i}return[i,a]}function ki(){}function Ni(e,t){var n=ii,a=bi(),r=t(),i=!oa(a.memoizedState,r);if(i&&(a.memoizedState=r,xo=!0),a=a.queue,Oi(Ti.bind(null,n,a,e),[e]),a.getSnapshot!==t||i||null!==li&&1&li.memoizedState.tag){if(n.flags|=2048,Ri(9,Ii.bind(null,n,a,r,t),void 0,null),null===$l)throw Error(s(349));0!==(30&si)||Si(n,t,r)}return r}function Si(e,t,n){e.flags|=16384,e={getSnapshot:t,value:n},null===(t=ii.updateQueue)?(t={lastEffect:null,stores:null},ii.updateQueue=t,t.stores=[e]):null===(n=t.stores)?t.stores=[e]:n.push(e)}function Ii(e,t,n,a){t.value=n,t.getSnapshot=a,Ci(t)&&Ei(e)}function Ti(e,t,n){return n((function(){Ci(t)&&Ei(e)}))}function Ci(e){var t=e.getSnapshot;e=e.value;try{var n=t();return!oa(e,n)}catch(a){return!0}}function Ei(e){var t=Ds(e,1);null!==t&&nu(t,e,1,-1)}function $i(e){var t=yi();return"function"===typeof e&&(e=e()),t.memoizedState=t.baseState=e,e={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:xi,lastRenderedState:e},t.queue=e,e=e.dispatch=qi.bind(null,ii,e),[t.memoizedState,e]}function Ri(e,t,n,a){return e={tag:e,create:t,destroy:n,deps:a,next:null},null===(t=ii.updateQueue)?(t={lastEffect:null,stores:null},ii.updateQueue=t,t.lastEffect=e.next=e):null===(n=t.lastEffect)?t.lastEffect=e.next=e:(a=n.next,n.next=e,e.next=a,t.lastEffect=e),e}function Ai(){return bi().memoizedState}function _i(e,t,n,a){var r=yi();ii.flags|=e,r.memoizedState=Ri(1|t,n,void 0,void 0===a?null:a)}function Fi(e,t,n,a){var r=bi();a=void 0===a?null:a;var s=void 0;if(null!==oi){var i=oi.memoizedState;if(s=i.destroy,null!==a&&fi(a,i.deps))return void(r.memoizedState=Ri(t,n,s,a))}ii.flags|=e,r.memoizedState=Ri(1|t,n,s,a)}function Di(e,t){return _i(8390656,8,e,t)}function Oi(e,t){return Fi(2048,8,e,t)}function Mi(e,t){return Fi(4,2,e,t)}function Li(e,t){return Fi(4,4,e,t)}function zi(e,t){return"function"===typeof t?(e=e(),t(e),function(){t(null)}):null!==t&&void 0!==t?(e=e(),t.current=e,function(){t.current=null}):void 0}function Pi(e,t,n){return n=null!==n&&void 0!==n?n.concat([e]):null,Fi(4,4,zi.bind(null,t,e),n)}function Bi(){}function Wi(e,t){var n=bi();t=void 0===t?null:t;var a=n.memoizedState;return null!==a&&null!==t&&fi(t,a[1])?a[0]:(n.memoizedState=[e,t],e)}function Vi(e,t){var n=bi();t=void 0===t?null:t;var a=n.memoizedState;return null!==a&&null!==t&&fi(t,a[1])?a[0]:(e=e(),n.memoizedState=[e,t],e)}function Ui(e,t,n){return 0===(21&si)?(e.baseState&&(e.baseState=!1,xo=!0),e.memoizedState=n):(oa(n,t)||(n=mt(),ii.lanes|=n,Ml|=n,e.baseState=!0),t)}function ji(e,t){var n=xt;xt=0!==n&&4>n?n:4,e(!0);var a=ri.transition;ri.transition={};try{e(!1),t()}finally{xt=n,ri.transition=a}}function Gi(){return bi().memoizedState}function Hi(e,t,n){var a=tu(e);if(n={lane:a,action:n,hasEagerState:!1,eagerState:null,next:null},Ki(e))Xi(t,n);else if(null!==(n=Fs(e,t,n,a))){nu(n,e,a,eu()),Yi(n,t,a)}}function qi(e,t,n){var a=tu(e),r={lane:a,action:n,hasEagerState:!1,eagerState:null,next:null};if(Ki(e))Xi(t,r);else{var s=e.alternate;if(0===e.lanes&&(null===s||0===s.lanes)&&null!==(s=t.lastRenderedReducer))try{var i=t.lastRenderedState,o=s(i,n);if(r.hasEagerState=!0,r.eagerState=o,oa(o,i)){var l=t.interleaved;return null===l?(r.next=r,_s(t)):(r.next=l.next,l.next=r),void(t.interleaved=r)}}catch(u){}null!==(n=Fs(e,t,r,a))&&(nu(n,e,a,r=eu()),Yi(n,t,a))}}function Ki(e){var t=e.alternate;return e===ii||null!==t&&t===ii}function Xi(e,t){ci=ui=!0;var n=e.pending;null===n?t.next=t:(t.next=n.next,n.next=t),e.pending=t}function Yi(e,t,n){if(0!==(4194240&n)){var a=t.lanes;n|=a&=e.pendingLanes,t.lanes=n,bt(e,n)}}var Qi={readContext:Rs,useCallback:hi,useContext:hi,useEffect:hi,useImperativeHandle:hi,useInsertionEffect:hi,useLayoutEffect:hi,useMemo:hi,useReducer:hi,useRef:hi,useState:hi,useDebugValue:hi,useDeferredValue:hi,useTransition:hi,useMutableSource:hi,useSyncExternalStore:hi,useId:hi,unstable_isNewReconciler:!1},Zi={readContext:Rs,useCallback:function(e,t){return yi().memoizedState=[e,void 0===t?null:t],e},useContext:Rs,useEffect:Di,useImperativeHandle:function(e,t,n){return n=null!==n&&void 0!==n?n.concat([e]):null,_i(4194308,4,zi.bind(null,t,e),n)},useLayoutEffect:function(e,t){return _i(4194308,4,e,t)},useInsertionEffect:function(e,t){return _i(4,2,e,t)},useMemo:function(e,t){var n=yi();return t=void 0===t?null:t,e=e(),n.memoizedState=[e,t],e},useReducer:function(e,t,n){var a=yi();return t=void 0!==n?n(t):t,a.memoizedState=a.baseState=t,e={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:e,lastRenderedState:t},a.queue=e,e=e.dispatch=Hi.bind(null,ii,e),[a.memoizedState,e]},useRef:function(e){return e={current:e},yi().memoizedState=e},useState:$i,useDebugValue:Bi,useDeferredValue:function(e){return yi().memoizedState=e},useTransition:function(){var e=$i(!1),t=e[0];return e=ji.bind(null,e[1]),yi().memoizedState=e,[t,e]},useMutableSource:function(){},useSyncExternalStore:function(e,t,n){var a=ii,r=yi();if(rs){if(void 0===n)throw Error(s(407));n=n()}else{if(n=t(),null===$l)throw Error(s(349));0!==(30&si)||Si(a,t,n)}r.memoizedState=n;var i={value:n,getSnapshot:t};return r.queue=i,Di(Ti.bind(null,a,i,e),[e]),a.flags|=2048,Ri(9,Ii.bind(null,a,i,n,t),void 0,null),n},useId:function(){var e=yi(),t=$l.identifierPrefix;if(rs){var n=Qr;t=":"+t+"R"+(n=(Yr&~(1<<32-it(Yr)-1)).toString(32)+n),0<(n=pi++)&&(t+="H"+n.toString(32)),t+=":"}else t=":"+t+"r"+(n=di++).toString(32)+":";return e.memoizedState=t},unstable_isNewReconciler:!1},Ji={readContext:Rs,useCallback:Wi,useContext:Rs,useEffect:Oi,useImperativeHandle:Pi,useInsertionEffect:Mi,useLayoutEffect:Li,useMemo:Vi,useReducer:vi,useRef:Ai,useState:function(){return vi(xi)},useDebugValue:Bi,useDeferredValue:function(e){return Ui(bi(),oi.memoizedState,e)},useTransition:function(){return[vi(xi)[0],bi().memoizedState]},useMutableSource:ki,useSyncExternalStore:Ni,useId:Gi,unstable_isNewReconciler:!1},eo={readContext:Rs,useCallback:Wi,useContext:Rs,useEffect:Oi,useImperativeHandle:Pi,useInsertionEffect:Mi,useLayoutEffect:Li,useMemo:Vi,useReducer:wi,useRef:Ai,useState:function(){return wi(xi)},useDebugValue:Bi,useDeferredValue:function(e){var t=bi();return null===oi?t.memoizedState=e:Ui(t,oi.memoizedState,e)},useTransition:function(){return[wi(xi)[0],bi().memoizedState]},useMutableSource:ki,useSyncExternalStore:Ni,useId:Gi,unstable_isNewReconciler:!1};function to(e,t){if(e&&e.defaultProps){for(var n in t=L({},t),e=e.defaultProps)void 0===t[n]&&(t[n]=e[n]);return t}return t}function no(e,t,n,a){n=null===(n=n(a,t=e.memoizedState))||void 0===n?t:L({},t,n),e.memoizedState=n,0===e.lanes&&(e.updateQueue.baseState=n)}var ao={isMounted:function(e){return!!(e=e._reactInternals)&&Ve(e)===e},enqueueSetState:function(e,t,n){e=e._reactInternals;var a=eu(),r=tu(e),s=zs(a,r);s.payload=t,void 0!==n&&null!==n&&(s.callback=n),null!==(t=Ps(e,s,r))&&(nu(t,e,r,a),Bs(t,e,r))},enqueueReplaceState:function(e,t,n){e=e._reactInternals;var a=eu(),r=tu(e),s=zs(a,r);s.tag=1,s.payload=t,void 0!==n&&null!==n&&(s.callback=n),null!==(t=Ps(e,s,r))&&(nu(t,e,r,a),Bs(t,e,r))},enqueueForceUpdate:function(e,t){e=e._reactInternals;var n=eu(),a=tu(e),r=zs(n,a);r.tag=2,void 0!==t&&null!==t&&(r.callback=t),null!==(t=Ps(e,r,a))&&(nu(t,e,a,n),Bs(t,e,a))}};function ro(e,t,n,a,r,s,i){return"function"===typeof(e=e.stateNode).shouldComponentUpdate?e.shouldComponentUpdate(a,s,i):!t.prototype||!t.prototype.isPureReactComponent||(!la(n,a)||!la(r,s))}function so(e,t,n){var a=!1,r=Cr,s=t.contextType;return"object"===typeof s&&null!==s?s=Rs(s):(r=_r(t)?Rr:Er.current,s=(a=null!==(a=t.contextTypes)&&void 0!==a)?Ar(e,r):Cr),t=new t(n,s),e.memoizedState=null!==t.state&&void 0!==t.state?t.state:null,t.updater=ao,e.stateNode=t,t._reactInternals=e,a&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=r,e.__reactInternalMemoizedMaskedChildContext=s),t}function io(e,t,n,a){e=t.state,"function"===typeof t.componentWillReceiveProps&&t.componentWillReceiveProps(n,a),"function"===typeof t.UNSAFE_componentWillReceiveProps&&t.UNSAFE_componentWillReceiveProps(n,a),t.state!==e&&ao.enqueueReplaceState(t,t.state,null)}function oo(e,t,n,a){var r=e.stateNode;r.props=n,r.state=e.memoizedState,r.refs={},Ms(e);var s=t.contextType;"object"===typeof s&&null!==s?r.context=Rs(s):(s=_r(t)?Rr:Er.current,r.context=Ar(e,s)),r.state=e.memoizedState,"function"===typeof(s=t.getDerivedStateFromProps)&&(no(e,t,s,n),r.state=e.memoizedState),"function"===typeof t.getDerivedStateFromProps||"function"===typeof r.getSnapshotBeforeUpdate||"function"!==typeof r.UNSAFE_componentWillMount&&"function"!==typeof r.componentWillMount||(t=r.state,"function"===typeof r.componentWillMount&&r.componentWillMount(),"function"===typeof r.UNSAFE_componentWillMount&&r.UNSAFE_componentWillMount(),t!==r.state&&ao.enqueueReplaceState(r,r.state,null),Vs(e,n,r,a),r.state=e.memoizedState),"function"===typeof r.componentDidMount&&(e.flags|=4194308)}function lo(e,t){try{var n="",a=t;do{n+=W(a),a=a.return}while(a);var r=n}catch(s){r="\nError generating stack: "+s.message+"\n"+s.stack}return{value:e,source:t,stack:r,digest:null}}function uo(e,t,n){return{value:e,source:null,stack:null!=n?n:null,digest:null!=t?t:null}}function co(e,t){try{console.error(t.value)}catch(n){setTimeout((function(){throw n}))}}var po="function"===typeof WeakMap?WeakMap:Map;function ho(e,t,n){(n=zs(-1,n)).tag=3,n.payload={element:null};var a=t.value;return n.callback=function(){jl||(jl=!0,Gl=a),co(0,t)},n}function fo(e,t,n){(n=zs(-1,n)).tag=3;var a=e.type.getDerivedStateFromError;if("function"===typeof a){var r=t.value;n.payload=function(){return a(r)},n.callback=function(){co(0,t)}}var s=e.stateNode;return null!==s&&"function"===typeof s.componentDidCatch&&(n.callback=function(){co(0,t),"function"!==typeof a&&(null===Hl?Hl=new Set([this]):Hl.add(this));var e=t.stack;this.componentDidCatch(t.value,{componentStack:null!==e?e:""})}),n}function mo(e,t,n){var a=e.pingCache;if(null===a){a=e.pingCache=new po;var r=new Set;a.set(t,r)}else void 0===(r=a.get(t))&&(r=new Set,a.set(t,r));r.has(n)||(r.add(n),e=Iu.bind(null,e,t,n),t.then(e,e))}function go(e){do{var t;if((t=13===e.tag)&&(t=null===(t=e.memoizedState)||null!==t.dehydrated),t)return e;e=e.return}while(null!==e);return null}function yo(e,t,n,a,r){return 0===(1&e.mode)?(e===t?e.flags|=65536:(e.flags|=128,n.flags|=131072,n.flags&=-52805,1===n.tag&&(null===n.alternate?n.tag=17:((t=zs(-1,1)).tag=2,Ps(n,t,1))),n.lanes|=1),e):(e.flags|=65536,e.lanes=r,e)}var bo=v.ReactCurrentOwner,xo=!1;function vo(e,t,n,a){t.child=null===e?ws(t,null,n,a):vs(t,e.child,n,a)}function wo(e,t,n,a,r){n=n.render;var s=t.ref;return $s(t,r),a=mi(e,t,n,a,s,r),n=gi(),null===e||xo?(rs&&n&&es(t),t.flags|=1,vo(e,t,a,r),t.child):(t.updateQueue=e.updateQueue,t.flags&=-2053,e.lanes&=~r,jo(e,t,r))}function ko(e,t,n,a,r){if(null===e){var s=n.type;return"function"!==typeof s||_u(s)||void 0!==s.defaultProps||null!==n.compare||void 0!==n.defaultProps?((e=Du(n.type,null,a,t,t.mode,r)).ref=t.ref,e.return=t,t.child=e):(t.tag=15,t.type=s,No(e,t,s,a,r))}if(s=e.child,0===(e.lanes&r)){var i=s.memoizedProps;if((n=null!==(n=n.compare)?n:la)(i,a)&&e.ref===t.ref)return jo(e,t,r)}return t.flags|=1,(e=Fu(s,a)).ref=t.ref,e.return=t,t.child=e}function No(e,t,n,a,r){if(null!==e){var s=e.memoizedProps;if(la(s,a)&&e.ref===t.ref){if(xo=!1,t.pendingProps=a=s,0===(e.lanes&r))return t.lanes=e.lanes,jo(e,t,r);0!==(131072&e.flags)&&(xo=!0)}}return To(e,t,n,a,r)}function So(e,t,n){var a=t.pendingProps,r=a.children,s=null!==e?e.memoizedState:null;if("hidden"===a.mode)if(0===(1&t.mode))t.memoizedState={baseLanes:0,cachePool:null,transitions:null},Tr(Fl,_l),_l|=n;else{if(0===(1073741824&n))return e=null!==s?s.baseLanes|n:n,t.lanes=t.childLanes=1073741824,t.memoizedState={baseLanes:e,cachePool:null,transitions:null},t.updateQueue=null,Tr(Fl,_l),_l|=e,null;t.memoizedState={baseLanes:0,cachePool:null,transitions:null},a=null!==s?s.baseLanes:n,Tr(Fl,_l),_l|=a}else null!==s?(a=s.baseLanes|n,t.memoizedState=null):a=n,Tr(Fl,_l),_l|=a;return vo(e,t,r,n),t.child}function Io(e,t){var n=t.ref;(null===e&&null!==n||null!==e&&e.ref!==n)&&(t.flags|=512,t.flags|=2097152)}function To(e,t,n,a,r){var s=_r(n)?Rr:Er.current;return s=Ar(t,s),$s(t,r),n=mi(e,t,n,a,s,r),a=gi(),null===e||xo?(rs&&a&&es(t),t.flags|=1,vo(e,t,n,r),t.child):(t.updateQueue=e.updateQueue,t.flags&=-2053,e.lanes&=~r,jo(e,t,r))}function Co(e,t,n,a,r){if(_r(n)){var s=!0;Mr(t)}else s=!1;if($s(t,r),null===t.stateNode)Uo(e,t),so(t,n,a),oo(t,n,a,r),a=!0;else if(null===e){var i=t.stateNode,o=t.memoizedProps;i.props=o;var l=i.context,u=n.contextType;"object"===typeof u&&null!==u?u=Rs(u):u=Ar(t,u=_r(n)?Rr:Er.current);var c=n.getDerivedStateFromProps,p="function"===typeof c||"function"===typeof i.getSnapshotBeforeUpdate;p||"function"!==typeof i.UNSAFE_componentWillReceiveProps&&"function"!==typeof i.componentWillReceiveProps||(o!==a||l!==u)&&io(t,i,a,u),Os=!1;var d=t.memoizedState;i.state=d,Vs(t,a,i,r),l=t.memoizedState,o!==a||d!==l||$r.current||Os?("function"===typeof c&&(no(t,n,c,a),l=t.memoizedState),(o=Os||ro(t,n,o,a,d,l,u))?(p||"function"!==typeof i.UNSAFE_componentWillMount&&"function"!==typeof i.componentWillMount||("function"===typeof i.componentWillMount&&i.componentWillMount(),"function"===typeof i.UNSAFE_componentWillMount&&i.UNSAFE_componentWillMount()),"function"===typeof i.componentDidMount&&(t.flags|=4194308)):("function"===typeof i.componentDidMount&&(t.flags|=4194308),t.memoizedProps=a,t.memoizedState=l),i.props=a,i.state=l,i.context=u,a=o):("function"===typeof i.componentDidMount&&(t.flags|=4194308),a=!1)}else{i=t.stateNode,Ls(e,t),o=t.memoizedProps,u=t.type===t.elementType?o:to(t.type,o),i.props=u,p=t.pendingProps,d=i.context,"object"===typeof(l=n.contextType)&&null!==l?l=Rs(l):l=Ar(t,l=_r(n)?Rr:Er.current);var h=n.getDerivedStateFromProps;(c="function"===typeof h||"function"===typeof i.getSnapshotBeforeUpdate)||"function"!==typeof i.UNSAFE_componentWillReceiveProps&&"function"!==typeof i.componentWillReceiveProps||(o!==p||d!==l)&&io(t,i,a,l),Os=!1,d=t.memoizedState,i.state=d,Vs(t,a,i,r);var f=t.memoizedState;o!==p||d!==f||$r.current||Os?("function"===typeof h&&(no(t,n,h,a),f=t.memoizedState),(u=Os||ro(t,n,u,a,d,f,l)||!1)?(c||"function"!==typeof i.UNSAFE_componentWillUpdate&&"function"!==typeof i.componentWillUpdate||("function"===typeof i.componentWillUpdate&&i.componentWillUpdate(a,f,l),"function"===typeof i.UNSAFE_componentWillUpdate&&i.UNSAFE_componentWillUpdate(a,f,l)),"function"===typeof i.componentDidUpdate&&(t.flags|=4),"function"===typeof i.getSnapshotBeforeUpdate&&(t.flags|=1024)):("function"!==typeof i.componentDidUpdate||o===e.memoizedProps&&d===e.memoizedState||(t.flags|=4),"function"!==typeof i.getSnapshotBeforeUpdate||o===e.memoizedProps&&d===e.memoizedState||(t.flags|=1024),t.memoizedProps=a,t.memoizedState=f),i.props=a,i.state=f,i.context=l,a=u):("function"!==typeof i.componentDidUpdate||o===e.memoizedProps&&d===e.memoizedState||(t.flags|=4),"function"!==typeof i.getSnapshotBeforeUpdate||o===e.memoizedProps&&d===e.memoizedState||(t.flags|=1024),a=!1)}return Eo(e,t,n,a,s,r)}function Eo(e,t,n,a,r,s){Io(e,t);var i=0!==(128&t.flags);if(!a&&!i)return r&&Lr(t,n,!1),jo(e,t,s);a=t.stateNode,bo.current=t;var o=i&&"function"!==typeof n.getDerivedStateFromError?null:a.render();return t.flags|=1,null!==e&&i?(t.child=vs(t,e.child,null,s),t.child=vs(t,null,o,s)):vo(e,t,o,s),t.memoizedState=a.state,r&&Lr(t,n,!0),t.child}function $o(e){var t=e.stateNode;t.pendingContext?Dr(0,t.pendingContext,t.pendingContext!==t.context):t.context&&Dr(0,t.context,!1),Xs(e,t.containerInfo)}function Ro(e,t,n,a,r){return hs(),fs(r),t.flags|=256,vo(e,t,n,a),t.child}var Ao,_o,Fo,Do,Oo={dehydrated:null,treeContext:null,retryLane:0};function Mo(e){return{baseLanes:e,cachePool:null,transitions:null}}function Lo(e,t,n){var a,r=t.pendingProps,i=Js.current,o=!1,l=0!==(128&t.flags);if((a=l)||(a=(null===e||null!==e.memoizedState)&&0!==(2&i)),a?(o=!0,t.flags&=-129):null!==e&&null===e.memoizedState||(i|=1),Tr(Js,1&i),null===e)return us(t),null!==(e=t.memoizedState)&&null!==(e=e.dehydrated)?(0===(1&t.mode)?t.lanes=1:"$!"===e.data?t.lanes=8:t.lanes=1073741824,null):(l=r.children,e=r.fallback,o?(r=t.mode,o=t.child,l={mode:"hidden",children:l},0===(1&r)&&null!==o?(o.childLanes=0,o.pendingProps=l):o=Mu(l,r,0,null),e=Ou(e,r,n,null),o.return=t,e.return=t,o.sibling=e,t.child=o,t.child.memoizedState=Mo(n),t.memoizedState=Oo,e):zo(t,l));if(null!==(i=e.memoizedState)&&null!==(a=i.dehydrated))return function(e,t,n,a,r,i,o){if(n)return 256&t.flags?(t.flags&=-257,Po(e,t,o,a=uo(Error(s(422))))):null!==t.memoizedState?(t.child=e.child,t.flags|=128,null):(i=a.fallback,r=t.mode,a=Mu({mode:"visible",children:a.children},r,0,null),(i=Ou(i,r,o,null)).flags|=2,a.return=t,i.return=t,a.sibling=i,t.child=a,0!==(1&t.mode)&&vs(t,e.child,null,o),t.child.memoizedState=Mo(o),t.memoizedState=Oo,i);if(0===(1&t.mode))return Po(e,t,o,null);if("$!"===r.data){if(a=r.nextSibling&&r.nextSibling.dataset)var l=a.dgst;return a=l,Po(e,t,o,a=uo(i=Error(s(419)),a,void 0))}if(l=0!==(o&e.childLanes),xo||l){if(null!==(a=$l)){switch(o&-o){case 4:r=2;break;case 16:r=8;break;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:r=32;break;case 536870912:r=268435456;break;default:r=0}0!==(r=0!==(r&(a.suspendedLanes|o))?0:r)&&r!==i.retryLane&&(i.retryLane=r,Ds(e,r),nu(a,e,r,-1))}return mu(),Po(e,t,o,a=uo(Error(s(421))))}return"$?"===r.data?(t.flags|=128,t.child=e.child,t=Cu.bind(null,e),r._reactRetry=t,null):(e=i.treeContext,as=ur(r.nextSibling),ns=t,rs=!0,ss=null,null!==e&&(qr[Kr++]=Yr,qr[Kr++]=Qr,qr[Kr++]=Xr,Yr=e.id,Qr=e.overflow,Xr=t),t=zo(t,a.children),t.flags|=4096,t)}(e,t,l,r,a,i,n);if(o){o=r.fallback,l=t.mode,a=(i=e.child).sibling;var u={mode:"hidden",children:r.children};return 0===(1&l)&&t.child!==i?((r=t.child).childLanes=0,r.pendingProps=u,t.deletions=null):(r=Fu(i,u)).subtreeFlags=14680064&i.subtreeFlags,null!==a?o=Fu(a,o):(o=Ou(o,l,n,null)).flags|=2,o.return=t,r.return=t,r.sibling=o,t.child=r,r=o,o=t.child,l=null===(l=e.child.memoizedState)?Mo(n):{baseLanes:l.baseLanes|n,cachePool:null,transitions:l.transitions},o.memoizedState=l,o.childLanes=e.childLanes&~n,t.memoizedState=Oo,r}return e=(o=e.child).sibling,r=Fu(o,{mode:"visible",children:r.children}),0===(1&t.mode)&&(r.lanes=n),r.return=t,r.sibling=null,null!==e&&(null===(n=t.deletions)?(t.deletions=[e],t.flags|=16):n.push(e)),t.child=r,t.memoizedState=null,r}function zo(e,t){return(t=Mu({mode:"visible",children:t},e.mode,0,null)).return=e,e.child=t}function Po(e,t,n,a){return null!==a&&fs(a),vs(t,e.child,null,n),(e=zo(t,t.pendingProps.children)).flags|=2,t.memoizedState=null,e}function Bo(e,t,n){e.lanes|=t;var a=e.alternate;null!==a&&(a.lanes|=t),Es(e.return,t,n)}function Wo(e,t,n,a,r){var s=e.memoizedState;null===s?e.memoizedState={isBackwards:t,rendering:null,renderingStartTime:0,last:a,tail:n,tailMode:r}:(s.isBackwards=t,s.rendering=null,s.renderingStartTime=0,s.last=a,s.tail=n,s.tailMode=r)}function Vo(e,t,n){var a=t.pendingProps,r=a.revealOrder,s=a.tail;if(vo(e,t,a.children,n),0!==(2&(a=Js.current)))a=1&a|2,t.flags|=128;else{if(null!==e&&0!==(128&e.flags))e:for(e=t.child;null!==e;){if(13===e.tag)null!==e.memoizedState&&Bo(e,n,t);else if(19===e.tag)Bo(e,n,t);else if(null!==e.child){e.child.return=e,e=e.child;continue}if(e===t)break e;for(;null===e.sibling;){if(null===e.return||e.return===t)break e;e=e.return}e.sibling.return=e.return,e=e.sibling}a&=1}if(Tr(Js,a),0===(1&t.mode))t.memoizedState=null;else switch(r){case"forwards":for(n=t.child,r=null;null!==n;)null!==(e=n.alternate)&&null===ei(e)&&(r=n),n=n.sibling;null===(n=r)?(r=t.child,t.child=null):(r=n.sibling,n.sibling=null),Wo(t,!1,r,n,s);break;case"backwards":for(n=null,r=t.child,t.child=null;null!==r;){if(null!==(e=r.alternate)&&null===ei(e)){t.child=r;break}e=r.sibling,r.sibling=n,n=r,r=e}Wo(t,!0,n,null,s);break;case"together":Wo(t,!1,null,null,void 0);break;default:t.memoizedState=null}return t.child}function Uo(e,t){0===(1&t.mode)&&null!==e&&(e.alternate=null,t.alternate=null,t.flags|=2)}function jo(e,t,n){if(null!==e&&(t.dependencies=e.dependencies),Ml|=t.lanes,0===(n&t.childLanes))return null;if(null!==e&&t.child!==e.child)throw Error(s(153));if(null!==t.child){for(n=Fu(e=t.child,e.pendingProps),t.child=n,n.return=t;null!==e.sibling;)e=e.sibling,(n=n.sibling=Fu(e,e.pendingProps)).return=t;n.sibling=null}return t.child}function Go(e,t){if(!rs)switch(e.tailMode){case"hidden":t=e.tail;for(var n=null;null!==t;)null!==t.alternate&&(n=t),t=t.sibling;null===n?e.tail=null:n.sibling=null;break;case"collapsed":n=e.tail;for(var a=null;null!==n;)null!==n.alternate&&(a=n),n=n.sibling;null===a?t||null===e.tail?e.tail=null:e.tail.sibling=null:a.sibling=null}}function Ho(e){var t=null!==e.alternate&&e.alternate.child===e.child,n=0,a=0;if(t)for(var r=e.child;null!==r;)n|=r.lanes|r.childLanes,a|=14680064&r.subtreeFlags,a|=14680064&r.flags,r.return=e,r=r.sibling;else for(r=e.child;null!==r;)n|=r.lanes|r.childLanes,a|=r.subtreeFlags,a|=r.flags,r.return=e,r=r.sibling;return e.subtreeFlags|=a,e.childLanes=n,t}function qo(e,t,n){var a=t.pendingProps;switch(ts(t),t.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return Ho(t),null;case 1:case 17:return _r(t.type)&&Fr(),Ho(t),null;case 3:return a=t.stateNode,Ys(),Ir($r),Ir(Er),ni(),a.pendingContext&&(a.context=a.pendingContext,a.pendingContext=null),null!==e&&null!==e.child||(ps(t)?t.flags|=4:null===e||e.memoizedState.isDehydrated&&0===(256&t.flags)||(t.flags|=1024,null!==ss&&(iu(ss),ss=null))),_o(e,t),Ho(t),null;case 5:Zs(t);var r=Ks(qs.current);if(n=t.type,null!==e&&null!=t.stateNode)Fo(e,t,n,a,r),e.ref!==t.ref&&(t.flags|=512,t.flags|=2097152);else{if(!a){if(null===t.stateNode)throw Error(s(166));return Ho(t),null}if(e=Ks(Gs.current),ps(t)){a=t.stateNode,n=t.type;var i=t.memoizedProps;switch(a[dr]=t,a[hr]=i,e=0!==(1&t.mode),n){case"dialog":Pa("cancel",a),Pa("close",a);break;case"iframe":case"object":case"embed":Pa("load",a);break;case"video":case"audio":for(r=0;r<Oa.length;r++)Pa(Oa[r],a);break;case"source":Pa("error",a);break;case"img":case"image":case"link":Pa("error",a),Pa("load",a);break;case"details":Pa("toggle",a);break;case"input":Y(a,i),Pa("invalid",a);break;case"select":a._wrapperState={wasMultiple:!!i.multiple},Pa("invalid",a);break;case"textarea":re(a,i),Pa("invalid",a)}for(var l in be(n,i),r=null,i)if(i.hasOwnProperty(l)){var u=i[l];"children"===l?"string"===typeof u?a.textContent!==u&&(!0!==i.suppressHydrationWarning&&Za(a.textContent,u,e),r=["children",u]):"number"===typeof u&&a.textContent!==""+u&&(!0!==i.suppressHydrationWarning&&Za(a.textContent,u,e),r=["children",""+u]):o.hasOwnProperty(l)&&null!=u&&"onScroll"===l&&Pa("scroll",a)}switch(n){case"input":H(a),J(a,i,!0);break;case"textarea":H(a),ie(a);break;case"select":case"option":break;default:"function"===typeof i.onClick&&(a.onclick=Ja)}a=r,t.updateQueue=a,null!==a&&(t.flags|=4)}else{l=9===r.nodeType?r:r.ownerDocument,"http://www.w3.org/1999/xhtml"===e&&(e=oe(n)),"http://www.w3.org/1999/xhtml"===e?"script"===n?((e=l.createElement("div")).innerHTML="<script><\/script>",e=e.removeChild(e.firstChild)):"string"===typeof a.is?e=l.createElement(n,{is:a.is}):(e=l.createElement(n),"select"===n&&(l=e,a.multiple?l.multiple=!0:a.size&&(l.size=a.size))):e=l.createElementNS(e,n),e[dr]=t,e[hr]=a,Ao(e,t,!1,!1),t.stateNode=e;e:{switch(l=xe(n,a),n){case"dialog":Pa("cancel",e),Pa("close",e),r=a;break;case"iframe":case"object":case"embed":Pa("load",e),r=a;break;case"video":case"audio":for(r=0;r<Oa.length;r++)Pa(Oa[r],e);r=a;break;case"source":Pa("error",e),r=a;break;case"img":case"image":case"link":Pa("error",e),Pa("load",e),r=a;break;case"details":Pa("toggle",e),r=a;break;case"input":Y(e,a),r=X(e,a),Pa("invalid",e);break;case"option":default:r=a;break;case"select":e._wrapperState={wasMultiple:!!a.multiple},r=L({},a,{value:void 0}),Pa("invalid",e);break;case"textarea":re(e,a),r=ae(e,a),Pa("invalid",e)}for(i in be(n,r),u=r)if(u.hasOwnProperty(i)){var c=u[i];"style"===i?ge(e,c):"dangerouslySetInnerHTML"===i?null!=(c=c?c.__html:void 0)&&pe(e,c):"children"===i?"string"===typeof c?("textarea"!==n||""!==c)&&de(e,c):"number"===typeof c&&de(e,""+c):"suppressContentEditableWarning"!==i&&"suppressHydrationWarning"!==i&&"autoFocus"!==i&&(o.hasOwnProperty(i)?null!=c&&"onScroll"===i&&Pa("scroll",e):null!=c&&x(e,i,c,l))}switch(n){case"input":H(e),J(e,a,!1);break;case"textarea":H(e),ie(e);break;case"option":null!=a.value&&e.setAttribute("value",""+j(a.value));break;case"select":e.multiple=!!a.multiple,null!=(i=a.value)?ne(e,!!a.multiple,i,!1):null!=a.defaultValue&&ne(e,!!a.multiple,a.defaultValue,!0);break;default:"function"===typeof r.onClick&&(e.onclick=Ja)}switch(n){case"button":case"input":case"select":case"textarea":a=!!a.autoFocus;break e;case"img":a=!0;break e;default:a=!1}}a&&(t.flags|=4)}null!==t.ref&&(t.flags|=512,t.flags|=2097152)}return Ho(t),null;case 6:if(e&&null!=t.stateNode)Do(e,t,e.memoizedProps,a);else{if("string"!==typeof a&&null===t.stateNode)throw Error(s(166));if(n=Ks(qs.current),Ks(Gs.current),ps(t)){if(a=t.stateNode,n=t.memoizedProps,a[dr]=t,(i=a.nodeValue!==n)&&null!==(e=ns))switch(e.tag){case 3:Za(a.nodeValue,n,0!==(1&e.mode));break;case 5:!0!==e.memoizedProps.suppressHydrationWarning&&Za(a.nodeValue,n,0!==(1&e.mode))}i&&(t.flags|=4)}else(a=(9===n.nodeType?n:n.ownerDocument).createTextNode(a))[dr]=t,t.stateNode=a}return Ho(t),null;case 13:if(Ir(Js),a=t.memoizedState,null===e||null!==e.memoizedState&&null!==e.memoizedState.dehydrated){if(rs&&null!==as&&0!==(1&t.mode)&&0===(128&t.flags))ds(),hs(),t.flags|=98560,i=!1;else if(i=ps(t),null!==a&&null!==a.dehydrated){if(null===e){if(!i)throw Error(s(318));if(!(i=null!==(i=t.memoizedState)?i.dehydrated:null))throw Error(s(317));i[dr]=t}else hs(),0===(128&t.flags)&&(t.memoizedState=null),t.flags|=4;Ho(t),i=!1}else null!==ss&&(iu(ss),ss=null),i=!0;if(!i)return 65536&t.flags?t:null}return 0!==(128&t.flags)?(t.lanes=n,t):((a=null!==a)!==(null!==e&&null!==e.memoizedState)&&a&&(t.child.flags|=8192,0!==(1&t.mode)&&(null===e||0!==(1&Js.current)?0===Dl&&(Dl=3):mu())),null!==t.updateQueue&&(t.flags|=4),Ho(t),null);case 4:return Ys(),_o(e,t),null===e&&Va(t.stateNode.containerInfo),Ho(t),null;case 10:return Cs(t.type._context),Ho(t),null;case 19:if(Ir(Js),null===(i=t.memoizedState))return Ho(t),null;if(a=0!==(128&t.flags),null===(l=i.rendering))if(a)Go(i,!1);else{if(0!==Dl||null!==e&&0!==(128&e.flags))for(e=t.child;null!==e;){if(null!==(l=ei(e))){for(t.flags|=128,Go(i,!1),null!==(a=l.updateQueue)&&(t.updateQueue=a,t.flags|=4),t.subtreeFlags=0,a=n,n=t.child;null!==n;)e=a,(i=n).flags&=14680066,null===(l=i.alternate)?(i.childLanes=0,i.lanes=e,i.child=null,i.subtreeFlags=0,i.memoizedProps=null,i.memoizedState=null,i.updateQueue=null,i.dependencies=null,i.stateNode=null):(i.childLanes=l.childLanes,i.lanes=l.lanes,i.child=l.child,i.subtreeFlags=0,i.deletions=null,i.memoizedProps=l.memoizedProps,i.memoizedState=l.memoizedState,i.updateQueue=l.updateQueue,i.type=l.type,e=l.dependencies,i.dependencies=null===e?null:{lanes:e.lanes,firstContext:e.firstContext}),n=n.sibling;return Tr(Js,1&Js.current|2),t.child}e=e.sibling}null!==i.tail&&Qe()>Vl&&(t.flags|=128,a=!0,Go(i,!1),t.lanes=4194304)}else{if(!a)if(null!==(e=ei(l))){if(t.flags|=128,a=!0,null!==(n=e.updateQueue)&&(t.updateQueue=n,t.flags|=4),Go(i,!0),null===i.tail&&"hidden"===i.tailMode&&!l.alternate&&!rs)return Ho(t),null}else 2*Qe()-i.renderingStartTime>Vl&&1073741824!==n&&(t.flags|=128,a=!0,Go(i,!1),t.lanes=4194304);i.isBackwards?(l.sibling=t.child,t.child=l):(null!==(n=i.last)?n.sibling=l:t.child=l,i.last=l)}return null!==i.tail?(t=i.tail,i.rendering=t,i.tail=t.sibling,i.renderingStartTime=Qe(),t.sibling=null,n=Js.current,Tr(Js,a?1&n|2:1&n),t):(Ho(t),null);case 22:case 23:return pu(),a=null!==t.memoizedState,null!==e&&null!==e.memoizedState!==a&&(t.flags|=8192),a&&0!==(1&t.mode)?0!==(1073741824&_l)&&(Ho(t),6&t.subtreeFlags&&(t.flags|=8192)):Ho(t),null;case 24:case 25:return null}throw Error(s(156,t.tag))}function Ko(e,t){switch(ts(t),t.tag){case 1:return _r(t.type)&&Fr(),65536&(e=t.flags)?(t.flags=-65537&e|128,t):null;case 3:return Ys(),Ir($r),Ir(Er),ni(),0!==(65536&(e=t.flags))&&0===(128&e)?(t.flags=-65537&e|128,t):null;case 5:return Zs(t),null;case 13:if(Ir(Js),null!==(e=t.memoizedState)&&null!==e.dehydrated){if(null===t.alternate)throw Error(s(340));hs()}return 65536&(e=t.flags)?(t.flags=-65537&e|128,t):null;case 19:return Ir(Js),null;case 4:return Ys(),null;case 10:return Cs(t.type._context),null;case 22:case 23:return pu(),null;default:return null}}Ao=function(e,t){for(var n=t.child;null!==n;){if(5===n.tag||6===n.tag)e.appendChild(n.stateNode);else if(4!==n.tag&&null!==n.child){n.child.return=n,n=n.child;continue}if(n===t)break;for(;null===n.sibling;){if(null===n.return||n.return===t)return;n=n.return}n.sibling.return=n.return,n=n.sibling}},_o=function(){},Fo=function(e,t,n,a){var r=e.memoizedProps;if(r!==a){e=t.stateNode,Ks(Gs.current);var s,i=null;switch(n){case"input":r=X(e,r),a=X(e,a),i=[];break;case"select":r=L({},r,{value:void 0}),a=L({},a,{value:void 0}),i=[];break;case"textarea":r=ae(e,r),a=ae(e,a),i=[];break;default:"function"!==typeof r.onClick&&"function"===typeof a.onClick&&(e.onclick=Ja)}for(c in be(n,a),n=null,r)if(!a.hasOwnProperty(c)&&r.hasOwnProperty(c)&&null!=r[c])if("style"===c){var l=r[c];for(s in l)l.hasOwnProperty(s)&&(n||(n={}),n[s]="")}else"dangerouslySetInnerHTML"!==c&&"children"!==c&&"suppressContentEditableWarning"!==c&&"suppressHydrationWarning"!==c&&"autoFocus"!==c&&(o.hasOwnProperty(c)?i||(i=[]):(i=i||[]).push(c,null));for(c in a){var u=a[c];if(l=null!=r?r[c]:void 0,a.hasOwnProperty(c)&&u!==l&&(null!=u||null!=l))if("style"===c)if(l){for(s in l)!l.hasOwnProperty(s)||u&&u.hasOwnProperty(s)||(n||(n={}),n[s]="");for(s in u)u.hasOwnProperty(s)&&l[s]!==u[s]&&(n||(n={}),n[s]=u[s])}else n||(i||(i=[]),i.push(c,n)),n=u;else"dangerouslySetInnerHTML"===c?(u=u?u.__html:void 0,l=l?l.__html:void 0,null!=u&&l!==u&&(i=i||[]).push(c,u)):"children"===c?"string"!==typeof u&&"number"!==typeof u||(i=i||[]).push(c,""+u):"suppressContentEditableWarning"!==c&&"suppressHydrationWarning"!==c&&(o.hasOwnProperty(c)?(null!=u&&"onScroll"===c&&Pa("scroll",e),i||l===u||(i=[])):(i=i||[]).push(c,u))}n&&(i=i||[]).push("style",n);var c=i;(t.updateQueue=c)&&(t.flags|=4)}},Do=function(e,t,n,a){n!==a&&(t.flags|=4)};var Xo=!1,Yo=!1,Qo="function"===typeof WeakSet?WeakSet:Set,Zo=null;function Jo(e,t){var n=e.ref;if(null!==n)if("function"===typeof n)try{n(null)}catch(a){Su(e,t,a)}else n.current=null}function el(e,t,n){try{n()}catch(a){Su(e,t,a)}}var tl=!1;function nl(e,t,n){var a=t.updateQueue;if(null!==(a=null!==a?a.lastEffect:null)){var r=a=a.next;do{if((r.tag&e)===e){var s=r.destroy;r.destroy=void 0,void 0!==s&&el(t,n,s)}r=r.next}while(r!==a)}}function al(e,t){if(null!==(t=null!==(t=t.updateQueue)?t.lastEffect:null)){var n=t=t.next;do{if((n.tag&e)===e){var a=n.create;n.destroy=a()}n=n.next}while(n!==t)}}function rl(e){var t=e.ref;if(null!==t){var n=e.stateNode;e.tag,e=n,"function"===typeof t?t(e):t.current=e}}function sl(e){var t=e.alternate;null!==t&&(e.alternate=null,sl(t)),e.child=null,e.deletions=null,e.sibling=null,5===e.tag&&(null!==(t=e.stateNode)&&(delete t[dr],delete t[hr],delete t[mr],delete t[gr],delete t[yr])),e.stateNode=null,e.return=null,e.dependencies=null,e.memoizedProps=null,e.memoizedState=null,e.pendingProps=null,e.stateNode=null,e.updateQueue=null}function il(e){return 5===e.tag||3===e.tag||4===e.tag}function ol(e){e:for(;;){for(;null===e.sibling;){if(null===e.return||il(e.return))return null;e=e.return}for(e.sibling.return=e.return,e=e.sibling;5!==e.tag&&6!==e.tag&&18!==e.tag;){if(2&e.flags)continue e;if(null===e.child||4===e.tag)continue e;e.child.return=e,e=e.child}if(!(2&e.flags))return e.stateNode}}function ll(e,t,n){var a=e.tag;if(5===a||6===a)e=e.stateNode,t?8===n.nodeType?n.parentNode.insertBefore(e,t):n.insertBefore(e,t):(8===n.nodeType?(t=n.parentNode).insertBefore(e,n):(t=n).appendChild(e),null!==(n=n._reactRootContainer)&&void 0!==n||null!==t.onclick||(t.onclick=Ja));else if(4!==a&&null!==(e=e.child))for(ll(e,t,n),e=e.sibling;null!==e;)ll(e,t,n),e=e.sibling}function ul(e,t,n){var a=e.tag;if(5===a||6===a)e=e.stateNode,t?n.insertBefore(e,t):n.appendChild(e);else if(4!==a&&null!==(e=e.child))for(ul(e,t,n),e=e.sibling;null!==e;)ul(e,t,n),e=e.sibling}var cl=null,pl=!1;function dl(e,t,n){for(n=n.child;null!==n;)hl(e,t,n),n=n.sibling}function hl(e,t,n){if(st&&"function"===typeof st.onCommitFiberUnmount)try{st.onCommitFiberUnmount(rt,n)}catch(o){}switch(n.tag){case 5:Yo||Jo(n,t);case 6:var a=cl,r=pl;cl=null,dl(e,t,n),pl=r,null!==(cl=a)&&(pl?(e=cl,n=n.stateNode,8===e.nodeType?e.parentNode.removeChild(n):e.removeChild(n)):cl.removeChild(n.stateNode));break;case 18:null!==cl&&(pl?(e=cl,n=n.stateNode,8===e.nodeType?lr(e.parentNode,n):1===e.nodeType&&lr(e,n),Vt(e)):lr(cl,n.stateNode));break;case 4:a=cl,r=pl,cl=n.stateNode.containerInfo,pl=!0,dl(e,t,n),cl=a,pl=r;break;case 0:case 11:case 14:case 15:if(!Yo&&(null!==(a=n.updateQueue)&&null!==(a=a.lastEffect))){r=a=a.next;do{var s=r,i=s.destroy;s=s.tag,void 0!==i&&(0!==(2&s)||0!==(4&s))&&el(n,t,i),r=r.next}while(r!==a)}dl(e,t,n);break;case 1:if(!Yo&&(Jo(n,t),"function"===typeof(a=n.stateNode).componentWillUnmount))try{a.props=n.memoizedProps,a.state=n.memoizedState,a.componentWillUnmount()}catch(o){Su(n,t,o)}dl(e,t,n);break;case 21:dl(e,t,n);break;case 22:1&n.mode?(Yo=(a=Yo)||null!==n.memoizedState,dl(e,t,n),Yo=a):dl(e,t,n);break;default:dl(e,t,n)}}function fl(e){var t=e.updateQueue;if(null!==t){e.updateQueue=null;var n=e.stateNode;null===n&&(n=e.stateNode=new Qo),t.forEach((function(t){var a=Eu.bind(null,e,t);n.has(t)||(n.add(t),t.then(a,a))}))}}function ml(e,t){var n=t.deletions;if(null!==n)for(var a=0;a<n.length;a++){var r=n[a];try{var i=e,o=t,l=o;e:for(;null!==l;){switch(l.tag){case 5:cl=l.stateNode,pl=!1;break e;case 3:case 4:cl=l.stateNode.containerInfo,pl=!0;break e}l=l.return}if(null===cl)throw Error(s(160));hl(i,o,r),cl=null,pl=!1;var u=r.alternate;null!==u&&(u.return=null),r.return=null}catch(c){Su(r,t,c)}}if(12854&t.subtreeFlags)for(t=t.child;null!==t;)gl(t,e),t=t.sibling}function gl(e,t){var n=e.alternate,a=e.flags;switch(e.tag){case 0:case 11:case 14:case 15:if(ml(t,e),yl(e),4&a){try{nl(3,e,e.return),al(3,e)}catch(g){Su(e,e.return,g)}try{nl(5,e,e.return)}catch(g){Su(e,e.return,g)}}break;case 1:ml(t,e),yl(e),512&a&&null!==n&&Jo(n,n.return);break;case 5:if(ml(t,e),yl(e),512&a&&null!==n&&Jo(n,n.return),32&e.flags){var r=e.stateNode;try{de(r,"")}catch(g){Su(e,e.return,g)}}if(4&a&&null!=(r=e.stateNode)){var i=e.memoizedProps,o=null!==n?n.memoizedProps:i,l=e.type,u=e.updateQueue;if(e.updateQueue=null,null!==u)try{"input"===l&&"radio"===i.type&&null!=i.name&&Q(r,i),xe(l,o);var c=xe(l,i);for(o=0;o<u.length;o+=2){var p=u[o],d=u[o+1];"style"===p?ge(r,d):"dangerouslySetInnerHTML"===p?pe(r,d):"children"===p?de(r,d):x(r,p,d,c)}switch(l){case"input":Z(r,i);break;case"textarea":se(r,i);break;case"select":var h=r._wrapperState.wasMultiple;r._wrapperState.wasMultiple=!!i.multiple;var f=i.value;null!=f?ne(r,!!i.multiple,f,!1):h!==!!i.multiple&&(null!=i.defaultValue?ne(r,!!i.multiple,i.defaultValue,!0):ne(r,!!i.multiple,i.multiple?[]:"",!1))}r[hr]=i}catch(g){Su(e,e.return,g)}}break;case 6:if(ml(t,e),yl(e),4&a){if(null===e.stateNode)throw Error(s(162));r=e.stateNode,i=e.memoizedProps;try{r.nodeValue=i}catch(g){Su(e,e.return,g)}}break;case 3:if(ml(t,e),yl(e),4&a&&null!==n&&n.memoizedState.isDehydrated)try{Vt(t.containerInfo)}catch(g){Su(e,e.return,g)}break;case 4:default:ml(t,e),yl(e);break;case 13:ml(t,e),yl(e),8192&(r=e.child).flags&&(i=null!==r.memoizedState,r.stateNode.isHidden=i,!i||null!==r.alternate&&null!==r.alternate.memoizedState||(Wl=Qe())),4&a&&fl(e);break;case 22:if(p=null!==n&&null!==n.memoizedState,1&e.mode?(Yo=(c=Yo)||p,ml(t,e),Yo=c):ml(t,e),yl(e),8192&a){if(c=null!==e.memoizedState,(e.stateNode.isHidden=c)&&!p&&0!==(1&e.mode))for(Zo=e,p=e.child;null!==p;){for(d=Zo=p;null!==Zo;){switch(f=(h=Zo).child,h.tag){case 0:case 11:case 14:case 15:nl(4,h,h.return);break;case 1:Jo(h,h.return);var m=h.stateNode;if("function"===typeof m.componentWillUnmount){a=h,n=h.return;try{t=a,m.props=t.memoizedProps,m.state=t.memoizedState,m.componentWillUnmount()}catch(g){Su(a,n,g)}}break;case 5:Jo(h,h.return);break;case 22:if(null!==h.memoizedState){wl(d);continue}}null!==f?(f.return=h,Zo=f):wl(d)}p=p.sibling}e:for(p=null,d=e;;){if(5===d.tag){if(null===p){p=d;try{r=d.stateNode,c?"function"===typeof(i=r.style).setProperty?i.setProperty("display","none","important"):i.display="none":(l=d.stateNode,o=void 0!==(u=d.memoizedProps.style)&&null!==u&&u.hasOwnProperty("display")?u.display:null,l.style.display=me("display",o))}catch(g){Su(e,e.return,g)}}}else if(6===d.tag){if(null===p)try{d.stateNode.nodeValue=c?"":d.memoizedProps}catch(g){Su(e,e.return,g)}}else if((22!==d.tag&&23!==d.tag||null===d.memoizedState||d===e)&&null!==d.child){d.child.return=d,d=d.child;continue}if(d===e)break e;for(;null===d.sibling;){if(null===d.return||d.return===e)break e;p===d&&(p=null),d=d.return}p===d&&(p=null),d.sibling.return=d.return,d=d.sibling}}break;case 19:ml(t,e),yl(e),4&a&&fl(e);case 21:}}function yl(e){var t=e.flags;if(2&t){try{e:{for(var n=e.return;null!==n;){if(il(n)){var a=n;break e}n=n.return}throw Error(s(160))}switch(a.tag){case 5:var r=a.stateNode;32&a.flags&&(de(r,""),a.flags&=-33),ul(e,ol(e),r);break;case 3:case 4:var i=a.stateNode.containerInfo;ll(e,ol(e),i);break;default:throw Error(s(161))}}catch(o){Su(e,e.return,o)}e.flags&=-3}4096&t&&(e.flags&=-4097)}function bl(e,t,n){Zo=e,xl(e,t,n)}function xl(e,t,n){for(var a=0!==(1&e.mode);null!==Zo;){var r=Zo,s=r.child;if(22===r.tag&&a){var i=null!==r.memoizedState||Xo;if(!i){var o=r.alternate,l=null!==o&&null!==o.memoizedState||Yo;o=Xo;var u=Yo;if(Xo=i,(Yo=l)&&!u)for(Zo=r;null!==Zo;)l=(i=Zo).child,22===i.tag&&null!==i.memoizedState?kl(r):null!==l?(l.return=i,Zo=l):kl(r);for(;null!==s;)Zo=s,xl(s,t,n),s=s.sibling;Zo=r,Xo=o,Yo=u}vl(e)}else 0!==(8772&r.subtreeFlags)&&null!==s?(s.return=r,Zo=s):vl(e)}}function vl(e){for(;null!==Zo;){var t=Zo;if(0!==(8772&t.flags)){var n=t.alternate;try{if(0!==(8772&t.flags))switch(t.tag){case 0:case 11:case 15:Yo||al(5,t);break;case 1:var a=t.stateNode;if(4&t.flags&&!Yo)if(null===n)a.componentDidMount();else{var r=t.elementType===t.type?n.memoizedProps:to(t.type,n.memoizedProps);a.componentDidUpdate(r,n.memoizedState,a.__reactInternalSnapshotBeforeUpdate)}var i=t.updateQueue;null!==i&&Us(t,i,a);break;case 3:var o=t.updateQueue;if(null!==o){if(n=null,null!==t.child)switch(t.child.tag){case 5:case 1:n=t.child.stateNode}Us(t,o,n)}break;case 5:var l=t.stateNode;if(null===n&&4&t.flags){n=l;var u=t.memoizedProps;switch(t.type){case"button":case"input":case"select":case"textarea":u.autoFocus&&n.focus();break;case"img":u.src&&(n.src=u.src)}}break;case 6:case 4:case 12:case 19:case 17:case 21:case 22:case 23:case 25:break;case 13:if(null===t.memoizedState){var c=t.alternate;if(null!==c){var p=c.memoizedState;if(null!==p){var d=p.dehydrated;null!==d&&Vt(d)}}}break;default:throw Error(s(163))}Yo||512&t.flags&&rl(t)}catch(h){Su(t,t.return,h)}}if(t===e){Zo=null;break}if(null!==(n=t.sibling)){n.return=t.return,Zo=n;break}Zo=t.return}}function wl(e){for(;null!==Zo;){var t=Zo;if(t===e){Zo=null;break}var n=t.sibling;if(null!==n){n.return=t.return,Zo=n;break}Zo=t.return}}function kl(e){for(;null!==Zo;){var t=Zo;try{switch(t.tag){case 0:case 11:case 15:var n=t.return;try{al(4,t)}catch(l){Su(t,n,l)}break;case 1:var a=t.stateNode;if("function"===typeof a.componentDidMount){var r=t.return;try{a.componentDidMount()}catch(l){Su(t,r,l)}}var s=t.return;try{rl(t)}catch(l){Su(t,s,l)}break;case 5:var i=t.return;try{rl(t)}catch(l){Su(t,i,l)}}}catch(l){Su(t,t.return,l)}if(t===e){Zo=null;break}var o=t.sibling;if(null!==o){o.return=t.return,Zo=o;break}Zo=t.return}}var Nl,Sl=Math.ceil,Il=v.ReactCurrentDispatcher,Tl=v.ReactCurrentOwner,Cl=v.ReactCurrentBatchConfig,El=0,$l=null,Rl=null,Al=0,_l=0,Fl=Sr(0),Dl=0,Ol=null,Ml=0,Ll=0,zl=0,Pl=null,Bl=null,Wl=0,Vl=1/0,Ul=null,jl=!1,Gl=null,Hl=null,ql=!1,Kl=null,Xl=0,Yl=0,Ql=null,Zl=-1,Jl=0;function eu(){return 0!==(6&El)?Qe():-1!==Zl?Zl:Zl=Qe()}function tu(e){return 0===(1&e.mode)?1:0!==(2&El)&&0!==Al?Al&-Al:null!==ms.transition?(0===Jl&&(Jl=mt()),Jl):0!==(e=xt)?e:e=void 0===(e=window.event)?16:Yt(e.type)}function nu(e,t,n,a){if(50<Yl)throw Yl=0,Ql=null,Error(s(185));yt(e,n,a),0!==(2&El)&&e===$l||(e===$l&&(0===(2&El)&&(Ll|=n),4===Dl&&ou(e,Al)),au(e,a),1===n&&0===El&&0===(1&t.mode)&&(Vl=Qe()+500,Pr&&Vr()))}function au(e,t){var n=e.callbackNode;!function(e,t){for(var n=e.suspendedLanes,a=e.pingedLanes,r=e.expirationTimes,s=e.pendingLanes;0<s;){var i=31-it(s),o=1<<i,l=r[i];-1===l?0!==(o&n)&&0===(o&a)||(r[i]=ht(o,t)):l<=t&&(e.expiredLanes|=o),s&=~o}}(e,t);var a=dt(e,e===$l?Al:0);if(0===a)null!==n&&Ke(n),e.callbackNode=null,e.callbackPriority=0;else if(t=a&-a,e.callbackPriority!==t){if(null!=n&&Ke(n),1===t)0===e.tag?function(e){Pr=!0,Wr(e)}(lu.bind(null,e)):Wr(lu.bind(null,e)),ir((function(){0===(6&El)&&Vr()})),n=null;else{switch(vt(a)){case 1:n=Je;break;case 4:n=et;break;case 16:default:n=tt;break;case 536870912:n=at}n=$u(n,ru.bind(null,e))}e.callbackPriority=t,e.callbackNode=n}}function ru(e,t){if(Zl=-1,Jl=0,0!==(6&El))throw Error(s(327));var n=e.callbackNode;if(ku()&&e.callbackNode!==n)return null;var a=dt(e,e===$l?Al:0);if(0===a)return null;if(0!==(30&a)||0!==(a&e.expiredLanes)||t)t=gu(e,a);else{t=a;var r=El;El|=2;var i=fu();for($l===e&&Al===t||(Ul=null,Vl=Qe()+500,du(e,t));;)try{bu();break}catch(l){hu(e,l)}Ts(),Il.current=i,El=r,null!==Rl?t=0:($l=null,Al=0,t=Dl)}if(0!==t){if(2===t&&(0!==(r=ft(e))&&(a=r,t=su(e,r))),1===t)throw n=Ol,du(e,0),ou(e,a),au(e,Qe()),n;if(6===t)ou(e,a);else{if(r=e.current.alternate,0===(30&a)&&!function(e){for(var t=e;;){if(16384&t.flags){var n=t.updateQueue;if(null!==n&&null!==(n=n.stores))for(var a=0;a<n.length;a++){var r=n[a],s=r.getSnapshot;r=r.value;try{if(!oa(s(),r))return!1}catch(o){return!1}}}if(n=t.child,16384&t.subtreeFlags&&null!==n)n.return=t,t=n;else{if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return!0;t=t.return}t.sibling.return=t.return,t=t.sibling}}return!0}(r)&&(2===(t=gu(e,a))&&(0!==(i=ft(e))&&(a=i,t=su(e,i))),1===t))throw n=Ol,du(e,0),ou(e,a),au(e,Qe()),n;switch(e.finishedWork=r,e.finishedLanes=a,t){case 0:case 1:throw Error(s(345));case 2:case 5:wu(e,Bl,Ul);break;case 3:if(ou(e,a),(130023424&a)===a&&10<(t=Wl+500-Qe())){if(0!==dt(e,0))break;if(((r=e.suspendedLanes)&a)!==a){eu(),e.pingedLanes|=e.suspendedLanes&r;break}e.timeoutHandle=ar(wu.bind(null,e,Bl,Ul),t);break}wu(e,Bl,Ul);break;case 4:if(ou(e,a),(4194240&a)===a)break;for(t=e.eventTimes,r=-1;0<a;){var o=31-it(a);i=1<<o,(o=t[o])>r&&(r=o),a&=~i}if(a=r,10<(a=(120>(a=Qe()-a)?120:480>a?480:1080>a?1080:1920>a?1920:3e3>a?3e3:4320>a?4320:1960*Sl(a/1960))-a)){e.timeoutHandle=ar(wu.bind(null,e,Bl,Ul),a);break}wu(e,Bl,Ul);break;default:throw Error(s(329))}}}return au(e,Qe()),e.callbackNode===n?ru.bind(null,e):null}function su(e,t){var n=Pl;return e.current.memoizedState.isDehydrated&&(du(e,t).flags|=256),2!==(e=gu(e,t))&&(t=Bl,Bl=n,null!==t&&iu(t)),e}function iu(e){null===Bl?Bl=e:Bl.push.apply(Bl,e)}function ou(e,t){for(t&=~zl,t&=~Ll,e.suspendedLanes|=t,e.pingedLanes&=~t,e=e.expirationTimes;0<t;){var n=31-it(t),a=1<<n;e[n]=-1,t&=~a}}function lu(e){if(0!==(6&El))throw Error(s(327));ku();var t=dt(e,0);if(0===(1&t))return au(e,Qe()),null;var n=gu(e,t);if(0!==e.tag&&2===n){var a=ft(e);0!==a&&(t=a,n=su(e,a))}if(1===n)throw n=Ol,du(e,0),ou(e,t),au(e,Qe()),n;if(6===n)throw Error(s(345));return e.finishedWork=e.current.alternate,e.finishedLanes=t,wu(e,Bl,Ul),au(e,Qe()),null}function uu(e,t){var n=El;El|=1;try{return e(t)}finally{0===(El=n)&&(Vl=Qe()+500,Pr&&Vr())}}function cu(e){null!==Kl&&0===Kl.tag&&0===(6&El)&&ku();var t=El;El|=1;var n=Cl.transition,a=xt;try{if(Cl.transition=null,xt=1,e)return e()}finally{xt=a,Cl.transition=n,0===(6&(El=t))&&Vr()}}function pu(){_l=Fl.current,Ir(Fl)}function du(e,t){e.finishedWork=null,e.finishedLanes=0;var n=e.timeoutHandle;if(-1!==n&&(e.timeoutHandle=-1,rr(n)),null!==Rl)for(n=Rl.return;null!==n;){var a=n;switch(ts(a),a.tag){case 1:null!==(a=a.type.childContextTypes)&&void 0!==a&&Fr();break;case 3:Ys(),Ir($r),Ir(Er),ni();break;case 5:Zs(a);break;case 4:Ys();break;case 13:case 19:Ir(Js);break;case 10:Cs(a.type._context);break;case 22:case 23:pu()}n=n.return}if($l=e,Rl=e=Fu(e.current,null),Al=_l=t,Dl=0,Ol=null,zl=Ll=Ml=0,Bl=Pl=null,null!==As){for(t=0;t<As.length;t++)if(null!==(a=(n=As[t]).interleaved)){n.interleaved=null;var r=a.next,s=n.pending;if(null!==s){var i=s.next;s.next=r,a.next=i}n.pending=a}As=null}return e}function hu(e,t){for(;;){var n=Rl;try{if(Ts(),ai.current=Qi,ui){for(var a=ii.memoizedState;null!==a;){var r=a.queue;null!==r&&(r.pending=null),a=a.next}ui=!1}if(si=0,li=oi=ii=null,ci=!1,pi=0,Tl.current=null,null===n||null===n.return){Dl=1,Ol=t,Rl=null;break}e:{var i=e,o=n.return,l=n,u=t;if(t=Al,l.flags|=32768,null!==u&&"object"===typeof u&&"function"===typeof u.then){var c=u,p=l,d=p.tag;if(0===(1&p.mode)&&(0===d||11===d||15===d)){var h=p.alternate;h?(p.updateQueue=h.updateQueue,p.memoizedState=h.memoizedState,p.lanes=h.lanes):(p.updateQueue=null,p.memoizedState=null)}var f=go(o);if(null!==f){f.flags&=-257,yo(f,o,l,0,t),1&f.mode&&mo(i,c,t),u=c;var m=(t=f).updateQueue;if(null===m){var g=new Set;g.add(u),t.updateQueue=g}else m.add(u);break e}if(0===(1&t)){mo(i,c,t),mu();break e}u=Error(s(426))}else if(rs&&1&l.mode){var y=go(o);if(null!==y){0===(65536&y.flags)&&(y.flags|=256),yo(y,o,l,0,t),fs(lo(u,l));break e}}i=u=lo(u,l),4!==Dl&&(Dl=2),null===Pl?Pl=[i]:Pl.push(i),i=o;do{switch(i.tag){case 3:i.flags|=65536,t&=-t,i.lanes|=t,Ws(i,ho(0,u,t));break e;case 1:l=u;var b=i.type,x=i.stateNode;if(0===(128&i.flags)&&("function"===typeof b.getDerivedStateFromError||null!==x&&"function"===typeof x.componentDidCatch&&(null===Hl||!Hl.has(x)))){i.flags|=65536,t&=-t,i.lanes|=t,Ws(i,fo(i,l,t));break e}}i=i.return}while(null!==i)}vu(n)}catch(v){t=v,Rl===n&&null!==n&&(Rl=n=n.return);continue}break}}function fu(){var e=Il.current;return Il.current=Qi,null===e?Qi:e}function mu(){0!==Dl&&3!==Dl&&2!==Dl||(Dl=4),null===$l||0===(268435455&Ml)&&0===(268435455&Ll)||ou($l,Al)}function gu(e,t){var n=El;El|=2;var a=fu();for($l===e&&Al===t||(Ul=null,du(e,t));;)try{yu();break}catch(r){hu(e,r)}if(Ts(),El=n,Il.current=a,null!==Rl)throw Error(s(261));return $l=null,Al=0,Dl}function yu(){for(;null!==Rl;)xu(Rl)}function bu(){for(;null!==Rl&&!Xe();)xu(Rl)}function xu(e){var t=Nl(e.alternate,e,_l);e.memoizedProps=e.pendingProps,null===t?vu(e):Rl=t,Tl.current=null}function vu(e){var t=e;do{var n=t.alternate;if(e=t.return,0===(32768&t.flags)){if(null!==(n=qo(n,t,_l)))return void(Rl=n)}else{if(null!==(n=Ko(n,t)))return n.flags&=32767,void(Rl=n);if(null===e)return Dl=6,void(Rl=null);e.flags|=32768,e.subtreeFlags=0,e.deletions=null}if(null!==(t=t.sibling))return void(Rl=t);Rl=t=e}while(null!==t);0===Dl&&(Dl=5)}function wu(e,t,n){var a=xt,r=Cl.transition;try{Cl.transition=null,xt=1,function(e,t,n,a){do{ku()}while(null!==Kl);if(0!==(6&El))throw Error(s(327));n=e.finishedWork;var r=e.finishedLanes;if(null===n)return null;if(e.finishedWork=null,e.finishedLanes=0,n===e.current)throw Error(s(177));e.callbackNode=null,e.callbackPriority=0;var i=n.lanes|n.childLanes;if(function(e,t){var n=e.pendingLanes&~t;e.pendingLanes=t,e.suspendedLanes=0,e.pingedLanes=0,e.expiredLanes&=t,e.mutableReadLanes&=t,e.entangledLanes&=t,t=e.entanglements;var a=e.eventTimes;for(e=e.expirationTimes;0<n;){var r=31-it(n),s=1<<r;t[r]=0,a[r]=-1,e[r]=-1,n&=~s}}(e,i),e===$l&&(Rl=$l=null,Al=0),0===(2064&n.subtreeFlags)&&0===(2064&n.flags)||ql||(ql=!0,$u(tt,(function(){return ku(),null}))),i=0!==(15990&n.flags),0!==(15990&n.subtreeFlags)||i){i=Cl.transition,Cl.transition=null;var o=xt;xt=1;var l=El;El|=4,Tl.current=null,function(e,t){if(er=jt,ha(e=da())){if("selectionStart"in e)var n={start:e.selectionStart,end:e.selectionEnd};else e:{var a=(n=(n=e.ownerDocument)&&n.defaultView||window).getSelection&&n.getSelection();if(a&&0!==a.rangeCount){n=a.anchorNode;var r=a.anchorOffset,i=a.focusNode;a=a.focusOffset;try{n.nodeType,i.nodeType}catch(w){n=null;break e}var o=0,l=-1,u=-1,c=0,p=0,d=e,h=null;t:for(;;){for(var f;d!==n||0!==r&&3!==d.nodeType||(l=o+r),d!==i||0!==a&&3!==d.nodeType||(u=o+a),3===d.nodeType&&(o+=d.nodeValue.length),null!==(f=d.firstChild);)h=d,d=f;for(;;){if(d===e)break t;if(h===n&&++c===r&&(l=o),h===i&&++p===a&&(u=o),null!==(f=d.nextSibling))break;h=(d=h).parentNode}d=f}n=-1===l||-1===u?null:{start:l,end:u}}else n=null}n=n||{start:0,end:0}}else n=null;for(tr={focusedElem:e,selectionRange:n},jt=!1,Zo=t;null!==Zo;)if(e=(t=Zo).child,0!==(1028&t.subtreeFlags)&&null!==e)e.return=t,Zo=e;else for(;null!==Zo;){t=Zo;try{var m=t.alternate;if(0!==(1024&t.flags))switch(t.tag){case 0:case 11:case 15:case 5:case 6:case 4:case 17:break;case 1:if(null!==m){var g=m.memoizedProps,y=m.memoizedState,b=t.stateNode,x=b.getSnapshotBeforeUpdate(t.elementType===t.type?g:to(t.type,g),y);b.__reactInternalSnapshotBeforeUpdate=x}break;case 3:var v=t.stateNode.containerInfo;1===v.nodeType?v.textContent="":9===v.nodeType&&v.documentElement&&v.removeChild(v.documentElement);break;default:throw Error(s(163))}}catch(w){Su(t,t.return,w)}if(null!==(e=t.sibling)){e.return=t.return,Zo=e;break}Zo=t.return}m=tl,tl=!1}(e,n),gl(n,e),fa(tr),jt=!!er,tr=er=null,e.current=n,bl(n,e,r),Ye(),El=l,xt=o,Cl.transition=i}else e.current=n;if(ql&&(ql=!1,Kl=e,Xl=r),i=e.pendingLanes,0===i&&(Hl=null),function(e){if(st&&"function"===typeof st.onCommitFiberRoot)try{st.onCommitFiberRoot(rt,e,void 0,128===(128&e.current.flags))}catch(t){}}(n.stateNode),au(e,Qe()),null!==t)for(a=e.onRecoverableError,n=0;n<t.length;n++)r=t[n],a(r.value,{componentStack:r.stack,digest:r.digest});if(jl)throw jl=!1,e=Gl,Gl=null,e;0!==(1&Xl)&&0!==e.tag&&ku(),i=e.pendingLanes,0!==(1&i)?e===Ql?Yl++:(Yl=0,Ql=e):Yl=0,Vr()}(e,t,n,a)}finally{Cl.transition=r,xt=a}return null}function ku(){if(null!==Kl){var e=vt(Xl),t=Cl.transition,n=xt;try{if(Cl.transition=null,xt=16>e?16:e,null===Kl)var a=!1;else{if(e=Kl,Kl=null,Xl=0,0!==(6&El))throw Error(s(331));var r=El;for(El|=4,Zo=e.current;null!==Zo;){var i=Zo,o=i.child;if(0!==(16&Zo.flags)){var l=i.deletions;if(null!==l){for(var u=0;u<l.length;u++){var c=l[u];for(Zo=c;null!==Zo;){var p=Zo;switch(p.tag){case 0:case 11:case 15:nl(8,p,i)}var d=p.child;if(null!==d)d.return=p,Zo=d;else for(;null!==Zo;){var h=(p=Zo).sibling,f=p.return;if(sl(p),p===c){Zo=null;break}if(null!==h){h.return=f,Zo=h;break}Zo=f}}}var m=i.alternate;if(null!==m){var g=m.child;if(null!==g){m.child=null;do{var y=g.sibling;g.sibling=null,g=y}while(null!==g)}}Zo=i}}if(0!==(2064&i.subtreeFlags)&&null!==o)o.return=i,Zo=o;else e:for(;null!==Zo;){if(0!==(2048&(i=Zo).flags))switch(i.tag){case 0:case 11:case 15:nl(9,i,i.return)}var b=i.sibling;if(null!==b){b.return=i.return,Zo=b;break e}Zo=i.return}}var x=e.current;for(Zo=x;null!==Zo;){var v=(o=Zo).child;if(0!==(2064&o.subtreeFlags)&&null!==v)v.return=o,Zo=v;else e:for(o=x;null!==Zo;){if(0!==(2048&(l=Zo).flags))try{switch(l.tag){case 0:case 11:case 15:al(9,l)}}catch(k){Su(l,l.return,k)}if(l===o){Zo=null;break e}var w=l.sibling;if(null!==w){w.return=l.return,Zo=w;break e}Zo=l.return}}if(El=r,Vr(),st&&"function"===typeof st.onPostCommitFiberRoot)try{st.onPostCommitFiberRoot(rt,e)}catch(k){}a=!0}return a}finally{xt=n,Cl.transition=t}}return!1}function Nu(e,t,n){e=Ps(e,t=ho(0,t=lo(n,t),1),1),t=eu(),null!==e&&(yt(e,1,t),au(e,t))}function Su(e,t,n){if(3===e.tag)Nu(e,e,n);else for(;null!==t;){if(3===t.tag){Nu(t,e,n);break}if(1===t.tag){var a=t.stateNode;if("function"===typeof t.type.getDerivedStateFromError||"function"===typeof a.componentDidCatch&&(null===Hl||!Hl.has(a))){t=Ps(t,e=fo(t,e=lo(n,e),1),1),e=eu(),null!==t&&(yt(t,1,e),au(t,e));break}}t=t.return}}function Iu(e,t,n){var a=e.pingCache;null!==a&&a.delete(t),t=eu(),e.pingedLanes|=e.suspendedLanes&n,$l===e&&(Al&n)===n&&(4===Dl||3===Dl&&(130023424&Al)===Al&&500>Qe()-Wl?du(e,0):zl|=n),au(e,t)}function Tu(e,t){0===t&&(0===(1&e.mode)?t=1:(t=ct,0===(130023424&(ct<<=1))&&(ct=4194304)));var n=eu();null!==(e=Ds(e,t))&&(yt(e,t,n),au(e,n))}function Cu(e){var t=e.memoizedState,n=0;null!==t&&(n=t.retryLane),Tu(e,n)}function Eu(e,t){var n=0;switch(e.tag){case 13:var a=e.stateNode,r=e.memoizedState;null!==r&&(n=r.retryLane);break;case 19:a=e.stateNode;break;default:throw Error(s(314))}null!==a&&a.delete(t),Tu(e,n)}function $u(e,t){return qe(e,t)}function Ru(e,t,n,a){this.tag=e,this.key=n,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=t,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=a,this.subtreeFlags=this.flags=0,this.deletions=null,this.childLanes=this.lanes=0,this.alternate=null}function Au(e,t,n,a){return new Ru(e,t,n,a)}function _u(e){return!(!(e=e.prototype)||!e.isReactComponent)}function Fu(e,t){var n=e.alternate;return null===n?((n=Au(e.tag,t,e.key,e.mode)).elementType=e.elementType,n.type=e.type,n.stateNode=e.stateNode,n.alternate=e,e.alternate=n):(n.pendingProps=t,n.type=e.type,n.flags=0,n.subtreeFlags=0,n.deletions=null),n.flags=14680064&e.flags,n.childLanes=e.childLanes,n.lanes=e.lanes,n.child=e.child,n.memoizedProps=e.memoizedProps,n.memoizedState=e.memoizedState,n.updateQueue=e.updateQueue,t=e.dependencies,n.dependencies=null===t?null:{lanes:t.lanes,firstContext:t.firstContext},n.sibling=e.sibling,n.index=e.index,n.ref=e.ref,n}function Du(e,t,n,a,r,i){var o=2;if(a=e,"function"===typeof e)_u(e)&&(o=1);else if("string"===typeof e)o=5;else e:switch(e){case N:return Ou(n.children,r,i,t);case S:o=8,r|=8;break;case I:return(e=Au(12,n,t,2|r)).elementType=I,e.lanes=i,e;case $:return(e=Au(13,n,t,r)).elementType=$,e.lanes=i,e;case R:return(e=Au(19,n,t,r)).elementType=R,e.lanes=i,e;case F:return Mu(n,r,i,t);default:if("object"===typeof e&&null!==e)switch(e.$$typeof){case T:o=10;break e;case C:o=9;break e;case E:o=11;break e;case A:o=14;break e;case _:o=16,a=null;break e}throw Error(s(130,null==e?e:typeof e,""))}return(t=Au(o,n,t,r)).elementType=e,t.type=a,t.lanes=i,t}function Ou(e,t,n,a){return(e=Au(7,e,a,t)).lanes=n,e}function Mu(e,t,n,a){return(e=Au(22,e,a,t)).elementType=F,e.lanes=n,e.stateNode={isHidden:!1},e}function Lu(e,t,n){return(e=Au(6,e,null,t)).lanes=n,e}function zu(e,t,n){return(t=Au(4,null!==e.children?e.children:[],e.key,t)).lanes=n,t.stateNode={containerInfo:e.containerInfo,pendingChildren:null,implementation:e.implementation},t}function Pu(e,t,n,a,r){this.tag=t,this.containerInfo=e,this.finishedWork=this.pingCache=this.current=this.pendingChildren=null,this.timeoutHandle=-1,this.callbackNode=this.pendingContext=this.context=null,this.callbackPriority=0,this.eventTimes=gt(0),this.expirationTimes=gt(-1),this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0,this.entanglements=gt(0),this.identifierPrefix=a,this.onRecoverableError=r,this.mutableSourceEagerHydrationData=null}function Bu(e,t,n,a,r,s,i,o,l){return e=new Pu(e,t,n,o,l),1===t?(t=1,!0===s&&(t|=8)):t=0,s=Au(3,null,null,t),e.current=s,s.stateNode=e,s.memoizedState={element:a,isDehydrated:n,cache:null,transitions:null,pendingSuspenseBoundaries:null},Ms(s),e}function Wu(e){if(!e)return Cr;e:{if(Ve(e=e._reactInternals)!==e||1!==e.tag)throw Error(s(170));var t=e;do{switch(t.tag){case 3:t=t.stateNode.context;break e;case 1:if(_r(t.type)){t=t.stateNode.__reactInternalMemoizedMergedChildContext;break e}}t=t.return}while(null!==t);throw Error(s(171))}if(1===e.tag){var n=e.type;if(_r(n))return Or(e,n,t)}return t}function Vu(e,t,n,a,r,s,i,o,l){return(e=Bu(n,a,!0,e,0,s,0,o,l)).context=Wu(null),n=e.current,(s=zs(a=eu(),r=tu(n))).callback=void 0!==t&&null!==t?t:null,Ps(n,s,r),e.current.lanes=r,yt(e,r,a),au(e,a),e}function Uu(e,t,n,a){var r=t.current,s=eu(),i=tu(r);return n=Wu(n),null===t.context?t.context=n:t.pendingContext=n,(t=zs(s,i)).payload={element:e},null!==(a=void 0===a?null:a)&&(t.callback=a),null!==(e=Ps(r,t,i))&&(nu(e,r,i,s),Bs(e,r,i)),i}function ju(e){return(e=e.current).child?(e.child.tag,e.child.stateNode):null}function Gu(e,t){if(null!==(e=e.memoizedState)&&null!==e.dehydrated){var n=e.retryLane;e.retryLane=0!==n&&n<t?n:t}}function Hu(e,t){Gu(e,t),(e=e.alternate)&&Gu(e,t)}Nl=function(e,t,n){if(null!==e)if(e.memoizedProps!==t.pendingProps||$r.current)xo=!0;else{if(0===(e.lanes&n)&&0===(128&t.flags))return xo=!1,function(e,t,n){switch(t.tag){case 3:$o(t),hs();break;case 5:Qs(t);break;case 1:_r(t.type)&&Mr(t);break;case 4:Xs(t,t.stateNode.containerInfo);break;case 10:var a=t.type._context,r=t.memoizedProps.value;Tr(ks,a._currentValue),a._currentValue=r;break;case 13:if(null!==(a=t.memoizedState))return null!==a.dehydrated?(Tr(Js,1&Js.current),t.flags|=128,null):0!==(n&t.child.childLanes)?Lo(e,t,n):(Tr(Js,1&Js.current),null!==(e=jo(e,t,n))?e.sibling:null);Tr(Js,1&Js.current);break;case 19:if(a=0!==(n&t.childLanes),0!==(128&e.flags)){if(a)return Vo(e,t,n);t.flags|=128}if(null!==(r=t.memoizedState)&&(r.rendering=null,r.tail=null,r.lastEffect=null),Tr(Js,Js.current),a)break;return null;case 22:case 23:return t.lanes=0,So(e,t,n)}return jo(e,t,n)}(e,t,n);xo=0!==(131072&e.flags)}else xo=!1,rs&&0!==(1048576&t.flags)&&Jr(t,Hr,t.index);switch(t.lanes=0,t.tag){case 2:var a=t.type;Uo(e,t),e=t.pendingProps;var r=Ar(t,Er.current);$s(t,n),r=mi(null,t,a,e,r,n);var i=gi();return t.flags|=1,"object"===typeof r&&null!==r&&"function"===typeof r.render&&void 0===r.$$typeof?(t.tag=1,t.memoizedState=null,t.updateQueue=null,_r(a)?(i=!0,Mr(t)):i=!1,t.memoizedState=null!==r.state&&void 0!==r.state?r.state:null,Ms(t),r.updater=ao,t.stateNode=r,r._reactInternals=t,oo(t,a,e,n),t=Eo(null,t,a,!0,i,n)):(t.tag=0,rs&&i&&es(t),vo(null,t,r,n),t=t.child),t;case 16:a=t.elementType;e:{switch(Uo(e,t),e=t.pendingProps,a=(r=a._init)(a._payload),t.type=a,r=t.tag=function(e){if("function"===typeof e)return _u(e)?1:0;if(void 0!==e&&null!==e){if((e=e.$$typeof)===E)return 11;if(e===A)return 14}return 2}(a),e=to(a,e),r){case 0:t=To(null,t,a,e,n);break e;case 1:t=Co(null,t,a,e,n);break e;case 11:t=wo(null,t,a,e,n);break e;case 14:t=ko(null,t,a,to(a.type,e),n);break e}throw Error(s(306,a,""))}return t;case 0:return a=t.type,r=t.pendingProps,To(e,t,a,r=t.elementType===a?r:to(a,r),n);case 1:return a=t.type,r=t.pendingProps,Co(e,t,a,r=t.elementType===a?r:to(a,r),n);case 3:e:{if($o(t),null===e)throw Error(s(387));a=t.pendingProps,r=(i=t.memoizedState).element,Ls(e,t),Vs(t,a,null,n);var o=t.memoizedState;if(a=o.element,i.isDehydrated){if(i={element:a,isDehydrated:!1,cache:o.cache,pendingSuspenseBoundaries:o.pendingSuspenseBoundaries,transitions:o.transitions},t.updateQueue.baseState=i,t.memoizedState=i,256&t.flags){t=Ro(e,t,a,n,r=lo(Error(s(423)),t));break e}if(a!==r){t=Ro(e,t,a,n,r=lo(Error(s(424)),t));break e}for(as=ur(t.stateNode.containerInfo.firstChild),ns=t,rs=!0,ss=null,n=ws(t,null,a,n),t.child=n;n;)n.flags=-3&n.flags|4096,n=n.sibling}else{if(hs(),a===r){t=jo(e,t,n);break e}vo(e,t,a,n)}t=t.child}return t;case 5:return Qs(t),null===e&&us(t),a=t.type,r=t.pendingProps,i=null!==e?e.memoizedProps:null,o=r.children,nr(a,r)?o=null:null!==i&&nr(a,i)&&(t.flags|=32),Io(e,t),vo(e,t,o,n),t.child;case 6:return null===e&&us(t),null;case 13:return Lo(e,t,n);case 4:return Xs(t,t.stateNode.containerInfo),a=t.pendingProps,null===e?t.child=vs(t,null,a,n):vo(e,t,a,n),t.child;case 11:return a=t.type,r=t.pendingProps,wo(e,t,a,r=t.elementType===a?r:to(a,r),n);case 7:return vo(e,t,t.pendingProps,n),t.child;case 8:case 12:return vo(e,t,t.pendingProps.children,n),t.child;case 10:e:{if(a=t.type._context,r=t.pendingProps,i=t.memoizedProps,o=r.value,Tr(ks,a._currentValue),a._currentValue=o,null!==i)if(oa(i.value,o)){if(i.children===r.children&&!$r.current){t=jo(e,t,n);break e}}else for(null!==(i=t.child)&&(i.return=t);null!==i;){var l=i.dependencies;if(null!==l){o=i.child;for(var u=l.firstContext;null!==u;){if(u.context===a){if(1===i.tag){(u=zs(-1,n&-n)).tag=2;var c=i.updateQueue;if(null!==c){var p=(c=c.shared).pending;null===p?u.next=u:(u.next=p.next,p.next=u),c.pending=u}}i.lanes|=n,null!==(u=i.alternate)&&(u.lanes|=n),Es(i.return,n,t),l.lanes|=n;break}u=u.next}}else if(10===i.tag)o=i.type===t.type?null:i.child;else if(18===i.tag){if(null===(o=i.return))throw Error(s(341));o.lanes|=n,null!==(l=o.alternate)&&(l.lanes|=n),Es(o,n,t),o=i.sibling}else o=i.child;if(null!==o)o.return=i;else for(o=i;null!==o;){if(o===t){o=null;break}if(null!==(i=o.sibling)){i.return=o.return,o=i;break}o=o.return}i=o}vo(e,t,r.children,n),t=t.child}return t;case 9:return r=t.type,a=t.pendingProps.children,$s(t,n),a=a(r=Rs(r)),t.flags|=1,vo(e,t,a,n),t.child;case 14:return r=to(a=t.type,t.pendingProps),ko(e,t,a,r=to(a.type,r),n);case 15:return No(e,t,t.type,t.pendingProps,n);case 17:return a=t.type,r=t.pendingProps,r=t.elementType===a?r:to(a,r),Uo(e,t),t.tag=1,_r(a)?(e=!0,Mr(t)):e=!1,$s(t,n),so(t,a,r),oo(t,a,r,n),Eo(null,t,a,!0,e,n);case 19:return Vo(e,t,n);case 22:return So(e,t,n)}throw Error(s(156,t.tag))};var qu="function"===typeof reportError?reportError:function(e){console.error(e)};function Ku(e){this._internalRoot=e}function Xu(e){this._internalRoot=e}function Yu(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType)}function Qu(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType&&(8!==e.nodeType||" react-mount-point-unstable "!==e.nodeValue))}function Zu(){}function Ju(e,t,n,a,r){var s=n._reactRootContainer;if(s){var i=s;if("function"===typeof r){var o=r;r=function(){var e=ju(i);o.call(e)}}Uu(t,i,e,r)}else i=function(e,t,n,a,r){if(r){if("function"===typeof a){var s=a;a=function(){var e=ju(i);s.call(e)}}var i=Vu(t,a,e,0,null,!1,0,"",Zu);return e._reactRootContainer=i,e[fr]=i.current,Va(8===e.nodeType?e.parentNode:e),cu(),i}for(;r=e.lastChild;)e.removeChild(r);if("function"===typeof a){var o=a;a=function(){var e=ju(l);o.call(e)}}var l=Bu(e,0,!1,null,0,!1,0,"",Zu);return e._reactRootContainer=l,e[fr]=l.current,Va(8===e.nodeType?e.parentNode:e),cu((function(){Uu(t,l,n,a)})),l}(n,t,e,r,a);return ju(i)}Xu.prototype.render=Ku.prototype.render=function(e){var t=this._internalRoot;if(null===t)throw Error(s(409));Uu(e,t,null,null)},Xu.prototype.unmount=Ku.prototype.unmount=function(){var e=this._internalRoot;if(null!==e){this._internalRoot=null;var t=e.containerInfo;cu((function(){Uu(null,e,null,null)})),t[fr]=null}},Xu.prototype.unstable_scheduleHydration=function(e){if(e){var t=St();e={blockedOn:null,target:e,priority:t};for(var n=0;n<Ft.length&&0!==t&&t<Ft[n].priority;n++);Ft.splice(n,0,e),0===n&&Lt(e)}},wt=function(e){switch(e.tag){case 3:var t=e.stateNode;if(t.current.memoizedState.isDehydrated){var n=pt(t.pendingLanes);0!==n&&(bt(t,1|n),au(t,Qe()),0===(6&El)&&(Vl=Qe()+500,Vr()))}break;case 13:cu((function(){var t=Ds(e,1);if(null!==t){var n=eu();nu(t,e,1,n)}})),Hu(e,1)}},kt=function(e){if(13===e.tag){var t=Ds(e,134217728);if(null!==t)nu(t,e,134217728,eu());Hu(e,134217728)}},Nt=function(e){if(13===e.tag){var t=tu(e),n=Ds(e,t);if(null!==n)nu(n,e,t,eu());Hu(e,t)}},St=function(){return xt},It=function(e,t){var n=xt;try{return xt=e,t()}finally{xt=n}},ke=function(e,t,n){switch(t){case"input":if(Z(e,n),t=n.name,"radio"===n.type&&null!=t){for(n=e;n.parentNode;)n=n.parentNode;for(n=n.querySelectorAll("input[name="+JSON.stringify(""+t)+'][type="radio"]'),t=0;t<n.length;t++){var a=n[t];if(a!==e&&a.form===e.form){var r=wr(a);if(!r)throw Error(s(90));q(a),Z(a,r)}}}break;case"textarea":se(e,n);break;case"select":null!=(t=n.value)&&ne(e,!!n.multiple,t,!1)}},Ee=uu,$e=cu;var ec={usingClientEntryPoint:!1,Events:[xr,vr,wr,Te,Ce,uu]},tc={findFiberByHostInstance:br,bundleType:0,version:"18.3.1",rendererPackageName:"react-dom"},nc={bundleType:tc.bundleType,version:tc.version,rendererPackageName:tc.rendererPackageName,rendererConfig:tc.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setErrorHandler:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:v.ReactCurrentDispatcher,findHostInstanceByFiber:function(e){return null===(e=Ge(e))?null:e.stateNode},findFiberByHostInstance:tc.findFiberByHostInstance||function(){return null},findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null,reconcilerVersion:"18.3.1-next-f1338f8080-20240426"};if("undefined"!==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__){var ac=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!ac.isDisabled&&ac.supportsFiber)try{rt=ac.inject(nc),st=ac}catch(ce){}}t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=ec,t.createPortal=function(e,t){var n=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!Yu(t))throw Error(s(200));return function(e,t,n){var a=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:k,key:null==a?null:""+a,children:e,containerInfo:t,implementation:n}}(e,t,null,n)},t.createRoot=function(e,t){if(!Yu(e))throw Error(s(299));var n=!1,a="",r=qu;return null!==t&&void 0!==t&&(!0===t.unstable_strictMode&&(n=!0),void 0!==t.identifierPrefix&&(a=t.identifierPrefix),void 0!==t.onRecoverableError&&(r=t.onRecoverableError)),t=Bu(e,1,!1,null,0,n,0,a,r),e[fr]=t.current,Va(8===e.nodeType?e.parentNode:e),new Ku(t)},t.findDOMNode=function(e){if(null==e)return null;if(1===e.nodeType)return e;var t=e._reactInternals;if(void 0===t){if("function"===typeof e.render)throw Error(s(188));throw e=Object.keys(e).join(","),Error(s(268,e))}return e=null===(e=Ge(t))?null:e.stateNode},t.flushSync=function(e){return cu(e)},t.hydrate=function(e,t,n){if(!Qu(t))throw Error(s(200));return Ju(null,e,t,!0,n)},t.hydrateRoot=function(e,t,n){if(!Yu(e))throw Error(s(405));var a=null!=n&&n.hydratedSources||null,r=!1,i="",o=qu;if(null!==n&&void 0!==n&&(!0===n.unstable_strictMode&&(r=!0),void 0!==n.identifierPrefix&&(i=n.identifierPrefix),void 0!==n.onRecoverableError&&(o=n.onRecoverableError)),t=Vu(t,null,e,1,null!=n?n:null,r,0,i,o),e[fr]=t.current,Va(e),a)for(e=0;e<a.length;e++)r=(r=(n=a[e])._getVersion)(n._source),null==t.mutableSourceEagerHydrationData?t.mutableSourceEagerHydrationData=[n,r]:t.mutableSourceEagerHydrationData.push(n,r);return new Xu(t)},t.render=function(e,t,n){if(!Qu(t))throw Error(s(200));return Ju(null,e,t,!1,n)},t.unmountComponentAtNode=function(e){if(!Qu(e))throw Error(s(40));return!!e._reactRootContainer&&(cu((function(){Ju(null,null,e,!1,(function(){e._reactRootContainer=null,e[fr]=null}))})),!0)},t.unstable_batchedUpdates=uu,t.unstable_renderSubtreeIntoContainer=function(e,t,n,a){if(!Qu(n))throw Error(s(200));if(null==e||void 0===e._reactInternals)throw Error(s(38));return Ju(e,t,n,!1,a)},t.version="18.3.1-next-f1338f8080-20240426"},817:()=>{},853:(e,t,n)=>{"use strict";e.exports=n(234)},950:(e,t,n)=>{"use strict";!function e(){if("undefined"!==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&"function"===typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE)try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(e)}catch(t){console.error(t)}}(),e.exports=n(730)},996:()=>{}},t={};function n(a){var r=t[a];if(void 0!==r)return r.exports;var s=t[a]={id:a,loaded:!1,exports:{}};return e[a].call(s.exports,s,s.exports,n),s.loaded=!0,s.exports}n.amdD=function(){throw new Error("define cannot be used indirect")},n.amdO={},n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var a in t)n.o(t,a)&&!n.o(e,a)&&Object.defineProperty(e,a,{enumerable:!0,get:t[a]})},n.g=function(){if("object"===typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"===typeof window)return window}}(),n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.r=e=>{"undefined"!==typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.nmd=e=>(e.paths=[],e.children||(e.children=[]),e),(()=>{"use strict";var e={};n.r(e),n.d(e,{CompositeArrayBuffer:()=>bi,browserFiles:()=>hl,browserHTTPRequest:()=>kl,concatenateArrayBuffers:()=>Li,copyModel:()=>No,decodeWeights:()=>Ei,decodeWeightsStream:()=>Fi,encodeWeights:()=>Ci,fromMemory:()=>Tl,fromMemorySync:()=>Cl,getLoadHandlers:()=>Ki,getModelArtifactsForJSON:()=>Wi,getModelArtifactsForJSONSync:()=>Bi,getModelArtifactsInfoForJSON:()=>Vi,getSaveHandlers:()=>qi,getWeightSpecs:()=>Ui,http:()=>wl,isHTTPScheme:()=>xl,listModels:()=>wo,loadWeights:()=>gl,moveModel:()=>So,registerLoadRouter:()=>Hi,registerSaveRouter:()=>Gi,removeModel:()=>ko,weightsLoaderFactory:()=>yl,withSaveHandler:()=>El,withSaveHandlerSync:()=>$l});var t={};n.r(t),n.d(t,{assertParamsValid:()=>Ml,computeFlatOffset:()=>Xl,computeOutShape:()=>zl,getNormalizedAxes:()=>Vl,isSliceContinous:()=>Kl,maskToAxes:()=>Ll,parseSliceParams:()=>Yl,sliceInfo:()=>Ql,startForAxis:()=>Hl,startIndicesWithElidedDims:()=>Ul,stopForAxis:()=>ql,stopIndicesWithElidedDims:()=>jl,stridesForAxis:()=>Gl,stridesWithElidedDims:()=>Pl});var a={};n.r(a),n.d(a,{conv2d:()=>ch,depthwiseConv2d:()=>hh,matMul:()=>fh});var r={};n.r(r),n.d(r,{collectGatherOpShapeInfo:()=>Tm,computeOutShape:()=>Im,segOpComputeOptimalWindowSize:()=>Sm});var s={};n.r(s),n.d(s,{ERF_A1:()=>Vf,ERF_A2:()=>Uf,ERF_A3:()=>jf,ERF_A4:()=>Gf,ERF_A5:()=>Hf,ERF_P:()=>Wf,PARALLELIZE_THRESHOLD:()=>Rf,RowPartitionType:()=>If,SELU_SCALE:()=>Bf,SELU_SCALEALPHA:()=>Pf,applyActivation:()=>lh,assertAndGetBroadcastShape:()=>al,assertAxesAreInnerMostDims:()=>Sc,assertParamsConsistent:()=>Nf,assignToTypedArray:()=>Zf,axesAreInnerMostDims:()=>vc,calculateShapes:()=>zd,checkEinsumDimSizes:()=>om,checkPadOnDimRoundingMode:()=>Iu,combineLocations:()=>wc,combineRaggedTensorToTensorShapes:()=>Tf,complexWithEvenIndex:()=>Xf,complexWithOddIndex:()=>Yf,computeConv2DInfo:()=>fu,computeConv3DInfo:()=>mu,computeDefaultPad:()=>gu,computeDilation2DInfo:()=>pu,computeOptimalWindowSize:()=>Af,computeOutAndReduceShapes:()=>kc,computeOutShape:()=>Sf,computePool2DInfo:()=>du,computePool3DInfo:()=>hu,convertConv2DDataFormat:()=>Su,decodeEinsumEquation:()=>sm,eitherStridesOrDilationsAreOne:()=>ku,expandShapeToKeepDim:()=>Nc,exponent:()=>em,exponents:()=>Jf,fromStringArrayToUint8:()=>Em,fromUint8ToStringArray:()=>Cm,getAxesPermutation:()=>Ic,getBroadcastDims:()=>tl,getComplexWithIndex:()=>Qf,getEinsumComputePath:()=>lm,getEinsumPermutation:()=>im,getFusedBiasGradient:()=>oh,getFusedDyActivation:()=>ih,getImageCenter:()=>_f,getInnerMostAxes:()=>Cc,getPermuted:()=>Df,getRaggedRank:()=>Ef,getReductionAxes:()=>nl,getReshaped:()=>Ff,getReshapedPermuted:()=>Of,getRowPartitionTypesHelper:()=>Cf,getSliceBeginCoords:()=>Mf,getSliceSize:()=>Lf,getSparseFillEmptyRowsIndicesDenseShapeMismatch:()=>dm,getSparseFillEmptyRowsNegativeIndexErrorMessage:()=>hm,getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:()=>fm,getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:()=>ym,getSparseReshapeInputOutputMismatchErrorMessage:()=>xm,getSparseReshapeInputOutputMultipleErrorMessage:()=>bm,getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:()=>mm,getSparseReshapeNegativeOutputDimErrorMessage:()=>gm,getSparseSegmentReductionIndicesOutOfRangeErrorMessage:()=>Nm,getSparseSegmentReductionNegativeSegmentIdsErrorMessage:()=>vm,getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:()=>wm,getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:()=>km,getUndoAxesPermutation:()=>Tc,isIdentityPermutation:()=>um,log:()=>Gr,mergeRealAndImagArrays:()=>qf,prepareAndValidate:()=>zf,prepareSplitSize:()=>pm,segment_util:()=>r,shouldFuse:()=>uh,slice_util:()=>t,splitRealAndImagArrays:()=>Kf,stridesOrDilationsArePositive:()=>Nu,tupleValuesAreOne:()=>wu,upcastType:()=>Us,validateDefaultValueShape:()=>$f,validateInput:()=>Ld,validateUpdateShape:()=>Md,warn:()=>jr});var i={};n.r(i),n.d(i,{json:()=>Xk});var o={};n.r(o),n.d(o,{json:()=>Yk});var l={};n.r(l),n.d(l,{json:()=>Qk});var u={};n.r(u),n.d(u,{json:()=>Zk});var c={};n.r(c),n.d(c,{json:()=>Jk});var p={};n.r(p),n.d(p,{json:()=>eN});var d={};n.r(d),n.d(d,{json:()=>tN});var h={};n.r(h),n.d(h,{json:()=>nN});var f={};n.r(f),n.d(f,{json:()=>aN});var m={};n.r(m),n.d(m,{json:()=>rN});var g={};n.r(g),n.d(g,{json:()=>sN});var y={};n.r(y),n.d(y,{json:()=>iN});var b={};n.r(b),n.d(b,{json:()=>oN});var x={};n.r(x),n.d(x,{json:()=>lN});var v={};n.r(v),n.d(v,{json:()=>uN});var w={};n.r(w),n.d(w,{json:()=>cN});var k={};n.r(k),n.d(k,{json:()=>pN});var N={};n.r(N),n.d(N,{json:()=>dN});var S={};n.r(S),n.d(S,{json:()=>hN});var I={};n.r(I),n.d(I,{OP_SCOPE_SUFFIX:()=>di,abs:()=>el,acos:()=>Jl,acosh:()=>eu,add:()=>Fo,addN:()=>tu,all:()=>nu,any:()=>au,argMax:()=>ru,argMin:()=>su,asin:()=>iu,asinh:()=>ou,atan:()=>lu,atan2:()=>uu,atanh:()=>cu,avgPool:()=>Cu,avgPool3d:()=>Eu,basicLSTMCell:()=>Du,batchNorm:()=>Mu,batchNorm2d:()=>Lu,batchNorm3d:()=>zu,batchNorm4d:()=>Pu,batchToSpaceND:()=>Ou,bincount:()=>Bu,bitwiseAnd:()=>Wu,booleanMaskAsync:()=>Xd,broadcastArgs:()=>Vu,broadcastTo:()=>Uu,buffer:()=>$o,cast:()=>Ro,ceil:()=>ju,clipByValue:()=>Gu,clone:()=>Ao,complex:()=>fi,concat:()=>$u,concat1d:()=>Hu,concat2d:()=>qu,concat3d:()=>Ku,concat4d:()=>Xu,conv1d:()=>Qu,conv2d:()=>Yu,conv2dTranspose:()=>Ju,conv3d:()=>ec,conv3dTranspose:()=>nc,cos:()=>ac,cosh:()=>rc,cosineWindow:()=>ah,cumprod:()=>sc,cumsum:()=>ic,denseBincount:()=>oc,depthToSpace:()=>lc,depthwiseConv2d:()=>uc,diag:()=>cc,dilation2d:()=>pc,div:()=>Oo,divNoNan:()=>fc,dot:()=>mc,dropout:()=>th,einsum:()=>gc,elu:()=>yc,enclosingPowerOfTwo:()=>nh,ensureShape:()=>bc,equal:()=>dc,erf:()=>xc,euclideanNorm:()=>Fc,exp:()=>Dc,expandDims:()=>Oc,expm1:()=>Mc,eye:()=>zc,fft:()=>vd,fill:()=>Xo,floor:()=>Pc,floorDiv:()=>Do,fused:()=>a,gather:()=>Bc,gatherND:()=>eh,greater:()=>Wc,greaterEqual:()=>Vc,ifft:()=>wd,imag:()=>Uc,image:()=>mf,inTopKAsync:()=>rh,irfft:()=>kd,isFinite:()=>jc,isInf:()=>Gc,isNaN:()=>Hc,leakyRelu:()=>qc,less:()=>Kc,lessEqual:()=>Xc,linalg:()=>gf,linspace:()=>Yc,localResponseNormalization:()=>Qc,log:()=>Zc,log1p:()=>Jc,logSigmoid:()=>np,logSoftmax:()=>ap,logSumExp:()=>rp,logicalAnd:()=>sp,logicalNot:()=>ip,logicalOr:()=>op,logicalXor:()=>lp,losses:()=>yf,lowerBound:()=>pp,matMul:()=>Ru,max:()=>Ec,maxPool:()=>dp,maxPool3d:()=>hp,maxPoolWithArgmax:()=>fp,maximum:()=>rl,mean:()=>mp,meshgrid:()=>bp,min:()=>$c,minimum:()=>xp,mirrorPad:()=>vp,mod:()=>wp,moments:()=>kp,movingAverage:()=>Qd,mul:()=>Mo,multiRNNCell:()=>Np,multinomial:()=>Sp,neg:()=>ep,norm:()=>_c,notEqual:()=>Ip,oneHot:()=>Tp,ones:()=>yp,onesLike:()=>Cp,op:()=>hi,outerProduct:()=>Ep,pad:()=>$p,pad1d:()=>Rp,pad2d:()=>Ap,pad3d:()=>_p,pad4d:()=>Fp,pool:()=>Op,pow:()=>Qo,prelu:()=>Mp,print:()=>_o,prod:()=>Lp,raggedGather:()=>zp,raggedRange:()=>Pp,raggedTensorToTensor:()=>Bp,rand:()=>Wp,randomGamma:()=>Hp,randomNormal:()=>qp,randomStandardNormal:()=>Kp,randomUniform:()=>Xp,randomUniformInt:()=>Yp,range:()=>Qp,real:()=>Zp,reciprocal:()=>Jp,relu:()=>ed,relu6:()=>td,reshape:()=>Tu,reverse:()=>nd,reverse1d:()=>ad,reverse2d:()=>rd,reverse3d:()=>sd,reverse4d:()=>id,rfft:()=>Sd,round:()=>od,rsqrt:()=>ld,scalar:()=>Wo,scatterND:()=>Zd,searchSorted:()=>cp,selu:()=>ud,separableConv2d:()=>cd,setdiff1dAsync:()=>pd,sigmoid:()=>Au,sign:()=>dd,signal:()=>ff,sin:()=>hd,sinh:()=>fd,slice:()=>_u,slice1d:()=>md,slice2d:()=>gd,slice3d:()=>yd,slice4d:()=>bd,softmax:()=>xd,softplus:()=>tp,spaceToBatchND:()=>Dp,sparse:()=>bf,sparseToDense:()=>Jd,spectral:()=>hf,split:()=>Nd,sqrt:()=>Lo,square:()=>zo,squaredDifference:()=>Id,squeeze:()=>Td,stack:()=>Cd,step:()=>Ed,stridedSlice:()=>$d,string:()=>xf,sub:()=>Zo,sum:()=>Rc,tan:()=>Rd,tanh:()=>Fu,tensor:()=>gi,tensor1d:()=>Ad,tensor2d:()=>_d,tensor3d:()=>Rl,tensor4d:()=>Fd,tensor5d:()=>Dd,tensor6d:()=>Od,tensorScatterUpdate:()=>Pd,tile:()=>Lc,topk:()=>Bd,transpose:()=>Yd,truncatedNormal:()=>Wd,unique:()=>Vd,unsortedSegmentSum:()=>Ud,unstack:()=>jd,upperBound:()=>Gd,variable:()=>Hd,where:()=>hc,whereAsync:()=>Kd,zeros:()=>gp,zerosLike:()=>Po});var T={};n.r(T),n.d(T,{mx:()=>fI,XI:()=>iT,Nk:()=>oT,f6:()=>uT,ct:()=>uI,YG:()=>hT,hH:()=>xT,z3:()=>aC,sG:()=>fC,uM:()=>xC,vS:()=>MC,qB:()=>jC,GG:()=>HC,lg:()=>QC,rq:()=>KC,cu:()=>cE,WR:()=>oE,GE:()=>hE,px:()=>mE,jC:()=>RE,He:()=>FE,hE:()=>UE,BF:()=>XT,Dk:()=>JE,cl:()=>o$,_B:()=>v$,ub:()=>I$,_f:()=>E$,Ku:()=>D$,qy:()=>M$,Zy:()=>K$,bu:()=>Q$,zv:()=>eI,dH:()=>NI,HS:()=>nT,yH:()=>yR,l3:()=>xR,z9:()=>wR,x6:()=>TR,_m:()=>FR,eW:()=>zR,GK:()=>WR,SP:()=>jR,yr:()=>HR,dl:()=>IC,Dw:()=>ZR,xT:()=>nA,_X:()=>RI,wz:()=>uA});var C=n(43),E=n(391),$=n(579);const R=()=>{const[e,t]=(0,C.useState)(!1);return(0,$.jsxs)("header",{className:"bg-primary-700 text-white shadow-md",children:[(0,$.jsxs)("div",{className:"container mx-auto px-4 py-4 flex justify-between items-center max-w-4xl",children:[(0,$.jsxs)("div",{className:"flex items-center",children:[(0,$.jsx)("svg",{className:"w-8 h-8 mr-3",fill:"none",stroke:"currentColor",viewBox:"0 0 24 24",xmlns:"http://www.w3.org/2000/svg",children:(0,$.jsx)("path",{strokeLinecap:"round",strokeLinejoin:"round",strokeWidth:2,d:"M9 19c-5 1.5-5-2.5-7-3m14 6v-3.87a3.37 3.37 0 0 0-.94-2.61c3.14-.35 6.44-1.54 6.44-7A5.44 5.44 0 0 0 20 4.77 5.07 5.07 0 0 0 19.91 1S18.73.65 16 2.48a13.38 13.38 0 0 0-7 0C6.27.65 5.09 1 5.09 1A5.07 5.07 0 0 0 5 4.77a5.44 5.44 0 0 0-1.5 3.78c0 5.42 3.3 6.61 6.44 7A3.37 3.37 0 0 0 9 18.13V22"})}),(0,$.jsxs)("div",{children:[(0,$.jsx)("h1",{className:"text-xl font-bold",children:"Lymphoma Detector"}),(0,$.jsx)("p",{className:"text-xs text-white text-opacity-80",children:"Self-Supervised Learning Model"})]})]}),(0,$.jsxs)("button",{onClick:()=>t(!e),className:"bg-primary-600 hover:bg-primary-800 text-white px-3 py-1 rounded-full text-sm flex items-center transition-colors",children:[(0,$.jsx)("span",{children:"About"}),(0,$.jsx)("svg",{className:"w-4 h-4 ml-1",fill:"none",stroke:"currentColor",viewBox:"0 0 24 24",xmlns:"http://www.w3.org/2000/svg",children:(0,$.jsx)("path",{strokeLinecap:"round",strokeLinejoin:"round",strokeWidth:2,d:"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"})})]})]}),e&&(0,$.jsxs)("div",{className:"container mx-auto px-4 py-4 bg-primary-800 text-white text-sm max-w-4xl",children:[(0,$.jsx)("h2",{className:"font-semibold mb-2",children:"About This Project"}),(0,$.jsx)("p",{className:"mb-2",children:"This application uses an enhanced self-supervised learning model for lymphoma classification. The model was trained on three types of lymphoma: Chronic Lymphocytic Leukemia (CLL), Follicular Lymphoma (FL), and Mantle Cell Lymphoma (MCL)."}),(0,$.jsx)("p",{className:"mb-2",children:"The model employs multi-task self-supervised learning with both masked image reconstruction and image rotation prediction as pretext tasks, allowing it to learn robust features even with limited labeled data."}),(0,$.jsxs)("p",{children:[(0,$.jsx)("strong",{children:"Note:"})," This is a research prototype and should not be used for actual medical diagnosis. Always consult with a healthcare professional."]})]})]})},A=()=>(0,$.jsx)("footer",{className:"bg-gray-100 border-t border-gray-200 mt-auto py-4",children:(0,$.jsxs)("div",{className:"container mx-auto px-4 text-center text-sm text-gray-600 max-w-4xl",children:[(0,$.jsxs)("p",{className:"mb-2",children:["\xa9 ",(new Date).getFullYear()," Christopher Oeser - Newcastle University"]}),(0,$.jsxs)("p",{className:"text-xs",children:[(0,$.jsxs)("span",{className:"flex justify-center items-center mb-1",children:[(0,$.jsx)("svg",{className:"w-4 h-4 mr-1 text-yellow-500",fill:"currentColor",viewBox:"0 0 20 20",children:(0,$.jsx)("path",{fillRule:"evenodd",d:"M8.257 3.099c.765-1.36 2.722-1.36 3.486 0l5.58 9.92c.75 1.334-.213 2.98-1.742 2.98H4.42c-1.53 0-2.493-1.646-1.743-2.98l5.58-9.92zM11 13a1 1 0 11-2 0 1 1 0 012 0zm-1-8a1 1 0 00-1 1v3a1 1 0 002 0V6a1 1 0 00-1-1z",clipRule:"evenodd"})}),"For research purposes only and not intended for clinical use."]}),"Built with React, TypeScript, TensorFlow.js, and Tailwind CSS."]}),(0,$.jsxs)("div",{className:"flex justify-center mt-3 space-x-4",children:[(0,$.jsx)("a",{href:"https://github.com/yourusername/lymphoma-detection-app",target:"_blank",rel:"noopener noreferrer",className:"text-gray-500 hover:text-primary-600 transition-colors",children:(0,$.jsx)("svg",{className:"w-5 h-5",fill:"currentColor",viewBox:"0 0 24 24","aria-hidden":"true",children:(0,$.jsx)("path",{fillRule:"evenodd",d:"M12 2C6.477 2 2 6.484 2 12.017c0 4.425 2.865 8.18 6.839 9.504.5.092.682-.217.682-.483 0-.237-.008-.868-.013-1.703-2.782.605-3.369-1.343-3.369-1.343-.454-1.158-1.11-1.466-1.11-1.466-.908-.62.069-.608.069-.608 1.003.07 1.531 1.032 1.531 1.032.892 1.53 2.341 1.088 2.91.832.092-.647.35-1.088.636-1.338-2.22-.253-4.555-1.113-4.555-4.951 0-1.093.39-1.988 1.029-2.688-.103-.253-.446-1.272.098-2.65 0 0 .84-.27 2.75 1.026A9.564 9.564 0 0112 6.844c.85.004 1.705.115 2.504.337 1.909-1.296 2.747-1.027 2.747-1.027.546 1.379.202 2.398.1 2.651.64.7 1.028 1.595 1.028 2.688 0 3.848-2.339 4.695-4.566 4.943.359.309.678.92.678 1.855 0 1.338-.012 2.419-.012 2.747 0 .268.18.58.688.482A10.019 10.019 0 0022 12.017C22 6.484 17.522 2 12 2z",clipRule:"evenodd"})})}),(0,$.jsx)("a",{href:"https://linkedin.com",target:"_blank",rel:"noopener noreferrer",className:"text-gray-500 hover:text-primary-600 transition-colors",children:(0,$.jsx)("svg",{className:"w-5 h-5",fill:"currentColor",viewBox:"0 0 24 24","aria-hidden":"true",children:(0,$.jsx)("path",{d:"M19 0h-14c-2.761 0-5 2.239-5 5v14c0 2.761 2.239 5 5 5h14c2.762 0 5-2.239 5-5v-14c0-2.761-2.238-5-5-5zm-11 19h-3v-11h3v11zm-1.5-12.268c-.966 0-1.75-.79-1.75-1.764s.784-1.764 1.75-1.764 1.75.79 1.75 1.764-.783 1.764-1.75 1.764zm13.5 12.268h-3v-5.604c0-3.368-4-3.113-4 0v5.604h-3v-11h3v1.765c1.396-2.586 7-2.777 7 2.476v6.759z"})})})]})]})});var _=n(173);function F(e,t,n,a){return new(n||(n=Promise))((function(r,s){function i(e){try{l(a.next(e))}catch(t){s(t)}}function o(e){try{l(a.throw(e))}catch(t){s(t)}}function l(e){var t;e.done?r(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(i,o)}l((a=a.apply(e,t||[])).next())}))}Object.create;Object.create;"function"===typeof SuppressedError&&SuppressedError;const D=new Map([["1km","application/vnd.1000minds.decision-model+xml"],["3dml","text/vnd.in3d.3dml"],["3ds","image/x-3ds"],["3g2","video/3gpp2"],["3gp","video/3gp"],["3gpp","video/3gpp"],["3mf","model/3mf"],["7z","application/x-7z-compressed"],["7zip","application/x-7z-compressed"],["123","application/vnd.lotus-1-2-3"],["aab","application/x-authorware-bin"],["aac","audio/x-acc"],["aam","application/x-authorware-map"],["aas","application/x-authorware-seg"],["abw","application/x-abiword"],["ac","application/vnd.nokia.n-gage.ac+xml"],["ac3","audio/ac3"],["acc","application/vnd.americandynamics.acc"],["ace","application/x-ace-compressed"],["acu","application/vnd.acucobol"],["acutc","application/vnd.acucorp"],["adp","audio/adpcm"],["aep","application/vnd.audiograph"],["afm","application/x-font-type1"],["afp","application/vnd.ibm.modcap"],["ahead","application/vnd.ahead.space"],["ai","application/pdf"],["aif","audio/x-aiff"],["aifc","audio/x-aiff"],["aiff","audio/x-aiff"],["air","application/vnd.adobe.air-application-installer-package+zip"],["ait","application/vnd.dvb.ait"],["ami","application/vnd.amiga.ami"],["amr","audio/amr"],["apk","application/vnd.android.package-archive"],["apng","image/apng"],["appcache","text/cache-manifest"],["application","application/x-ms-application"],["apr","application/vnd.lotus-approach"],["arc","application/x-freearc"],["arj","application/x-arj"],["asc","application/pgp-signature"],["asf","video/x-ms-asf"],["asm","text/x-asm"],["aso","application/vnd.accpac.simply.aso"],["asx","video/x-ms-asf"],["atc","application/vnd.acucorp"],["atom","application/atom+xml"],["atomcat","application/atomcat+xml"],["atomdeleted","application/atomdeleted+xml"],["atomsvc","application/atomsvc+xml"],["atx","application/vnd.antix.game-component"],["au","audio/x-au"],["avi","video/x-msvideo"],["avif","image/avif"],["aw","application/applixware"],["azf","application/vnd.airzip.filesecure.azf"],["azs","application/vnd.airzip.filesecure.azs"],["azv","image/vnd.airzip.accelerator.azv"],["azw","application/vnd.amazon.ebook"],["b16","image/vnd.pco.b16"],["bat","application/x-msdownload"],["bcpio","application/x-bcpio"],["bdf","application/x-font-bdf"],["bdm","application/vnd.syncml.dm+wbxml"],["bdoc","application/x-bdoc"],["bed","application/vnd.realvnc.bed"],["bh2","application/vnd.fujitsu.oasysprs"],["bin","application/octet-stream"],["blb","application/x-blorb"],["blorb","application/x-blorb"],["bmi","application/vnd.bmi"],["bmml","application/vnd.balsamiq.bmml+xml"],["bmp","image/bmp"],["book","application/vnd.framemaker"],["box","application/vnd.previewsystems.box"],["boz","application/x-bzip2"],["bpk","application/octet-stream"],["bpmn","application/octet-stream"],["bsp","model/vnd.valve.source.compiled-map"],["btif","image/prs.btif"],["buffer","application/octet-stream"],["bz","application/x-bzip"],["bz2","application/x-bzip2"],["c","text/x-c"],["c4d","application/vnd.clonk.c4group"],["c4f","application/vnd.clonk.c4group"],["c4g","application/vnd.clonk.c4group"],["c4p","application/vnd.clonk.c4group"],["c4u","application/vnd.clonk.c4group"],["c11amc","application/vnd.cluetrust.cartomobile-config"],["c11amz","application/vnd.cluetrust.cartomobile-config-pkg"],["cab","application/vnd.ms-cab-compressed"],["caf","audio/x-caf"],["cap","application/vnd.tcpdump.pcap"],["car","application/vnd.curl.car"],["cat","application/vnd.ms-pki.seccat"],["cb7","application/x-cbr"],["cba","application/x-cbr"],["cbr","application/x-cbr"],["cbt","application/x-cbr"],["cbz","application/x-cbr"],["cc","text/x-c"],["cco","application/x-cocoa"],["cct","application/x-director"],["ccxml","application/ccxml+xml"],["cdbcmsg","application/vnd.contact.cmsg"],["cda","application/x-cdf"],["cdf","application/x-netcdf"],["cdfx","application/cdfx+xml"],["cdkey","application/vnd.mediastation.cdkey"],["cdmia","application/cdmi-capability"],["cdmic","application/cdmi-container"],["cdmid","application/cdmi-domain"],["cdmio","application/cdmi-object"],["cdmiq","application/cdmi-queue"],["cdr","application/cdr"],["cdx","chemical/x-cdx"],["cdxml","application/vnd.chemdraw+xml"],["cdy","application/vnd.cinderella"],["cer","application/pkix-cert"],["cfs","application/x-cfs-compressed"],["cgm","image/cgm"],["chat","application/x-chat"],["chm","application/vnd.ms-htmlhelp"],["chrt","application/vnd.kde.kchart"],["cif","chemical/x-cif"],["cii","application/vnd.anser-web-certificate-issue-initiation"],["cil","application/vnd.ms-artgalry"],["cjs","application/node"],["cla","application/vnd.claymore"],["class","application/octet-stream"],["clkk","application/vnd.crick.clicker.keyboard"],["clkp","application/vnd.crick.clicker.palette"],["clkt","application/vnd.crick.clicker.template"],["clkw","application/vnd.crick.clicker.wordbank"],["clkx","application/vnd.crick.clicker"],["clp","application/x-msclip"],["cmc","application/vnd.cosmocaller"],["cmdf","chemical/x-cmdf"],["cml","chemical/x-cml"],["cmp","application/vnd.yellowriver-custom-menu"],["cmx","image/x-cmx"],["cod","application/vnd.rim.cod"],["coffee","text/coffeescript"],["com","application/x-msdownload"],["conf","text/plain"],["cpio","application/x-cpio"],["cpp","text/x-c"],["cpt","application/mac-compactpro"],["crd","application/x-mscardfile"],["crl","application/pkix-crl"],["crt","application/x-x509-ca-cert"],["crx","application/x-chrome-extension"],["cryptonote","application/vnd.rig.cryptonote"],["csh","application/x-csh"],["csl","application/vnd.citationstyles.style+xml"],["csml","chemical/x-csml"],["csp","application/vnd.commonspace"],["csr","application/octet-stream"],["css","text/css"],["cst","application/x-director"],["csv","text/csv"],["cu","application/cu-seeme"],["curl","text/vnd.curl"],["cww","application/prs.cww"],["cxt","application/x-director"],["cxx","text/x-c"],["dae","model/vnd.collada+xml"],["daf","application/vnd.mobius.daf"],["dart","application/vnd.dart"],["dataless","application/vnd.fdsn.seed"],["davmount","application/davmount+xml"],["dbf","application/vnd.dbf"],["dbk","application/docbook+xml"],["dcr","application/x-director"],["dcurl","text/vnd.curl.dcurl"],["dd2","application/vnd.oma.dd2+xml"],["ddd","application/vnd.fujixerox.ddd"],["ddf","application/vnd.syncml.dmddf+xml"],["dds","image/vnd.ms-dds"],["deb","application/x-debian-package"],["def","text/plain"],["deploy","application/octet-stream"],["der","application/x-x509-ca-cert"],["dfac","application/vnd.dreamfactory"],["dgc","application/x-dgc-compressed"],["dic","text/x-c"],["dir","application/x-director"],["dis","application/vnd.mobius.dis"],["disposition-notification","message/disposition-notification"],["dist","application/octet-stream"],["distz","application/octet-stream"],["djv","image/vnd.djvu"],["djvu","image/vnd.djvu"],["dll","application/octet-stream"],["dmg","application/x-apple-diskimage"],["dmn","application/octet-stream"],["dmp","application/vnd.tcpdump.pcap"],["dms","application/octet-stream"],["dna","application/vnd.dna"],["doc","application/msword"],["docm","application/vnd.ms-word.template.macroEnabled.12"],["docx","application/vnd.openxmlformats-officedocument.wordprocessingml.document"],["dot","application/msword"],["dotm","application/vnd.ms-word.template.macroEnabled.12"],["dotx","application/vnd.openxmlformats-officedocument.wordprocessingml.template"],["dp","application/vnd.osgi.dp"],["dpg","application/vnd.dpgraph"],["dra","audio/vnd.dra"],["drle","image/dicom-rle"],["dsc","text/prs.lines.tag"],["dssc","application/dssc+der"],["dtb","application/x-dtbook+xml"],["dtd","application/xml-dtd"],["dts","audio/vnd.dts"],["dtshd","audio/vnd.dts.hd"],["dump","application/octet-stream"],["dvb","video/vnd.dvb.file"],["dvi","application/x-dvi"],["dwd","application/atsc-dwd+xml"],["dwf","model/vnd.dwf"],["dwg","image/vnd.dwg"],["dxf","image/vnd.dxf"],["dxp","application/vnd.spotfire.dxp"],["dxr","application/x-director"],["ear","application/java-archive"],["ecelp4800","audio/vnd.nuera.ecelp4800"],["ecelp7470","audio/vnd.nuera.ecelp7470"],["ecelp9600","audio/vnd.nuera.ecelp9600"],["ecma","application/ecmascript"],["edm","application/vnd.novadigm.edm"],["edx","application/vnd.novadigm.edx"],["efif","application/vnd.picsel"],["ei6","application/vnd.pg.osasli"],["elc","application/octet-stream"],["emf","image/emf"],["eml","message/rfc822"],["emma","application/emma+xml"],["emotionml","application/emotionml+xml"],["emz","application/x-msmetafile"],["eol","audio/vnd.digital-winds"],["eot","application/vnd.ms-fontobject"],["eps","application/postscript"],["epub","application/epub+zip"],["es","application/ecmascript"],["es3","application/vnd.eszigno3+xml"],["esa","application/vnd.osgi.subsystem"],["esf","application/vnd.epson.esf"],["et3","application/vnd.eszigno3+xml"],["etx","text/x-setext"],["eva","application/x-eva"],["evy","application/x-envoy"],["exe","application/octet-stream"],["exi","application/exi"],["exp","application/express"],["exr","image/aces"],["ext","application/vnd.novadigm.ext"],["ez","application/andrew-inset"],["ez2","application/vnd.ezpix-album"],["ez3","application/vnd.ezpix-package"],["f","text/x-fortran"],["f4v","video/mp4"],["f77","text/x-fortran"],["f90","text/x-fortran"],["fbs","image/vnd.fastbidsheet"],["fcdt","application/vnd.adobe.formscentral.fcdt"],["fcs","application/vnd.isac.fcs"],["fdf","application/vnd.fdf"],["fdt","application/fdt+xml"],["fe_launch","application/vnd.denovo.fcselayout-link"],["fg5","application/vnd.fujitsu.oasysgp"],["fgd","application/x-director"],["fh","image/x-freehand"],["fh4","image/x-freehand"],["fh5","image/x-freehand"],["fh7","image/x-freehand"],["fhc","image/x-freehand"],["fig","application/x-xfig"],["fits","image/fits"],["flac","audio/x-flac"],["fli","video/x-fli"],["flo","application/vnd.micrografx.flo"],["flv","video/x-flv"],["flw","application/vnd.kde.kivio"],["flx","text/vnd.fmi.flexstor"],["fly","text/vnd.fly"],["fm","application/vnd.framemaker"],["fnc","application/vnd.frogans.fnc"],["fo","application/vnd.software602.filler.form+xml"],["for","text/x-fortran"],["fpx","image/vnd.fpx"],["frame","application/vnd.framemaker"],["fsc","application/vnd.fsc.weblaunch"],["fst","image/vnd.fst"],["ftc","application/vnd.fluxtime.clip"],["fti","application/vnd.anser-web-funds-transfer-initiation"],["fvt","video/vnd.fvt"],["fxp","application/vnd.adobe.fxp"],["fxpl","application/vnd.adobe.fxp"],["fzs","application/vnd.fuzzysheet"],["g2w","application/vnd.geoplan"],["g3","image/g3fax"],["g3w","application/vnd.geospace"],["gac","application/vnd.groove-account"],["gam","application/x-tads"],["gbr","application/rpki-ghostbusters"],["gca","application/x-gca-compressed"],["gdl","model/vnd.gdl"],["gdoc","application/vnd.google-apps.document"],["geo","application/vnd.dynageo"],["geojson","application/geo+json"],["gex","application/vnd.geometry-explorer"],["ggb","application/vnd.geogebra.file"],["ggt","application/vnd.geogebra.tool"],["ghf","application/vnd.groove-help"],["gif","image/gif"],["gim","application/vnd.groove-identity-message"],["glb","model/gltf-binary"],["gltf","model/gltf+json"],["gml","application/gml+xml"],["gmx","application/vnd.gmx"],["gnumeric","application/x-gnumeric"],["gpg","application/gpg-keys"],["gph","application/vnd.flographit"],["gpx","application/gpx+xml"],["gqf","application/vnd.grafeq"],["gqs","application/vnd.grafeq"],["gram","application/srgs"],["gramps","application/x-gramps-xml"],["gre","application/vnd.geometry-explorer"],["grv","application/vnd.groove-injector"],["grxml","application/srgs+xml"],["gsf","application/x-font-ghostscript"],["gsheet","application/vnd.google-apps.spreadsheet"],["gslides","application/vnd.google-apps.presentation"],["gtar","application/x-gtar"],["gtm","application/vnd.groove-tool-message"],["gtw","model/vnd.gtw"],["gv","text/vnd.graphviz"],["gxf","application/gxf"],["gxt","application/vnd.geonext"],["gz","application/gzip"],["gzip","application/gzip"],["h","text/x-c"],["h261","video/h261"],["h263","video/h263"],["h264","video/h264"],["hal","application/vnd.hal+xml"],["hbci","application/vnd.hbci"],["hbs","text/x-handlebars-template"],["hdd","application/x-virtualbox-hdd"],["hdf","application/x-hdf"],["heic","image/heic"],["heics","image/heic-sequence"],["heif","image/heif"],["heifs","image/heif-sequence"],["hej2","image/hej2k"],["held","application/atsc-held+xml"],["hh","text/x-c"],["hjson","application/hjson"],["hlp","application/winhlp"],["hpgl","application/vnd.hp-hpgl"],["hpid","application/vnd.hp-hpid"],["hps","application/vnd.hp-hps"],["hqx","application/mac-binhex40"],["hsj2","image/hsj2"],["htc","text/x-component"],["htke","application/vnd.kenameaapp"],["htm","text/html"],["html","text/html"],["hvd","application/vnd.yamaha.hv-dic"],["hvp","application/vnd.yamaha.hv-voice"],["hvs","application/vnd.yamaha.hv-script"],["i2g","application/vnd.intergeo"],["icc","application/vnd.iccprofile"],["ice","x-conference/x-cooltalk"],["icm","application/vnd.iccprofile"],["ico","image/x-icon"],["ics","text/calendar"],["ief","image/ief"],["ifb","text/calendar"],["ifm","application/vnd.shana.informed.formdata"],["iges","model/iges"],["igl","application/vnd.igloader"],["igm","application/vnd.insors.igm"],["igs","model/iges"],["igx","application/vnd.micrografx.igx"],["iif","application/vnd.shana.informed.interchange"],["img","application/octet-stream"],["imp","application/vnd.accpac.simply.imp"],["ims","application/vnd.ms-ims"],["in","text/plain"],["ini","text/plain"],["ink","application/inkml+xml"],["inkml","application/inkml+xml"],["install","application/x-install-instructions"],["iota","application/vnd.astraea-software.iota"],["ipfix","application/ipfix"],["ipk","application/vnd.shana.informed.package"],["irm","application/vnd.ibm.rights-management"],["irp","application/vnd.irepository.package+xml"],["iso","application/x-iso9660-image"],["itp","application/vnd.shana.informed.formtemplate"],["its","application/its+xml"],["ivp","application/vnd.immervision-ivp"],["ivu","application/vnd.immervision-ivu"],["jad","text/vnd.sun.j2me.app-descriptor"],["jade","text/jade"],["jam","application/vnd.jam"],["jar","application/java-archive"],["jardiff","application/x-java-archive-diff"],["java","text/x-java-source"],["jhc","image/jphc"],["jisp","application/vnd.jisp"],["jls","image/jls"],["jlt","application/vnd.hp-jlyt"],["jng","image/x-jng"],["jnlp","application/x-java-jnlp-file"],["joda","application/vnd.joost.joda-archive"],["jp2","image/jp2"],["jpe","image/jpeg"],["jpeg","image/jpeg"],["jpf","image/jpx"],["jpg","image/jpeg"],["jpg2","image/jp2"],["jpgm","video/jpm"],["jpgv","video/jpeg"],["jph","image/jph"],["jpm","video/jpm"],["jpx","image/jpx"],["js","application/javascript"],["json","application/json"],["json5","application/json5"],["jsonld","application/ld+json"],["jsonl","application/jsonl"],["jsonml","application/jsonml+json"],["jsx","text/jsx"],["jxr","image/jxr"],["jxra","image/jxra"],["jxrs","image/jxrs"],["jxs","image/jxs"],["jxsc","image/jxsc"],["jxsi","image/jxsi"],["jxss","image/jxss"],["kar","audio/midi"],["karbon","application/vnd.kde.karbon"],["kdb","application/octet-stream"],["kdbx","application/x-keepass2"],["key","application/x-iwork-keynote-sffkey"],["kfo","application/vnd.kde.kformula"],["kia","application/vnd.kidspiration"],["kml","application/vnd.google-earth.kml+xml"],["kmz","application/vnd.google-earth.kmz"],["kne","application/vnd.kinar"],["knp","application/vnd.kinar"],["kon","application/vnd.kde.kontour"],["kpr","application/vnd.kde.kpresenter"],["kpt","application/vnd.kde.kpresenter"],["kpxx","application/vnd.ds-keypoint"],["ksp","application/vnd.kde.kspread"],["ktr","application/vnd.kahootz"],["ktx","image/ktx"],["ktx2","image/ktx2"],["ktz","application/vnd.kahootz"],["kwd","application/vnd.kde.kword"],["kwt","application/vnd.kde.kword"],["lasxml","application/vnd.las.las+xml"],["latex","application/x-latex"],["lbd","application/vnd.llamagraphics.life-balance.desktop"],["lbe","application/vnd.llamagraphics.life-balance.exchange+xml"],["les","application/vnd.hhe.lesson-player"],["less","text/less"],["lgr","application/lgr+xml"],["lha","application/octet-stream"],["link66","application/vnd.route66.link66+xml"],["list","text/plain"],["list3820","application/vnd.ibm.modcap"],["listafp","application/vnd.ibm.modcap"],["litcoffee","text/coffeescript"],["lnk","application/x-ms-shortcut"],["log","text/plain"],["lostxml","application/lost+xml"],["lrf","application/octet-stream"],["lrm","application/vnd.ms-lrm"],["ltf","application/vnd.frogans.ltf"],["lua","text/x-lua"],["luac","application/x-lua-bytecode"],["lvp","audio/vnd.lucent.voice"],["lwp","application/vnd.lotus-wordpro"],["lzh","application/octet-stream"],["m1v","video/mpeg"],["m2a","audio/mpeg"],["m2v","video/mpeg"],["m3a","audio/mpeg"],["m3u","text/plain"],["m3u8","application/vnd.apple.mpegurl"],["m4a","audio/x-m4a"],["m4p","application/mp4"],["m4s","video/iso.segment"],["m4u","application/vnd.mpegurl"],["m4v","video/x-m4v"],["m13","application/x-msmediaview"],["m14","application/x-msmediaview"],["m21","application/mp21"],["ma","application/mathematica"],["mads","application/mads+xml"],["maei","application/mmt-aei+xml"],["mag","application/vnd.ecowin.chart"],["maker","application/vnd.framemaker"],["man","text/troff"],["manifest","text/cache-manifest"],["map","application/json"],["mar","application/octet-stream"],["markdown","text/markdown"],["mathml","application/mathml+xml"],["mb","application/mathematica"],["mbk","application/vnd.mobius.mbk"],["mbox","application/mbox"],["mc1","application/vnd.medcalcdata"],["mcd","application/vnd.mcd"],["mcurl","text/vnd.curl.mcurl"],["md","text/markdown"],["mdb","application/x-msaccess"],["mdi","image/vnd.ms-modi"],["mdx","text/mdx"],["me","text/troff"],["mesh","model/mesh"],["meta4","application/metalink4+xml"],["metalink","application/metalink+xml"],["mets","application/mets+xml"],["mfm","application/vnd.mfmp"],["mft","application/rpki-manifest"],["mgp","application/vnd.osgeo.mapguide.package"],["mgz","application/vnd.proteus.magazine"],["mid","audio/midi"],["midi","audio/midi"],["mie","application/x-mie"],["mif","application/vnd.mif"],["mime","message/rfc822"],["mj2","video/mj2"],["mjp2","video/mj2"],["mjs","application/javascript"],["mk3d","video/x-matroska"],["mka","audio/x-matroska"],["mkd","text/x-markdown"],["mks","video/x-matroska"],["mkv","video/x-matroska"],["mlp","application/vnd.dolby.mlp"],["mmd","application/vnd.chipnuts.karaoke-mmd"],["mmf","application/vnd.smaf"],["mml","text/mathml"],["mmr","image/vnd.fujixerox.edmics-mmr"],["mng","video/x-mng"],["mny","application/x-msmoney"],["mobi","application/x-mobipocket-ebook"],["mods","application/mods+xml"],["mov","video/quicktime"],["movie","video/x-sgi-movie"],["mp2","audio/mpeg"],["mp2a","audio/mpeg"],["mp3","audio/mpeg"],["mp4","video/mp4"],["mp4a","audio/mp4"],["mp4s","application/mp4"],["mp4v","video/mp4"],["mp21","application/mp21"],["mpc","application/vnd.mophun.certificate"],["mpd","application/dash+xml"],["mpe","video/mpeg"],["mpeg","video/mpeg"],["mpg","video/mpeg"],["mpg4","video/mp4"],["mpga","audio/mpeg"],["mpkg","application/vnd.apple.installer+xml"],["mpm","application/vnd.blueice.multipass"],["mpn","application/vnd.mophun.application"],["mpp","application/vnd.ms-project"],["mpt","application/vnd.ms-project"],["mpy","application/vnd.ibm.minipay"],["mqy","application/vnd.mobius.mqy"],["mrc","application/marc"],["mrcx","application/marcxml+xml"],["ms","text/troff"],["mscml","application/mediaservercontrol+xml"],["mseed","application/vnd.fdsn.mseed"],["mseq","application/vnd.mseq"],["msf","application/vnd.epson.msf"],["msg","application/vnd.ms-outlook"],["msh","model/mesh"],["msi","application/x-msdownload"],["msl","application/vnd.mobius.msl"],["msm","application/octet-stream"],["msp","application/octet-stream"],["msty","application/vnd.muvee.style"],["mtl","model/mtl"],["mts","model/vnd.mts"],["mus","application/vnd.musician"],["musd","application/mmt-usd+xml"],["musicxml","application/vnd.recordare.musicxml+xml"],["mvb","application/x-msmediaview"],["mvt","application/vnd.mapbox-vector-tile"],["mwf","application/vnd.mfer"],["mxf","application/mxf"],["mxl","application/vnd.recordare.musicxml"],["mxmf","audio/mobile-xmf"],["mxml","application/xv+xml"],["mxs","application/vnd.triscape.mxs"],["mxu","video/vnd.mpegurl"],["n-gage","application/vnd.nokia.n-gage.symbian.install"],["n3","text/n3"],["nb","application/mathematica"],["nbp","application/vnd.wolfram.player"],["nc","application/x-netcdf"],["ncx","application/x-dtbncx+xml"],["nfo","text/x-nfo"],["ngdat","application/vnd.nokia.n-gage.data"],["nitf","application/vnd.nitf"],["nlu","application/vnd.neurolanguage.nlu"],["nml","application/vnd.enliven"],["nnd","application/vnd.noblenet-directory"],["nns","application/vnd.noblenet-sealer"],["nnw","application/vnd.noblenet-web"],["npx","image/vnd.net-fpx"],["nq","application/n-quads"],["nsc","application/x-conference"],["nsf","application/vnd.lotus-notes"],["nt","application/n-triples"],["ntf","application/vnd.nitf"],["numbers","application/x-iwork-numbers-sffnumbers"],["nzb","application/x-nzb"],["oa2","application/vnd.fujitsu.oasys2"],["oa3","application/vnd.fujitsu.oasys3"],["oas","application/vnd.fujitsu.oasys"],["obd","application/x-msbinder"],["obgx","application/vnd.openblox.game+xml"],["obj","model/obj"],["oda","application/oda"],["odb","application/vnd.oasis.opendocument.database"],["odc","application/vnd.oasis.opendocument.chart"],["odf","application/vnd.oasis.opendocument.formula"],["odft","application/vnd.oasis.opendocument.formula-template"],["odg","application/vnd.oasis.opendocument.graphics"],["odi","application/vnd.oasis.opendocument.image"],["odm","application/vnd.oasis.opendocument.text-master"],["odp","application/vnd.oasis.opendocument.presentation"],["ods","application/vnd.oasis.opendocument.spreadsheet"],["odt","application/vnd.oasis.opendocument.text"],["oga","audio/ogg"],["ogex","model/vnd.opengex"],["ogg","audio/ogg"],["ogv","video/ogg"],["ogx","application/ogg"],["omdoc","application/omdoc+xml"],["onepkg","application/onenote"],["onetmp","application/onenote"],["onetoc","application/onenote"],["onetoc2","application/onenote"],["opf","application/oebps-package+xml"],["opml","text/x-opml"],["oprc","application/vnd.palm"],["opus","audio/ogg"],["org","text/x-org"],["osf","application/vnd.yamaha.openscoreformat"],["osfpvg","application/vnd.yamaha.openscoreformat.osfpvg+xml"],["osm","application/vnd.openstreetmap.data+xml"],["otc","application/vnd.oasis.opendocument.chart-template"],["otf","font/otf"],["otg","application/vnd.oasis.opendocument.graphics-template"],["oth","application/vnd.oasis.opendocument.text-web"],["oti","application/vnd.oasis.opendocument.image-template"],["otp","application/vnd.oasis.opendocument.presentation-template"],["ots","application/vnd.oasis.opendocument.spreadsheet-template"],["ott","application/vnd.oasis.opendocument.text-template"],["ova","application/x-virtualbox-ova"],["ovf","application/x-virtualbox-ovf"],["owl","application/rdf+xml"],["oxps","application/oxps"],["oxt","application/vnd.openofficeorg.extension"],["p","text/x-pascal"],["p7a","application/x-pkcs7-signature"],["p7b","application/x-pkcs7-certificates"],["p7c","application/pkcs7-mime"],["p7m","application/pkcs7-mime"],["p7r","application/x-pkcs7-certreqresp"],["p7s","application/pkcs7-signature"],["p8","application/pkcs8"],["p10","application/x-pkcs10"],["p12","application/x-pkcs12"],["pac","application/x-ns-proxy-autoconfig"],["pages","application/x-iwork-pages-sffpages"],["pas","text/x-pascal"],["paw","application/vnd.pawaafile"],["pbd","application/vnd.powerbuilder6"],["pbm","image/x-portable-bitmap"],["pcap","application/vnd.tcpdump.pcap"],["pcf","application/x-font-pcf"],["pcl","application/vnd.hp-pcl"],["pclxl","application/vnd.hp-pclxl"],["pct","image/x-pict"],["pcurl","application/vnd.curl.pcurl"],["pcx","image/x-pcx"],["pdb","application/x-pilot"],["pde","text/x-processing"],["pdf","application/pdf"],["pem","application/x-x509-user-cert"],["pfa","application/x-font-type1"],["pfb","application/x-font-type1"],["pfm","application/x-font-type1"],["pfr","application/font-tdpfr"],["pfx","application/x-pkcs12"],["pgm","image/x-portable-graymap"],["pgn","application/x-chess-pgn"],["pgp","application/pgp"],["php","application/x-httpd-php"],["php3","application/x-httpd-php"],["php4","application/x-httpd-php"],["phps","application/x-httpd-php-source"],["phtml","application/x-httpd-php"],["pic","image/x-pict"],["pkg","application/octet-stream"],["pki","application/pkixcmp"],["pkipath","application/pkix-pkipath"],["pkpass","application/vnd.apple.pkpass"],["pl","application/x-perl"],["plb","application/vnd.3gpp.pic-bw-large"],["plc","application/vnd.mobius.plc"],["plf","application/vnd.pocketlearn"],["pls","application/pls+xml"],["pm","application/x-perl"],["pml","application/vnd.ctc-posml"],["png","image/png"],["pnm","image/x-portable-anymap"],["portpkg","application/vnd.macports.portpkg"],["pot","application/vnd.ms-powerpoint"],["potm","application/vnd.ms-powerpoint.presentation.macroEnabled.12"],["potx","application/vnd.openxmlformats-officedocument.presentationml.template"],["ppa","application/vnd.ms-powerpoint"],["ppam","application/vnd.ms-powerpoint.addin.macroEnabled.12"],["ppd","application/vnd.cups-ppd"],["ppm","image/x-portable-pixmap"],["pps","application/vnd.ms-powerpoint"],["ppsm","application/vnd.ms-powerpoint.slideshow.macroEnabled.12"],["ppsx","application/vnd.openxmlformats-officedocument.presentationml.slideshow"],["ppt","application/powerpoint"],["pptm","application/vnd.ms-powerpoint.presentation.macroEnabled.12"],["pptx","application/vnd.openxmlformats-officedocument.presentationml.presentation"],["pqa","application/vnd.palm"],["prc","application/x-pilot"],["pre","application/vnd.lotus-freelance"],["prf","application/pics-rules"],["provx","application/provenance+xml"],["ps","application/postscript"],["psb","application/vnd.3gpp.pic-bw-small"],["psd","application/x-photoshop"],["psf","application/x-font-linux-psf"],["pskcxml","application/pskc+xml"],["pti","image/prs.pti"],["ptid","application/vnd.pvi.ptid1"],["pub","application/x-mspublisher"],["pvb","application/vnd.3gpp.pic-bw-var"],["pwn","application/vnd.3m.post-it-notes"],["pya","audio/vnd.ms-playready.media.pya"],["pyv","video/vnd.ms-playready.media.pyv"],["qam","application/vnd.epson.quickanime"],["qbo","application/vnd.intu.qbo"],["qfx","application/vnd.intu.qfx"],["qps","application/vnd.publishare-delta-tree"],["qt","video/quicktime"],["qwd","application/vnd.quark.quarkxpress"],["qwt","application/vnd.quark.quarkxpress"],["qxb","application/vnd.quark.quarkxpress"],["qxd","application/vnd.quark.quarkxpress"],["qxl","application/vnd.quark.quarkxpress"],["qxt","application/vnd.quark.quarkxpress"],["ra","audio/x-realaudio"],["ram","audio/x-pn-realaudio"],["raml","application/raml+yaml"],["rapd","application/route-apd+xml"],["rar","application/x-rar"],["ras","image/x-cmu-raster"],["rcprofile","application/vnd.ipunplugged.rcprofile"],["rdf","application/rdf+xml"],["rdz","application/vnd.data-vision.rdz"],["relo","application/p2p-overlay+xml"],["rep","application/vnd.businessobjects"],["res","application/x-dtbresource+xml"],["rgb","image/x-rgb"],["rif","application/reginfo+xml"],["rip","audio/vnd.rip"],["ris","application/x-research-info-systems"],["rl","application/resource-lists+xml"],["rlc","image/vnd.fujixerox.edmics-rlc"],["rld","application/resource-lists-diff+xml"],["rm","audio/x-pn-realaudio"],["rmi","audio/midi"],["rmp","audio/x-pn-realaudio-plugin"],["rms","application/vnd.jcp.javame.midlet-rms"],["rmvb","application/vnd.rn-realmedia-vbr"],["rnc","application/relax-ng-compact-syntax"],["rng","application/xml"],["roa","application/rpki-roa"],["roff","text/troff"],["rp9","application/vnd.cloanto.rp9"],["rpm","audio/x-pn-realaudio-plugin"],["rpss","application/vnd.nokia.radio-presets"],["rpst","application/vnd.nokia.radio-preset"],["rq","application/sparql-query"],["rs","application/rls-services+xml"],["rsa","application/x-pkcs7"],["rsat","application/atsc-rsat+xml"],["rsd","application/rsd+xml"],["rsheet","application/urc-ressheet+xml"],["rss","application/rss+xml"],["rtf","text/rtf"],["rtx","text/richtext"],["run","application/x-makeself"],["rusd","application/route-usd+xml"],["rv","video/vnd.rn-realvideo"],["s","text/x-asm"],["s3m","audio/s3m"],["saf","application/vnd.yamaha.smaf-audio"],["sass","text/x-sass"],["sbml","application/sbml+xml"],["sc","application/vnd.ibm.secure-container"],["scd","application/x-msschedule"],["scm","application/vnd.lotus-screencam"],["scq","application/scvp-cv-request"],["scs","application/scvp-cv-response"],["scss","text/x-scss"],["scurl","text/vnd.curl.scurl"],["sda","application/vnd.stardivision.draw"],["sdc","application/vnd.stardivision.calc"],["sdd","application/vnd.stardivision.impress"],["sdkd","application/vnd.solent.sdkm+xml"],["sdkm","application/vnd.solent.sdkm+xml"],["sdp","application/sdp"],["sdw","application/vnd.stardivision.writer"],["sea","application/octet-stream"],["see","application/vnd.seemail"],["seed","application/vnd.fdsn.seed"],["sema","application/vnd.sema"],["semd","application/vnd.semd"],["semf","application/vnd.semf"],["senmlx","application/senml+xml"],["sensmlx","application/sensml+xml"],["ser","application/java-serialized-object"],["setpay","application/set-payment-initiation"],["setreg","application/set-registration-initiation"],["sfd-hdstx","application/vnd.hydrostatix.sof-data"],["sfs","application/vnd.spotfire.sfs"],["sfv","text/x-sfv"],["sgi","image/sgi"],["sgl","application/vnd.stardivision.writer-global"],["sgm","text/sgml"],["sgml","text/sgml"],["sh","application/x-sh"],["shar","application/x-shar"],["shex","text/shex"],["shf","application/shf+xml"],["shtml","text/html"],["sid","image/x-mrsid-image"],["sieve","application/sieve"],["sig","application/pgp-signature"],["sil","audio/silk"],["silo","model/mesh"],["sis","application/vnd.symbian.install"],["sisx","application/vnd.symbian.install"],["sit","application/x-stuffit"],["sitx","application/x-stuffitx"],["siv","application/sieve"],["skd","application/vnd.koan"],["skm","application/vnd.koan"],["skp","application/vnd.koan"],["skt","application/vnd.koan"],["sldm","application/vnd.ms-powerpoint.slide.macroenabled.12"],["sldx","application/vnd.openxmlformats-officedocument.presentationml.slide"],["slim","text/slim"],["slm","text/slim"],["sls","application/route-s-tsid+xml"],["slt","application/vnd.epson.salt"],["sm","application/vnd.stepmania.stepchart"],["smf","application/vnd.stardivision.math"],["smi","application/smil"],["smil","application/smil"],["smv","video/x-smv"],["smzip","application/vnd.stepmania.package"],["snd","audio/basic"],["snf","application/x-font-snf"],["so","application/octet-stream"],["spc","application/x-pkcs7-certificates"],["spdx","text/spdx"],["spf","application/vnd.yamaha.smaf-phrase"],["spl","application/x-futuresplash"],["spot","text/vnd.in3d.spot"],["spp","application/scvp-vp-response"],["spq","application/scvp-vp-request"],["spx","audio/ogg"],["sql","application/x-sql"],["src","application/x-wais-source"],["srt","application/x-subrip"],["sru","application/sru+xml"],["srx","application/sparql-results+xml"],["ssdl","application/ssdl+xml"],["sse","application/vnd.kodak-descriptor"],["ssf","application/vnd.epson.ssf"],["ssml","application/ssml+xml"],["sst","application/octet-stream"],["st","application/vnd.sailingtracker.track"],["stc","application/vnd.sun.xml.calc.template"],["std","application/vnd.sun.xml.draw.template"],["stf","application/vnd.wt.stf"],["sti","application/vnd.sun.xml.impress.template"],["stk","application/hyperstudio"],["stl","model/stl"],["stpx","model/step+xml"],["stpxz","model/step-xml+zip"],["stpz","model/step+zip"],["str","application/vnd.pg.format"],["stw","application/vnd.sun.xml.writer.template"],["styl","text/stylus"],["stylus","text/stylus"],["sub","text/vnd.dvb.subtitle"],["sus","application/vnd.sus-calendar"],["susp","application/vnd.sus-calendar"],["sv4cpio","application/x-sv4cpio"],["sv4crc","application/x-sv4crc"],["svc","application/vnd.dvb.service"],["svd","application/vnd.svd"],["svg","image/svg+xml"],["svgz","image/svg+xml"],["swa","application/x-director"],["swf","application/x-shockwave-flash"],["swi","application/vnd.aristanetworks.swi"],["swidtag","application/swid+xml"],["sxc","application/vnd.sun.xml.calc"],["sxd","application/vnd.sun.xml.draw"],["sxg","application/vnd.sun.xml.writer.global"],["sxi","application/vnd.sun.xml.impress"],["sxm","application/vnd.sun.xml.math"],["sxw","application/vnd.sun.xml.writer"],["t","text/troff"],["t3","application/x-t3vm-image"],["t38","image/t38"],["taglet","application/vnd.mynfc"],["tao","application/vnd.tao.intent-module-archive"],["tap","image/vnd.tencent.tap"],["tar","application/x-tar"],["tcap","application/vnd.3gpp2.tcap"],["tcl","application/x-tcl"],["td","application/urc-targetdesc+xml"],["teacher","application/vnd.smart.teacher"],["tei","application/tei+xml"],["teicorpus","application/tei+xml"],["tex","application/x-tex"],["texi","application/x-texinfo"],["texinfo","application/x-texinfo"],["text","text/plain"],["tfi","application/thraud+xml"],["tfm","application/x-tex-tfm"],["tfx","image/tiff-fx"],["tga","image/x-tga"],["tgz","application/x-tar"],["thmx","application/vnd.ms-officetheme"],["tif","image/tiff"],["tiff","image/tiff"],["tk","application/x-tcl"],["tmo","application/vnd.tmobile-livetv"],["toml","application/toml"],["torrent","application/x-bittorrent"],["tpl","application/vnd.groove-tool-template"],["tpt","application/vnd.trid.tpt"],["tr","text/troff"],["tra","application/vnd.trueapp"],["trig","application/trig"],["trm","application/x-msterminal"],["ts","video/mp2t"],["tsd","application/timestamped-data"],["tsv","text/tab-separated-values"],["ttc","font/collection"],["ttf","font/ttf"],["ttl","text/turtle"],["ttml","application/ttml+xml"],["twd","application/vnd.simtech-mindmapper"],["twds","application/vnd.simtech-mindmapper"],["txd","application/vnd.genomatix.tuxedo"],["txf","application/vnd.mobius.txf"],["txt","text/plain"],["u8dsn","message/global-delivery-status"],["u8hdr","message/global-headers"],["u8mdn","message/global-disposition-notification"],["u8msg","message/global"],["u32","application/x-authorware-bin"],["ubj","application/ubjson"],["udeb","application/x-debian-package"],["ufd","application/vnd.ufdl"],["ufdl","application/vnd.ufdl"],["ulx","application/x-glulx"],["umj","application/vnd.umajin"],["unityweb","application/vnd.unity"],["uoml","application/vnd.uoml+xml"],["uri","text/uri-list"],["uris","text/uri-list"],["urls","text/uri-list"],["usdz","model/vnd.usdz+zip"],["ustar","application/x-ustar"],["utz","application/vnd.uiq.theme"],["uu","text/x-uuencode"],["uva","audio/vnd.dece.audio"],["uvd","application/vnd.dece.data"],["uvf","application/vnd.dece.data"],["uvg","image/vnd.dece.graphic"],["uvh","video/vnd.dece.hd"],["uvi","image/vnd.dece.graphic"],["uvm","video/vnd.dece.mobile"],["uvp","video/vnd.dece.pd"],["uvs","video/vnd.dece.sd"],["uvt","application/vnd.dece.ttml+xml"],["uvu","video/vnd.uvvu.mp4"],["uvv","video/vnd.dece.video"],["uvva","audio/vnd.dece.audio"],["uvvd","application/vnd.dece.data"],["uvvf","application/vnd.dece.data"],["uvvg","image/vnd.dece.graphic"],["uvvh","video/vnd.dece.hd"],["uvvi","image/vnd.dece.graphic"],["uvvm","video/vnd.dece.mobile"],["uvvp","video/vnd.dece.pd"],["uvvs","video/vnd.dece.sd"],["uvvt","application/vnd.dece.ttml+xml"],["uvvu","video/vnd.uvvu.mp4"],["uvvv","video/vnd.dece.video"],["uvvx","application/vnd.dece.unspecified"],["uvvz","application/vnd.dece.zip"],["uvx","application/vnd.dece.unspecified"],["uvz","application/vnd.dece.zip"],["vbox","application/x-virtualbox-vbox"],["vbox-extpack","application/x-virtualbox-vbox-extpack"],["vcard","text/vcard"],["vcd","application/x-cdlink"],["vcf","text/x-vcard"],["vcg","application/vnd.groove-vcard"],["vcs","text/x-vcalendar"],["vcx","application/vnd.vcx"],["vdi","application/x-virtualbox-vdi"],["vds","model/vnd.sap.vds"],["vhd","application/x-virtualbox-vhd"],["vis","application/vnd.visionary"],["viv","video/vnd.vivo"],["vlc","application/videolan"],["vmdk","application/x-virtualbox-vmdk"],["vob","video/x-ms-vob"],["vor","application/vnd.stardivision.writer"],["vox","application/x-authorware-bin"],["vrml","model/vrml"],["vsd","application/vnd.visio"],["vsf","application/vnd.vsf"],["vss","application/vnd.visio"],["vst","application/vnd.visio"],["vsw","application/vnd.visio"],["vtf","image/vnd.valve.source.texture"],["vtt","text/vtt"],["vtu","model/vnd.vtu"],["vxml","application/voicexml+xml"],["w3d","application/x-director"],["wad","application/x-doom"],["wadl","application/vnd.sun.wadl+xml"],["war","application/java-archive"],["wasm","application/wasm"],["wav","audio/x-wav"],["wax","audio/x-ms-wax"],["wbmp","image/vnd.wap.wbmp"],["wbs","application/vnd.criticaltools.wbs+xml"],["wbxml","application/wbxml"],["wcm","application/vnd.ms-works"],["wdb","application/vnd.ms-works"],["wdp","image/vnd.ms-photo"],["weba","audio/webm"],["webapp","application/x-web-app-manifest+json"],["webm","video/webm"],["webmanifest","application/manifest+json"],["webp","image/webp"],["wg","application/vnd.pmi.widget"],["wgt","application/widget"],["wks","application/vnd.ms-works"],["wm","video/x-ms-wm"],["wma","audio/x-ms-wma"],["wmd","application/x-ms-wmd"],["wmf","image/wmf"],["wml","text/vnd.wap.wml"],["wmlc","application/wmlc"],["wmls","text/vnd.wap.wmlscript"],["wmlsc","application/vnd.wap.wmlscriptc"],["wmv","video/x-ms-wmv"],["wmx","video/x-ms-wmx"],["wmz","application/x-msmetafile"],["woff","font/woff"],["woff2","font/woff2"],["word","application/msword"],["wpd","application/vnd.wordperfect"],["wpl","application/vnd.ms-wpl"],["wps","application/vnd.ms-works"],["wqd","application/vnd.wqd"],["wri","application/x-mswrite"],["wrl","model/vrml"],["wsc","message/vnd.wfa.wsc"],["wsdl","application/wsdl+xml"],["wspolicy","application/wspolicy+xml"],["wtb","application/vnd.webturbo"],["wvx","video/x-ms-wvx"],["x3d","model/x3d+xml"],["x3db","model/x3d+fastinfoset"],["x3dbz","model/x3d+binary"],["x3dv","model/x3d-vrml"],["x3dvz","model/x3d+vrml"],["x3dz","model/x3d+xml"],["x32","application/x-authorware-bin"],["x_b","model/vnd.parasolid.transmit.binary"],["x_t","model/vnd.parasolid.transmit.text"],["xaml","application/xaml+xml"],["xap","application/x-silverlight-app"],["xar","application/vnd.xara"],["xav","application/xcap-att+xml"],["xbap","application/x-ms-xbap"],["xbd","application/vnd.fujixerox.docuworks.binder"],["xbm","image/x-xbitmap"],["xca","application/xcap-caps+xml"],["xcs","application/calendar+xml"],["xdf","application/xcap-diff+xml"],["xdm","application/vnd.syncml.dm+xml"],["xdp","application/vnd.adobe.xdp+xml"],["xdssc","application/dssc+xml"],["xdw","application/vnd.fujixerox.docuworks"],["xel","application/xcap-el+xml"],["xenc","application/xenc+xml"],["xer","application/patch-ops-error+xml"],["xfdf","application/vnd.adobe.xfdf"],["xfdl","application/vnd.xfdl"],["xht","application/xhtml+xml"],["xhtml","application/xhtml+xml"],["xhvml","application/xv+xml"],["xif","image/vnd.xiff"],["xl","application/excel"],["xla","application/vnd.ms-excel"],["xlam","application/vnd.ms-excel.addin.macroEnabled.12"],["xlc","application/vnd.ms-excel"],["xlf","application/xliff+xml"],["xlm","application/vnd.ms-excel"],["xls","application/vnd.ms-excel"],["xlsb","application/vnd.ms-excel.sheet.binary.macroEnabled.12"],["xlsm","application/vnd.ms-excel.sheet.macroEnabled.12"],["xlsx","application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"],["xlt","application/vnd.ms-excel"],["xltm","application/vnd.ms-excel.template.macroEnabled.12"],["xltx","application/vnd.openxmlformats-officedocument.spreadsheetml.template"],["xlw","application/vnd.ms-excel"],["xm","audio/xm"],["xml","application/xml"],["xns","application/xcap-ns+xml"],["xo","application/vnd.olpc-sugar"],["xop","application/xop+xml"],["xpi","application/x-xpinstall"],["xpl","application/xproc+xml"],["xpm","image/x-xpixmap"],["xpr","application/vnd.is-xpr"],["xps","application/vnd.ms-xpsdocument"],["xpw","application/vnd.intercon.formnet"],["xpx","application/vnd.intercon.formnet"],["xsd","application/xml"],["xsl","application/xml"],["xslt","application/xslt+xml"],["xsm","application/vnd.syncml+xml"],["xspf","application/xspf+xml"],["xul","application/vnd.mozilla.xul+xml"],["xvm","application/xv+xml"],["xvml","application/xv+xml"],["xwd","image/x-xwindowdump"],["xyz","chemical/x-xyz"],["xz","application/x-xz"],["yaml","text/yaml"],["yang","application/yang"],["yin","application/yin+xml"],["yml","text/yaml"],["ymp","text/x-suse-ymp"],["z","application/x-compress"],["z1","application/x-zmachine"],["z2","application/x-zmachine"],["z3","application/x-zmachine"],["z4","application/x-zmachine"],["z5","application/x-zmachine"],["z6","application/x-zmachine"],["z7","application/x-zmachine"],["z8","application/x-zmachine"],["zaz","application/vnd.zzazz.deck+xml"],["zip","application/zip"],["zir","application/vnd.zul"],["zirz","application/vnd.zul"],["zmm","application/vnd.handheld-entertainment+xml"],["zsh","text/x-scriptzsh"]]);function O(e,t,n){const a=function(e){const{name:t}=e,n=t&&-1!==t.lastIndexOf(".");if(n&&!e.type){const n=t.split(".").pop().toLowerCase(),a=D.get(n);a&&Object.defineProperty(e,"type",{value:a,writable:!1,configurable:!1,enumerable:!0})}return e}(e),{webkitRelativePath:r}=e,s="string"===typeof t?t:"string"===typeof r&&r.length>0?r:`./${e.name}`;return"string"!==typeof a.path&&M(a,"path",s),void 0!==n&&Object.defineProperty(a,"handle",{value:n,writable:!1,configurable:!1,enumerable:!0}),M(a,"relativePath",s),a}function M(e,t,n){Object.defineProperty(e,t,{value:n,writable:!1,configurable:!1,enumerable:!0})}const L=[".DS_Store","Thumbs.db"];function z(e){return"object"===typeof e&&null!==e}function P(e){return e.filter((e=>-1===L.indexOf(e.name)))}function B(e){if(null===e)return[];const t=[];for(let n=0;n<e.length;n++){const a=e[n];t.push(a)}return t}function W(e){if("function"!==typeof e.webkitGetAsEntry)return U(e);const t=e.webkitGetAsEntry();return t&&t.isDirectory?G(t):U(e,t)}function V(e){return e.reduce(((e,t)=>[...e,...Array.isArray(t)?V(t):[t]]),[])}function U(e,t){return F(this,void 0,void 0,(function*(){var n;if(globalThis.isSecureContext&&"function"===typeof e.getAsFileSystemHandle){const t=yield e.getAsFileSystemHandle();if(null===t)throw new Error(`${e} is not a File`);if(void 0!==t){const e=yield t.getFile();return e.handle=t,O(e)}}const a=e.getAsFile();if(!a)throw new Error(`${e} is not a File`);return O(a,null!==(n=null===t||void 0===t?void 0:t.fullPath)&&void 0!==n?n:void 0)}))}function j(e){return F(this,void 0,void 0,(function*(){return e.isDirectory?G(e):function(e){return F(this,void 0,void 0,(function*(){return new Promise(((t,n)=>{e.file((n=>{const a=O(n,e.fullPath);t(a)}),(e=>{n(e)}))}))}))}(e)}))}function G(e){const t=e.createReader();return new Promise(((e,n)=>{const a=[];!function r(){t.readEntries((t=>F(this,void 0,void 0,(function*(){if(t.length){const e=Promise.all(t.map(j));a.push(e),r()}else try{const t=yield Promise.all(a);e(t)}catch(s){n(s)}}))),(e=>{n(e)}))}()}))}var H=n(628);function q(e){return function(e){if(Array.isArray(e))return J(e)}(e)||function(e){if("undefined"!==typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}(e)||Z(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function K(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function X(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?K(Object(n),!0).forEach((function(t){Y(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):K(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function Y(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function Q(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var n=null==e?null:"undefined"!==typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null==n)return;var a,r,s=[],i=!0,o=!1;try{for(n=n.call(e);!(i=(a=n.next()).done)&&(s.push(a.value),!t||s.length!==t);i=!0);}catch(l){o=!0,r=l}finally{try{i||null==n.return||n.return()}finally{if(o)throw r}}return s}(e,t)||Z(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function Z(e,t){if(e){if("string"===typeof e)return J(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?J(e,t):void 0}}function J(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,a=new Array(t);n<t;n++)a[n]=e[n];return a}var ee="function"===typeof H?H:H.default,te="file-invalid-type",ne="file-too-large",ae="file-too-small",re="too-many-files",se=function(){var e=(arguments.length>0&&void 0!==arguments[0]?arguments[0]:"").split(","),t=e.length>1?"one of ".concat(e.join(", ")):e[0];return{code:te,message:"File type must be ".concat(t)}},ie=function(e){return{code:ne,message:"File is larger than ".concat(e," ").concat(1===e?"byte":"bytes")}},oe=function(e){return{code:ae,message:"File is smaller than ".concat(e," ").concat(1===e?"byte":"bytes")}},le={code:re,message:"Too many files"};function ue(e,t){var n="application/x-moz-file"===e.type||ee(e,t);return[n,n?null:se(t)]}function ce(e,t,n){if(pe(e.size))if(pe(t)&&pe(n)){if(e.size>n)return[!1,ie(n)];if(e.size<t)return[!1,oe(t)]}else{if(pe(t)&&e.size<t)return[!1,oe(t)];if(pe(n)&&e.size>n)return[!1,ie(n)]}return[!0,null]}function pe(e){return void 0!==e&&null!==e}function de(e){return"function"===typeof e.isPropagationStopped?e.isPropagationStopped():"undefined"!==typeof e.cancelBubble&&e.cancelBubble}function he(e){return e.dataTransfer?Array.prototype.some.call(e.dataTransfer.types,(function(e){return"Files"===e||"application/x-moz-file"===e})):!!e.target&&!!e.target.files}function fe(e){e.preventDefault()}function me(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return function(e){for(var n=arguments.length,a=new Array(n>1?n-1:0),r=1;r<n;r++)a[r-1]=arguments[r];return t.some((function(t){return!de(e)&&t&&t.apply(void 0,[e].concat(a)),de(e)}))}}function ge(e){return"audio/*"===e||"video/*"===e||"image/*"===e||"text/*"===e||"application/*"===e||/\w+\/[-+.\w]+/g.test(e)}function ye(e){return/^.*\.[\w]+$/.test(e)}var be=["children"],xe=["open"],ve=["refKey","role","onKeyDown","onFocus","onBlur","onClick","onDragEnter","onDragOver","onDragLeave","onDrop"],we=["refKey","onChange","onClick"];function ke(e){return function(e){if(Array.isArray(e))return Ie(e)}(e)||function(e){if("undefined"!==typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}(e)||Se(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function Ne(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var n=null==e?null:"undefined"!==typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null==n)return;var a,r,s=[],i=!0,o=!1;try{for(n=n.call(e);!(i=(a=n.next()).done)&&(s.push(a.value),!t||s.length!==t);i=!0);}catch(l){o=!0,r=l}finally{try{i||null==n.return||n.return()}finally{if(o)throw r}}return s}(e,t)||Se(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function Se(e,t){if(e){if("string"===typeof e)return Ie(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?Ie(e,t):void 0}}function Ie(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,a=new Array(t);n<t;n++)a[n]=e[n];return a}function Te(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function Ce(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?Te(Object(n),!0).forEach((function(t){Ee(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):Te(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function Ee(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function $e(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},s=Object.keys(e);for(a=0;a<s.length;a++)n=s[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(a=0;a<s.length;a++)n=s[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var Re=(0,C.forwardRef)((function(e,t){var n=e.children,a=Fe($e(e,be)),r=a.open,s=$e(a,xe);return(0,C.useImperativeHandle)(t,(function(){return{open:r}}),[r]),C.createElement(C.Fragment,null,n(Ce(Ce({},s),{},{open:r})))}));Re.displayName="Dropzone";var Ae={disabled:!1,getFilesFromEvent:function(e){return F(this,void 0,void 0,(function*(){return z(e)&&z(e.dataTransfer)?function(e,t){return F(this,void 0,void 0,(function*(){if(e.items){const n=B(e.items).filter((e=>"file"===e.kind));if("drop"!==t)return n;return P(V(yield Promise.all(n.map(W))))}return P(B(e.files).map((e=>O(e))))}))}(e.dataTransfer,e.type):function(e){return z(e)&&z(e.target)}(e)?function(e){return B(e.target.files).map((e=>O(e)))}(e):Array.isArray(e)&&e.every((e=>"getFile"in e&&"function"===typeof e.getFile))?function(e){return F(this,void 0,void 0,(function*(){return(yield Promise.all(e.map((e=>e.getFile())))).map((e=>O(e)))}))}(e):[]}))},maxSize:1/0,minSize:0,multiple:!0,maxFiles:0,preventDropOnDocument:!0,noClick:!1,noKeyboard:!1,noDrag:!1,noDragEventsBubbling:!1,validator:null,useFsAccessApi:!1,autoFocus:!1};Re.defaultProps=Ae,Re.propTypes={children:_.func,accept:_.objectOf(_.arrayOf(_.string)),multiple:_.bool,preventDropOnDocument:_.bool,noClick:_.bool,noKeyboard:_.bool,noDrag:_.bool,noDragEventsBubbling:_.bool,minSize:_.number,maxSize:_.number,maxFiles:_.number,disabled:_.bool,getFilesFromEvent:_.func,onFileDialogCancel:_.func,onFileDialogOpen:_.func,useFsAccessApi:_.bool,autoFocus:_.bool,onDragEnter:_.func,onDragLeave:_.func,onDragOver:_.func,onDrop:_.func,onDropAccepted:_.func,onDropRejected:_.func,onError:_.func,validator:_.func};var _e={isFocused:!1,isFileDialogActive:!1,isDragActive:!1,isDragAccept:!1,isDragReject:!1,acceptedFiles:[],fileRejections:[]};function Fe(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=Ce(Ce({},Ae),e),n=t.accept,a=t.disabled,r=t.getFilesFromEvent,s=t.maxSize,i=t.minSize,o=t.multiple,l=t.maxFiles,u=t.onDragEnter,c=t.onDragLeave,p=t.onDragOver,d=t.onDrop,h=t.onDropAccepted,f=t.onDropRejected,m=t.onFileDialogCancel,g=t.onFileDialogOpen,y=t.useFsAccessApi,b=t.autoFocus,x=t.preventDropOnDocument,v=t.noClick,w=t.noKeyboard,k=t.noDrag,N=t.noDragEventsBubbling,S=t.onError,I=t.validator,T=(0,C.useMemo)((function(){return function(e){if(pe(e))return Object.entries(e).reduce((function(e,t){var n=Q(t,2),a=n[0],r=n[1];return[].concat(q(e),[a],q(r))}),[]).filter((function(e){return ge(e)||ye(e)})).join(",")}(n)}),[n]),E=(0,C.useMemo)((function(){return function(e){return pe(e)?[{description:"Files",accept:Object.entries(e).filter((function(e){var t=Q(e,2),n=t[0],a=t[1],r=!0;return ge(n)||(console.warn('Skipped "'.concat(n,'" because it is not a valid MIME type. Check https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types/Common_types for a list of valid MIME types.')),r=!1),Array.isArray(a)&&a.every(ye)||(console.warn('Skipped "'.concat(n,'" because an invalid file extension was provided.')),r=!1),r})).reduce((function(e,t){var n=Q(t,2),a=n[0],r=n[1];return X(X({},e),{},Y({},a,r))}),{})}]:e}(n)}),[n]),$=(0,C.useMemo)((function(){return"function"===typeof g?g:Oe}),[g]),R=(0,C.useMemo)((function(){return"function"===typeof m?m:Oe}),[m]),A=(0,C.useRef)(null),_=(0,C.useRef)(null),F=Ne((0,C.useReducer)(De,_e),2),D=F[0],O=F[1],M=D.isFocused,L=D.isFileDialogActive,z=(0,C.useRef)("undefined"!==typeof window&&window.isSecureContext&&y&&"showOpenFilePicker"in window),P=function(){!z.current&&L&&setTimeout((function(){_.current&&(_.current.files.length||(O({type:"closeDialog"}),R()))}),300)};(0,C.useEffect)((function(){return window.addEventListener("focus",P,!1),function(){window.removeEventListener("focus",P,!1)}}),[_,L,R,z]);var B=(0,C.useRef)([]),W=function(e){A.current&&A.current.contains(e.target)||(e.preventDefault(),B.current=[])};(0,C.useEffect)((function(){return x&&(document.addEventListener("dragover",fe,!1),document.addEventListener("drop",W,!1)),function(){x&&(document.removeEventListener("dragover",fe),document.removeEventListener("drop",W))}}),[A,x]),(0,C.useEffect)((function(){return!a&&b&&A.current&&A.current.focus(),function(){}}),[A,b,a]);var V=(0,C.useCallback)((function(e){S?S(e):console.error(e)}),[S]),U=(0,C.useCallback)((function(e){e.preventDefault(),e.persist(),ie(e),B.current=[].concat(ke(B.current),[e.target]),he(e)&&Promise.resolve(r(e)).then((function(t){if(!de(e)||N){var n=t.length,a=n>0&&function(e){var t=e.files,n=e.accept,a=e.minSize,r=e.maxSize,s=e.multiple,i=e.maxFiles,o=e.validator;return!(!s&&t.length>1||s&&i>=1&&t.length>i)&&t.every((function(e){var t=Q(ue(e,n),1)[0],s=Q(ce(e,a,r),1)[0],i=o?o(e):null;return t&&s&&!i}))}({files:t,accept:T,minSize:i,maxSize:s,multiple:o,maxFiles:l,validator:I});O({isDragAccept:a,isDragReject:n>0&&!a,isDragActive:!0,type:"setDraggedFiles"}),u&&u(e)}})).catch((function(e){return V(e)}))}),[r,u,V,N,T,i,s,o,l,I]),j=(0,C.useCallback)((function(e){e.preventDefault(),e.persist(),ie(e);var t=he(e);if(t&&e.dataTransfer)try{e.dataTransfer.dropEffect="copy"}catch(n){}return t&&p&&p(e),!1}),[p,N]),G=(0,C.useCallback)((function(e){e.preventDefault(),e.persist(),ie(e);var t=B.current.filter((function(e){return A.current&&A.current.contains(e)})),n=t.indexOf(e.target);-1!==n&&t.splice(n,1),B.current=t,t.length>0||(O({type:"setDraggedFiles",isDragActive:!1,isDragAccept:!1,isDragReject:!1}),he(e)&&c&&c(e))}),[A,c,N]),H=(0,C.useCallback)((function(e,t){var n=[],a=[];e.forEach((function(e){var t=Ne(ue(e,T),2),r=t[0],o=t[1],l=Ne(ce(e,i,s),2),u=l[0],c=l[1],p=I?I(e):null;if(r&&u&&!p)n.push(e);else{var d=[o,c];p&&(d=d.concat(p)),a.push({file:e,errors:d.filter((function(e){return e}))})}})),(!o&&n.length>1||o&&l>=1&&n.length>l)&&(n.forEach((function(e){a.push({file:e,errors:[le]})})),n.splice(0)),O({acceptedFiles:n,fileRejections:a,isDragReject:a.length>0,type:"setFiles"}),d&&d(n,a,t),a.length>0&&f&&f(a,t),n.length>0&&h&&h(n,t)}),[O,o,T,i,s,l,d,h,f,I]),K=(0,C.useCallback)((function(e){e.preventDefault(),e.persist(),ie(e),B.current=[],he(e)&&Promise.resolve(r(e)).then((function(t){de(e)&&!N||H(t,e)})).catch((function(e){return V(e)})),O({type:"reset"})}),[r,H,V,N]),Z=(0,C.useCallback)((function(){if(z.current){O({type:"openDialog"}),$();var e={multiple:o,types:E};window.showOpenFilePicker(e).then((function(e){return r(e)})).then((function(e){H(e,null),O({type:"closeDialog"})})).catch((function(e){var t;(t=e)instanceof DOMException&&("AbortError"===t.name||t.code===t.ABORT_ERR)?(R(e),O({type:"closeDialog"})):!function(e){return e instanceof DOMException&&("SecurityError"===e.name||e.code===e.SECURITY_ERR)}(e)?V(e):(z.current=!1,_.current?(_.current.value=null,_.current.click()):V(new Error("Cannot open the file picker because the https://developer.mozilla.org/en-US/docs/Web/API/File_System_Access_API is not supported and no <input> was provided.")))}))}else _.current&&(O({type:"openDialog"}),$(),_.current.value=null,_.current.click())}),[O,$,R,y,H,V,E,o]),J=(0,C.useCallback)((function(e){A.current&&A.current.isEqualNode(e.target)&&(" "!==e.key&&"Enter"!==e.key&&32!==e.keyCode&&13!==e.keyCode||(e.preventDefault(),Z()))}),[A,Z]),ee=(0,C.useCallback)((function(){O({type:"focus"})}),[]),te=(0,C.useCallback)((function(){O({type:"blur"})}),[]),ne=(0,C.useCallback)((function(){v||(!function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:window.navigator.userAgent;return function(e){return-1!==e.indexOf("MSIE")||-1!==e.indexOf("Trident/")}(e)||function(e){return-1!==e.indexOf("Edge/")}(e)}()?Z():setTimeout(Z,0))}),[v,Z]),ae=function(e){return a?null:e},re=function(e){return w?null:ae(e)},se=function(e){return k?null:ae(e)},ie=function(e){N&&e.stopPropagation()},oe=(0,C.useMemo)((function(){return function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=e.refKey,n=void 0===t?"ref":t,r=e.role,s=e.onKeyDown,i=e.onFocus,o=e.onBlur,l=e.onClick,u=e.onDragEnter,c=e.onDragOver,p=e.onDragLeave,d=e.onDrop,h=$e(e,ve);return Ce(Ce(Ee({onKeyDown:re(me(s,J)),onFocus:re(me(i,ee)),onBlur:re(me(o,te)),onClick:ae(me(l,ne)),onDragEnter:se(me(u,U)),onDragOver:se(me(c,j)),onDragLeave:se(me(p,G)),onDrop:se(me(d,K)),role:"string"===typeof r&&""!==r?r:"presentation"},n,A),a||w?{}:{tabIndex:0}),h)}}),[A,J,ee,te,ne,U,j,G,K,w,k,a]),be=(0,C.useCallback)((function(e){e.stopPropagation()}),[]),xe=(0,C.useMemo)((function(){return function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=e.refKey,n=void 0===t?"ref":t,a=e.onChange,r=e.onClick,s=$e(e,we);return Ce(Ce({},Ee({accept:T,multiple:o,type:"file",style:{border:0,clip:"rect(0, 0, 0, 0)",clipPath:"inset(50%)",height:"1px",margin:"0 -1px -1px 0",overflow:"hidden",padding:0,position:"absolute",width:"1px",whiteSpace:"nowrap"},onChange:ae(me(a,K)),onClick:ae(me(r,be)),tabIndex:-1},n,_)),s)}}),[_,n,o,K,a]);return Ce(Ce({},D),{},{isFocused:M&&!a,getRootProps:oe,getInputProps:xe,rootRef:A,inputRef:_,open:ae(Z)})}function De(e,t){switch(t.type){case"focus":return Ce(Ce({},e),{},{isFocused:!0});case"blur":return Ce(Ce({},e),{},{isFocused:!1});case"openDialog":return Ce(Ce({},_e),{},{isFileDialogActive:!0});case"closeDialog":return Ce(Ce({},e),{},{isFileDialogActive:!1});case"setDraggedFiles":return Ce(Ce({},e),{},{isDragActive:t.isDragActive,isDragAccept:t.isDragAccept,isDragReject:t.isDragReject});case"setFiles":return Ce(Ce({},e),{},{acceptedFiles:t.acceptedFiles,fileRejections:t.fileRejections,isDragReject:t.isDragReject});case"reset":return Ce({},_e);default:return e}}function Oe(){}const Me=e=>{let{onImageUpload:t,onPredict:n,onReset:a,imagePreview:r,isPredicting:s,hasResult:i}=e;const[o,l]=(0,C.useState)(!1),u=(0,C.useCallback)((e=>{if(e&&e.length>0){const n=e[0];if(!n.type.startsWith("image/"))return void alert("Please upload an image file (JPEG, PNG, etc.)");if(n.size>5242880)return void alert("Please upload an image smaller than 5MB");t(n)}}),[t]),{getRootProps:c,getInputProps:p,isDragActive:d}=Fe({onDrop:u,accept:{"image/*":[".jpeg",".jpg",".png",".tif",".tiff"]},maxFiles:1,disabled:s||i});return C.useEffect((()=>{l(d)}),[d]),(0,$.jsx)("div",{className:"w-full",children:r?(0,$.jsxs)("div",{className:"flex flex-col",children:[(0,$.jsx)("div",{className:"flex justify-center mb-4",children:(0,$.jsx)("div",{className:"relative w-full max-w-md h-56 md:h-64 rounded-lg overflow-hidden",children:(0,$.jsx)("img",{src:r,alt:"Uploaded lymphoma sample",className:"w-full h-full object-contain"})})}),(0,$.jsxs)("div",{className:"flex flex-col sm:flex-row gap-3 mt-2 justify-center",children:[!i&&!s&&(0,$.jsx)("button",{onClick:n,className:"px-4 py-2 rounded-md text-white font-medium bg-primary-600 hover:bg-primary-700",children:"Analyze Image"}),(0,$.jsx)("button",{onClick:a,disabled:s,className:"px-4 py-2 rounded-md text-gray-500 font-medium border border-gray-300  hover:bg-gray-50 disabled:opacity-50 disabled:cursor-not-allowed",children:i?"Upload New Image":"Cancel"})]})]}):(0,$.jsxs)("div",{...c(),className:"border-2 border-dashed rounded-lg p-6 text-center cursor-pointer transition-colors hover:bg-gray-50\n            "+(o?"border-primary-500 bg-primary-50":"border-gray-300"),children:[(0,$.jsx)("input",{...p()}),(0,$.jsx)("svg",{className:"mx-auto h-12 w-12 text-gray-400",stroke:"currentColor",fill:"none",viewBox:"0 0 48 48","aria-hidden":"true",children:(0,$.jsx)("path",{d:"M28 8H12a4 4 0 00-4 4v20m32-12v8m0 0v8a4 4 0 01-4 4H12a4 4 0 01-4-4v-4m32-4l-3.172-3.172a4 4 0 00-5.656 0L28 28M8 32l9.172-9.172a4 4 0 015.656 0L28 28m0 0l4 4m4-24h8m-4-4v8m-12 4h.02",strokeWidth:2,strokeLinecap:"round",strokeLinejoin:"round"})}),(0,$.jsxs)("div",{className:"mt-4 flex text-sm text-gray-600 flex-col items-center",children:[(0,$.jsx)("p",{className:"font-medium text-primary-600 hover:text-primary-500",children:"Click to upload"}),(0,$.jsx)("p",{className:"pl-1",children:"or drag and drop a lymphoma image"})]}),(0,$.jsx)("p",{className:"text-xs text-gray-500 mt-2",children:"PNG, JPG, TIFF up to 5MB"})]})})},Le=e=>{let{result:t}=e;const n=(100*t.probability).toFixed(2),a={CLL:{name:"Chronic Lymphocytic Leukemia",description:"A type of cancer that starts from white blood cells (lymphocytes) in the bone marrow. CLL affects a particular lymphocyte, the B cell, which normally fights infections.",color:"blue"},FL:{name:"Follicular Lymphoma",description:"A type of non-Hodgkin lymphoma that begins in the lymphatic system. FL is characterized by the appearance of malignant germinal center B cells that typically grow in a follicular pattern.",color:"green"},MCL:{name:"Mantle Cell Lymphoma",description:'A rare type of B-cell non-Hodgkin lymphoma that arises from cells originating in the "mantle zone" of the lymph node, and typically affects men over the age of 60.',color:"purple"}},r=t.class in a?a[t.class]:{name:t.class,description:"No additional information available",color:"gray"},s=(i=t.probability)>=.9?"text-green-600":i>=.7?"text-blue-600":i>=.5?"text-yellow-600":"text-red-600";var i;return(0,$.jsxs)("div",{className:"bg-white rounded-lg shadow-md p-6 mb-6 animate-fade-in",children:[(0,$.jsx)("h2",{className:"text-xl font-semibold mb-3",children:"Analysis Results"}),(0,$.jsxs)("div",{className:"mb-4 p-4 bg-gray-50 rounded-lg border border-gray-100",children:[(0,$.jsxs)("div",{className:"mb-2",children:[(0,$.jsx)("span",{className:"text-gray-600 text-sm",children:"Detected Lymphoma Type:"}),(0,$.jsx)("h3",{className:"text-2xl font-bold text-primary-700",children:r.name})]}),(0,$.jsxs)("div",{className:"mb-3",children:[(0,$.jsx)("span",{className:"text-gray-600 text-sm",children:"Confidence:"}),(0,$.jsxs)("div",{className:"flex items-center mt-1",children:[(0,$.jsx)("div",{className:"w-full bg-gray-200 rounded-full h-2.5",children:(0,$.jsx)("div",{className:"bg-primary-600 h-2.5 rounded-full",style:{width:`${n}%`}})}),(0,$.jsxs)("span",{className:`ml-2 font-semibold ${s}`,children:[n,"%"]})]})]}),(0,$.jsxs)("div",{children:[(0,$.jsx)("span",{className:"text-gray-600 text-sm",children:"Description:"}),(0,$.jsx)("p",{className:"text-gray-800 mt-1",children:r.description})]})]}),(0,$.jsx)("div",{className:"text-sm text-gray-500 italic mt-4",children:(0,$.jsxs)("div",{className:"flex items-start",children:[(0,$.jsx)("svg",{className:"w-4 h-4 mr-1 mt-0.5 text-yellow-500",fill:"currentColor",viewBox:"0 0 20 20",children:(0,$.jsx)("path",{fillRule:"evenodd",d:"M8.257 3.099c.765-1.36 2.722-1.36 3.486 0l5.58 9.92c.75 1.334-.213 2.98-1.742 2.98H4.42c-1.53 0-2.493-1.646-1.743-2.98l5.58-9.92zM11 13a1 1 0 11-2 0 1 1 0 012 0zm-1-8a1 1 0 00-1 1v3a1 1 0 002 0V6a1 1 0 00-1-1z",clipRule:"evenodd"})}),(0,$.jsx)("p",{children:"For research purposes only and not intended for clinical use. Always consult with a qualified healthcare professional."})]})})]})},ze=e=>{var t;let{featureMaps:n,originalImage:a,activeFeatureIndex:r=0}=e;const[s,i]=(0,C.useState)(r),[o,l]=(0,C.useState)(!1),[u,c]=(0,C.useState)(!1),p=(0,C.useRef)(null),d=(0,C.useRef)(null),h=(0,C.useRef)(r);(0,C.useEffect)((()=>{i(r)}),[r]);return(0,C.useEffect)((()=>{if(!p.current||0===n.length)return;const e=p.current,t=e.getContext("2d");if(!t)return;const r=function(r){let s=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1;if(t.clearRect(0,0,e.width,e.height),o&&a){const n=new Image;return n.onload=()=>{const a=n.width/n.height;e.width=e.height*a,t.drawImage(n,0,0,e.width,e.height)},void(n.src=a)}const i=n[r];if(!i||!i.data)return;const l=Math.sqrt(i.data.length),u=e.width/l,c=Math.max(...i.data),p=Math.min(...i.data),d=c-p;t.clearRect(0,0,e.width,e.height);const h=t.createImageData(e.width,e.height),f=h.data;for(let t=0;t<i.data.length;t++){const n=Math.floor(t/l),a=t%l,r=i.data[t],o=0===d?.5:(r-p)/d;let c,h,m;if(o<.25){const e=o/.25;c=Math.round(73*(1-e)+43*e),h=Math.round(3*(1-e)+119*e),m=Math.round(119*(1-e)+191*e)}else if(o<.5){const e=(o-.25)/.25;c=Math.round(43*(1-e)+33*e),h=Math.round(119*(1-e)+170*e),m=Math.round(191*(1-e)+155*e)}else if(o<.75){const e=(o-.5)/.25;c=Math.round(33*(1-e)+130*e),h=Math.round(170*(1-e)+188*e),m=Math.round(155*(1-e)+97*e)}else{const e=(o-.75)/.25;c=Math.round(130*(1-e)+253*e),h=Math.round(188*(1-e)+231*e),m=Math.round(97*(1-e)+37*e)}const g=Math.floor(a*u),y=Math.floor(n*u),b=Math.floor((a+1)*u),x=Math.floor((n+1)*u);for(let t=y;t<x;t++)for(let n=g;n<b;n++)if(n<e.width&&t<e.height){const a=4*(t*e.width+n);f[a]=c,f[a+1]=h,f[a+2]=m,f[a+3]=Math.round(255*s)}}if(t.putImageData(h,0,0),a&&!o){const n=new Image;n.onload=()=>{t.globalAlpha=.2,t.drawImage(n,0,0,e.width,e.height),t.globalAlpha=1},n.src=a}};if(u){let e=null;const t=600,n=a=>{e||(e=a);const i=a-e,o=Math.min(i/t,1);r(s,o),o<1?d.current=requestAnimationFrame(n):c(!1)};d.current&&cancelAnimationFrame(d.current),d.current=requestAnimationFrame(n)}else r(s);return()=>{d.current&&cancelAnimationFrame(d.current)}}),[n,s,o,a,u]),0===n.length?(0,$.jsx)("div",{className:"bg-white rounded-lg shadow-md p-6 text-center animate-fade-in",children:(0,$.jsx)("p",{className:"text-gray-500",children:"No feature maps available for visualization."})}):(0,$.jsxs)("div",{className:"bg-white rounded-lg shadow-md p-6 mb-6 animate-fade-in",children:[(0,$.jsx)("h2",{className:"text-xl font-semibold mb-4",children:"Feature Visualizations"}),(0,$.jsxs)("div",{className:"flex flex-col md:flex-row gap-6",children:[(0,$.jsxs)("div",{className:"md:w-1/3",children:[(0,$.jsx)("p",{className:"text-sm text-gray-600 mb-2",children:'These visualizations show how the model "sees" the image at different layers during the classification process.'}),(0,$.jsxs)("div",{className:"mt-4",children:[(0,$.jsx)("h3",{className:"font-medium text-gray-700 mb-2",children:"Available Visualizations:"}),(0,$.jsxs)("div",{className:"space-y-2 max-h-48 overflow-y-auto feature-map-list pr-2",children:[n.map(((e,t)=>(0,$.jsx)("button",{onClick:()=>{var e;e=t,u||e===s||(h.current=s,i(e),c(!0)),l(!1)},className:"w-full text-left px-3 py-2 rounded-md text-sm transition-colors\n                    "+(s!==t||o?"text-gray-700 hover:bg-gray-100":"bg-primary-100 text-primary-800 font-medium"),children:e.name},t))),(0,$.jsx)("button",{onClick:()=>{l(!0),c(!0)},className:"w-full text-left px-3 py-2 rounded-md text-sm transition-colors\n                  "+(o?"bg-primary-100 text-primary-800 font-medium":"text-gray-700 hover:bg-gray-100"),children:"Original Image"})]})]}),(0,$.jsxs)("div",{className:"mt-6",children:[(0,$.jsx)("h3",{className:"font-medium text-gray-700 mb-2",children:"What Am I Looking At?"}),(0,$.jsx)("p",{className:"text-sm text-gray-600",children:o?"This is the original image that was submitted for analysis.":"This visualization highlights areas of the image that were important for the model's classification decision. The color gradient represents the intensity of features detected by the model."})]})]}),(0,$.jsxs)("div",{className:"md:w-2/3 flex flex-col items-center justify-center",children:[(0,$.jsx)("div",{className:"border border-gray-200 rounded-lg overflow-hidden bg-gray-50 w-full h-64 md:h-80 shadow-inner",children:(0,$.jsx)("canvas",{ref:p,className:"w-full h-full "+(u?"transition-all duration-600":""),width:256,height:256})}),(0,$.jsx)("div",{className:"mt-3 text-sm text-gray-500 text-center",children:o?"Original uploaded image":`${null===(t=n[s])||void 0===t?void 0:t.name} visualization`})]})]})]})},Pe=e=>{let{progress:t,text:n}=e;return void 0!==t?(0,$.jsxs)("div",{className:"w-full max-w-md",children:[(0,$.jsx)("div",{className:"bg-gray-200 rounded-full h-2.5",children:(0,$.jsx)("div",{className:"bg-primary-600 h-2.5 rounded-full transition-all duration-300",style:{width:`${t}%`}})}),n&&(0,$.jsx)("div",{className:"text-center mt-2 text-sm text-gray-600",children:n}),(0,$.jsx)("div",{className:"flex justify-center mt-4",children:(0,$.jsx)("div",{className:"flex space-x-2",children:[0,1,2].map((e=>(0,$.jsx)("div",{className:"w-2 h-2 bg-primary-600 rounded-full animate-bounce",style:{animationDelay:.15*e+"s"}},e)))})})]}):(0,$.jsxs)("div",{className:"flex justify-center items-center",children:[(0,$.jsx)("div",{className:"spinner",children:(0,$.jsxs)("div",{className:"relative",children:[(0,$.jsx)("div",{className:"w-12 h-12 rounded-full absolute border-4 border-solid border-gray-200"}),(0,$.jsx)("div",{className:"w-12 h-12 rounded-full animate-spin absolute border-4 border-solid border-primary-600 border-t-transparent"})]})}),n&&(0,$.jsx)("div",{className:"ml-4 text-sm text-gray-600",children:n})]})};class Be{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}}class We{refCount(e){return Ve("refCount")}incRef(e){return Ve("incRef")}timerAvailable(){return!0}time(e){return Ve("time")}read(e){return Ve("read")}readSync(e){return Ve("readSync")}readToGPU(e,t){return Ve("readToGPU")}numDataIds(){return Ve("numDataIds")}disposeData(e,t){return Ve("disposeData")}write(e,t,n){return Ve("write")}move(e,t,n,a,r){return Ve("move")}createTensorFromGPUData(e,t,n){return Ve("createTensorFromGPUData")}memory(){return Ve("memory")}floatPrecision(){return Ve("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}dispose(){return Ve("dispose")}}function Ve(e){throw new Error(`'${e}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}function Ue(e){let t=e.length,n=0;for(;t>0;)n=Math.random()*t|0,t--,He(e,t,n)}function je(e,t,n){return Math.max(e,Math.min(t,n))}function Ge(e){return e%2===0?e:e+1}function He(e,t,n){const a=e[t];e[t]=e[n],e[n]=a}function qe(e,t){if(!e)throw new Error("string"===typeof t?t:t())}function Ke(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"";qe(Qe(e,t),(()=>n+` Shapes ${e} and ${t} must match`))}function Xe(e){qe(null!=e,(()=>"The input to the tensor constructor must be a non-null value."))}function Ye(e){if(0===e.length)return 1;let t=e[0];for(let n=1;n<e.length;n++)t*=e[n];return t}function Qe(e,t){if(e===t)return!0;if(null==e||null==t)return!1;if(e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0}function Ze(e){return e%1===0}function Je(e){const t=Math.ceil(Math.sqrt(e));return[t,Math.ceil(e/t)]}function et(e,t){return t<=e.length?e:e+" ".repeat(t-e.length)}function tt(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:e=>0,n=arguments.length>2?arguments[2]:void 0,a=arguments.length>3?arguments[3]:void 0;return new Promise(((r,s)=>{let i=0;const o=()=>{if(e())return void r();i++;const l=t(i);null!=n&&i>=n?s():null!=a?a(o,l):setTimeout(o,l)};o()}))}function nt(e,t){let n=1,a=-1;for(let s=0;s<e.length;++s)if(e[s]>=0)n*=e[s];else if(-1===e[s]){if(-1!==a)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${a} and dim ${s}`);a=s}else if(e[s]<0)throw Error(`Shapes can not be < 0. Found ${e[s]} at dim ${s}`);if(-1===a){if(t>0&&t!==n)throw Error(`Size(${t}) must match the product of shape ${e}`);return e}if(0===n)throw Error(`Cannot infer the missing size in [${e}] when there are 0 elements`);if(t%n!==0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${n}`);const r=e.slice();return r[a]=t/n,r}function at(e,t){const n=t.length;return qe((e=null==e?t.map(((e,t)=>t)):[].concat(e)).every((e=>e>=-n&&e<n)),(()=>`All values in axis param must be in range [-${n}, ${n}) but got axis ${e}`)),qe(e.every((e=>Ze(e))),(()=>`All values in axis param must be integers but got axis ${e}`)),e.map((e=>e<0?n+e:e))}function rt(e,t){const n=[],a=[],r=null!=t&&Array.isArray(t)&&0===t.length,s=null==t||r?null:at(t,e).sort();let i=0;for(let o=0;o<e.length;++o){if(null!=s){if(s[i]===o&&1!==e[o])throw new Error(`Can't squeeze axis ${o} since its dim '${e[o]}' is not 1`);(null==s[i]||s[i]>o)&&1===e[o]&&(n.push(e[o]),a.push(o)),s[i]<=o&&i++}1!==e[o]&&(n.push(e[o]),a.push(o))}return{newShape:n,keptDims:a}}function st(e,t){return it(e,t)}function it(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else if("bool"===e)n=new Uint8Array(t);else{if("string"!==e)throw new Error(`Unknown data type ${e}`);n=new Array(t)}return n}function ot(e,t){return"complex64"!==t&&(("float32"!==t||"complex64"===e)&&(("int32"!==t||"float32"===e||"complex64"===e)&&("bool"!==t||"bool"!==e)))}function lt(e){if("float32"===e||"int32"===e)return 4;if("complex64"===e)return 8;if("bool"===e)return 1;throw new Error(`Unknown dtype ${e}`)}function ut(e){return"string"===typeof e||e instanceof String}function ct(e){return"number"===typeof e}function pt(e){return Array.isArray(e)?pt(e[0]):e instanceof Float32Array?"float32":e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray?"int32":ct(e)?"float32":ut(e)?"string":"boolean"===typeof e?"bool":"float32"}function dt(e){return!!(e&&e.constructor&&e.call&&e.apply)}function ht(e,t){for(let n=t;n<e;++n)if(e%n===0)return n;return e}function ft(e){const t=e.length;if(t<2)return[];const n=new Array(t-1);n[t-2]=e[t-1];for(let a=t-3;a>=0;--a)n[a]=n[a+1]*e[a+1];return n}function mt(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const r=new Array;if(1===t.length){const s=t[0]*(a?2:1);for(let t=0;t<s;t++)r[t]=n[e+t]}else{const s=t[0],i=t.slice(1),o=i.reduce(((e,t)=>e*t))*(a?2:1);for(let t=0;t<s;t++)r[t]=mt(e+t*o,i,n,a)}return r}function gt(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];if(0===e.length)return t[0];const a=e.reduce(((e,t)=>e*t))*(n?2:1);if(0===a)return[];if(a!==t.length)throw new Error(`[${e}] does not match the input size ${t.length}${n?" for a complex tensor":""}.`);return mt(0,e,t,n)}function yt(e,t){const n=bt(e,t);for(let a=0;a<n.length;a++)n[a]=1;return n}function bt(e,t){if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t)return new Uint8Array(e);throw new Error(`Unknown data type ${t}`)}function xt(e,t){const n=e.reduce(((e,t)=>e*t),1);if(null==t||"float32"===t)return gt(e,new Float32Array(n));if("int32"===t)return gt(e,new Int32Array(n));if("bool"===t)return gt(e,new Uint8Array(n));throw new Error(`Unknown data type ${t}`)}function vt(e){e.forEach((t=>{qe(Number.isInteger(t)&&t>=0,(()=>`Tensor must have a shape comprised of positive integers but got shape [${e}].`))}))}function wt(e,t,n){if(0===t)return 0;if(1===t)return e[0];let a=e[e.length-1];for(let r=0;r<e.length-1;++r)a+=n[r]*e[r];return a}function kt(e,t,n){if(0===t)return[];if(1===t)return[e];const a=new Array(t);for(let r=0;r<a.length-1;++r)a[r]=Math.floor(e/n[r]),e-=a[r]*n[r];return a[a.length-1]=e,a}function Nt(e){return e&&e.then&&"function"===typeof e.then}const St="tfjsflags";class It{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=Tt,this.populateURLFlags()}setPlatform(e,t){null!=this.platform&&(Ct().getBool("IS_TEST")||Ct().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${e}.`)),this.platformName=e,this.platform=t}registerFlag(e,t,n){if(this.flagRegistry[e]={evaluationFn:t,setHook:n},null!=this.urlFlags[e]){const t=this.urlFlags[e];Ct().getBool("IS_TEST")||Ct().getBool("PROD")||console.warn(`Setting feature override from URL ${e}: ${t}.`),this.set(e,t)}}async getAsync(e){return e in this.flags||(this.flags[e]=await this.evaluateFlag(e)),this.flags[e]}get(e){if(e in this.flags)return this.flags[e];const t=this.evaluateFlag(e);if(Nt(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getString(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(null==this.flagRegistry[e])throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,null!=this.flagRegistry[e].setHook&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(null==this.flagRegistry[e])throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if("undefined"===typeof this.global||"undefined"===typeof this.global.location||"undefined"===typeof this.global.location.search)return;const e=this.getQueryParams(this.global.location.search);if(St in e){e[St].split(",").forEach((e=>{const[t,n]=e.split(":");this.urlFlags[t]=function(e,t){const n=t.toLowerCase();return"true"===n||"false"===n?"true"===n:""+ +n===n?+n:t}(0,n)}))}}}function Tt(e){const t={};return e.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(function(e){for(var n=arguments.length,a=new Array(n>1?n-1:0),r=1;r<n;r++)a[r-1]=arguments[r];return function(e,t,n){e[decodeURIComponent(t)]=decodeURIComponent(n||"")}(t,a[0],a[1]),a.join("=")})),t}function Ct(){return $t}let Et,$t=null;function Rt(){if(null==Et){let e;if("undefined"!==typeof window)e=window;else if("undefined"!==typeof n.g)e=n.g;else if("undefined"!==typeof process)e=process;else{if("undefined"===typeof self)throw new Error("Could not find a global object");e=self}Et=e}return Et}function At(e,t){const n=function(){const e=Rt();return null==e._tfGlobals&&(e._tfGlobals=new Map),e._tfGlobals}();if(n.has(e))return n.get(e);{const a=t();return n.set(e,a),n.get(e)}}const _t="Abs",Ft="Acos",Dt="Acosh",Ot="Add",Mt="AddN",Lt="All",zt="Any",Pt="ArgMax",Bt="ArgMin",Wt="Asin",Vt="Asinh",Ut="Atan",jt="Atanh",Gt="Atan2",Ht="AvgPool",qt="AvgPoolGrad",Kt="AvgPool3D",Xt="AvgPool3DGrad",Yt="BatchMatMul",Qt="BatchToSpaceND",Zt="Bincount",Jt="BitwiseAnd",en="BroadcastArgs",tn="Cast",nn="Ceil",an="ClipByValue",rn="Complex",sn="ComplexAbs",on="Concat",ln="Conv2D",un="Conv2DBackpropFilter",cn="Conv2DBackpropInput",pn="Conv3D",dn="Conv3DBackpropFilterV2",hn="Conv3DBackpropInputV2",fn="Cos",mn="Cosh",gn="Cumprod",yn="Cumsum",bn="CropAndResize",xn="DenseBincount",vn="DepthToSpace",wn="DepthwiseConv2dNative",kn="DepthwiseConv2dNativeBackpropFilter",Nn="DepthwiseConv2dNativeBackpropInput",Sn="Diag",In="Dilation2D",Tn="Dilation2DBackpropInput",Cn="Dilation2DBackpropFilter",En="Draw",$n="RealDiv",Rn="Einsum",An="Elu",_n="EluGrad",Fn="Erf",Dn="Equal",On="Exp",Mn="ExpandDims",Ln="Expm1",zn="FFT",Pn="Fill",Bn="FlipLeftRight",Wn="Floor",Vn="FloorDiv",Un="FusedBatchNorm",jn="GatherV2",Gn="GatherNd",Hn="Greater",qn="GreaterEqual",Kn="Identity",Xn="IFFT",Yn="Imag",Qn="IsFinite",Zn="IsInf",Jn="IsNan",ea="LeakyRelu",ta="Less",na="LessEqual",aa="LinSpace",ra="Log",sa="Log1p",ia="LogicalAnd",oa="LogicalNot",la="LogicalOr",ua="LRN",ca="LRNGrad",pa="Max",da="Maximum",ha="MaxPool",fa="MaxPoolGrad",ma="MaxPool3D",ga="MaxPool3DGrad",ya="MaxPoolWithArgmax",ba="Mean",xa="Min",va="Minimum",wa="MirrorPad",ka="Mod",Na="Multinomial",Sa="Multiply",Ia="Neg",Ta="NotEqual",Ca="NonMaxSuppressionV3",Ea="NonMaxSuppressionV4",$a="NonMaxSuppressionV5",Ra="OnesLike",Aa="OneHot",_a="Pack",Fa="PadV2",Da="Pow",Oa="Prelu",Ma="Prod",La="RaggedGather",za="RaggedRange",Pa="RaggedTensorToTensor",Ba="Range",Wa="Real",Va="Reciprocal",Ua="Relu",ja="Reshape",Ga="ResizeNearestNeighbor",Ha="ResizeNearestNeighborGrad",qa="ResizeBilinear",Ka="ResizeBilinearGrad",Xa="Relu6",Ya="Reverse",Qa="Round",Za="Rsqrt",Ja="ScatterNd",er="TensorScatterUpdate",tr="SearchSorted",nr="Select",ar="Selu",rr="Slice",sr="Sin",ir="Sinh",or="Sign",lr="Sigmoid",ur="Softplus",cr="Sqrt",pr="Sum",dr="SpaceToBatchND",hr="SplitV",fr="Softmax",mr="SparseFillEmptyRows",gr="SparseReshape",yr="SparseSegmentMean",br="SparseSegmentSum",xr="SparseToDense",vr="SquaredDifference",wr="Square",kr="StaticRegexReplace",Nr="StridedSlice",Sr="StringNGrams",Ir="StringSplit",Tr="StringToHashBucketFast",Cr="Sub",Er="Tan",$r="Tanh",Rr="Tile",Ar="TopK",_r="Transform",Fr="Transpose",Dr="Unique",Or="Unpack",Mr="UnsortedSegmentSum",Lr="ZerosLike",zr="Step",Pr="FromPixels",Br="RotateWithOffset",Wr="_FusedMatMul",Vr="FusedConv2D",Ur="FusedDepthwiseConv2D";function jr(){Ct().getBool("IS_TEST")||Ct().getBool("PROD")||console.warn(...arguments)}function Gr(){Ct().getBool("IS_TEST")||Ct().getBool("PROD")||console.log(...arguments)}const Hr=At("kernelRegistry",(()=>new Map)),qr=At("gradRegistry",(()=>new Map));function Kr(e,t){const n=Jr(e,t);return Hr.get(n)}function Xr(e){return qr.get(e)}function Yr(e){const t=Hr.entries(),n=[];for(;;){const{done:a,value:r}=t.next();if(a)break;const[s,i]=r,[o]=s.split("_");o===e&&n.push(i)}return n}function Qr(e){const{kernelName:t,backendName:n}=e,a=Jr(t,n);Hr.has(a)&&jr(`The kernel '${t}' for backend '${n}' is already registered`),Hr.set(a,e)}function Zr(e){const{kernelName:t}=e;qr.has(t)&&Ct().getBool("DEBUG")&&jr(`Overriding the gradient for '${t}'`),qr.set(t,e)}function Jr(e,t){return`${t}_${e}`}function es(e){return e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray}var ts=n(353);const ns=n.n(ts)()||ts;function as(e){return ns.fromString(e,!0,16)}const rs=as("c3a5c85c97cb3127"),ss=as("b492b66fbe98f273"),is=as("9ae16a3b2f90404f");function os(e){return e.xor(e.shru(47))}function ls(e,t,n){const a=e.slice(t,t+n);return ns.fromBytes(Array.from(a),!0,!0)}function us(e,t){return ls(e,t,8)}function cs(e,t){return ls(e,t,4)}function ps(e,t){return 0===t?e:e.shru(t).or(e.shl(64-t))}function ds(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:as("9ddfea08eb382d69"),a=e.xor(t).mul(n);a=a.xor(a.shru(47));let r=t.xor(a).mul(n);return r=r.xor(r.shru(47)),r=r.mul(n),r}function hs(e,t,n,a){return function(e,t,n,a,r,s){r=r.add(e),s=ps(s.add(r).add(a),21);const i=r;return r=(r=r.add(t)).add(n),s=s.add(ps(r,44)),[r.add(a),s.add(i)]}(us(e,t),us(e,t+8),us(e,t+16),us(e,t+24),n,a)}function fs(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:e.length;const n=ns.fromNumber(81,!0);if(t<=32)return t<=16?function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:e.length;if(t>=8){const n=is.add(2*t),a=us(e,0).add(is),r=us(e,t-8);return ds(ps(r,37).mul(n).add(a),ps(a,25).add(r).mul(n),n)}if(t>=4){const n=is.add(2*t);return ds(cs(e,0).shl(3).add(t),cs(e,t-4),n)}if(t>0){const n=e[0]+(e[t>>1]<<8),a=t+(e[t-1]<<2);return os(is.mul(n).xor(rs.mul(a))).mul(is)}return is}(e,t):function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:e.length;const n=is.add(2*t),a=us(e,0).mul(ss),r=us(e,8),s=us(e,t-8).mul(n),i=us(e,t-16).mul(is);return ds(ps(a.add(r),43).add(ps(s,30)).add(i),a.add(ps(r.add(is),18)).add(s),n)}(e,t);if(t<=64)return function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:e.length;const n=is.add(2*t),a=us(e,0).mul(is),r=us(e,8),s=us(e,t-8).mul(n),i=us(e,t-16).mul(is),o=ps(a.add(r),43).add(ps(s,30)).add(i),l=ds(o,a.add(ps(r.add(is),18)).add(s),n),u=us(e,16).mul(n),c=us(e,24),p=o.add(us(e,t-32)).mul(n),d=l.add(us(e,t-24)).mul(n);return ds(ps(u.add(c),43).add(ps(p,30)).add(d),u.add(ps(c.add(a),18)).add(p),n)}(e,t);let a=n,r=n.mul(ss).add(113),s=os(r.mul(is).add(113)).mul(is),i=[ns.UZERO,ns.UZERO],o=[ns.UZERO,ns.UZERO];a=a.mul(is).add(us(e,0));let l=0;const u=64*(t-1>>6),c=u+(t-1&63)-63;do{a=ps(a.add(r).add(i[0]).add(us(e,l+8)),37).mul(ss),r=ps(r.add(i[1]).add(us(e,l+48)),42).mul(ss),a=a.xor(o[1]),r=r.add(i[0]).add(us(e,l+40)),s=ps(s.add(o[0]),33).mul(ss),i=hs(e,l,i[1].mul(ss),a.add(o[0])),o=hs(e,l+32,s.add(o[1]),r.add(us(e,l+16))),[s,a]=[a,s],l+=64}while(l!==u);const p=ss.add(s.and(255).shl(1));return l=c,o[0]=o[0].add(t-1&63),i[0]=i[0].add(o[0]),o[0]=o[0].add(i[0]),a=ps(a.add(r).add(i[0]).add(us(e,l+8)),37).mul(p),r=ps(r.add(i[1]).add(us(e,l+48)),42).mul(p),a=a.xor(o[1].mul(9)),r=r.add(i[0].mul(9).add(us(e,l+40))),s=ps(s.add(o[0]),33).mul(p),i=hs(e,l,i[1].mul(p),a.add(o[0])),o=hs(e,l+32,s.add(o[1]),r.add(us(e,l+16))),[s,a]=[a,s],ds(ds(i[0],o[0],p).add(os(r).mul(rs)).add(s),ds(i[1],o[1],p).add(a),p)}function ms(e,t){return"string"===t?bs(e):gs([e],t)}function gs(e,t){if("string"===t)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(e)&&(e=ws(e)),Ct().getBool("DEBUG")&&function(e,t){for(let n=0;n<e.length;n++){const a=e[n];if(isNaN(a)||!isFinite(a))throw Error(`A tensor of type ${t} being uploaded contains ${a}.`)}}(e,t),function(e,t){return e instanceof Float32Array&&"float32"===t||e instanceof Int32Array&&"int32"===t||e instanceof Uint8Array&&"bool"===t}(e,t))return e;if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t){const t=new Uint8Array(e.length);for(let n=0;n<t.length;++n)0!==Math.round(e[n])&&(t[n]=1);return t}throw new Error(`Unknown data type ${t}`)}function ys(){return Ct().platform.now()}function bs(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"utf-8";return t=t||"utf-8",Ct().platform.encode(e,t)}function xs(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"utf-8";return t=t||"utf-8",Ct().platform.decode(e,t)}function vs(e){return null!=Ct().platform.isTypedArray?Ct().platform.isTypedArray(e):es(e)}function ws(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[],n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];if(null==t&&(t=[]),"boolean"===typeof e||"number"===typeof e||"string"===typeof e||Nt(e)||null==e||vs(e)&&n)t.push(e);else if(Array.isArray(e)||vs(e))for(let a=0;a<e.length;++a)ws(e[a],t,n);else{let a=-1;for(const t of Object.keys(e))/^([1-9]+[0-9]*|0)$/.test(t)&&(a=Math.max(a,Number(t)));for(let r=0;r<=a;r++)ws(e[r],t,n)}return t}class ks{constructor(e,t){this.backendTimer=e,this.logger=t,null==t&&(this.logger=new Ss)}profileKernel(e,t,n){let a;const r=()=>{a=n()};let s;const i=ys();if(this.backendTimer.timerAvailable())s=this.backendTimer.time(r);else{r();for(const e of a)e.dataSync();s=Promise.resolve({kernelMs:ys()-i})}if(Ct().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let o=0;o<a.length;o++){const t=a[o];t.data().then((n=>{Ns(n,t.dtype,e)}))}return{kernelName:e,outputs:a,inputs:t,timeMs:s.then((e=>e.kernelMs)),extraInfo:s.then((e=>null!=e.getExtraProfileInfo?e.getExtraProfileInfo():""))}}logKernelProfile(e){const{kernelName:t,outputs:n,timeMs:a,inputs:r,extraInfo:s}=e;n.forEach((e=>{Promise.all([e.data(),a,s]).then((n=>{this.logger.logKernelProfile(t,e,n[0],n[1],r,n[2])}))}))}}function Ns(e,t,n){if("float32"!==t)return!1;for(let a=0;a<e.length;a++){const t=e[a];if(isNaN(t)||!isFinite(t))return console.warn(`Found ${t} in the result of '${n}'`),!0}return!1}class Ss{logKernelProfile(e,t,n,a,r,s){const i="number"===typeof a?et(`${a}ms`,9):a.error,o=et(e,25),l=t.rank,u=t.size,c=et(t.shape.toString(),14);let p="";for(const d in r){const e=r[d];if(null!=e){const n=e.shape||t.shape,a=n.length;p+=`${d}: ${a}D ${a>0?n:""} `}}console.log(`%c${o}\t%c${i}\t%c${l}D ${c}\t%c${u}\t%c${p}\t%c${s}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}function Is(e,t,n,a){const r=ft(t),s=function(e,t,n,a){const r=Ye(t),s=a[a.length-1],i=new Array(s).fill(0),o=t.length,l="complex64"===n?$s(e):e;if(o>1)for(let u=0;u<r/s;u++){const e=u*s;for(let t=0;t<s;t++)i[t]=Math.max(i[t],Ts(l[e+t],0,n).length)}return i}(e,t,n,r),i=t.length,o=Es(e,t,n,r,s),l=["Tensor"];return a&&(l.push(`  dtype: ${n}`),l.push(`  rank: ${i}`),l.push(`  shape: [${t}]`),l.push("  values:")),l.push(o.map((e=>"    "+e)).join("\n")),l.join("\n")}function Ts(e,t,n){let a;return a=Array.isArray(e)?`${parseFloat(e[0].toFixed(7))} + ${parseFloat(e[1].toFixed(7))}j`:ut(e)?`'${e}'`:"bool"===n?Cs(e):parseFloat(e.toFixed(7)).toString(),et(a,t)}function Cs(e){return 0===e?"false":"true"}function Es(e,t,n,a,r){let s=!(arguments.length>5&&void 0!==arguments[5])||arguments[5];const i="complex64"===n?2:1,o=t[0],l=t.length;if(0===l){if("complex64"===n){return[Ts($s(e)[0],0,n)]}return"bool"===n?[Cs(e[0])]:[e[0].toString()]}if(1===l){if(o>20){const t=3*i;let a=Array.from(e.slice(0,t)),s=Array.from(e.slice((o-3)*i,o*i));return"complex64"===n&&(a=$s(a),s=$s(s)),["["+a.map(((e,t)=>Ts(e,r[t],n))).join(", ")+", ..., "+s.map(((e,t)=>Ts(e,r[o-3+t],n))).join(", ")+"]"]}return["["+("complex64"===n?$s(e):Array.from(e)).map(((e,t)=>Ts(e,r[t],n))).join(", ")+"]"]}const u=t.slice(1),c=a.slice(1),p=a[0]*i,d=[];if(o>20){for(let t=0;t<3;t++){const a=t*p,s=a+p;d.push(...Es(e.slice(a,s),u,n,c,r,!1))}d.push("...");for(let t=o-3;t<o;t++){const a=t*p,s=a+p;d.push(...Es(e.slice(a,s),u,n,c,r,t===o-1))}}else for(let m=0;m<o;m++){const t=m*p,a=t+p;d.push(...Es(e.slice(t,a),u,n,c,r,m===o-1))}const h=2===l?",":"";d[0]="["+(o>0?d[0]+h:"");for(let m=1;m<d.length-1;m++)d[m]=" "+d[m]+h;let f=",\n";for(let m=2;m<l;m++)f+="\n";return d[d.length-1]=" "+d[d.length-1]+"]"+(s?"":f),d}function $s(e){const t=[];for(let n=0;n<e.length;n+=2)t.push([e[n],e[n+1]]);return t}class Rs{constructor(e,t,n){if(this.dtype=t,this.shape=e.slice(),this.size=Ye(e),null!=n){const e=n.length;qe(e===this.size,(()=>`Length of values '${e}' does not match the size inferred by the shape '${this.size}'.`))}if("complex64"===t)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||it(t,this.size),this.strides=ft(e)}set(e){for(var t=arguments.length,n=new Array(t>1?t-1:0),a=1;a<t;a++)n[a-1]=arguments[a];0===n.length&&(n=[0]),qe(n.length===this.rank,(()=>`The number of provided coordinates (${n.length}) must match the rank (${this.rank})`));const r=this.locToIndex(n);this.values[r]=e}get(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];0===t.length&&(t=[0]);let a=0;for(const s of t){if(s<0||s>=this.shape[a]){const e=`Requested out of range element at ${t}.   Buffer shape=${this.shape}`;throw new Error(e)}a++}let r=t[t.length-1];for(let s=0;s<t.length-1;++s)r+=this.strides[s]*t[s];return this.values[r]}locToIndex(e){if(0===this.rank)return 0;if(1===this.rank)return e[0];let t=e[e.length-1];for(let n=0;n<e.length-1;++n)t+=this.strides[n]*e[n];return t}indexToLoc(e){if(0===this.rank)return[];if(1===this.rank)return[e];const t=new Array(this.shape.length);for(let n=0;n<t.length-1;++n)t[n]=Math.floor(e/this.strides[n]),e-=t[n]*this.strides[n];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return As().makeTensor(this.values,this.shape,this.dtype)}}let As=null,_s=null,Fs=null;class Ds{constructor(e,t,n,a){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=Ye(e),this.strides=ft(e),this.dataId=n,this.id=a,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const e=await this.data();return _s.buffer(this.shape,this.dtype,e)}bufferSync(){return _s.buffer(this.shape,this.dtype,this.dataSync())}async array(){const e=await this.data();return gt(this.shape,e,"complex64"===this.dtype)}arraySync(){return gt(this.shape,this.dataSync(),"complex64"===this.dtype)}async data(){this.throwIfDisposed();const e=As().read(this.dataId);if("string"===this.dtype){const n=await e;try{return n.map((e=>xs(e)))}catch(t){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataToGPU(e){return this.throwIfDisposed(),As().readToGPU(this.dataId,e)}dataSync(){this.throwIfDisposed();const e=As().readSync(this.dataId);if("string"===this.dtype)try{return e.map((e=>xs(e)))}catch(t){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();const e=await As().read(this.dataId);return"string"===this.dtype?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(this.kerasMask&&this.kerasMask.dispose(),As().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(){let e=arguments.length>0&&void 0!==arguments[0]&&arguments[0];return _s.print(this,e)}clone(){return this.throwIfDisposed(),_s.clone(this)}toString(){let e=arguments.length>0&&void 0!==arguments[0]&&arguments[0];return Is(this.dataSync(),this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),_s.cast(this,e)}variable(){let e=!(arguments.length>0&&void 0!==arguments[0])||arguments[0],t=arguments.length>1?arguments[1]:void 0,n=arguments.length>2?arguments[2]:void 0;return this.throwIfDisposed(),As().makeVariable(this,e,t,n)}}function Os(){return At("Tensor",(()=>Ds))}Object.defineProperty(Ds,Symbol.hasInstance,{value:e=>!!e&&null!=e.data&&null!=e.dataSync&&null!=e.throwIfDisposed}),Os();class Ms extends Ds{constructor(e,t,n,a){super(e.shape,e.dtype,e.dataId,a),this.trainable=t,this.name=n}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!Qe(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);As().disposeTensor(this),this.dataId=e.dataId,As().incRef(this,null)}dispose(){As().disposeVariable(this),this.isDisposedInternal=!0}}var Ls,zs,Ps,Bs,Ws;Object.defineProperty(Ms,Symbol.hasInstance,{value:e=>e instanceof Ds&&null!=e.assign&&e.assign instanceof Function}),function(e){e.R0="R0",e.R1="R1",e.R2="R2",e.R3="R3",e.R4="R4",e.R5="R5",e.R6="R6"}(Ls||(Ls={})),function(e){e.float32="float32",e.int32="int32",e.bool="int32",e.complex64="complex64"}(zs||(zs={})),function(e){e.float32="float32",e.int32="int32",e.bool="bool",e.complex64="complex64"}(Ps||(Ps={})),function(e){e.float32="float32",e.int32="float32",e.bool="float32",e.complex64="complex64"}(Bs||(Bs={})),function(e){e.float32="complex64",e.int32="complex64",e.bool="complex64",e.complex64="complex64"}(Ws||(Ws={}));const Vs={float32:Bs,int32:zs,bool:Ps,complex64:Ws};function Us(e,t){if("string"===e||"string"===t){if("string"===e&&"string"===t)return"string";throw new Error(`Can not upcast ${e} with ${t}`)}return Vs[e][t]}function js(e){return Us(e,"int32")}function Gs(e){return null!=e&&"object"===typeof e&&"texture"in e&&e.texture instanceof WebGLTexture}function Hs(e){return"undefined"!==typeof GPUBuffer&&null!=e&&"object"===typeof e&&"buffer"in e&&e.buffer instanceof GPUBuffer}function qs(e,t){if(e.dtype===t.dtype)return[e,t];const n=Us(e.dtype,t.dtype);return[e.cast(n),t.cast(n)]}function Ks(e,t){return t.some((t=>t.id===e.id))}function Xs(e){const t=[];return Ys(e,t,new Set),t}function Ys(e,t,n){if(null==e)return;if(e instanceof Ds)return void t.push(e);if(a=e,!Array.isArray(a)&&"object"!==typeof a)return;var a;const r=e;for(const s in r){const e=r[s];n.has(e)||(n.add(e),Ys(e,t,n))}}function Qs(e){return null!=e.kernelName}class Zs{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map((e=>e.name))))}}}dispose(){for(const e in this.registeredVariables)this.registeredVariables[e].dispose()}}class Js{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new Zs}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then((()=>{}));if(null!=this.backendInstance)return;const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t];if(await this.initializeBackend(n).success)return void await this.setBackend(n)}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(null==this.backendInstance){const{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry)){if(!(e in this.registryFactory))return null;{const{asyncInit:t}=this.initializeBackend(e);if(t)return null}}return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1;return e in this.registryFactory?(jr(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:t,priority:n},!0)}async setBackend(e){if(null==this.registryFactory[e])throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,null==this.registry[e]){this.backendInstance=null;const{success:t,asyncInit:n}=this.initializeBackend(e);if(!(n?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new ks(this.backendInstance),!0}setupRegisteredKernels(){Yr(this.backendName).forEach((e=>{null!=e.setupFunc&&e.setupFunc(this.backendInstance)}))}disposeRegisteredKernels(e){Yr(e).forEach((t=>{null!=t.disposeFunc&&t.disposeFunc(this.registry[e])}))}initializeBackend(e){const t=this.registryFactory[e];if(null==t)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{const n=t.factory();if(!n||n instanceof We||"function"!==typeof n.then)return this.registry[e]=n,{success:!0,asyncInit:!1};{const t=++this.pendingBackendInitId,a=n.then((n=>!(t<this.pendingBackendInitId)&&(this.registry[e]=n,this.pendingBackendInit=null,!0))).catch((n=>(t<this.pendingBackendInitId||(this.pendingBackendInit=null,jr(`Initialization of backend ${e} failed`),jr(n.stack||n.message)),!1)));return this.pendingBackendInit=a,{success:a,asyncInit:!0}}}catch(n){return jr(`Initialization of backend ${e} failed`),jr(n.stack||n.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort(((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority))}initializeBackendsAndReturnBest(){const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t],{success:a,asyncInit:r}=this.initializeBackend(n);if(r||a)return{name:n,asyncInit:r}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){const n=this.state.tensorInfo.get(t),a=n.backend,r=this.readSync(t),s=a.refCount(t);a.disposeData(t,!0),n.backend=e,e.move(t,r,n.shape,n.dtype,s),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let n,a=null;if(null==t){if("function"!==typeof e)throw new Error("Please provide a function to tidy()");t=e}else{if("string"!==typeof e&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!==typeof t)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");a=e}return this.scopedRun((()=>this.startScope(a)),(()=>this.endScope(n)),(()=>(n=t(),n instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),n)))}scopedRun(e,t,n){e();try{const e=n();return t(),e}catch(a){throw t(),a}}nextTensorId(){return Js.nextTensorId++}nextVariableId(){return Js.nextVariableId++}clone(e){const t=ti.runKernel(Kn,{x:e}),n={x:e};return this.addTapeNode(this.state.activeScope.name,n,[t],(e=>({x:()=>{const t={x:e},n={dtype:"float32"};return ti.runKernel(tn,t,n)}})),[],{}),t}runKernel(e,t,n){null==this.backendName&&this.backend;if(!(null!=Kr(e,this.backendName)))throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:t,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,n){const a=this.backend.numDataIds();let r=0;n.forEach((e=>{r+="complex64"===e.dtype?3:1}));const s=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],i=a-t-r-s;if(i>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${i} data ids) after running '${e}'`)}runKernelFunc(e){let t,n=[];const a=this.isTapeOn(),r=this.state.numBytes,s=this.state.numTensors;let i,o;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0),null==this.backendName&&this.backend;const l=Qs(e)?e.kernelName:null!=this.state.activeScope?this.state.activeScope.name:"";if(Qs(e)){const{kernelName:t,inputs:r,attrs:s}=e;null==this.backendName&&this.backend;const l=Kr(t,this.backendName);qe(null!=l,(()=>`Cannot find registered kernel '${t}' for backend '${this.backendName}'`)),i=()=>{const e=this.backend.numDataIds();o=l.kernelFunc({inputs:r,attrs:s,backend:this.backend});const i=Array.isArray(o)?o:[o];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(t,e,i);const u=i.map((e=>null!=e.rank?e:this.makeTensorFromTensorInfo(e)));if(a){const e=this.getTensorsForGradient(t,r,u);n=this.saveTensorsForBackwardMode(e)}return u}}else{const{forwardFunc:t}=e,r=e=>{a&&(n=e.map((e=>this.keep(this.clone(e)))))};i=()=>{const e=this.backend.numDataIds();o=this.tidy((()=>t(this.backend,r)));const n=Array.isArray(o)?o:[o];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(l,e,n),n}}const{inputs:u,attrs:c}=e,p=Qs(e)?null:e.backwardsFunc;let d;return this.scopedRun((()=>this.state.kernelDepth++),(()=>this.state.kernelDepth--),(()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(d=this.profiler.profileKernel(l,u,(()=>i())),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(d),t=d.outputs):t=i()})),a&&this.addTapeNode(l,u,t,p,n,c),this.state.profiling&&this.state.activeProfile.kernels.push({name:l,bytesAdded:this.state.numBytes-r,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-s,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(u).map((e=>null!=u[e]?u[e].shape:null)),outputShapes:t.map((e=>e.shape)),kernelTimeMs:d.timeMs,extraInfo:d.extraInfo}),Array.isArray(o)?t:t[0]}saveTensorsForBackwardMode(e){const t=e.map((e=>this.keep(this.clone(e))));return t}getTensorsForGradient(e,t,n){const a=Xr(e);if(null!=a){const e=a.inputsToSave||[],r=a.outputsToSave||[];let s;a.saveAllInputs?(qe(Array.isArray(t),(()=>"saveAllInputs is true, expected inputs to be an array.")),s=Object.keys(t).map((e=>t[e]))):s=e.map((e=>t[e]));const i=n.filter(((e,t)=>r[t]));return s.concat(i)}return[]}makeTensor(e,t,n,a){if(null==e)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",a=a||this.backend;let r=e;"string"===n&&ut(e[0])&&(r=e.map((e=>bs(e))));const s=a.write(r,t,n),i=new Ds(t,n,s,this.nextTensorId());if(this.trackTensor(i,a),"string"===n){const e=this.state.tensorInfo.get(s),t=function(e){if(null==e)return 0;let t=0;return e.forEach((e=>t+=e.length)),t}(r);this.state.numBytes+=t-e.bytes,e.bytes=t}return i}makeTensorFromDataId(e,t,n,a){const r={dataId:e,shape:t,dtype:n=n||"float32"};return this.makeTensorFromTensorInfo(r,a)}makeTensorFromTensorInfo(e,t){const{dataId:n,shape:a,dtype:r}=e,s=new Ds(a,r,n,this.nextTensorId());return this.trackTensor(s,t),s}makeVariable(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],n=arguments.length>2?arguments[2]:void 0,a=arguments.length>3?arguments[3]:void 0;n=n||this.nextVariableId().toString(),null!=a&&a!==e.dtype&&(e=e.cast(a));const r=new Ms(e,t,n,this.nextTensorId());if(null!=this.state.registeredVariables[r.name])throw new Error(`Variable with name ${r.name} was already registered`);return this.state.registeredVariables[r.name]=r,this.incRef(r,this.backend),r}trackTensor(e,t){this.state.numTensors++,"string"===e.dtype&&this.state.numStringTensors++;let n=0;"complex64"!==e.dtype&&"string"!==e.dtype&&(n=e.size*lt(e.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:n})),e instanceof Ms||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;const t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,"string"===e.dtype&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),"complex64"!==e.dtype&&"string"!==e.dtype){const t=e.size*lt(e.dtype);this.state.numBytes-=t}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(const e in this.state.registeredVariables){const t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),null!=this.state.registeredVariables[e.name]&&delete this.state.registeredVariables[e.name]}memory(){const e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,null==e.reasons&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;const t=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map((e=>e.totalBytesSnapshot))),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-n;for(const a of this.state.activeProfile.kernels)a.kernelTimeMs=await a.kernelTimeMs,a.extraInfo=await a.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(e,t,n,a,r,s){const i={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:n,saved:r},o=Xr(e);null!=o&&(a=o.gradFunc),null!=a&&(i.gradient=e=>(e=e.map(((e,t)=>{if(null==e){const e=n[t],a=bt(e.size,e.dtype);return this.makeTensor(a,e.shape,e.dtype)}return e})),a(e.length>1?e:e[0],r,s))),this.state.activeTape.push(i)}keep(e){return e.kept=!0,e}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){const t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){const t=Xs(e),n=new Set(t.map((e=>e.id)));for(let r=0;r<this.state.activeScope.track.length;r++){const e=this.state.activeScope.track[r];e.kept||n.has(e.id)||e.dispose()}const a=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach((e=>{e.kept||e.scopeId!==a.id||this.track(e)}))}gradients(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];if(qe(t.length>0,(()=>"gradients() received an empty list of xs.")),null!=n&&"float32"!==n.dtype)throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);const r=this.scopedRun((()=>this.startTape()),(()=>this.endTape()),(()=>this.tidy("forward",e)));qe(r instanceof Ds,(()=>"The result y returned by f() must be a tensor."));const s=function(e,t,n){const a={},r={};for(let l=0;l<t.length;l++)a[t[l].id]=!0;for(let l=0;l<e.length;l++){const n=e[l],s=n.inputs;for(const e in s){const i=s[e];let o=!1;for(let e=0;e<t.length;e++)if(a[i.id]){n.outputs.forEach((e=>a[e.id]=!0)),o=!0,r[n.id]=!0;break}if(o)break}}const s={};s[n.id]=!0;const i={};for(let l=e.length-1;l>=0;l--){const t=e[l],n=t.inputs;for(let e=0;e<t.outputs.length;e++)if(s[t.outputs[e].id]){for(const e in n)s[n[e].id]=!0,i[t.id]=!0;break}}const o=[];for(let l=0;l<e.length;l++){const t=e[l];if(r[t.id]&&i[t.id]){const e={};for(const r in t.inputs){const n=t.inputs[r];a[n.id]&&(e[r]=n)}const n=Object.assign({},t);n.inputs=e,n.outputs=t.outputs,o.push(n)}}return o}(this.state.activeTape,t,r);if(!a&&0===s.length&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",(()=>{const e={};e[r.id]=null==n?function(e){const t=yt(Ye(e),"float32");return ti.makeTensor(t,e,"float32")}(r.shape):n,function(e,t,n,a){for(let r=t.length-1;r>=0;r--){const s=t[r],i=[];if(s.outputs.forEach((t=>{const n=e[t.id];null!=n?i.push(n):i.push(null)})),null==s.gradient)throw new Error(`Cannot compute gradient: gradient function not found for ${s.kernelName}.`);const o=s.gradient(i);for(const t in s.inputs){if(!(t in o))throw new Error(`Cannot backprop through input ${t}. Available gradients found: ${Object.keys(o)}.`);const r=n((()=>o[t]()));if("float32"!==r.dtype)throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input ${t} must have 'float32' dtype, but has '${r.dtype}'`);const i=s.inputs[t];if(!Qe(r.shape,i.shape))throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input '${t}' has shape '${r.shape}', which does not match the shape of the input '${i.shape}'`);if(null==e[i.id])e[i.id]=r;else{const t=e[i.id];e[i.id]=a(t,r),t.dispose()}}}}(e,s,(e=>this.tidy(e)),ni);const a=t.map((t=>e[t.id]));return 0===this.state.gradientDepth&&(this.state.activeTape.forEach((e=>{for(const t of e.saved)t.dispose()})),this.state.activeTape=null),{value:r,grads:a}}))}customGrad(e){var t=this;return qe(dt(e),(()=>"The f passed in customGrad(f) must be a function.")),function(){for(var n=arguments.length,a=new Array(n),r=0;r<n;r++)a[r]=arguments[r];let s;qe(a.every((e=>e instanceof Ds)),(()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors"));const i={};a.forEach(((e,t)=>{i[t]=e}));return t.runKernelFunc({forwardFunc:(t,n)=>(s=e(...a,n),qe(s.value instanceof Ds,(()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor")),qe(dt(s.gradFunc),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function.")),s.value),backwardsFunc:(e,t)=>{const n=s.gradFunc(e,t),r=Array.isArray(n)?n:[n];qe(r.length===a.length,(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...).")),qe(r.every((e=>e instanceof Ds)),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors."));const i={};return r.forEach(((e,t)=>{i[t]=()=>e})),i},inputs:i})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}readToGPU(e,t){return this.state.tensorInfo.get(e).backend.readToGPU(e,t)}async time(e){const t=ys(),n=await this.backend.time(e);return n.wallMs=ys()-t,n}track(e){return null!=this.state.activeScope&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new Zs;for(const e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}function ei(){const e=Rt();if(null==e._tfengine){const t=new It(e);e._tfengine=new Js(t)}var t;return t=e._tfengine.ENV,$t=t,As=()=>e._tfengine,e._tfengine}Js.nextTensorId=0,Js.nextVariableId=0;const ti=ei();function ni(e,t){const n={a:e,b:t};return ti.runKernel(Ot,n)}let ai;function ri(e){if(void 0!==ai)return ai;if(e||"undefined"!==typeof navigator&&null!=navigator){if(e||(e=navigator),"ReactNative"===e.product)return!0;const t=e.userAgent||e.vendor||("undefined"!==typeof window?window.opera:"");if(!t){const t=e;return t.userAgentData&&t.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}function si(){return"undefined"!==typeof window&&null!=window.document||"undefined"!==typeof WorkerGlobalScope}const ii=Ct();function oi(e,t){let n=e;if(vs(e))return"string"===t?[]:[e.length];if(Gs(e)){const t=e.channels||"RGBA";return[e.height,e.width*t.length]}if(Hs(e))return[e.buffer.size/(null==t?4:lt(t))];if(!Array.isArray(e))return[];const a=[];for(;Array.isArray(n)||vs(n)&&"string"!==t;)a.push(n.length),n=n[0];return Array.isArray(e)&&Ct().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&li(e,a,[]),a}function li(e,t,n){if(n=n||[],!Array.isArray(e)&&!vs(e))return void qe(0===t.length,(()=>`Element arr[${n.join("][")}] is a primitive, but should be an array/TypedArray of ${t[0]} elements`));qe(t.length>0,(()=>`Element arr[${n.join("][")}] should be a primitive, but is an array of ${e.length} elements`)),qe(e.length===t[0],(()=>`Element arr[${n.join("][")}] should have ${t[0]} elements, but has ${e.length} elements`));const a=t.slice(1);for(let r=0;r<e.length;++r)li(e[r],a,n.concat(r))}function ui(e,t,n,a){if("string_or_numeric"!==e){if(null==e)throw new Error("Expected dtype cannot be null.");if("numeric"!==e&&e!==t||"numeric"===e&&"string"===t)throw new Error(`Argument '${n}' passed to '${a}' must be ${e} tensor, but got ${t} tensor`)}}function ci(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"numeric";if(e instanceof Os())return ui(a,e.dtype,t,n),e;let r=pt(e);if("string"!==r&&["bool","int32","float32"].indexOf(a)>=0&&(r=a),ui(a,r,t,n),null==e||!vs(e)&&!Array.isArray(e)&&"number"!==typeof e&&"boolean"!==typeof e&&"string"!==typeof e){const a=null==e?"null":e.constructor.name;throw new Error(`Argument '${t}' passed to '${n}' must be a Tensor or TensorLike, but got '${a}'`)}const s=oi(e,r);vs(e)||Array.isArray(e)||(e=[e]);const i="string"!==r?gs(e,r):ws(e,[],!0);return ti.makeTensor(i,s,r)}function pi(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"numeric";if(!Array.isArray(e))throw new Error(`Argument ${t} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);return e.map(((e,r)=>ci(e,`${t}[${r}]`,n,a)))}ii.registerFlag("DEBUG",(()=>!1),(e=>{e&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")})),ii.registerFlag("IS_BROWSER",(()=>si())),ii.registerFlag("IS_NODE",(()=>"undefined"!==typeof process&&"undefined"!==typeof process.versions&&"undefined"!==typeof process.versions.node)),ii.registerFlag("IS_CHROME",(()=>"undefined"!==typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor))),ii.registerFlag("IS_SAFARI",(()=>"undefined"!==typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Safari/.test(navigator.userAgent)&&/Apple/.test(navigator.vendor))),ii.registerFlag("PROD",(()=>!1)),ii.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",(()=>ii.getBool("DEBUG"))),ii.registerFlag("DEPRECATION_WARNINGS_ENABLED",(()=>!0)),ii.registerFlag("IS_TEST",(()=>!1)),ii.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",(()=>ii.getBool("DEBUG"))),ii.registerFlag("WRAP_TO_IMAGEBITMAP",(()=>!1)),ii.registerFlag("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU",(()=>!1)),ii.registerFlag("USE_SETTIMEOUTCUSTOM",(()=>!1));const di="__op";function hi(e){const t=Object.keys(e);if(1!==t.length)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${t.length} keys.`);let n=t[0];const a=e[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n+=di;const r=function(){ti.startScope(n);try{const e=a(...arguments);return Nt(e)&&console.error("Cannot return a Promise inside of tidy."),ti.endScope(e),e}catch(e){throw ti.endScope(null),e}};return Object.defineProperty(r,"name",{value:n,configurable:!0}),r}const fi=hi({complex_:function(e,t){const n=ci(e,"real","complex"),a=ci(t,"imag","complex");Ke(n.shape,a.shape,`real and imag shapes, ${n.shape} and ${a.shape}, must match in call to tf.complex().`);const r={real:n,imag:a};return ti.runKernel(rn,r)}});function mi(e,t,n,a){if(null==a)a=pt(e);else if("complex64"===a)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(Hs(e)||Gs(e)){if("float32"!==a&&"int32"!==a)throw new Error(`Creating tensor from GPU data only supports 'float32'|'int32' dtype, while the dtype is ${a}.`);return ti.backend.createTensorFromGPUData(e,t||n,a)}if(!vs(e)&&!Array.isArray(e)&&"number"!==typeof e&&"boolean"!==typeof e&&"string"!==typeof e)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=t){vt(t);const e=Ye(t),a=Ye(n);qe(e===a,(()=>`Based on the provided shape, [${t}], the tensor should have ${e} values but has ${a}`));for(let r=0;r<n.length;++r){const e=n[r],a=r!==n.length-1||e!==Ye(t.slice(r));qe(n[r]===t[r]||!a,(()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${t}). `))}}return vs(e)||Array.isArray(e)||(e=[e]),t=t||n,e="string"!==a?gs(e,a):ws(e,[],!0),ti.makeTensor(e,t,a)}function gi(e,t,n){return mi(e,t,oi(e,n),n)}const yi={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8};class bi{static join(e){return new bi(e).slice()}constructor(e){if(this.shards=[],this.previousShardIndex=0,null==e)return;if(e instanceof Array||(e=[e]),0===(e=e.map((e=>vs(e)?e.buffer:e))).length)return;this.bufferUniformSize=e[0].byteLength;let t=0;for(let n=0;n<e.length;n++){const a=e[n];n!==e.length-1&&a.byteLength!==this.bufferUniformSize&&(this.bufferUniformSize=void 0);const r=t+a.byteLength;this.shards.push({buffer:a,start:t,end:r}),t=r}0===this.shards.length&&(this.byteLength=0),this.byteLength=this.shards[this.shards.length-1].end}slice(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this.byteLength;if(0===this.shards.length)return new ArrayBuffer(0);if(e=isNaN(Number(e))?0:e,t=isNaN(Number(t))?0:t,e=Math.max(0,e),t=Math.min(this.byteLength,t),t<=e)return new ArrayBuffer(0);const n=this.findShardForByte(e);if(-1===n)throw new Error(`Could not find start shard for byte ${e}`);const a=new ArrayBuffer(t-e),r=new Uint8Array(a);let s=0;for(let i=n;i<this.shards.length;i++){const n=this.shards[i],a=e+s-n.start,o=s,l=Math.min(t,n.end)-n.start,u=new Uint8Array(n.buffer,a,l-a);if(r.set(u,o),s+=u.length,t<n.end)break}return a}findShardForByte(e){if(0===this.shards.length||e<0||e>=this.byteLength)return-1;if(null!=this.bufferUniformSize)return this.previousShardIndex=Math.floor(e/this.bufferUniformSize),this.previousShardIndex;function t(t){return e<t.start?-1:e>=t.end?1:0}if(0===t(this.shards[this.previousShardIndex]))return this.previousShardIndex;const n=function(e,t){let n=0,a=e.length;for(;n<=a;){const r=Math.floor((a-n)/2)+n,s=t(e[r]);if(0===s)return r;s<0?a=r:n=r+1}return-1}(this.shards,t);return-1===n?-1:(this.previousShardIndex=n,this.previousShardIndex)}}function xi(){return ti}function vi(){return ti.memory()}function wi(e,t){return ti.tidy(e,t)}function ki(e){Xs(e).forEach((e=>e.dispose()))}function Ni(e){return ti.keep(e)}function Si(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1;return ti.registerBackend(e,t,n)}function Ii(){return ti.backend}Fs=function(e){Ct().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(e+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")};const Ti=4;async function Ci(e,t){const n=[],a=[],r=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);for(let s=0;s<r.length;++s){const i=r[s],o=Array.isArray(e)?e[s].tensor:e[i];if("float32"!==o.dtype&&"int32"!==o.dtype&&"bool"!==o.dtype&&"string"!==o.dtype&&"complex64"!==o.dtype)throw new Error(`Unsupported dtype in weight '${i}': ${o.dtype}`);const l={name:i,shape:o.shape,dtype:o.dtype};if("string"===o.dtype){const e=new Promise((async e=>{const t=await o.bytes(),n=t.reduce(((e,t)=>e+t.length),0)+Ti*t.length,a=new Uint8Array(n);let r=0;for(let s=0;s<t.length;s++){const e=t[s],n=new Uint8Array(new Uint32Array([e.length]).buffer);a.set(n,r),r+=Ti,a.set(e,r),r+=e.length}e(a)}));a.push(e)}else a.push(o.data());null!=t&&(l.group=t),n.push(l)}return{data:Di(await Promise.all(a)),specs:n}}function Ei(e,t){const n=new bi(e),a={};let r=0;for(const s of t){const e=$i(s,((e,t)=>n.slice(r+e,r+t)));a[s.name]=Ai(s,n.slice(r,r+e)),r+=e}return a}function $i(e,t){const n=Ye(e.shape);let a;if("quantization"in e){const t=e.quantization;a=yi[t.dtype]}else{if("string"===e.dtype){let e=0;for(let a=0;a<n;a++)e+=Ti+new Uint32Array(t(e,e+Ti))[0];return e}a=yi[e.dtype]}return n*a}async function Ri(e,t){const n=Ye(e.shape);let a;if("quantization"in e){const t=e.quantization;a=yi[t.dtype]}else{if("string"===e.dtype){let e=0;for(let a=0;a<n;a++)e+=Ti+new Uint32Array(await t(e,e+Ti))[0];return e}a=yi[e.dtype]}return n*a}function Ai(e,t){const n=e.name,a=e.dtype,r=e.shape,s=Ye(r);let i,o=0;if("quantization"in e){const r=e.quantization;if("uint8"===r.dtype||"uint16"===r.dtype){if(!("min"in r)||!("scale"in r))throw new Error(`Weight ${e.name} with quantization ${r.dtype} doesn't have corresponding metadata min and scale.`)}else{if("float16"!==r.dtype)throw new Error(`Weight ${e.name} has unknown quantization dtype ${r.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);if("float32"!==a)throw new Error(`Weight ${e.name} is quantized with ${r.dtype} which only supports weights of type float32 not ${a}.`)}const l=yi[r.dtype],u="uint8"===r.dtype?new Uint8Array(t):new Uint16Array(t);if("float32"===a)if("uint8"===r.dtype||"uint16"===r.dtype){i=new Float32Array(u.length);for(let e=0;e<u.length;e++){const t=u[e];i[e]=t*r.scale+r.min}}else{if("float16"!==r.dtype)throw new Error(`Unsupported quantization type ${r.dtype} for weight type float32.`);{const e=function(){const e=function(){const e=e=>{let t=e<<13,n=0;for(;0===(8388608&t);)n-=8388608,t<<=1;return t&=-8388609,n+=947912704,t|n},t=new Uint32Array(2048);t[0]=0;for(let n=1;n<1024;n++)t[n]=e(n);for(let n=1024;n<2048;n++)t[n]=939524096+(n-1024<<13);return t}(),t=function(){const e=new Uint32Array(64);e[0]=0,e[31]=1199570944,e[32]=2147483648,e[63]=3347054592;for(let t=1;t<31;t++)e[t]=t<<23;for(let t=33;t<63;t++)e[t]=2147483648+(t-32<<23);return e}(),n=function(){const e=new Uint32Array(64);for(let t=0;t<64;t++)e[t]=1024;return e[0]=e[32]=0,e}();return a=>{const r=new ArrayBuffer(4*a.length),s=new Uint32Array(r);for(let i=0;i<a.length;i++){const r=a[i],o=e[n[r>>10]+(1023&r)]+t[r>>10];s[i]=o}return new Float32Array(r)}}();i=e(u)}}else{if("int32"!==a)throw new Error(`Unsupported dtype in weight '${n}': ${a}`);if("uint8"!==r.dtype&&"uint16"!==r.dtype)throw new Error(`Unsupported quantization type ${r.dtype} for weight type int32.`);i=new Int32Array(u.length);for(let e=0;e<u.length;e++){const t=u[e];i[e]=Math.round(t*r.scale+r.min)}}o+=s*l}else if("string"===a){const n=Ye(e.shape);i=[];for(let e=0;e<n;e++){const e=new Uint32Array(t.slice(o,o+Ti))[0];o+=Ti;const n=new Uint8Array(t.slice(o,o+e));i.push(n),o+=e}}else{const e=yi[a];if("float32"===a)i=new Float32Array(t);else if("int32"===a)i=new Int32Array(t);else{if("bool"!==a){if("complex64"===a){i=new Float32Array(t);const e=new Float32Array(i.length/2),n=new Float32Array(i.length/2);for(let t=0;t<e.length;t++)e[t]=i[2*t],n[t]=i[2*t+1];const a=gi(e,r,"float32"),s=gi(n,r,"float32"),o=fi(a,s);return a.dispose(),s.dispose(),o}throw new Error(`Unsupported dtype in weight '${n}': ${a}`)}i=new Uint8Array(t)}o+=s*e}return gi(i,r,a)}async function _i(e,t,n){let a=new Uint8Array(t);for(;a.byteLength<n;){const{done:t,value:r}=await e.read();if(t&&null==r){const e=n-a.byteLength;throw new Error(`Reader is done but ${e} bytes are still expected`)}const s=new Uint8Array(a.length+r.byteLength);s.set(a,0),s.set(new Uint8Array(r),a.length),a=s}return a.buffer}async function Fi(e,t){const n={},a=e.getReader();let r=new ArrayBuffer(0);for(const s of t){const e=await Ri(s,(async(e,t)=>(r=await _i(a,r,t),r.slice(e,t))));r=await _i(a,r,e);const t=r.slice(0,e);r=r.slice(e);const i=Ai(s,t);if(n[s.name]=i,"webgpu"===ti.backendName){const e=Ii();"uploadToGPU"in e&&Ye(i.shape)>=Ct().get("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD")&&e.uploadToGPU(i.dataId)}}return n}function Di(e){if(null===e)throw new Error(`Invalid input value: ${JSON.stringify(e)}`);let t=0;const n=[];e.forEach((e=>{if(t+=e.byteLength,n.push(e.byteLength===e.buffer.byteLength?e:new e.constructor(e)),!(e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${e.constructor.name}`)}));const a=new Uint8Array(t);let r=0;return n.forEach((e=>{a.set(new Uint8Array(e.buffer),r),r+=e.byteLength})),a.buffer}const Oi="undefined"!==typeof Buffer&&("undefined"===typeof Blob||"undefined"===typeof atob||"undefined"===typeof btoa);function Mi(e){return Oi?Buffer.byteLength(e,"utf8"):new Blob([e]).size}function Li(e){return bi.join(e)}function zi(e){for(e=e.trim();e.endsWith("/");)e=e.slice(0,e.length-1);const t=e.split("/");return t[t.length-1]}function Pi(e,t){const n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:t};return null!=e.signature&&(n.signature=e.signature),null!=e.userDefinedMetadata&&(n.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(n.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(n.initializerSignature=e.initializerSignature),null!=e.trainingConfig&&(n.trainingConfig=e.trainingConfig),n}function Bi(e,t,n){const a={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy};if(null!=e.trainingConfig&&(a.trainingConfig=e.trainingConfig),null!=e.weightsManifest){if(!t)throw new Error("modelJSON has weightsManifest but weightSpecs is null");if(!n)throw new Error("modelJSON has weightsManifest but weightData is null");a.weightSpecs=t,a.weightData=n}return null!=e.signature&&(a.signature=e.signature),null!=e.userDefinedMetadata&&(a.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(a.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(a.initializerSignature=e.initializerSignature),a}async function Wi(e,t){let n,a;return null!=e.weightsManifest&&([n,a]=await t(e.weightsManifest)),Bi(e,n,a)}function Vi(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==e.modelTopology?0:Mi(JSON.stringify(e.modelTopology)),weightSpecsBytes:null==e.weightSpecs?0:Mi(JSON.stringify(e.weightSpecs)),weightDataBytes:null==e.weightData?0:new bi(e.weightData).byteLength}}function Ui(e){const t=[];for(const n of e)t.push(...n.weights);return t}class ji{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==ji.instance&&(ji.instance=new ji),ji.instance}static registerSaveRouter(e){ji.getInstance().saveRouters.push(e)}static registerLoadRouter(e){ji.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return ji.getHandlers(e,"save")}static getLoadHandlers(e,t){return ji.getHandlers(e,"load",t)}static getHandlers(e,t,n){const a=[];return("load"===t?ji.getInstance().loadRouters:ji.getInstance().saveRouters).forEach((t=>{const r=t(e,n);null!==r&&a.push(r)})),a}}const Gi=e=>ji.registerSaveRouter(e),Hi=e=>ji.registerLoadRouter(e),qi=e=>ji.getSaveHandlers(e),Ki=(e,t)=>ji.getLoadHandlers(e,t),Xi="tensorflowjs",Yi="models_store",Qi="model_info_store";function Zi(){if(!Ct().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const e="undefined"===typeof window?self:window,t=e.indexedDB||e.mozIndexedDB||e.webkitIndexedDB||e.msIndexedDB||e.shimIndexedDB;if(null==t)throw new Error("The current browser does not appear to support IndexedDB.");return t}function Ji(e){const t=e.result;t.createObjectStore(Yi,{keyPath:"modelPath"}),t.createObjectStore(Qi,{keyPath:"modelPath"})}class eo{constructor(e){if(this.indexedDB=Zi(),null==e||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise(((e,n)=>{const a=this.indexedDB.open(Xi,1);a.onupgradeneeded=()=>Ji(a),a.onsuccess=()=>{const r=a.result;if(null==t){const t=r.transaction(Yi,"readonly"),a=t.objectStore(Yi).get(this.modelPath);a.onsuccess=()=>{if(null==a.result)return r.close(),n(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));e(a.result.modelArtifacts)},a.onerror=e=>(r.close(),n(a.error)),t.oncomplete=()=>r.close()}else{t.weightData=bi.join(t.weightData);const a=Vi(t),i=r.transaction(Qi,"readwrite");let o,l,u=i.objectStore(Qi);try{o=u.put({modelPath:this.modelPath,modelArtifactsInfo:a})}catch(s){return n(s)}o.onsuccess=()=>{l=r.transaction(Yi,"readwrite");const o=l.objectStore(Yi);let c;try{c=o.put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:a})}catch(s){return n(s)}c.onsuccess=()=>e({modelArtifactsInfo:a}),c.onerror=e=>{u=i.objectStore(Qi);const t=u.delete(this.modelPath);t.onsuccess=()=>(r.close(),n(c.error)),t.onerror=e=>(r.close(),n(c.error))}},o.onerror=e=>(r.close(),n(o.error)),i.oncomplete=()=>{null==l?r.close():l.oncomplete=()=>r.close()}}},a.onerror=e=>n(a.error)}))}}eo.URL_SCHEME="indexeddb://";const to=e=>{return Ct().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(eo.URL_SCHEME)?(t=e.slice(eo.URL_SCHEME.length),new eo(t)):null;var t};ji.registerSaveRouter(to),ji.registerLoadRouter(to);class no{constructor(){this.indexedDB=Zi()}async listModels(){return new Promise(((e,t)=>{const n=this.indexedDB.open(Xi,1);n.onupgradeneeded=()=>Ji(n),n.onsuccess=()=>{const a=n.result,r=a.transaction(Qi,"readonly"),s=r.objectStore(Qi).getAll();s.onsuccess=()=>{const t={};for(const e of s.result)t[e.modelPath]=e.modelArtifactsInfo;e(t)},s.onerror=e=>(a.close(),t(s.error)),r.oncomplete=()=>a.close()},n.onerror=e=>t(n.error)}))}async removeModel(e){var t;return e=(t=e).startsWith(eo.URL_SCHEME)?t.slice(eo.URL_SCHEME.length):t,new Promise(((t,n)=>{const a=this.indexedDB.open(Xi,1);a.onupgradeneeded=()=>Ji(a),a.onsuccess=()=>{const r=a.result,s=r.transaction(Qi,"readwrite"),i=s.objectStore(Qi),o=i.get(e);let l;o.onsuccess=()=>{if(null==o.result)return r.close(),n(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{const a=i.delete(e),s=()=>{l=r.transaction(Yi,"readwrite");const a=l.objectStore(Yi).delete(e);a.onsuccess=()=>t(o.result.modelArtifactsInfo),a.onerror=e=>n(o.error)};a.onsuccess=s,a.onerror=e=>(s(),r.close(),n(o.error))}},o.onerror=e=>(r.close(),n(o.error)),s.oncomplete=()=>{null==l?r.close():l.oncomplete=()=>r.close()}},a.onerror=e=>n(a.error)}))}}const ao="/",ro="tensorflowjs_models",so="info",io="model_topology",oo="weight_specs",lo="weight_data",uo="model_metadata";function co(e){return{info:[ro,e,so].join(ao),topology:[ro,e,io].join(ao),weightSpecs:[ro,e,oo].join(ao),weightData:[ro,e,lo].join(ao),modelMetadata:[ro,e,uo].join(ao)}}function po(e){for(const t of Object.values(e))window.localStorage.removeItem(t)}function ho(e){const t=e.split(ao);if(t.length<3)throw new Error(`Invalid key format: ${e}`);return t.slice(1,t.length-1).join(ao)}class fo{constructor(e){if(!Ct().getBool("IS_BROWSER")||"undefined"===typeof window||"undefined"===typeof window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==e||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=co(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const n=JSON.stringify(e.modelTopology),a=JSON.stringify(e.weightSpecs),r=Vi(e),s=bi.join(e.weightData);try{this.LS.setItem(this.keys.info,JSON.stringify(r)),this.LS.setItem(this.keys.topology,n),this.LS.setItem(this.keys.weightSpecs,a),this.LS.setItem(this.keys.weightData,function(e){if(Oi)return Buffer.from(e).toString("base64");const t=new Uint8Array(e);let n="";for(let a=0,r=t.length;a<r;a++)n+=String.fromCharCode(t[a]);return btoa(n)}(s));const t={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:null!=e.signature?e.signature:void 0,userDefinedMetadata:null!=e.userDefinedMetadata?e.userDefinedMetadata:void 0,modelInitializer:null!=e.modelInitializer?e.modelInitializer:void 0,initializerSignature:null!=e.initializerSignature?e.initializerSignature:void 0,trainingConfig:null!=e.trainingConfig?e.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(t)),{modelArtifactsInfo:r}}catch(t){throw po(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${r.modelTopologyBytes}, weightSpecsBytes=${r.weightSpecsBytes}, weightDataBytes=${r.weightDataBytes}.`)}}}async load(){const e=JSON.parse(this.LS.getItem(this.keys.info));if(null==e)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if("JSON"!==e.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const t={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(null==n)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=n;const a=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==a)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=a;const r=this.LS.getItem(this.keys.modelMetadata);if(null!=r){const e=JSON.parse(r);t.format=e.format,t.generatedBy=e.generatedBy,t.convertedBy=e.convertedBy,null!=e.signature&&(t.signature=e.signature),null!=e.userDefinedMetadata&&(t.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(t.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(t.initializerSignature=e.initializerSignature),null!=e.trainingConfig&&(t.trainingConfig=e.trainingConfig)}const s=this.LS.getItem(this.keys.weightData);if(null==s)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=function(e){if(Oi){const t=Buffer.from(e,"base64");return t.buffer.slice(t.byteOffset,t.byteOffset+t.byteLength)}const t=atob(e),n=new Uint8Array(t.length);for(let a=0;a<t.length;++a)n.set([t.charCodeAt(a)],a);return n.buffer}(s),t}}fo.URL_SCHEME="localstorage://";const mo=e=>{return Ct().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(fo.URL_SCHEME)?(t=e.slice(fo.URL_SCHEME.length),new fo(t)):null;var t};ji.registerSaveRouter(mo),ji.registerLoadRouter(mo);class go{constructor(){qe(Ct().getBool("IS_BROWSER"),(()=>"Current environment is not a web browser")),qe("undefined"===typeof window||"undefined"!==typeof window.localStorage,(()=>"Current browser does not appear to support localStorage")),this.LS=window.localStorage}async listModels(){const e={},t=ro+ao,n=ao+so;for(let a=0;a<this.LS.length;++a){const r=this.LS.key(a);if(r.startsWith(t)&&r.endsWith(n)){e[ho(r)]=JSON.parse(this.LS.getItem(r))}}return e}async removeModel(e){var t;const n=co(e=(t=e).startsWith(fo.URL_SCHEME)?t.slice(fo.URL_SCHEME.length):t);if(null==this.LS.getItem(n.info))throw new Error(`Cannot find model at path '${e}'`);const a=JSON.parse(this.LS.getItem(n.info));return po(n),a}}const yo="://";class bo{constructor(){this.managers={}}static getInstance(){return null==bo.instance&&(bo.instance=new bo),bo.instance}static registerManager(e,t){qe(null!=e,(()=>"scheme must not be undefined or null.")),e.endsWith(yo)&&(e=e.slice(0,e.indexOf(yo))),qe(e.length>0,(()=>"scheme must not be an empty string."));const n=bo.getInstance();qe(null==n.managers[e],(()=>`A model store manager is already registered for scheme '${e}'.`)),n.managers[e]=t}static getManager(e){const t=bo.getInstance().managers[e];if(null==t)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(bo.getInstance().managers)}}function xo(e){if(-1===e.indexOf(yo))throw new Error(`The url string provided does not contain a scheme. Supported schemes are: ${bo.getSchemes().join(",")}`);return{scheme:e.split(yo)[0],path:e.split(yo)[1]}}async function vo(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];qe(e!==t,(()=>`Old path and new path are the same: '${e}'`));const a=ji.getLoadHandlers(e);qe(a.length>0,(()=>`Copying failed because no load handler is found for source URL ${e}.`)),qe(a.length<2,(()=>`Copying failed because more than one (${a.length}) load handlers for source URL ${e}.`));const r=a[0],s=ji.getSaveHandlers(t);qe(s.length>0,(()=>`Copying failed because no save handler is found for destination URL ${t}.`)),qe(s.length<2,(()=>`Copying failed because more than one (${a.length}) save handlers for destination URL ${t}.`));const i=s[0],o=xo(e).scheme,l=xo(e).path,u=o===xo(e).scheme,c=await r.load();n&&u&&await bo.getManager(o).removeModel(l);const p=await i.save(c);return n&&!u&&await bo.getManager(o).removeModel(l),p.modelArtifactsInfo}async function wo(){const e=bo.getSchemes(),t={};for(const n of e){const e=await bo.getManager(n).listModels();for(const a in e){t[n+yo+a]=e[a]}}return t}async function ko(e){const t=xo(e);return bo.getManager(t.scheme).removeModel(t.path)}async function No(e,t){return vo(e,t,!1)}async function So(e,t){return vo(e,t,!0)}class Io{constructor(){this.messageName="setTimeoutCustom",this.functionRefs=[],this.handledMessageCount=0,this.hasEventListener=!1}fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Browser's encoder only supports utf-8, but got ${t}`);return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}setTimeoutCustom(e,t){"undefined"!==typeof window&&Ct().getBool("USE_SETTIMEOUTCUSTOM")?(this.functionRefs.push(e),setTimeout((()=>{window.postMessage({name:this.messageName,index:this.functionRefs.length-1},"*")}),t),this.hasEventListener||(this.hasEventListener=!0,window.addEventListener("message",(e=>{if(e.source===window&&e.data.name===this.messageName){e.stopPropagation();(0,this.functionRefs[e.data.index])(),this.handledMessageCount++,this.handledMessageCount===this.functionRefs.length&&(this.functionRefs=[],this.handledMessageCount=0)}}),!0))):setTimeout(e,t)}isTypedArray(e){return es(e)}}if(Ct().get("IS_BROWSER")){Ct().setPlatform("browser",new Io);try{bo.registerManager(fo.URL_SCHEME,new go)}catch(JB){}try{bo.registerManager(eo.URL_SCHEME,new no)}catch(JB){}}const To=()=>n(817);let Co;class Eo{constructor(){this.util=n(590),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return null!=Ct().global.fetch?Ct().global.fetch(e,t):(null==Co&&(Co=To()),Co(e,t))}now(){const e=process.hrtime();return 1e3*e[0]+e[1]/1e6}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Node built-in encoder only supports utf-8, but got ${t}`);return this.textEncoder.encode(e)}decode(e,t){return 0===e.length?"":new this.util.TextDecoder(t).decode(e)}isTypedArray(e){return this.util.types.isFloat32Array(e)||this.util.types.isInt32Array(e)||this.util.types.isUint8Array(e)||this.util.types.isUint8ClampedArray(e)}}function $o(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"float32",n=arguments.length>2?arguments[2]:void 0;return t=t||"float32",vt(e),new Rs(e,t,n)}Ct().get("IS_NODE")&&!Ct().get("IS_BROWSER")&&Ct().setPlatform("node",new Eo);const Ro=hi({cast_:function(e,t){const n=ci(e,"x","cast");if(!function(e){return"bool"===e||"complex64"===e||"float32"===e||"int32"===e||"string"===e}(t))throw new Error(`Failed to cast to unknown dtype ${t}`);if("string"===t&&"string"!==n.dtype||"string"!==t&&"string"===n.dtype)throw new Error("Only strings can be casted to strings");const a={x:n},r={dtype:t};return ti.runKernel(tn,a,r)}});const Ao=hi({clone_:function(e){const t={x:ci(e,"x","clone","string_or_numeric")};return ti.runKernel(Kn,t)}});function _o(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];console.log(e.toString(t))}ei();_s={buffer:$o,cast:Ro,clone:Ao,print:_o};const Fo=hi({add_:function(e,t){let n=ci(e,"a","add"),a=ci(t,"b","add");[n,a]=qs(n,a);const r={a:n,b:a};return ti.runKernel(Ot,r)}});const Do=hi({floorDiv_:function(e,t){let n=ci(e,"a","floorDiv"),a=ci(t,"b","floorDiv");[n,a]=qs(n,a);const r={a:n,b:a};return ti.runKernel(Vn,r)}});const Oo=hi({div_:function(e,t){let n=ci(e,"a","div"),a=ci(t,"b","div");if([n,a]=qs(n,a),"int32"===n.dtype&&"int32"===a.dtype)return Do(n,a);const r={a:n,b:a};return ti.runKernel($n,r,{})}});const Mo=hi({mul_:function(e,t){let n=ci(e,"a","mul"),a=ci(t,"b","mul");[n,a]=qs(n,a);const r={a:n,b:a};return ti.runKernel(Sa,r)}});const Lo=hi({sqrt_:function(e){const t={x:ci(e,"x","sqrt","float32")};return ti.runKernel(cr,t)}});const zo=hi({square_:function(e){const t=ci(e,"x","square");return ti.runKernel("Square",{x:t},{})}});const Po=hi({zerosLike_:function(e){const t={x:ci(e,"x","zerosLike")};return ti.runKernel(Lr,t)}});function Bo(e){return ti.customGrad(e)}function Wo(e,t){if((vs(e)&&"string"!==t||Array.isArray(e))&&"complex64"!==t)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===t&&vs(e)&&!(e instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return mi(e,[],[],t)}const Vo=new Map,Uo=new Map;class jo{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}}class Go{constructor(){this.classNameMap={}}static getMap(){return null==Go.instance&&(Go.instance=new Go),Go.instance}static register(e){Go.getMap().classNameMap[e.className]=[e,e.fromConfig]}}function Ho(e,t,n){qe(null!=e.className,(()=>"Class being registered does not have the static className property defined.")),qe("string"===typeof e.className,(()=>"className is required to be a string, but got type "+typeof e.className)),qe(e.className.length>0,(()=>"Class being registered has an empty-string as its className, which is disallowed.")),"undefined"===typeof t&&(t="Custom"),"undefined"===typeof n&&(n=e.className);const a=t+">"+n;return Go.register(e),Vo.set(a,e),Uo.set(e,a),e}class qo extends jo{minimize(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2?arguments[2]:void 0;const{value:a,grads:r}=this.computeGradients(e,n);if(null!=n){const e=n.map((e=>({name:e.name,tensor:r[e.name]})));this.applyGradients(e)}else this.applyGradients(r);return ki(r),t?a:(a.dispose(),null)}get iterations(){return null==this.iterations_&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return function(e,t){qe(dt(e),(()=>"The f passed in variableGrads(f) must be a function")),qe(null==t||Array.isArray(t)&&t.every((e=>e instanceof Ms)),(()=>"The varList passed in variableGrads(f, varList) must be an array of variables"));const n=null!=t;if(!n){t=[];for(const e in ti.registeredVariables)t.push(ti.registeredVariables[e])}const a=n?t.filter((e=>!e.trainable)):null,r=t.length;t=t.filter((e=>e.trainable)),qe(t.length>0,(()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${r} variables is trainable.`));const{value:s,grads:i}=ti.gradients(e,t,null,!0);qe(i.some((e=>null!=e)),(()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize().")),qe(0===s.rank,(()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${s.rank} tensor`));const o={};return t.forEach(((e,t)=>{null!=i[t]&&(o[e.name]=i[t])})),null!=a&&a.forEach((e=>o[e.name]=null)),{value:s,grads:o}}(e,t)}dispose(){null!=this.iterations_&&ki(this.iterations_)}async saveIterations(){return null==this.iterations_&&(this.iterations_=0),{name:"iter",tensor:Wo(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}}Object.defineProperty(qo,Symbol.hasInstance,{value:e=>null!=e.minimize&&null!=e.computeGradients&&null!=e.applyGradients});class Ko extends qo{static get className(){return"Adadelta"}constructor(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null;super(),this.learningRate=e,this.rho=t,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],null==n&&(this.epsilon=ti.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const a=ti.registeredVariables[t],r=!1;null==this.accumulatedGrads[n]&&(this.accumulatedGrads[n]={originalName:`${t}/accum_grad`,variable:wi((()=>Po(a).variable(r)))}),null==this.accumulatedUpdates[n]&&(this.accumulatedUpdates[n]={originalName:`${t}/accum_var`,variable:wi((()=>Po(a).variable(r)))});const s=Array.isArray(e)?e[n].tensor:e[t];if(null==s)return;const i=this.accumulatedGrads[n].variable,o=this.accumulatedUpdates[n].variable;wi((()=>{const e=Fo(Mo(i,this.rho),Mo(zo(s),1-this.rho)),t=Mo(Oo(Lo(Fo(o,this.epsilon)),Lo(Fo(i,this.epsilon))),s),n=Fo(Mo(o,this.rho),Mo(zo(t),1-this.rho));i.assign(e),o.assign(n);const r=Fo(Mo(t,-this.learningRate),a);a.assign(r)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedUpdates&&(ki(this.accumulatedGrads.map((e=>e.variable))),ki(this.accumulatedUpdates.map((e=>e.variable))))}async getWeights(){const e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){const t=(e=await this.extractIterations(e)).length/2,n=!1;this.accumulatedGrads=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.accumulatedUpdates=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)})))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}}function Xo(e,t,n){vt(e);const a={shape:e,value:t,dtype:n=n||pt(t)};return ti.runKernel(Pn,{},a)}class Yo extends qo{static get className(){return"Adagrad"}constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:.1;super(),this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const a=ti.registeredVariables[t];if(null==this.accumulatedGrads[n]){const e=!1;this.accumulatedGrads[n]={originalName:`${t}/accumulator`,variable:wi((()=>Xo(a.shape,this.initialAccumulatorValue).variable(e)))}}const r=Array.isArray(e)?e[n].tensor:e[t];if(null==r)return;const s=this.accumulatedGrads[n].variable;wi((()=>{const e=Fo(s,zo(r));s.assign(e);const t=Fo(Mo(Oo(r,Lo(Fo(e,ti.backend.epsilon()))),-this.learningRate),a);a.assign(t)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedGrads&&ki(this.accumulatedGrads.map((e=>e.variable)))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);this.accumulatedGrads=e.map((e=>({originalName:e.name,variable:e.tensor.variable(false)})))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}}const Qo=hi({pow_:function(e,t){let n=ci(e,"base","pow"),a=ci(t,"exp","pow");[n,a]=qs(n,a);const r={a:n,b:a};return ti.runKernel(Da,r)}});const Zo=hi({sub_:function(e,t){let n=ci(e,"a","sub"),a=ci(t,"b","sub");[n,a]=qs(n,a);const r={a:n,b:a};return ti.runKernel(Cr,r)}});class Jo extends qo{static get className(){return"Adam"}constructor(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null;super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=a,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],wi((()=>{this.accBeta1=Wo(t).variable(),this.accBeta2=Wo(n).variable()})),null==a&&(this.epsilon=ti.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);wi((()=>{const n=Zo(1,this.accBeta1),a=Zo(1,this.accBeta2);t.forEach(((t,r)=>{const s=ti.registeredVariables[t],i=!1;null==this.accumulatedFirstMoment[r]&&(this.accumulatedFirstMoment[r]={originalName:`${t}/m`,variable:wi((()=>Po(s).variable(i)))}),null==this.accumulatedSecondMoment[r]&&(this.accumulatedSecondMoment[r]={originalName:`${t}/v`,variable:wi((()=>Po(s).variable(i)))});const o=Array.isArray(e)?e[r].tensor:e[t];if(null==o)return;const l=this.accumulatedFirstMoment[r].variable,u=this.accumulatedSecondMoment[r].variable,c=Fo(Mo(l,this.beta1),Mo(o,1-this.beta1)),p=Fo(Mo(u,this.beta2),Mo(zo(o),1-this.beta2)),d=Oo(c,n),h=Oo(p,a);l.assign(c),u.assign(p);const f=Fo(Mo(Oo(d,Fo(Lo(h),this.epsilon)),-this.learningRate),s);s.assign(f)})),this.accBeta1.assign(Mo(this.accBeta1,this.beta1)),this.accBeta2.assign(Mo(this.accBeta2,this.beta2))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&ki(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedSecondMoment&&ki(this.accumulatedSecondMoment.map((e=>e.variable)))}async getWeights(){const e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),wi((()=>{this.accBeta1.assign(Qo(this.beta1,this.iterations_+1)),this.accBeta2.assign(Qo(this.beta2,this.iterations_+1))}));const t=e.length/2,n=!1;this.accumulatedFirstMoment=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.accumulatedSecondMoment=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)})))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}}const el=hi({abs_:function(e){const t=ci(e,"x","abs");if("complex64"===t.dtype){const e={x:t};return ti.runKernel(sn,e)}{const e={x:t};return ti.runKernel(_t,e)}}});function tl(e,t){const n=e.length,a=[];for(let r=0;r<n;r++){const s=n-1-r,i=e[s]||1;(t[t.length-1-r]||1)>1&&1===i&&a.unshift(s)}return a}function nl(e,t){const n=[];for(let a=0;a<t.length;a++){const r=e[e.length-a-1],s=t.length-a-1,i=t[s];(null==r||1===r&&i>1)&&n.unshift(s)}return n}function al(e,t){const n=Math.max(e.length,t.length),a=new Array(n);for(let r=0;r<n;r++){let s=e[e.length-r-1];null==s&&(s=1);let i=t[t.length-r-1];if(null==i&&(i=1),1===s)a[n-r-1]=i;else if(1===i)a[n-r-1]=s;else{if(s!==i){throw Error(`Operands could not be broadcast together with shapes ${e} and ${t}.`)}a[n-r-1]=s}}return a}const rl=hi({maximum_:function(e,t){let n=ci(e,"a","maximum"),a=ci(t,"b","maximum");[n,a]=qs(n,a),"bool"===n.dtype&&(n=Ro(n,"int32"),a=Ro(a,"int32")),al(n.shape,a.shape);const r={a:n,b:a};return ti.runKernel(da,r)}});class sl extends qo{static get className(){return"Adamax"}constructor(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0;super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=a,this.decay=r,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],wi((()=>{this.iteration=Wo(0).variable(),this.accBeta1=Wo(t).variable()})),null==a&&(this.epsilon=ti.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);wi((()=>{const n=Zo(1,this.accBeta1),a=Oo(-this.learningRate,Fo(Mo(this.iteration,this.decay),1));t.forEach(((t,r)=>{const s=ti.registeredVariables[t],i=!1;null==this.accumulatedFirstMoment[r]&&(this.accumulatedFirstMoment[r]={originalName:`${t}/m`,variable:Po(s).variable(i)}),null==this.accumulatedWeightedInfNorm[r]&&(this.accumulatedWeightedInfNorm[r]={originalName:`${t}/v`,variable:Po(s).variable(i)});const o=Array.isArray(e)?e[r].tensor:e[t];if(null==o)return;const l=this.accumulatedFirstMoment[r].variable,u=this.accumulatedWeightedInfNorm[r].variable,c=Fo(Mo(l,this.beta1),Mo(o,1-this.beta1)),p=Mo(u,this.beta2),d=el(o),h=rl(p,d);l.assign(c),u.assign(h);const f=Fo(Mo(Oo(a,n),Oo(c,Fo(h,this.epsilon))),s);s.assign(f)})),this.iteration.assign(Fo(this.iteration,1)),this.accBeta1.assign(Mo(this.accBeta1,this.beta1))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&ki(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedWeightedInfNorm&&ki(this.accumulatedWeightedInfNorm.map((e=>e.variable)))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}}class il extends qo{static get className(){return"SGD"}constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const a=Array.isArray(e)?e[n].tensor:e[t];if(null==a)return;const r=ti.registeredVariables[t];wi((()=>{const e=Fo(Mo(this.c,a),r);r.assign(e)}))})),this.incrementIterations()}setLearningRate(e){this.learningRate=e,null!=this.c&&this.c.dispose(),this.c=Ni(Wo(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(0!==(e=await this.extractIterations(e)).length)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}}class ol extends il{static get className(){return"Momentum"}constructor(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];super(e),this.learningRate=e,this.momentum=t,this.useNesterov=n,this.accumulations=[],this.m=Wo(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const a=ti.registeredVariables[t];if(null==this.accumulations[n]){const e=!1;this.accumulations[n]={originalName:`${t}/momentum`,variable:wi((()=>Po(a).variable(e)))}}const r=this.accumulations[n].variable,s=Array.isArray(e)?e[n].tensor:e[t];null!=s&&wi((()=>{let e;const t=Fo(Mo(this.m,r),s);e=this.useNesterov?Fo(Mo(this.c,Fo(s,Mo(t,this.m))),a):Fo(Mo(this.c,t),a),r.assign(t),a.assign(e)}))})),this.incrementIterations()}dispose(){this.m.dispose(),null!=this.accumulations&&ki(this.accumulations.map((e=>e.variable)))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);this.accumulations=e.map((e=>({originalName:e.name,variable:e.tensor.variable(false)})))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}}class ll extends qo{static get className(){return"RMSProp"}constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:.9,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,r=arguments.length>4&&void 0!==arguments[4]&&arguments[4];if(super(),this.learningRate=e,this.decay=t,this.momentum=n,this.epsilon=a,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=r,null==a&&(this.epsilon=ti.backend.epsilon()),null==e)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const a=ti.registeredVariables[t],r=!1;null==this.accumulatedMeanSquares[n]&&(this.accumulatedMeanSquares[n]={originalName:`${t}/rms`,variable:wi((()=>Po(a).variable(r)))}),null==this.accumulatedMoments[n]&&(this.accumulatedMoments[n]={originalName:`${t}/momentum`,variable:wi((()=>Po(a).variable(r)))}),null==this.accumulatedMeanGrads[n]&&this.centered&&(this.accumulatedMeanGrads[n]={originalName:`${t}/mg`,variable:wi((()=>Po(a).variable(r)))});const s=Array.isArray(e)?e[n].tensor:e[t];if(null==s)return;const i=this.accumulatedMeanSquares[n].variable,o=this.accumulatedMoments[n].variable;wi((()=>{const e=Fo(Mo(i,this.decay),Mo(zo(s),1-this.decay));if(this.centered){const t=this.accumulatedMeanGrads[n].variable,r=Fo(Mo(t,this.decay),Mo(s,1-this.decay)),l=Oo(Mo(s,this.learningRate),Lo(Zo(e,Fo(zo(r),this.epsilon)))),u=Fo(Mo(o,this.momentum),l);i.assign(e),t.assign(r),o.assign(u);const c=Zo(a,u);a.assign(c)}else{const e=Fo(Mo(i,this.decay),Mo(zo(s),1-this.decay)),t=Fo(Mo(o,this.momentum),Oo(Mo(s,this.learningRate),Lo(Fo(e,this.epsilon))));i.assign(e),o.assign(t);const n=Zo(a,t);a.assign(n)}}))})),this.incrementIterations()}dispose(){null!=this.accumulatedMeanSquares&&ki(this.accumulatedMeanSquares.map((e=>e.variable))),null!=this.accumulatedMeanGrads&&this.centered&&ki(this.accumulatedMeanGrads.map((e=>e.variable))),null!=this.accumulatedMoments&&ki(this.accumulatedMoments.map((e=>e.variable)))}async getWeights(){const e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);const t=this.centered?e.length/3:e.length/2,n=!1;this.accumulatedMeanSquares=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.accumulatedMoments=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.centered&&(this.accumulatedMeanGrads=e.slice(2*t,3*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}}const ul=[Ko,Yo,Jo,sl,ol,ll,il];function cl(e){return new Promise((e=>setTimeout(e))).then(e)}class pl{constructor(e){if(!Ct().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(pl.URL_SCHEME)&&(e=e.slice(pl.URL_SCHEME.length)),null!=e&&0!==e.length||(e="model"),this.modelJsonFileName=e+".json",this.weightDataFileName=e+".weights.bin"}async save(e){if("undefined"===typeof document)throw new Error("Browser downloads are not supported in this environment since `document` is not present");const t=bi.join(e.weightData),n=window.URL.createObjectURL(new Blob([t],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const t=Pi(e,[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}]),a=window.URL.createObjectURL(new Blob([JSON.stringify(t)],{type:"application/json"})),r=null==this.modelJsonAnchor?document.createElement("a"):this.modelJsonAnchor;if(r.download=this.modelJsonFileName,r.href=a,await cl((()=>r.dispatchEvent(new MouseEvent("click")))),null!=e.weightData){const e=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;e.download=this.weightDataFileName,e.href=n,await cl((()=>e.dispatchEvent(new MouseEvent("click"))))}return{modelArtifactsInfo:Vi(e)}}}}pl.URL_SCHEME="downloads://";class dl{constructor(e){if(null==e||e.length<1)throw new Error(`When calling browserFiles, at least 1 file is required, but received ${e}`);this.jsonFile=e[0],this.weightsFiles=e.slice(1)}async load(){return new Promise(((e,t)=>{const n=new FileReader;n.onload=n=>{const a=JSON.parse(n.target.result),r=a.modelTopology;if(null==r)return void t(new Error(`modelTopology field is missing from file ${this.jsonFile.name}`));if(null==a.weightsManifest)return void t(new Error(`weightManifest field is missing from file ${this.jsonFile.name}`));if(0===this.weightsFiles.length)return void e({modelTopology:r});const s=Wi(a,(e=>this.loadWeights(e)));e(s)},n.onerror=e=>t(`Failed to read model topology and weights manifest JSON from file '${this.jsonFile.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),n.readAsText(this.jsonFile)}))}loadWeights(e){const t=[],n=[];for(const s of e)t.push(...s.weights),n.push(...s.paths);const a=this.checkManifestAndWeightFiles(e),r=n.map((e=>this.loadWeightsFile(e,a[e])));return Promise.all(r).then((e=>[t,e]))}loadWeightsFile(e,t){return new Promise(((n,a)=>{const r=new FileReader;r.onload=e=>{const t=e.target.result;n(t)},r.onerror=t=>a(`Failed to weights data from file of path '${e}'.`),r.readAsArrayBuffer(t)}))}checkManifestAndWeightFiles(e){const t=[],n=this.weightsFiles.map((e=>zi(e.name))),a={};for(const r of e)r.paths.forEach((e=>{const r=zi(e);if(-1!==t.indexOf(r))throw new Error(`Duplicate file basename found in weights manifest: '${r}'`);if(t.push(r),-1===n.indexOf(r))throw new Error(`Weight file with basename '${r}' is not provided.`);a[e]=this.weightsFiles[n.indexOf(r)]}));if(t.length!==this.weightsFiles.length)throw new Error(`Mismatch in the number of files in weights manifest (${t.length}) and the number of weight files provided (${this.weightsFiles.length}).`);return a}}function hl(e){return new dl(e)}function fl(e,t,n,a){!function(e){qe(null!=e&&Array.isArray(e)&&e.length>0,(()=>"promises must be a none empty array"))}(e),function(e,t){qe(e>=0&&e<=1,(()=>`Progress fraction must be in range [0, 1], but got startFraction ${e}`)),qe(t>=0&&t<=1,(()=>`Progress fraction must be in range [0, 1], but got endFraction ${t}`)),qe(t>=e,(()=>`startFraction must be no more than endFraction, but got startFraction ${e} and endFraction ${t}`))}(n=null==n?0:n,a=null==a?1:a);let r=0;return Promise.all(e.map((s=>(s.then((s=>{const i=n+ ++r/e.length*(a-n);return t(i),s})),s))))}async function ml(e,t){null==t&&(t={});const n=null==t.fetchFunc?Ct().platform.fetch:t.fetchFunc,a=e.map((e=>n(e,t.requestInit,{isBinary:!0}))),r=(null==t.onProgress?await Promise.all(a):await fl(a,t.onProgress,0,.5)).map((e=>e.arrayBuffer()));return null==t.onProgress?await Promise.all(r):await fl(r,t.onProgress,.5,1)}async function gl(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"",n=arguments.length>2?arguments[2]:void 0,a=arguments.length>3?arguments[3]:void 0;return yl((e=>ml(e,{requestInit:a})))(e,t,n)}function yl(e){return async function(t){let n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"",a=arguments.length>2?arguments[2]:void 0;const r=t.map((()=>!1)),s={},i=null!=a?a.map((()=>!1)):[],o=[];if(t.forEach(((e,t)=>{let n=0;e.weights.forEach((e=>{const l="quantization"in e?e.quantization.dtype:e.dtype,u=yi[l]*Ye(e.shape),c=()=>{r[t]=!0,null==s[t]&&(s[t]=[]),s[t].push({manifestEntry:e,groupOffset:n,sizeBytes:u})};null!=a?a.forEach(((t,n)=>{t===e.name&&(c(),i[n]=!0)})):c(),o.push(e.name),n+=u}))})),!i.every((e=>e))){const e=a.filter(((e,t)=>!i[t]));throw new Error(`Could not find weights in manifest with names: ${e.join(", ")}. \nManifest JSON has weights with names: ${o.join(", ")}.`)}const l=r.reduce(((e,t,n)=>(t&&e.push(n),e)),[]),u=[];l.forEach((e=>{t[e].paths.forEach((e=>{const t=n+(n.endsWith("/")?"":"/")+e;u.push(t)}))}));const c=await e(u),p={};let d=0;return l.forEach((e=>{const n=t[e].paths.length,a=new bi(c.slice(d,d+n));s[e].forEach((e=>{const t=Ei(a.slice(e.groupOffset,e.groupOffset+e.sizeBytes),[e.manifestEntry]);for(const n in t)p[n]=t[n]})),d+=n})),p}}ji.registerSaveRouter((e=>Ct().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(pl.URL_SCHEME)?function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"model";return new pl(e)}(e.slice(pl.URL_SCHEME.length)):null));class bl{constructor(e,t){if(this.DEFAULT_METHOD="POST",null==t&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.weightUrlConverter=t.weightUrlConverter,null!=t.fetchFunc?(qe("function"===typeof t.fetchFunc,(()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)")),this.fetch=t.fetchFunc):this.fetch=Ct().platform.fetch,qe(null!=e&&e.length>0,(()=>"URL path for http must not be null, undefined or empty.")),Array.isArray(e)&&qe(2===e.length,(()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`)),this.path=e,null!=t.requestInit&&null!=t.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{},this.loadOptions=t}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;const n=Pi(e,[{paths:["./model.weights.bin"],weights:e.weightSpecs}]);if(t.body.append("model.json",new Blob([JSON.stringify(n)],{type:"application/json"}),"model.json"),null!=e.weightData){const n=bi.join(e.weightData);t.body.append("model.weights.bin",new Blob([n],{type:"application/octet-stream"}),"model.weights.bin")}const a=await this.fetch(this.path,t);if(a.ok)return{modelArtifactsInfo:Vi(e),responses:[a]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${a.status}.`)}async loadModelJSON(){const e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code ${e.status}. Please verify this URL points to the model JSON of the model to load.`);let t;try{t=await e.json()}catch(r){let e=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?e+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":e+=" Please make sure the server is serving valid JSON for this request.",new Error(e)}const n=t.modelTopology,a=t.weightsManifest;if(null==n&&null==a)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return t}async load(){if(this.loadOptions.streamWeights)return this.loadStream();return Wi(await this.loadModelJSON(),(e=>this.loadWeights(e)))}async loadStream(){const e=await this.loadModelJSON(),t=await this.getWeightUrls(e.weightsManifest),n=Ui(e.weightsManifest);return Object.assign(Object.assign({},e),{weightSpecs:n,getWeightStream:()=>function(e,t){var n;const a=null==t.fetchFunc?Ct().platform.fetch:t.fetchFunc;let r,s=0;return null===(n=t.onProgress)||void 0===n||n.call(t,0),new ReadableStream({pull:async n=>{for(var i;s<e.length;){if(!r){const n=(await a(e[s],t.requestInit,{isBinary:!0})).body;r=n.getReader()}const{done:o,value:l}=await r.read();if(!o)return void n.enqueue(l);s++,r=void 0,null===(i=t.onProgress)||void 0===i||i.call(t,s/e.length)}n.close()}})}(t,this.loadOptions)})}async getWeightUrls(e){const t=Array.isArray(this.path)?this.path[1]:this.path,[n,a]=function(e){const t=e.lastIndexOf("/"),n=e.lastIndexOf("?"),a=e.substring(0,t),r=n>t?e.substring(n):"";return[a+"/",r]}(t),r=this.weightPathPrefix||n,s=[],i=[];for(const o of e)for(const e of o.paths)null!=this.weightUrlConverter?i.push(this.weightUrlConverter(e)):s.push(r+e+a);return this.weightUrlConverter&&s.push(...await Promise.all(i)),s}async loadWeights(e){const t=await this.getWeightUrls(e);return[Ui(e),await ml(t,this.loadOptions)]}}function xl(e){return null!=e.match(bl.URL_SCHEME_REGEX)}bl.URL_SCHEME_REGEX=/^https?:\/\//;const vl=(e,t)=>{if("undefined"===typeof fetch&&(null==t||null==t.fetchFunc))return null;{let n=!0;if(n=Array.isArray(e)?e.every((e=>xl(e))):xl(e),n)return wl(e,t)}return null};function wl(e,t){return new bl(e,t)}function kl(e,t){return wl(e,t)}ji.registerSaveRouter(vl),ji.registerLoadRouter(vl);class Nl{constructor(e){this.modelArtifacts=e}load(){return this.modelArtifacts}}class Sl{constructor(e){this.saveHandler=e}save(e){return this.saveHandler(e)}}class Il{constructor(e){e.load&&(this.load=()=>Promise.resolve(e.load())),e.save&&(this.save=t=>Promise.resolve(e.save(t)))}}function Tl(e,t,n,a){return new Il(Cl(...arguments))}function Cl(e,t,n,a){if(1===arguments.length){return null!=e.modelTopology||null!=e.weightSpecs?new Nl(e):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new Nl({modelTopology:e}))}return console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new Nl({modelTopology:e,weightSpecs:t,weightData:n,trainingConfig:a})}function El(e){return new Sl(e)}function $l(e){return new Sl(e)}function Rl(e,t,n){if(Xe(e),null!=t&&3!==t.length)throw new Error("tensor3d() requires shape to have three numbers");const a=oi(e,n);if(3!==a.length&&1!==a.length)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(1===a.length&&null==t)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return mi(e,t,a,n)}let Al;function _l(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:3;if(t>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(null==e)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let n=!1,a=!1,r=!1,s=!1,i=!1,o=!1;if(e.data instanceof Uint8Array)n=!0;else if("undefined"!==typeof ImageData&&e instanceof ImageData)a=!0;else if("undefined"!==typeof HTMLVideoElement&&e instanceof HTMLVideoElement)r=!0;else if("undefined"!==typeof HTMLImageElement&&e instanceof HTMLImageElement)s=!0;else if(null!=e.getContext)i=!0;else{if(!("undefined"!==typeof ImageBitmap&&e instanceof ImageBitmap))throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${e.constructor.name}`);o=!0}if(null!=Kr(Pr,ti.backendName)){const n={pixels:e},a={numChannels:t};return ti.runKernel(Pr,n,a)}const[l,u]=r?[e.videoWidth,e.videoHeight]:[e.width,e.height];let c,p;if(i)c=e.getContext("2d").getImageData(0,0,l,u).data;else if(a||n)c=e.data;else if(s||r||o){if(null==Al)if("undefined"===typeof document){if("undefined"===typeof OffscreenCanvas||"undefined"===typeof OffscreenCanvasRenderingContext2D)throw new Error("Cannot parse input in current context. Reason: OffscreenCanvas Context2D rendering is not supported.");Al=new OffscreenCanvas(1,1).getContext("2d")}else Al=document.createElement("canvas").getContext("2d",{willReadFrequently:!0});Al.canvas.width=l,Al.canvas.height=u,Al.drawImage(e,0,0,l,u),c=Al.getImageData(0,0,l,u).data}if(4===t)p=new Int32Array(c);else{const e=l*u;p=new Int32Array(e*t);for(let n=0;n<e;n++)for(let e=0;e<t;++e)p[n*t+e]=c[4*n+e]}return Rl(p,[u,l,t],"int32")}const Fl=hi({fromPixels_:_l}),Dl=-2,Ol=-1;function Ml(e,t,n){const a=e.shape.length;qe(a===t.length,(()=>`Error in slice${a}D: Length of begin ${t} must match the rank of the array (${a}).`)),qe(a===n.length,(()=>`Error in slice${a}D: Length of size ${n} must match the rank of the array (${a}).`));for(let r=0;r<a;++r)qe(t[r]+n[r]<=e.shape[r],(()=>`Error in slice${a}D: begin[${r}] + size[${r}] (${t[r]+n[r]}) would overflow input.shape[${r}] (${e.shape[r]})`))}function Ll(e){const t=[];let n=0;for(;e>0;)1&e&&t.push(n),e/=2,n++;return t}function zl(e,t,n){const a=[];for(let r=0;r<e.length;r++)a[r]=Math.ceil((t[r]-e[r])/n[r]);return a}function Pl(e,t,n,a){const r=[...e];for(let s=r.length;s<a.length;s++)r.push(1);for(let s=0;s<n;s++)0===s?r[t]=1:(r.splice(t,0,1),r.pop());return r}function Bl(e,t,n){return n<=e?n:n-(t-1)}function Wl(e,t){const n=[];for(let a=0;a<e;a++)n.push(t+a);return n}function Vl(e,t,n,a,r,s,i,o,l){const u=e.length;let c=new Array(u),p=new Array(u),d=new Array(u);if(t.length&&n>0){const l=t[0],u=n+1;c=Ul(i,l,u,a,e),p=jl(o,l,u,r,e),d=Pl(s,l,u,e)}else for(let h=0;h<u;h++)c[h]=Hl(i,a,s,e,h,l),p[h]=ql(o,r,s,e,h,l),d[h]=Gl(s,h,l);return{begin:c,end:p,strides:d}}function Ul(e,t,n,a,r){const s=[...r],i=Wl(n,t);for(let o=0;o<s.length;o++)if(i.indexOf(o)>-1)s[o]=0;else{const r=Bl(t,n,o);let i=a[r];e&1<<r&&(i=0),s[o]=i}return s}function jl(e,t,n,a,r){const s=[...r],i=Wl(n,t);for(let o=0;o<s.length;o++)if(i.indexOf(o)>-1)s[o]=Number.MAX_SAFE_INTEGER;else{const r=Bl(t,n,o);let i=a[r];e&1<<r&&(i=Number.MAX_SAFE_INTEGER),s[o]=i}for(let o=0;o<s.length;o++){const e=r[o];s[o]<0&&(s[o]+=e),s[o]=je(0,s[o],r[o])}return s}function Gl(e,t,n){let a=e[t];return(n&1<<t||null==a)&&(a=1),a}function Hl(e,t,n,a,r,s){let i=t[r];const o=n[r]||1;(e&1<<r||s&1<<r||null==i)&&(i=o>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);const l=a[r];return i<0&&(i+=l),i=je(0,i,l-1),i}function ql(e,t,n,a,r,s){let i=t[r];const o=n[r]||1;(e&1<<r||s&1<<r||null==i)&&(i=o>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);const l=a[r];return i<0&&(i+=l),i=o>0?je(0,i,l):je(-1,i,l-1),i}function Kl(e,t,n){let a=n.length;for(let r=0;r<n.length;r++)if(n[r]>1){a=r;break}for(let r=a+1;r<n.length;r++)if(t[r]>0||n[r]!==e[r])return!1;return!0}function Xl(e,t){let n=e.length>0?e[e.length-1]:1;for(let a=0;a<e.length-1;a++)n+=e[a]*t[a];return n}function Yl(e,t,n){let a;const r=e.shape.length;let s;return a="number"===typeof t?[t,...new Array(r-1).fill(0)]:t.length<r?t.concat(new Array(r-t.length).fill(0)):t.slice(),a.forEach((e=>{qe(-1!==e,(()=>"slice() does not support negative begin indexing."))})),s=null==n?new Array(r).fill(-1):"number"===typeof n?[n,...new Array(r-1).fill(-1)]:n.length<r?n.concat(new Array(r-n.length).fill(-1)):n,s=s.map(((t,n)=>t>=0?t:(qe(-1===t,(()=>`Negative size values should be exactly -1 but got ${t} for the slice() size at index ${n}.`)),e.shape[n]-a[n]))),[a,s]}function Ql(e,t,n,a,r,s,i,o,l){let u;if(null==a?(u=new Array(t.length),u.fill(1)):u=a,null!=i&&0!==(i&i-1))throw new Error("Multiple ellipses in slice is not allowed.");let c=!1;const p={dims:u.length,numAddAxisAfterEllipsis:0,begin:t.slice(),end:n.slice(),strides:u.slice(),beginMask:r,endMask:s,ellipsisMask:i,newAxisMask:o,shrinkAxisMask:l};for(let b=0;b<p.dims;b++)c&&0!==(1<<b&o)&&p.numAddAxisAfterEllipsis++,1<<b&i&&(c=!0);c||(p.ellipsisMask|=1<<p.dims,p.dims++);const d={dims:e.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};!function(e,t){t.beginMask=0,t.endMask=0,t.shrinkAxisMask=0;let n=0;t.beginValid=null!=e.begin,t.endValid=null!=e.end,t.begin=new Array(t.dims),t.end=new Array(t.dims),t.strides=new Array(t.dims),t.finalShapeGatherIndices=[],t.finalShapeGatherIndicesSparse=[],t.inputShapeGatherIndicesSparse=new Array(t.dims);for(let a=0;a<e.dims;a++)if(1<<a&e.ellipsisMask){const r=Math.min(t.dims-(e.dims-a)+1+e.numAddAxisAfterEllipsis,t.dims);for(;n<r;n++)t.begin[n]=0,t.end[n]=0,t.strides[n]=1,t.beginMask|=1<<n,t.endMask|=1<<n,t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(-1),t.inputShapeGatherIndicesSparse[n]=a}else if(1<<a&e.newAxisMask)t.finalShapeGatherIndices.push(Dl),t.finalShapeGatherIndicesSparse.push(-1);else{if(n===t.begin.length)throw Error(`Index out of range using input dim ${n}; input has only ${t.dims} dims, ${t.begin.length}.`);null!=e.begin&&(t.begin[n]=e.begin[a]),null!=e.end&&(t.end[n]=e.end[a]),t.strides[n]=e.strides[a],e.beginMask&1<<a&&(t.beginMask|=1<<n),e.endMask&1<<a&&(t.endMask|=1<<n),e.shrinkAxisMask&1<<a?(t.finalShapeGatherIndices.push(Ol),t.finalShapeGatherIndicesSparse.push(-1),t.shrinkAxisMask|=1<<n):(t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(a)),t.inputShapeGatherIndicesSparse[n]=a,n++}}(p,d);let h=!0,f=!0,m=!0;const g=[],y=[];for(let b=0;b<e.length;++b){if(0===d.strides[b])throw Error(`strides[${b}] must be non-zero`);const t=!!(d.shrinkAxisMask&1<<b),n=e[b];if(-1===n){g.push(t?1:-1);continue}const a=[d.beginMask&1<<b,d.endMask&1<<b],r=[d.strides[b]>0?0:-1,d.strides[b]>0?n:n-1];if(t&&d.strides[b]<=0)throw Error("only stride 1 allowed on non-range indexing.");m=m&&1===d.strides[b];const s=!!(d.beginMask&1<<b&&d.endMask&1<<b);if(d.beginValid&&d.endValid){if(t){const e=d.begin[b]<0?n+d.begin[b]:d.begin[b];if(d.begin[b]=e,d.end[b]=d.begin[b]+1,e<0||e>=n)throw Error(`slice index ${d.begin[b]} of dimension ${b} out of bounds.`)}else d.begin[b]=Zl(d.begin[b],0,d.strides[b],n,a,r),d.end[b]=Zl(d.end[b],1,d.strides[b],n,a,r);const e=1===d.strides[b]&&0===d.begin[b]&&d.end[b]===n;h=h&&e,f=f&&(0===b&&1===d.strides[b]||e)}else h=h&&1===d.strides[b]&&s,f=f&&(0===b&&1===d.strides[b]||s);let i,o=!1;if(d.beginValid&&d.endValid?(i=d.end[b]-d.begin[b],o=!0):t?(i=1,o=!0):s&&n>=0&&(i=d.strides[b]<0?-n:n,o=!0),o){let e;e=0===i||i<0!==d.strides[b]<0?0:Math.trunc(i/d.strides[b])+(i%d.strides[b]!==0?1:0),g.push(e)}else g.push(-1)}for(let b=0;b<d.finalShapeGatherIndices.length;++b){const e=d.finalShapeGatherIndices[b];e>=0?y.push(g[e]):e===Dl&&y.push(1)}return{finalShapeSparse:y.filter(((e,t)=>d.finalShapeGatherIndices[t]!==Dl)),finalShape:y,isIdentity:h,sliceDim0:f,isSimpleSlice:m,begin:d.begin,end:d.end,strides:d.strides}}function Zl(e,t,n,a,r,s){if(r[t])return n>0?s[t]:s[t+1&1];{const t=e<0?a+e:e;return t<s[0]?s[0]:t>s[1]?s[1]:t}}const Jl=hi({acos_:function(e){const t={x:ci(e,"x","acos")};return ti.runKernel(Ft,t)}});const eu=hi({acosh_:function(e){const t={x:ci(e,"x","acosh")};return ti.runKernel(Dt,t)}});const tu=hi({addN_:function(e){qe(Array.isArray(e),(()=>"The argument passed to tf.addN() must be a list of tensors")),qe(e.length>=1,(()=>`Must pass at least one tensor to tf.addN(), but got ${e.length}`));const t=e.map(((e,t)=>ci(e,`tensors${t}`,"addN"))),n=t[0];t.forEach((e=>{if(e.dtype!==n.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")})),t.forEach((e=>{if(!Qe(e.shape,n.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")}));const a=t;return ti.runKernel(Mt,a)}});const nu=hi({all_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const a={x:ci(e,"x","all","bool")},r={axis:t,keepDims:n};return ti.runKernel(Lt,a,r)}});const au=hi({any_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const a={x:ci(e,"x","any","bool")},r={axis:t,keepDims:n};return ti.runKernel(zt,a,r)}});const ru=hi({argMax_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n={x:ci(e,"x","argMax")},a={axis:t};return ti.runKernel(Pt,n,a)}});const su=hi({argMin_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n={x:ci(e,"x","argMin")},a={axis:t};return ti.runKernel(Bt,n,a)}});const iu=hi({asin_:function(e){const t={x:ci(e,"x","asin")};return ti.runKernel(Wt,t)}});const ou=hi({asinh_:function(e){const t={x:ci(e,"x","asinh")};return ti.runKernel(Vt,t)}});const lu=hi({atan_:function(e){const t={x:ci(e,"x","atan")};return ti.runKernel(Ut,t)}});const uu=hi({atan2_:function(e,t){let n=ci(e,"a","atan2"),a=ci(t,"b","atan2");[n,a]=qs(n,a);const r={a:n,b:a};return ti.runKernel(Gt,r)}});const cu=hi({atanh_:function(e){const t={x:ci(e,"x","atanh")};return ti.runKernel(jt,t)}});function pu(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"NHWC",s=arguments.length>5?arguments[5]:void 0;return fu(e,[...t,e[3]],n,s,a,null,null,Su(r))}function du(e,t,n,a,r,s){let i=arguments.length>6&&void 0!==arguments[6]?arguments[6]:"channelsLast";const[o,l]=yu(t);let u;if("channelsLast"===i)u=[o,l,e[3],e[3]];else{if("channelsFirst"!==i)throw new Error(`Unknown dataFormat ${i}`);u=[o,l,e[1],e[1]]}return fu(e,u,n,a,r,s,!1,i)}function hu(e,t,n,a,r,s){let i=arguments.length>6&&void 0!==arguments[6]?arguments[6]:"NDHWC";const[o,l,u]=bu(t);let c,p;if("NDHWC"===i)p="channelsLast",c=[o,l,u,e[4],e[4]];else{if("NCDHW"!==i)throw new Error(`Unknown dataFormat ${i}`);p="channelsFirst",c=[o,l,u,e[1],e[1]]}return mu(e,c,n,a,r,!1,p,s)}function fu(e,t,n,a,r,s){let i=arguments.length>6&&void 0!==arguments[6]&&arguments[6],o=arguments.length>7&&void 0!==arguments[7]?arguments[7]:"channelsLast",[l,u,c,p]=[-1,-1,-1,-1];if("channelsLast"===o)[l,u,c,p]=e;else{if("channelsFirst"!==o)throw new Error(`Unknown dataFormat ${o}`);[l,p,u,c]=e}const[d,h,,f]=t,[m,g]=yu(n),[y,b]=yu(a),x=xu(d,y),v=xu(h,b),{padInfo:w,outHeight:k,outWidth:N}=function(e,t,n,a,r,s,i,o,l){let u,c,p;if("number"===typeof e){u={top:e,bottom:e,left:e,right:e,type:0===e?"VALID":"NUMBER"};const r=function(e,t,n,a,r){null==a&&(a=gu(e,t,n));const s=e[0],i=e[1],o=vu((s-t+2*a)/n+1,r),l=vu((i-t+2*a)/n+1,r);return[o,l]}([t,n],s,a,e,o);c=r[0],p=r[1]}else if("same"===e){c=Math.ceil(t/a),p=Math.ceil(n/r);const e=Math.max(0,(c-1)*a+s-t),o=Math.max(0,(p-1)*r+i-n),l=Math.floor(e/2),d=e-l,h=Math.floor(o/2);u={top:l,bottom:d,left:h,right:o-h,type:"SAME"}}else if("valid"===e)u={top:0,bottom:0,left:0,right:0,type:"VALID"},c=Math.ceil((t-s+1)/a),p=Math.ceil((n-i+1)/r);else{if("object"!==typeof e)throw Error(`Unknown padding parameter: ${e}`);{const d="channelsLast"===l?e[1][0]:e[2][0],h="channelsLast"===l?e[1][1]:e[2][1],f="channelsLast"===l?e[2][0]:e[3][0],m="channelsLast"===l?e[2][1]:e[3][1];u={top:d,bottom:h,left:f,right:m,type:0===d&&0===h&&0===f&&0===m?"VALID":"EXPLICIT"},c=vu((t-s+d+h)/a+1,o),p=vu((n-i+f+m)/r+1,o)}}return{padInfo:u,outHeight:c,outWidth:p}}(r,u,c,m,g,x,v,s,o),S=i?f*p:f;let I;return"channelsFirst"===o?I=[l,S,k,N]:"channelsLast"===o&&(I=[l,k,N,S]),{batchSize:l,dataFormat:o,inHeight:u,inWidth:c,inChannels:p,outHeight:k,outWidth:N,outChannels:S,padInfo:w,strideHeight:m,strideWidth:g,filterHeight:d,filterWidth:h,effectiveFilterHeight:x,effectiveFilterWidth:v,dilationHeight:y,dilationWidth:b,inShape:e,outShape:I,filterShape:t}}function mu(e,t,n,a,r){let s=arguments.length>5&&void 0!==arguments[5]&&arguments[5],i=arguments.length>6&&void 0!==arguments[6]?arguments[6]:"channelsLast",o=arguments.length>7?arguments[7]:void 0,[l,u,c,p,d]=[-1,-1,-1,-1,-1];if("channelsLast"===i)[l,u,c,p,d]=e;else{if("channelsFirst"!==i)throw new Error(`Unknown dataFormat ${i}`);[l,d,u,c,p]=e}const[h,f,m,,g]=t,[y,b,x]=bu(n),[v,w,k]=bu(a),N=xu(h,v),S=xu(f,w),I=xu(m,k),{padInfo:T,outDepth:C,outHeight:E,outWidth:$}=function(e,t,n,a,r,s,i,o,l,u,c){let p,d,h,f;"valid"===e&&(e=0);if("number"===typeof e){p={top:e,bottom:e,left:e,right:e,front:e,back:e,type:0===e?"VALID":"NUMBER"};const m=function(e,t,n,a,r,s){null==r&&(r=gu(e,t[0],a[0]));const i=[0,0,0,n];for(let o=0;o<3;o++)e[o]+2*r>=t[o]&&(i[o]=vu((e[o]-t[o]+2*r)/a[o]+1,s));return i}([t,n,a,1],[o,l,u],1,[r,s,i],e,c);d=m[0],h=m[1],f=m[2]}else{if("same"!==e)throw Error(`Unknown padding parameter: ${e}`);{d=Math.ceil(t/r),h=Math.ceil(n/s),f=Math.ceil(a/i);const e=(d-1)*r+o-t,c=(h-1)*s+l-n,m=(f-1)*i+u-a,g=Math.floor(e/2),y=e-g,b=Math.floor(c/2),x=c-b,v=Math.floor(m/2);p={top:b,bottom:x,left:v,right:m-v,front:g,back:y,type:"SAME"}}}return{padInfo:p,outDepth:d,outHeight:h,outWidth:f}}(r,u,c,p,y,b,x,N,S,I,o),R=s?g*d:g;let A;return"channelsFirst"===i?A=[l,R,C,E,$]:"channelsLast"===i&&(A=[l,C,E,$,R]),{batchSize:l,dataFormat:i,inDepth:u,inHeight:c,inWidth:p,inChannels:d,outDepth:C,outHeight:E,outWidth:$,outChannels:R,padInfo:T,strideDepth:y,strideHeight:b,strideWidth:x,filterDepth:h,filterHeight:f,filterWidth:m,effectiveFilterDepth:N,effectiveFilterHeight:S,effectiveFilterWidth:I,dilationDepth:v,dilationHeight:w,dilationWidth:k,inShape:e,outShape:A,filterShape:t}}function gu(e,t,n){const a=xu(t,arguments.length>3&&void 0!==arguments[3]?arguments[3]:1);return Math.floor((e[0]*(n-1)-n+a)/2)}function yu(e){return"number"===typeof e?[e,e,e]:2===e.length?[e[0],e[1],1]:e}function bu(e){return"number"===typeof e?[e,e,e]:e}function xu(e,t){return t<=1?e:e+(e-1)*(t-1)}function vu(e,t){if(!t)return Math.trunc(e);switch(t){case"round":return Math.round(e);case"ceil":return Math.ceil(e);case"floor":return Math.floor(e);default:throw new Error(`Unknown roundingMode ${t}`)}}function wu(e){const[t,n,a]=yu(e);return 1===t&&1===n&&1===a}function ku(e,t){return wu(e)||wu(t)}function Nu(e){return yu(e).every((e=>e>0))}function Su(e){if("NHWC"===e)return"channelsLast";if("NCHW"===e)return"channelsFirst";throw new Error(`Unknown dataFormat ${e}`)}function Iu(e,t,n){if(null!=n){if("string"===typeof t)throw Error(`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`);if("number"===typeof t)qe(Ze(t),(()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`));else{if("object"!==typeof t)throw Error(`Error in ${e}: Unknown padding parameter: ${t}`);t.forEach((t=>{t.forEach((t=>{qe(Ze(t),(()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`))}))}))}}}const Tu=hi({reshape_:function(e,t){const n={x:ci(e,"x","reshape","string_or_numeric")},a={shape:t};return ti.runKernel(ja,n,a)}});const Cu=hi({avgPool_:function(e,t,n,a,r){const s=ci(e,"x","avgPool","float32");qe(ku(n,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`));let i=s,o=!1;3===s.rank&&(o=!0,i=Tu(s,[1,s.shape[0],s.shape[1],s.shape[2]])),qe(4===i.rank,(()=>`Error in avgPool: x must be rank 4 but got rank ${i.rank}.`)),Iu("avgPool",a,r);const l={x:i},u={filterSize:t,strides:n,pad:a,dimRoundingMode:r};let c=ti.runKernel(Ht,l,u);return c=Ro(c,s.dtype),o?Tu(c,[c.shape[1],c.shape[2],c.shape[3]]):c}});const Eu=hi({avgPool3d_:function(e,t,n,a,r){let s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"NDHWC";const i=ci(e,"x","avgPool3d","float32");let o=i,l=!1;4===i.rank&&(l=!0,o=Tu(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),qe(5===o.rank,(()=>`Error in avgPool3d: x must be rank 5 but got rank ${o.rank}.`)),qe("NDHWC"===s,(()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${s}`)),qe("number"===typeof n&&n>0||Array.isArray(n)&&n[0]>0&&n[1]>0&&n[2]>0,(()=>`Error in avgPool3d: Stride must be > 0, but got '${n}'`)),Iu("avgPool3d",a,r);const u={x:o},c={filterSize:t,strides:n,pad:a,dimRoundingMode:r,dataFormat:s};let p=ti.runKernel(Kt,u,c);return p=Ro(p,o.dtype),l?Tu(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}});const $u=hi({concat_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;qe(e.length>=1,(()=>"Pass at least one tensor to concat"));const n=pi(e,"tensors","concat","string_or_numeric");if("complex64"===n[0].dtype&&n.forEach((e=>{if("complex64"!==e.dtype)throw new Error(`Cannot concatenate complex64 tensors with a tensor\n          with dtype ${e.dtype}. `)})),1===n.length)return Ao(n[0]);const a=n,r={axis:t};return ti.runKernel(on,a,r)}});const Ru=hi({matMul_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r=ci(e,"a","matMul"),s=ci(t,"b","matMul");[r,s]=qs(r,s);const i={a:r,b:s},o={transposeA:n,transposeB:a};return ti.runKernel(Yt,i,o)}});const Au=hi({sigmoid_:function(e){const t={x:ci(e,"x","sigmoid","float32")};return ti.runKernel(lr,t)}});const _u=hi({slice_:function(e,t,n){const a=ci(e,"x","slice","string_or_numeric");if(0===a.rank)throw new Error("Slicing scalar is not possible");const r={x:a},s={begin:t,size:n};return ti.runKernel(rr,r,s)}});const Fu=hi({tanh_:function(e){const t={x:ci(e,"x","tanh","float32")};return ti.runKernel($r,t)}});const Du=hi({basicLSTMCell_:function(e,t,n,a,r,s){const i=ci(e,"forgetBias","basicLSTMCell"),o=ci(t,"lstmKernel","basicLSTMCell"),l=ci(n,"lstmBias","basicLSTMCell"),u=ci(a,"data","basicLSTMCell"),c=ci(r,"c","basicLSTMCell"),p=ci(s,"h","basicLSTMCell"),d=$u([u,p],1),h=Ru(d,o),f=Fo(h,l),m=f.shape[0],g=f.shape[1]/4,y=[m,g],b=_u(f,[0,0],y),x=_u(f,[0,g],y),v=_u(f,[0,2*g],y),w=_u(f,[0,3*g],y),k=Fo(Mo(Au(b),Fu(x)),Mo(c,Au(Fo(i,v))));return[k,Mo(Fu(k),Au(w))]}});const Ou=hi({batchToSpaceND_:function(e,t,n){const a=ci(e,"x","batchToSpaceND"),r=t.reduce(((e,t)=>e*t));qe(a.rank>=1+t.length,(()=>`input rank is ${a.rank} but should be > than blockShape.length ${t.length}`)),qe(n.length===t.length,(()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${t.length}`)),qe(a.shape[0]%r===0,(()=>`input tensor batch is ${a.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${r}`));const s={x:a},i={blockShape:t,crops:n};return ti.runKernel(Qt,s,i)}});const Mu=hi({batchNorm_:function(e,t,n,a,r,s){null==s&&(s=.001);const i=ci(e,"x","batchNorm"),o=ci(t,"mean","batchNorm"),l=ci(n,"variance","batchNorm");let u,c;null!=r&&(u=ci(r,"scale","batchNorm")),null!=a&&(c=ci(a,"offset","batchNorm")),qe(o.rank===l.rank,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),qe(null==c||o.rank===c.rank,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),qe(null==u||o.rank===u.rank,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));const p={x:function(e){let t;return t=0===e.rank||1===e.rank?Tu(e,[1,1,1,e.size]):2===e.rank?Tu(e,[1,1,e.shape[0],e.shape[1]]):3===e.rank?Tu(e,[1,e.shape[0],e.shape[1],e.shape[2]]):e,t}(i),scale:u,offset:c,mean:o,variance:l},d={varianceEpsilon:s},h=ti.runKernel(Un,p,d);return Tu(h,i.shape)}});const Lu=hi({batchNorm2d_:function(e,t,n,a,r,s){const i=ci(e,"x","batchNorm"),o=ci(t,"mean","batchNorm"),l=ci(n,"variance","batchNorm");let u,c;return null!=r&&(u=ci(r,"scale","batchNorm")),null!=a&&(c=ci(a,"offset","batchNorm")),qe(2===i.rank,(()=>`Error in batchNorm2D: x must be rank 2 but got rank ${i.rank}.`)),qe(2===o.rank||1===o.rank,(()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${o.rank}.`)),qe(2===l.rank||1===l.rank,(()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${l.rank}.`)),null!=u&&qe(2===u.rank||1===u.rank,(()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${u.rank}.`)),null!=c&&qe(2===c.rank||1===c.rank,(()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${c.rank}.`)),Mu(i,o,l,c,u,s)}});const zu=hi({batchNorm3d_:function(e,t,n,a,r,s){const i=ci(e,"x","batchNorm"),o=ci(t,"mean","batchNorm"),l=ci(n,"variance","batchNorm");let u,c;return null!=r&&(u=ci(r,"scale","batchNorm")),null!=a&&(c=ci(a,"offset","batchNorm")),qe(3===i.rank,(()=>`Error in batchNorm3D: x must be rank 3 but got rank ${i.rank}.`)),qe(3===o.rank||1===o.rank,(()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${o.rank}.`)),qe(3===l.rank||1===l.rank,(()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${l.rank}.`)),null!=u&&qe(3===u.rank||1===u.rank,(()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${u.rank}.`)),null!=c&&qe(3===c.rank||1===c.rank,(()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${c.rank}.`)),Mu(i,o,l,c,u,s)}});const Pu=hi({batchNorm4d_:function(e,t,n,a,r,s){const i=ci(e,"x","batchNorm"),o=ci(t,"mean","batchNorm"),l=ci(n,"variance","batchNorm");let u,c;return null!=r&&(u=ci(r,"scale","batchNorm")),null!=a&&(c=ci(a,"offset","batchNorm")),qe(4===i.rank,(()=>`Error in batchNorm4D: x must be rank 4 but got rank ${i.rank}.`)),qe(4===o.rank||1===o.rank,(()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${o.rank}.`)),qe(4===l.rank||1===l.rank,(()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${l.rank}.`)),null!=u&&qe(4===u.rank||1===u.rank,(()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${u.rank}.`)),null!=c&&qe(4===c.rank||1===c.rank,(()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${c.rank}.`)),Mu(i,o,l,c,u,s)}});const Bu=hi({bincount_:function(e,t,n){const a=ci(e,"x","bincount"),r=ci(t,"weights","bincount");qe("int32"===a.dtype,(()=>`Error in bincount: input dtype must be int32, but got ${a.dtype}`)),qe(n>=0,(()=>`size must be non-negative, but got ${n}.`)),qe(r.size===a.size||0===r.size,(()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${a.shape}, weights shape: ${r.shape}.`));const s={x:a,weights:r},i={size:n};return ti.runKernel(Zt,s,i)}});const Wu=hi({bitwiseAnd_:function(e,t){const n=ci(e,"x","bitwiseAnd"),a=ci(t,"y","bitwiseAnd");if(!Qe(n.shape,a.shape))throw new Error(`BitwiseAnd: Tensors must have the same shape. x: ${n.shape}, y: ${a.shape}`);if("int32"!==n.dtype||"int32"!==a.dtype)throw new Error(`BitwiseAnd: Only supports 'int32' values in tensor, found type of x: ${n.dtype} and type of y: ${a.dtype}`);const r={a:n,b:a};return ti.runKernel(Jt,r)}});const Vu=hi({broadcastArgs_:function(e,t){const n=ci(e,"s0","broadcastArgs","int32"),a=ci(t,"s1","broadcastArgs","int32");if(1!==n.rank)throw new Error(`broadcastArgs(): first input must be a vector (rank=1). Has rank ${n.rank}`);if(1!==a.rank)throw new Error(`broadcastArgs(): second input must be a vector (rank=1). Has rank ${a.rank}`);const r={s0:n,s1:a};return ti.runKernel(en,r)}});const Uu=hi({broadcastTo_:function(e,t){let n=ci(e,"broadcastTo","x");const a=n.shape;if(vt(t),t.length<n.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${n.rank}.`);if(t.length>n.rank){const e=n.shape.slice();for(;e.length<t.length;)e.unshift(1);n=Tu(n,e)}const r=n.shape,s=Array.from(t);for(let l=t.length-1;l>=0;l--)if(r[l]===t[l])s[l]=1;else if(1!==n.shape[l])throw new Error(`broadcastTo(): [${a}] cannot be broadcast to [${t}].`);if(0===s.map(((e,t)=>e>1?t:-1)).filter((e=>e>=0)).length)return Ao(n);const i={x:n},o={reps:s};return ti.runKernel(Rr,i,o)}});const ju=hi({ceil_:function(e){const t={x:ci(e,"x","ceil","float32")};return ti.runKernel(nn,t)}});const Gu=hi({clipByValue_:function(e,t,n){const a=ci(e,"x","clipByValue");if(qe(t<=n,(()=>`Error in clip: min (${t}) must be less than or equal to max (${n}).`)),t===n)return Xo(a.shape,t,a.dtype);const r={x:a},s={clipValueMin:t,clipValueMax:n};return ti.runKernel(an,r,s)}});const Hu=hi({concat1d_:function(e){return $u(e,0)}});const qu=hi({concat2d_:function(e,t){return $u(e,t)}});const Ku=hi({concat3d_:function(e,t){return $u(e,t)}});const Xu=hi({concat4d_:function(e,t){return $u(e,t)}});const Yu=hi({conv2d_:function(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"NHWC",s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1],i=arguments.length>6?arguments[6]:void 0;const o=ci(e,"x","conv2d","float32"),l=ci(t,"filter","conv2d","float32");let u=o,c=!1;3===o.rank&&(c=!0,u=Tu(o,[1,o.shape[0],o.shape[1],o.shape[2]])),qe(4===u.rank,(()=>`Error in conv2d: input must be rank 4, but got rank ${u.rank}.`)),qe(4===l.rank,(()=>`Error in conv2d: filter must be rank 4, but got rank ${l.rank}.`)),Iu("conv2d",a,i);const p="NHWC"===r?u.shape[3]:u.shape[1];qe(p===l.shape[2],(()=>`Error in conv2d: depth of input (${p}) must match input depth for filter ${l.shape[2]}.`)),qe(ku(n,s),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`)),qe(Nu(s),(()=>"Error in conv2D: Dilated rates should be larger than 0.")),qe(Nu(n),(()=>"Error in conv2D: Strides should be larger than 0."));const d={x:u,filter:l},h={strides:n,pad:a,dataFormat:r,dilations:s,dimRoundingMode:i},f=ti.runKernel(ln,d,h);return c?Tu(f,[f.shape[1],f.shape[2],f.shape[3]]):f}});const Qu=hi({conv1d_:function(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"NWC",s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,i=arguments.length>6?arguments[6]:void 0;const o=ci(e,"x","conv1d"),l=ci(t,"filter","conv1d");let u=o,c=!1;2===o.rank&&(c=!0,u=Tu(o,[1,o.shape[0],o.shape[1]])),qe(3===u.rank,(()=>`Error in conv1d: input must be rank 3, but got rank ${u.rank}.`)),qe(3===l.rank,(()=>`Error in conv1d: filter must be rank 3, but got rank ${l.rank}.`)),Iu("conv1d",a,i),qe(u.shape[2]===l.shape[1],(()=>`Error in conv1d: depth of input (${u.shape[2]}) must match input depth for filter ${l.shape[1]}.`)),qe(ku(n,s),(()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${n} and dilation '${s}'`)),qe(Nu(s),(()=>"Error in conv1D: Dilated rates should be larger than 0.")),qe(Nu(n),(()=>"Error in conv1D: Stride should be larger than 0.")),qe("NWC"===r,(()=>`Error in conv1d: got dataFormat of ${r} but only NWC is currently supported.`));const p=Tu(l,[1,l.shape[0],l.shape[1],l.shape[2]]),d=Tu(u,[u.shape[0],1,u.shape[1],u.shape[2]]),h=Yu(d,p,[1,n],a,"NHWC",[1,s],i);return Tu(h,c?[h.shape[2],h.shape[3]]:[h.shape[0],h.shape[2],h.shape[3]])}});const Zu=hi({conv2DBackpropInput_:function(e,t,n,a,r){let s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"NHWC",i=arguments.length>6?arguments[6]:void 0;qe(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let o=e,l=t,u=!1;3===t.rank&&(u=!0,l=Tu(t,[1,t.shape[0],t.shape[1],t.shape[2]]),o=[1,e[0],e[1],e[2]]),qe(4===o.length,(()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${o.length}.`)),qe(4===l.rank,(()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${l.rank}`)),qe(4===n.rank,(()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${n.rank}`));const c="NHWC"===s?o[3]:o[1],p="NHWC"===s?l.shape[3]:l.shape[1];qe(c===n.shape[2],(()=>`Error in conv2dDerInput: depth of input (${c}) must match input depth for filter ${n.shape[2]}.`)),qe(p===n.shape[3],(()=>`Error in conv2dDerInput: depth of output (${p}) must match output depth for filter ${n.shape[3]}.`)),Iu("conv2dDerInput",r,i);const d={dy:l,filter:n},h={strides:a,pad:r,dataFormat:s,dimRoundingMode:i,inputShape:o},f=ti.runKernel(cn,d,h);return u?Tu(f,[f.shape[1],f.shape[2],f.shape[3]]):f}});const Ju=hi({conv2dTranspose_:function(e,t,n,a,r,s){const i=ci(e,"x","conv2dTranspose"),o=ci(t,"filter","conv2dTranspose");return Zu(n,i,o,a,r,"NHWC",s)}});const ec=hi({conv3d_:function(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"NDHWC",s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1,1];const i=ci(e,"x","conv3d"),o=ci(t,"filter","conv3d");let l=i,u=!1;4===i.rank&&(u=!0,l=Tu(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),qe(5===l.rank,(()=>`Error in conv3d: input must be rank 5, but got rank ${l.rank}.`)),qe(5===o.rank,(()=>`Error in conv3d: filter must be rank 5, but got rank ${o.rank}.`)),qe(l.shape[4]===o.shape[3],(()=>`Error in conv3d: depth of input (${l.shape[4]}) must match input depth for filter ${o.shape[3]}.`)),qe(ku(n,s),(()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`)),qe("NDHWC"===r,(()=>`Error in conv3d: got dataFormat of ${r} but only NDHWC is currently supported.`)),qe(Nu(s),(()=>"Error in conv3D: Dilated rates should be larger than 0.")),qe(Nu(n),(()=>"Error in conv3D: Strides should be larger than 0."));const c={x:l,filter:o},p={strides:n,pad:a,dataFormat:r,dilations:s},d=ti.runKernel(pn,c,p);return u?Tu(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}});const tc=hi({conv3DBackpropInput_:function(e,t,n,a,r){qe(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let s=e,i=t,o=!1;4===t.rank&&(o=!0,i=Tu(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),s=[1,e[0],e[1],e[2],e[3]]);const l=s[4],u=i.shape[4];qe(5===s.length,(()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${s.length}.`)),qe(5===i.rank,(()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${i.rank}`)),qe(5===n.rank,(()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${n.rank}`)),qe(l===n.shape[3],(()=>`Error in conv3dDerInput: depth of input (${l}) must match input depth for filter ${n.shape[3]}.`)),qe(u===n.shape[4],(()=>`Error in conv3dDerInput: depth of output (${u}) must match output depth for filter ${n.shape[4]}.`));const c={dy:i,filter:n},p={pad:r,strides:a,inputShape:s},d=ti.runKernel(hn,c,p);return o?Tu(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}});const nc=hi({conv3dTranspose_:function(e,t,n,a,r){const s=ci(e,"x","conv3dTranspose"),i=ci(t,"filter","conv3dTranspose");return tc(n,s,i,a,r)}});const ac=hi({cos_:function(e){const t={x:ci(e,"x","cos","float32")};return ti.runKernel(fn,t)}});const rc=hi({cosh_:function(e){const t={x:ci(e,"x","cosh","float32")};return ti.runKernel(mn,t)}});const sc=hi({cumprod_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const r={x:ci(e,"x","cumprod")},s={axis:t,exclusive:n,reverse:a};return ti.runKernel(gn,r,s)}});const ic=hi({cumsum_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const r={x:ci(e,"x","cumsum")},s={axis:t,exclusive:n,reverse:a};return ti.runKernel(yn,r,s)}});const oc=hi({denseBincount_:function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const r=ci(e,"x","denseBincount"),s=ci(t,"weights","denseBincount");qe("int32"===r.dtype,(()=>`Error in denseBincount: input dtype must be int32, but got ${r.dtype}`)),qe(r.rank<=2,(()=>`Error in denseBincount: input must be at most rank 2, but got rank ${r.rank}.`)),qe(n>=0,(()=>`size must be non-negative, but got ${n}.`)),qe(s.size===r.size||0===s.size,(()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${r.shape}, weights shape: ${s.shape}.`));const i={x:r,weights:s},o={size:n,binaryOutput:a};return ti.runKernel(xn,i,o)}});const lc=hi({depthToSpace_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"NHWC";const a=ci(e,"x","depthToSpace","float32"),r="NHWC"===n?a.shape[1]:a.shape[2],s="NHWC"===n?a.shape[2]:a.shape[3],i="NHWC"===n?a.shape[3]:a.shape[1];qe(t>1,(()=>`blockSize should be > 1 for depthToSpace, but was: ${t}`)),qe(r*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${r} and ${t}  for depthToSpace with input shape\n    ${a.shape}`)),qe(s*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${s} and ${t} for depthToSpace with input shape\n        ${a.shape}`)),qe(i%(t*t)===0,(()=>`Dimension size must be evenly divisible by ${t*t} but is ${i} for depthToSpace with input shape ${a.shape}`));const o={x:a},l={blockSize:t,dataFormat:n};return ti.runKernel(vn,o,l)}});const uc=hi({depthwiseConv2d_:function(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"NHWC",s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1],i=arguments.length>6?arguments[6]:void 0;const o=ci(e,"x","depthwiseConv2d","float32"),l=ci(t,"filter","depthwiseConv2d","float32");let u=o,c=!1;3===o.rank&&(c=!0,u=Tu(o,[1,o.shape[0],o.shape[1],o.shape[2]])),qe(4===u.rank,(()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${u.rank}.`)),qe(4===l.rank,(()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${l.rank}.`));const p="NHWC"===r?u.shape[3]:u.shape[1];qe(p===l.shape[2],(()=>`Error in depthwiseConv2d: number of input channels (${p}) must match the inChannels dimension in filter ${l.shape[2]}.`)),Iu("depthwiseConv2d",a,i);const d={x:u,filter:l},h={strides:n,pad:a,dataFormat:r,dilations:s,dimRoundingMode:i},f=ti.runKernel(wn,d,h);return c?Tu(f,[f.shape[1],f.shape[2],f.shape[3]]):f}});const cc=hi({diag_:function(e){const t={x:ci(e,"x","diag")};return ti.runKernel(Sn,t)}});const pc=hi({dilation2d_:function(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:[1,1],s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"NHWC";const i=ci(e,"x","dilation2d"),o=ci(t,"filter","dilation2d");qe(3===i.rank||4===i.rank,(()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${i.rank}.`)),qe(3===o.rank,(()=>`Error in dilation2d: filter must be rank 3, but got rank ${o.rank}.`)),qe("NHWC"===s,(()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${s}`));let l=i,u=!1;3===i.rank&&(l=Tu(i,[1,i.shape[0],i.shape[1],i.shape[2]]),u=!0),qe(l.shape[3]===o.shape[2],(()=>`Error in dilation2d:  input and filter must have the same depth: ${l.shape[3]} vs ${o.shape[2]}`));const c={x:l,filter:o},p={strides:n,pad:a,dilations:r},d=ti.runKernel(In,c,p);return u?Tu(d,[d.shape[1],d.shape[2],d.shape[3]]):d}});const dc=hi({equal_:function(e,t){let n=ci(e,"a","equal","string_or_numeric"),a=ci(t,"b","equal","string_or_numeric");[n,a]=qs(n,a),al(n.shape,a.shape);const r={a:n,b:a};return ti.runKernel(Dn,r)}});const hc=hi({where_:function(e,t,n){const a=ci(t,"a","where"),r=ci(n,"b","where"),s=ci(e,"condition","where","bool"),i=al(al(s.shape,a.shape),r.shape),o={condition:Uu(s,i),t:Uu(a,i),e:Uu(r,i)};return ti.runKernel(nr,o)}});const fc=hi({divNoNan_:function(e,t){let n=ci(e,"a","div"),a=ci(t,"b","div");[n,a]=qs(n,a);const r=Oo(n,a),s=Po(r),i=dc(a,s);return hc(i,s,r)}});const mc=hi({dot_:function(e,t){const n=ci(e,"t1","dot"),a=ci(t,"t2","dot");qe((1===n.rank||2===n.rank)&&(1===a.rank||2===a.rank),(()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${n.rank} and ${a.rank}.`));const r=1===n.rank?n.size:n.shape[1],s=1===a.rank?a.size:a.shape[0];if(qe(r===s,(()=>`Error in dot: inner dimensions of inputs must match, but got ${r} and ${s}.`)),1===n.rank&&1===a.rank){const e=Tu(n,[1,-1]),t=Tu(a,[-1,1]),r=Ru(e,t);return Tu(r,[])}if(1===n.rank&&2===a.rank){const e=Tu(n,[1,-1]),t=Tu(a,[a.shape[0],a.shape[1]]),r=Ru(e,t);return Tu(r,[r.size])}if(2===n.rank&&1===a.rank){const e=Tu(a,[-1,1]),t=Ru(n,e);return Tu(t,[t.size])}{const e=Tu(a,[a.shape[0],a.shape[1]]);return Ru(n,e)}}});const gc=hi({einsum_:function(e){for(var t=arguments.length,n=new Array(t>1?t-1:0),a=1;a<t;a++)n[a-1]=arguments[a];const r=n.map(((e,t)=>ci(e,`tensors${t}`,"einsum"))),s={equation:e};return ti.runKernel(Rn,r,s)}});const yc=hi({elu_:function(e){const t={x:ci(e,"x","elu","float32")};return ti.runKernel(An,t)}});const bc=hi({ensureShape_:function(e,t){const n=ci(e,"x","ensureShape","string_or_numeric");if(!function(e,t){if(e===t)return!0;if(null==e||null==t)return!1;if(e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(null!==e[n]&&null!==t[n]&&e[n]!==t[n])return!1;return!0}(n.shape,t))throw new Error(`EnsureShape: Shape of tensor ${n.shape} is not compatible with expected shape ${t}`);return e}});const xc=hi({erf_:function(e){let t=ci(e,"x","erf");qe("int32"===t.dtype||"float32"===t.dtype,(()=>"Input dtype must be `int32` or `float32`.")),"int32"===t.dtype&&(t=Ro(t,"float32"));const n={x:t};return ti.runKernel(Fn,n)}});function vc(e,t){for(let n=0;n<e.length;++n)if(e[e.length-n-1]!==t-1-n)return!1;return!0}function wc(e,t,n){const a=e.length+t.length,r=[];let s=0,i=0;for(let o=0;o<a;o++)-1===n.indexOf(o)?r.push(e[s++]):r.push(t[i++]);return r}function kc(e,t){const n=[],a=e.length;for(let r=0;r<a;r++)-1===t.indexOf(r)&&n.push(e[r]);return[n,t.map((t=>e[t]))]}function Nc(e,t){return wc(e,t.map((e=>1)),t)}function Sc(e,t,n){qe(vc(t,n),(()=>`${e} supports only inner-most axes for now. Got axes ${t} and rank-${n} input.`))}function Ic(e,t){if(vc(e,t))return null;const n=[];for(let a=0;a<t;++a)-1===e.indexOf(a)&&n.push(a);return e.forEach((e=>n.push(e))),n}function Tc(e){return e.map(((e,t)=>[t,e])).sort(((e,t)=>e[1]-t[1])).map((e=>e[0]))}function Cc(e,t){const n=[];for(let a=t-e;a<t;++a)n.push(a);return n}const Ec=hi({max_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const a={x:ci(e,"x","max")},r={reductionIndices:t,keepDims:n};return ti.runKernel(pa,a,r)}});const $c=hi({min_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const a={x:ci(e,"x","min")},r={axis:t,keepDims:n};return ti.runKernel(xa,a,r)}});const Rc=hi({sum_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],a=ci(e,"x","sum");"bool"===a.dtype&&(a=Ro(a,"int32"));const r={x:a},s={axis:t,keepDims:n};return ti.runKernel(pr,r,s)}});function Ac(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null;if(0===e.rank)return el(e);if(1!==e.rank&&null===n)return Ac(Tu(e,[-1]),t,n);if(1===e.rank||"number"===typeof n||Array.isArray(n)&&1===n.length){if(1===t)return Rc(el(e),n);if(t===1/0)return Ec(el(e),n);if(t===-1/0)return $c(el(e),n);if("euclidean"===t||2===t)return Lo(Rc(Qo(el(e),Wo(2,"int32")),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}if(Array.isArray(n)&&2===n.length){if(1===t)return Ec(Rc(el(e),n[0]),n[1]-1);if(t===1/0)return Ec(Rc(el(e),n[1]),n[0]);if(t===-1/0)return $c(Rc(el(e),n[1]),n[0]);if("fro"===t||"euclidean"===t)return Lo(Rc(zo(e),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}throw new Error(`Error in norm: invalid axis: ${n}`)}const _c=hi({norm_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"euclidean",n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const r=Ac(e=ci(e,"x","norm"),t,n);let s=r.shape;if(a){const t=at(n,e.shape);s=Nc(r.shape,t)}return Tu(r,s)}});const Fc=hi({euclideanNorm_:function(e){return _c(e,"euclidean",arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,arguments.length>2&&void 0!==arguments[2]&&arguments[2])}});const Dc=hi({exp_:function(e){const t={x:ci(e,"x","exp")};return ti.runKernel(On,t)}});const Oc=hi({expandDims_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n=ci(e,"x","expandDims","string_or_numeric");qe(t<=n.rank,(()=>"Axis must be <= rank of the tensor"));const a={input:n},r={dim:t};return ti.runKernel(Mn,a,r)}});const Mc=hi({expm1_:function(e){const t={x:ci(e,"x","expm1")};return ti.runKernel(Ln,t)}});const Lc=hi({tile_:function(e,t){const n=ci(e,"x","tile","string_or_numeric");qe(n.rank===t.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${t}.`));const a={x:n},r={reps:t};return ti.runKernel(Rr,a,r)}});const zc=hi({eye_:function(e,t,n){null==t&&(t=e);const a=$o([e,t],arguments.length>3&&void 0!==arguments[3]?arguments[3]:"float32"),r=e<=t?e:t;for(let i=0;i<r;++i)a.set(1,i,i);const s=Tu(a.toTensor(),[e,t]);if(null==n)return s;if(1===n.length)return Lc(Oc(s,0),[n[0],1,1]);if(2===n.length)return Lc(Oc(Oc(s,0),0),[n[0],n[1],1,1]);if(3===n.length)return Lc(Oc(Oc(Oc(s,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}});const Pc=hi({floor_:function(e){const t={x:ci(e,"x","floor","float32")};return ti.runKernel(Wn,t)}});const Bc=hi({gather_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0;const r={x:ci(e,"x","gather"),indices:ci(t,"indices","gather","int32")},s={axis:n,batchDims:a};return ti.runKernel(jn,r,s)}});const Wc=hi({greater_:function(e,t){let n=ci(e,"a","greater","string_or_numeric"),a=ci(t,"b","greater","string_or_numeric");[n,a]=qs(n,a),al(n.shape,a.shape);const r={a:n,b:a};return ti.runKernel(Hn,r)}});const Vc=hi({greaterEqual_:function(e,t){let n=ci(e,"a","greaterEqual","string_or_numeric"),a=ci(t,"b","greaterEqual","string_or_numeric");[n,a]=qs(n,a),al(n.shape,a.shape);const r={a:n,b:a};return ti.runKernel(qn,r)}});const Uc=hi({imag_:function(e){const t={input:ci(e,"input","imag")};return ti.runKernel(Yn,t)}});const jc=hi({isFinite_:function(e){const t={x:ci(e,"x","isFinite")};return ti.runKernel(Qn,t)}});const Gc=hi({isInf_:function(e){const t={x:ci(e,"x","isInf")};return ti.runKernel(Zn,t)}});const Hc=hi({isNaN_:function(e){const t={x:ci(e,"x","isNaN")};return ti.runKernel(Jn,t)}});const qc=hi({leakyRelu_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:.2;const n={x:ci(e,"x","leakyRelu")},a={alpha:t};return ti.runKernel(ea,n,a)}});const Kc=hi({less_:function(e,t){let n=ci(e,"a","less","string_or_numeric"),a=ci(t,"b","less","string_or_numeric");[n,a]=qs(n,a),al(n.shape,a.shape);const r={a:n,b:a};return ti.runKernel(ta,r)}});const Xc=hi({lessEqual_:function(e,t){let n=ci(e,"a","lessEqual","string_or_numeric"),a=ci(t,"b","lessEqual","string_or_numeric");[n,a]=qs(n,a),al(n.shape,a.shape);const r={a:n,b:a};return ti.runKernel(na,r)}});function Yc(e,t,n){if(n<=0)throw new Error("The number of values should be positive.");const a={start:e,stop:t,num:n};return ti.runKernel(aa,{},a)}const Qc=hi({localResponseNormalization_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:5,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:.5;const s=ci(e,"x","localResponseNormalization");qe(4===s.rank||3===s.rank,(()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ${s.rank}.`)),qe(Ze(t),(()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`));let i=s,o=!1;3===s.rank&&(o=!0,i=Tu(s,[1,s.shape[0],s.shape[1],s.shape[2]]));const l={x:i},u={depthRadius:t,bias:n,alpha:a,beta:r},c=ti.runKernel(ua,l,u);return o?Tu(c,[c.shape[1],c.shape[2],c.shape[3]]):c}});const Zc=hi({log_:function(e){const t={x:ci(e,"x","log","float32")};return ti.runKernel(ra,t)}});const Jc=hi({log1p_:function(e){const t={x:ci(e,"x","log1p")};return ti.runKernel(sa,t)}});const ep=hi({neg_:function(e){const t={x:ci(e,"x","neg")};return ti.runKernel(Ia,t)}});const tp=hi({softplus_:function(e){const t={x:ci(e,"x","softplus")};return ti.runKernel(ur,t)}});const np=hi({logSigmoid_:function(e){const t=ci(e,"x","logSigmoid");return Bo((e=>({value:ep(tp(ep(e))),gradFunc:t=>Mo(t,Au(ep(e)))})))(t)}});const ap=hi({logSoftmax_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;const n=ci(e,"logits","logSoftmax");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${t}`);const a=Bo(((e,n)=>{const a=Ec(e,t,!0),r=Zo(e,a),s=Zo(Ro(r,"float32"),Zc(Rc(Dc(r),t,!0)));n([s]);return{value:s,gradFunc:(e,n)=>{const[a]=n,r=Dc(a);return Zo(e,Mo(Rc(e,t,!0),r))}}}));return a(n)}});const rp=hi({logSumExp_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const a=ci(e,"x","logSumExp"),r=at(t,a.shape),s=Ec(a,r,!0),i=Zo(a,s),o=Dc(i),l=Rc(o,r),u=Zc(l),c=Fo(Tu(s,u.shape),u);if(n){const e=Nc(c.shape,r);return Tu(c,e)}return c}});const sp=hi({logicalAnd_:function(e,t){const n=ci(e,"a","logicalAnd","bool"),a=ci(t,"b","logicalAnd","bool");al(n.shape,a.shape);const r={a:n,b:a};return ti.runKernel(ia,r)}});const ip=hi({logicalNot_:function(e){const t={x:ci(e,"x","logicalNot","bool")};return ti.runKernel(oa,t)}});const op=hi({logicalOr_:function(e,t){const n=ci(e,"a","logicalOr","bool"),a=ci(t,"b","logicalOr","bool");al(n.shape,a.shape);const r={a:n,b:a};return ti.runKernel(la,r)}});const lp=hi({logicalXor_:function(e,t){const n=ci(e,"a","logicalXor","bool"),a=ci(t,"b","logicalXor","bool");return al(n.shape,a.shape),sp(op(e,t),ip(sp(e,t)))}}),up=2147483648;const cp=hi({searchSorted_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"left";const a=ci(e,"sortedSequence","searchSorted"),r=ci(t,"values","searchSorted"),s=a.shape[a.shape.length-1],i=r.shape[r.shape.length-1],o=Tu(a,[-1,s]),l=Tu(r,[-1,i]);if(o.rank<2)throw new Error("Sorted input argument must be at least 2-dimensional");if(o.shape[0]!==l.shape[0])throw new Error("Leading dimension of 'sortedSequence' and 'values' must match.");if(Ye(l.shape)>=up)throw new Error("values tensor size must less than 2147483648");if(o.shape[1]>=up)throw new Error(`trailing dim_size must less than 2147483648 for int32 output type, was ${o.shape[1]}`);const u={sortedSequence:o,values:l},c={side:n};return ti.runKernel(tr,u,c)}});function pp(e,t){return cp(e,t,"left")}const dp=hi({maxPool_:function(e,t,n,a,r){const s=ci(e,"x","maxPool");let i=s,o=!1;3===s.rank&&(o=!0,i=Tu(s,[1,s.shape[0],s.shape[1],s.shape[2]])),qe(4===i.rank,(()=>`Error in maxPool: input must be rank 4 but got rank ${i.rank}.`)),qe(ku(n,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`)),Iu("maxPool",a,r);const l={x:i},u={filterSize:t,strides:n,pad:a,dimRoundingMode:r},c=ti.runKernel(ha,l,u);return o?Tu(c,[c.shape[1],c.shape[2],c.shape[3]]):c}});const hp=hi({maxPool3d_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[1,1,1],n=arguments.length>2?arguments[2]:void 0,a=arguments.length>3?arguments[3]:void 0,r=arguments.length>4?arguments[4]:void 0,s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"NDHWC";const i=ci(e,"x","maxPool3d");let o=i,l=!1;4===i.rank&&(l=!0,o=Tu(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),qe(5===o.rank,(()=>`Error in maxPool3d: x must be rank 5 but got rank ${o.rank}.`)),qe("NDHWC"===s,(()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${s}`)),Iu("maxPool3d",a,r);const u={x:o},c={filterSize:t,strides:n,pad:a,dimRoundingMode:r,dataFormat:s},p=ti.runKernel(ma,u,c);return l?Tu(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}});const fp=hi({maxPoolWithArgmax_:function(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]&&arguments[4];const s={x:ci(e,"x","maxPoolWithArgmax")},i={filterSize:t,strides:n,pad:a,includeBatchInIndex:r},o=ti.runKernel(ya,s,i);return{result:o[0],indexes:o[1]}}});const mp=hi({mean_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const a={x:ci(e,"x","mean")},r={axis:t,keepDims:n};return ti.runKernel(ba,a,r)}});function gp(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"float32";if(vt(e),"complex64"===t){const t=gp(e,"float32"),n=gp(e,"float32");return fi(t,n)}const n=bt(Ye(e),t);return ti.makeTensor(n,e,t)}function yp(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"float32";if(vt(e),"complex64"===t){const t=yp(e,"float32"),n=gp(e,"float32");return fi(t,n)}const n=yt(Ye(e),t);return ti.makeTensor(n,e,t)}function bp(e,t){let{indexing:n="xy"}=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if("xy"!==n&&"ij"!==n)throw new TypeError(`${n} is not a valid third argument to meshgrid`);if(void 0===e)return[];let a=ci(e,"x","meshgrid",e instanceof Ds?e.dtype:"float32");if(void 0===t)return[a];let r=ci(t,"y","meshgrid",t instanceof Ds?t.dtype:"float32");const s=Ye(a.shape),i=Ye(r.shape);return"xy"===n?(a=Tu(a,[1,-1]),r=Tu(r,[-1,1]),[Ru(yp([i,1],a.dtype),a),Ru(r,yp([1,s],r.dtype))]):(a=Tu(a,[-1,1]),r=Tu(r,[1,-1]),[Ru(a,yp([1,i],a.dtype)),Ru(yp([s,1],r.dtype),r)])}const xp=hi({minimum_:function(e,t){let n=ci(e,"a","minimum"),a=ci(t,"b","minimum");[n,a]=qs(n,a),"bool"===n.dtype&&(n=Ro(n,"int32"),a=Ro(a,"int32")),al(n.shape,a.shape);const r={a:n,b:a};return ti.runKernel(va,r)}});const vp=hi({mirrorPad_:function(e,t,n){qe("reflect"===n||"symmetric"===n,(()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${n}.`));const a=ci(e,"x","mirrorPad");if(0===a.rank)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");qe(t.length===a.rank,(()=>`Padding doesn't match input. Must be ${a.rank}. Got ${t.length}.`));const r="reflect"===n?1:0;for(let o=0;o<a.rank;o++)qe(2===t[o].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),qe(t[o][0]>=0&&t[o][0]<=a.shape[o]-r&&t[o][1]>=0&&t[o][1]<=a.shape[o]-r,(()=>`Padding in dimension ${o} cannot be greater than or equal to ${a.shape[o]-r} or less than 0 for input of shape ${a.shape}`));const s={paddings:t,mode:n},i={x:a};return ti.runKernel(wa,i,s)}});const wp=hi({mod_:function(e,t){let n=ci(e,"a","mod"),a=ci(t,"b","mod");[n,a]=qs(n,a);const r={a:n,b:a};return ti.runKernel(ka,r)}});const kp=hi({moments_:function(e){let t=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const n=at(arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,(e=ci(e,"x","moments")).shape),a=mp(e,n,t);let r=a.shape;t||(r=Nc(a.shape,n));const s=zo(Zo(Ro(e,"float32"),Tu(a,r)));return{mean:a,variance:mp(s,n,t)}}});const Np=hi({multiRNNCell_:function(e,t,n,a){const r=ci(t,"data","multiRNNCell"),s=pi(n,"c","multiRNNCell"),i=pi(a,"h","multiRNNCell");let o=r;const l=[];for(let p=0;p<e.length;p++){const t=e[p](o,s[p],i[p]);l.push(t[0]),l.push(t[1]),o=t[1]}const u=[],c=[];for(let p=0;p<l.length;p+=2)u.push(l[p]),c.push(l[p+1]);return[u,c]}});const Sp=hi({multinomial_:function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const r=ci(e,"logits","multinomial"),s=r.size,i=r.rank;if(s<2)throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${s}.`);if(i>2)throw new Error(`Rank of probabilities must be 1 or 2, but is ${i}`);n=n||Math.random();const o={logits:1===i?Tu(r,[1,-1]):r},l={numSamples:t,seed:n,normalized:a},u=ti.runKernel(Na,o,l);return 1===i?Tu(u,[u.size]):u}});const Ip=hi({notEqual_:function(e,t){let n=ci(e,"a","notEqual","string_or_numeric"),a=ci(t,"b","notEqual","string_or_numeric");[n,a]=qs(n,a),al(n.shape,a.shape);const r={a:n,b:a};return ti.runKernel(Ta,r)}});const Tp=hi({oneHot_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"int32";if(t<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${t}`);const s={indices:ci(e,"indices","oneHot","int32")},i={dtype:r,depth:t,onValue:n,offValue:a};return ti.runKernel(Aa,s,i)}});const Cp=hi({onesLike_:function(e){const t={x:ci(e,"x","onesLike")};return ti.runKernel(Ra,t)}});const Ep=hi({outerProduct_:function(e,t){const n=ci(e,"v1","outerProduct"),a=ci(t,"v2","outerProduct");qe(1===n.rank&&1===a.rank,(()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${n.rank} and ${a.rank}.`));const r=Tu(n,[-1,1]),s=Tu(a,[1,-1]);return Ru(r,s)}});const $p=hi({pad_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;const a=ci(e,"x","pad");if(0===a.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const r={paddings:t,constantValue:n},s={x:a};return ti.runKernel(Fa,s,r)}});const Rp=hi({pad1d_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;return qe(2===t.length,(()=>"Invalid number of paddings. Must be length of 2.")),$p(e,[t],n)}});const Ap=hi({pad2d_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;return qe(2===t.length&&2===t[0].length&&2===t[1].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),$p(e,t,n)}});const _p=hi({pad3d_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;return qe(3===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),$p(e,t,n)}});const Fp=hi({pad4d_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;return qe(4===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length&&2===t[3].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),$p(e,t,n)}});const Dp=hi({spaceToBatchND_:function(e,t,n){const a=ci(e,"x","spaceToBatchND");qe(a.rank>=1+t.length,(()=>`input rank ${a.rank} should be > than [blockShape] ${t.length}`)),qe(n.length===t.length,(()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${t.length}`)),qe(a.shape.reduce(((e,a,r)=>r>0&&r<=t.length?e&&(a+n[r-1][0]+n[r-1][1])%t[r-1]===0:e),!0),(()=>`input spatial dimensions ${a.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${t.toString()}`));const r={x:a},s={blockShape:t,paddings:n};return ti.runKernel(dr,r,s)}});const Op=hi({pool_:function(e,t,n,a,r,s,i){null==r&&(r=[1,1]),null==s&&(s=1),0===a&&(a="valid");const o=ci(e,"x","maxPool");let l=o,u=!1;3===o.rank&&(u=!0,l=Tu(o,[1,o.shape[0],o.shape[1],o.shape[2]])),qe(ku(s,r),(()=>`Error in pool: Either strides or dilations must be 1. Got strides ${s} and dilations '${r}'`));const c=du(l.shape,t,s,r,a),p=[c.dilationHeight,c.dilationWidth];let d;d="same"===a?function(e,t){const n=e.map(((e,n)=>e+(e-1)*(t[n]-1))),a=n.map((e=>e-1)),r=a.map((e=>Math.floor(e/2))),s=a.map(((e,t)=>e-r[t]));return a.map(((e,t)=>[r[t],s[t]]))}([c.filterHeight,c.filterWidth],p):[[0,0],[0,0]];const h=1===p[0]&&1===p[1],[f,m]=function(e,t,n){const a=n.map((e=>e[0])),r=n.map((e=>e[1])),s=e.concat(a,r),i=t.map(((e,t)=>(e-s[t]%e)%e)),o=r.map(((e,t)=>e+i[t])),l=t.map(((e,t)=>[a[t],o[t]])),u=t.map(((e,t)=>[0,i[t]]));return[l,u]}([c.inHeight,c.inWidth],p,d),g=h?a:"valid",y=h?l:Dp(l,p,f),b=("avg"===n?()=>Cu(y,t,s,g,i):()=>dp(y,t,s,g,i))(),x=h?b:Ou(b,p,m);return u?Tu(x,[x.shape[1],x.shape[2],x.shape[3]]):x}});const Mp=hi({prelu_:function(e,t){const n={x:ci(e,"x","prelu"),alpha:ci(t,"alpha","prelu")};return ti.runKernel(Oa,n)}});const Lp=hi({prod_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],a=ci(e,"x","prod");"bool"===a.dtype&&(a=Ro(a,"int32"));const r={x:a},s={axis:t,keepDims:n};return ti.runKernel(Ma,r,s)}});const zp=hi({raggedGather_:function(e,t,n,a){const r={paramsNestedSplits:e.map(((e,t)=>ci(e,`tensors${t}`,"raggedGather","int32"))),paramsDenseValues:ci(t,"paramsDenseValues","raggedGather"),indices:ci(n,"indices","raggedGather","int32")},s={outputRaggedRank:a},i=ti.runKernel(La,r,s);return{outputNestedSplits:i.slice(0,i.length-1),outputDenseValues:i[i.length-1]}}});const Pp=hi({raggedRange_:function(e,t,n){const a=ci(e,"starts","raggedRange"),r={starts:a,limits:ci(t,"limits","raggedRange",a.dtype),deltas:ci(n,"deltas","raggedRange",a.dtype)},s=ti.runKernel(za,r);return{rtNestedSplits:s[0],rtDenseValues:s[1]}}});const Bp=hi({raggedTensorToTensor_:function(e,t,n,a,r){const s=ci(e,"shape","raggedTensorToTensor","int32"),i=ci(t,"values","raggedTensorToTensor"),o={shape:s,values:i,defaultValue:ci(n,"defaultValue","raggedTensorToTensor",i.dtype),rowPartitionTensors:a.map(((e,t)=>ci(e,`tensors${t}`,"raggedTensorToTensor","int32")))},l={rowPartitionTypes:r};return ti.runKernel(Pa,o,l)}});const Wp=hi({rand_:function(e,t,n){vt(e);const a=Ye(e);let r=null;if(null==n||"float32"===n)r=new Float32Array(a);else if("int32"===n)r=new Int32Array(a);else{if("bool"!==n)throw new Error(`Unknown data type ${n}`);r=new Uint8Array(a)}for(let s=0;s<a;s++)r[s]=t();return ti.makeTensor(r,e,n)}});var Vp=n(334);class Up{constructor(e,t,n,a,r){this.mean=e,this.stdDev=t,this.dtype=n,this.nextVal=NaN,this.truncated=a,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);const s=r||Math.random();this.random=Vp.alea(s.toString())}nextValue(){if(!isNaN(this.nextVal)){const e=this.nextVal;return this.nextVal=NaN,e}let e,t,n=!1;for(;!n;){let a,r,s;do{a=2*this.random()-1,r=2*this.random()-1,s=a*a+r*r}while(s>=1||0===s);const i=Math.sqrt(-2*Math.log(s)/s);e=this.mean+this.stdDev*a*i,t=this.mean+this.stdDev*r*i,this.truncated&&!this.isValidTruncated(e)||(n=!0)}return this.truncated&&!this.isValidTruncated(t)||(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return null==this.dtype||"float32"===this.dtype?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}}class jp{constructor(e,t,n,a){this.alpha=e,this.beta=1/t,this.dtype=n;const r=a||Math.random();this.randu=Vp.alea(r.toString()),this.randn=new Up(0,1,n,!1,this.randu()),this.d=e<1?e+2/3:e-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let e,t,n,a,r,s;for(;;){do{a=this.randn.nextValue(),s=1+this.c*a}while(s<=0);if(s*=s*s,e=a*a,t=1-.331*e*e,n=.5*e+this.d*(1-s+Math.log(s)),r=this.randu(),r<t||Math.log(r)<n)break}return s=1/this.beta*this.d*s,this.alpha<1&&(s*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(s)}convertValue(e){return"float32"===this.dtype?e:Math.round(e)}}class Gp{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,n=arguments.length>2?arguments[2]:void 0,a=arguments.length>3?arguments[3]:void 0;if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=e,this.range=t-e,this.dtype=n,null==a&&(a=Math.random()),"number"===typeof a&&(a=a.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=Vp.alea(a)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}const Hp=hi({randomGamma_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"float32",r=arguments.length>4?arguments[4]:void 0;if(vt(e),null==n&&(n=1),null==a&&(a="float32"),"float32"!==a&&"int32"!==a)throw new Error(`Unsupported data type ${a}`);const s=new jp(t,n,a,r),i=$o(e,a);for(let o=0;o<i.values.length;o++)i.values[o]=s.nextValue();return i.toTensor()}});const qp=hi({randomNormal_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,a=arguments.length>3?arguments[3]:void 0,r=arguments.length>4?arguments[4]:void 0;if(vt(e),null!=a&&"bool"===a)throw new Error(`Unsupported data type ${a}`);const s=new Up(t,n,a,!1,r),i=$o(e,a);for(let o=0;o<i.values.length;o++)i.values[o]=s.nextValue();return i.toTensor()}});const Kp=hi({randomStandardNormal_:function(e,t,n){if(null!=t&&"bool"===t)throw new Error(`Unsupported data type ${t}`);return qp(e,0,1,t,n)}});const Xp=hi({randomUniform_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"float32",r=arguments.length>4?arguments[4]:void 0;vt(e);const s=$o(e,a),i=new Gp(t,n,null,r);for(let o=0;o<s.values.length;o++)s.values[o]=i.nextValue();return s.toTensor()}});const Yp=hi({randomUniformInt_:function(e,t,n,a){return Xp(e,t,n,"int32",a)}});function Qp(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"float32";if(0===n)throw new Error("Cannot have a step of zero");const r={start:e,stop:t,step:n,dtype:a};return ti.runKernel(Ba,{},r)}const Zp=hi({real_:function(e){const t={input:ci(e,"input","real")};return ti.runKernel(Wa,t)}});const Jp=hi({reciprocal_:function(e){const t={x:ci(e,"x","reciprocal")};return ti.runKernel(Va,t)}});const ed=hi({relu_:function(e){const t={x:ci(e,"x","relu")};return ti.runKernel(Ua,t)}});const td=hi({relu6_:function(e){const t={x:ci(e,"x","relu6")};return ti.runKernel(Xa,t)}});const nd=hi({reverse_:function(e,t){const n={x:ci(e,"x","reverse")},a={dims:t};return ti.runKernel(Ya,n,a)}});const ad=hi({reverse1d_:function(e){const t=ci(e,"x","reverse");return qe(1===t.rank,(()=>`Error in reverse1D: x must be rank 1 but got rank ${t.rank}.`)),nd(t,0)}});const rd=hi({reverse2d_:function(e,t){const n=ci(e,"x","reverse");return qe(2===n.rank,(()=>`Error in reverse2D: x must be rank 2 but got rank ${n.rank}.`)),nd(n,t)}});const sd=hi({reverse3d_:function(e,t){const n=ci(e,"x","reverse");return qe(3===n.rank,(()=>`Error in reverse3D: x must be rank 3 but got rank ${n.rank}.`)),nd(n,t)}});const id=hi({reverse4d_:function(e,t){const n=ci(e,"x","reverse");return qe(4===n.rank,(()=>`Error in reverse4D: x must be rank 4 but got rank ${n.rank}.`)),nd(n,t)}});const od=hi({round_:function(e){const t={x:ci(e,"x","round")};return ti.runKernel(Qa,t)}});const ld=hi({rsqrt_:function(e){const t={x:ci(e,"x","rsqrt","float32")};return ti.runKernel(Za,t)}});const ud=hi({selu_:function(e){const t={x:ci(e,"x","selu")};return ti.runKernel(ar,t)}});const cd=hi({separableConv2d_:function(e,t,n,a,r){let s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1],i=arguments.length>6&&void 0!==arguments[6]?arguments[6]:"NHWC";const o=ci(e,"x","separableConv2d"),l=ci(t,"depthwiseFilter","separableConv2d"),u=ci(n,"pointwiseFilter","separableConv2d");let c=o,p=!1;if(3===o.rank&&(p=!0,c=Tu(o,[1,o.shape[0],o.shape[1],o.shape[2]])),"NCHW"===i)throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");qe(4===c.rank,(()=>`Error in separableConv2d: input must be rank 4, but got rank ${c.rank}.`)),qe(4===l.rank,(()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${l.rank}.`)),qe(4===u.rank,(()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${l.rank}.`)),qe(1===u.shape[0],(()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${u.shape[0]}.`)),qe(1===u.shape[1],(()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${u.shape[1]}.`));const d=l.shape[2],h=l.shape[3];qe(u.shape[2]===d*h,(()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${d*h}, but got ${u.shape[2]}.`));const f=uc(c,l,a,r,i,s),m=Yu(f,u,1,"valid",i);return p?Tu(m,[m.shape[1],m.shape[2],m.shape[3]]):m}});const pd=async function(e,t){const n=ci(e,"x","setdiff1d"),a=ci(t,"y","setdiff1d");qe(n.dtype===a.dtype,(()=>`x and y should have the same dtype, but got x (${n.dtype}) and y (${a.dtype}).`)),qe(1===n.rank,(()=>`x should be 1D tensor, but got x (${n.shape}).`)),qe(1===a.rank,(()=>`y should be 1D tensor, but got y (${a.shape}).`));const r=await n.data(),s=await a.data(),i=new Set(s);let o=0;for(let c=0;c<r.length;c++)i.has(r[c])||o++;const l=new Rs([o],n.dtype),u=new Rs([o],"int32");for(let c=0,p=0;c<r.length;c++)i.has(r[c])||(l.values[p]=r[c],u.values[p]=c,p++);return[l.toTensor(),u.toTensor()]};const dd=hi({sign_:function(e){const t={x:ci(e,"x","sign")};return ti.runKernel(or,t)}});const hd=hi({sin_:function(e){const t={x:ci(e,"x","sin","float32")};return ti.runKernel(sr,t)}});const fd=hi({sinh_:function(e){const t={x:ci(e,"x","sinh")};return ti.runKernel(ir,t)}});const md=hi({slice1d_:function(e,t,n){const a=ci(e,"x","slice1d");return qe(1===a.rank,(()=>`slice1d expects a rank-1 tensor, but got a rank-${a.rank} tensor`)),_u(a,[t],[n])}});const gd=hi({slice2d_:function(e,t,n){const a=ci(e,"x","slice2d");return qe(2===a.rank,(()=>`slice2d expects a rank-2 tensor, but got a rank-${a.rank} tensor`)),_u(a,t,n)}});const yd=hi({slice3d_:function(e,t,n){const a=ci(e,"x","slice3d");return qe(3===a.rank,(()=>`slice3d expects a rank-3 tensor, but got a rank-${a.rank} tensor`)),_u(a,t,n)}});const bd=hi({slice4d_:function(e,t,n){const a=ci(e,"x","slice4d");return qe(4===a.rank,(()=>`slice4d expects a rank-4 tensor, but got a rank-${a.rank} tensor`)),_u(a,t,n)}});const xd=hi({softmax_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;const n=ci(e,"logits","softmax","float32");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${t}`);const a={logits:n},r={dim:t};return ti.runKernel(fr,a,r)}});const vd=hi({fft_:function(e){qe("complex64"===e.dtype,(()=>`The dtype for tf.spectral.fft() must be complex64 but got ${e.dtype}.`));const t={input:e};return ti.runKernel(zn,t)}});const wd=hi({ifft_:function(e){qe("complex64"===e.dtype,(()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${e.dtype}.`));const t={input:e};return ti.runKernel(Xn,t)}});const kd=hi({irfft_:function(e){const t=e.shape[e.shape.length-1],n=e.size/t;let a;if(t<=2){const r=Tu(e,[n,t]);a=wd(r)}else{const r=[n,2*(t-1)],s=Tu(Zp(e),[n,t]),i=Tu(Uc(e),[n,t]),o=nd(_u(s,[0,1],[n,t-2]),1),l=Mo(nd(_u(i,[0,1],[n,t-2]),1),Wo(-1)),u=$u([s,o],1),c=$u([i,l],1),p=Tu(fi(u,c),[r[0],r[1]]);a=wd(p)}if(a=Zp(a),3===e.rank&&0!==e.shape[0]){const t=a,n=e.shape[0];a=Tu(a,[n,a.shape[0]/n,a.shape[1]]),t.dispose()}return a}});const Nd=hi({split_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;const a={x:ci(e,"x","split")},r={numOrSizeSplits:t,axis:n};return ti.runKernel(hr,a,r)}});const Sd=hi({rfft_:function(e,t){qe("float32"===e.dtype,(()=>`The dtype for rfft() must be real value but got ${e.dtype}`));let n=e.shape[e.shape.length-1];const a=e.size/n;let r;if(null!=t&&t<n){const a=e.shape.map((e=>0)),s=e.shape.map((e=>e));s[e.shape.length-1]=t,r=_u(e,a,s),n=t}else if(null!=t&&t>n){const a=e.shape.map((e=>e));a[e.shape.length-1]=t-n,r=$u([e,gp(a)],e.shape.length-1),n=t}else r=e;const s=Po(r),i=Tu(fi(r,s),[a,n]),o=vd(i),l=Math.floor(n/2)+1,u=Zp(o),c=Uc(o),p=Nd(u,[l,n-l],u.shape.length-1),d=Nd(c,[l,n-l],c.shape.length-1),h=r.shape.slice();return h[r.shape.length-1]=l,Tu(fi(p[0],d[0]),h)}});const Id=hi({squaredDifference_:function(e,t){let n=ci(e,"a","squaredDifference"),a=ci(t,"b","squaredDifference");[n,a]=qs(n,a),al(n.shape,a.shape);const r={a:n,b:a};return ti.runKernel(vr,r,{})}});const Td=hi({squeeze_:function(e,t){const n=ci(e,"x","squeeze","string_or_numeric");return Tu(n,rt(n.shape,t).newShape)}});const Cd=hi({stack_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n=pi(e,"tensors","stack","string_or_numeric");qe(n.length>=1,(()=>"Pass at least one tensor to tf.stack")),n.length>0&&qe(t<=n[0].rank,(()=>"Axis must be <= rank of the tensor"));const a=n,r={axis:t};return ti.runKernel(_a,a,r)}});const Ed=hi({step_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n={x:ci(e,"x","step")},a={alpha:t};return ti.runKernel(zr,n,a)}});const $d=hi({stridedSlice_:function(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0,s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:0,i=arguments.length>6&&void 0!==arguments[6]?arguments[6]:0,o=arguments.length>7&&void 0!==arguments[7]?arguments[7]:0,l=arguments.length>8&&void 0!==arguments[8]?arguments[8]:0;const u={x:ci(e,"x","stridedSlice","string_or_numeric")},c={begin:t,end:n,strides:a,beginMask:r,endMask:s,ellipsisMask:i,newAxisMask:o,shrinkAxisMask:l};return ti.runKernel(Nr,u,c)}});const Rd=hi({tan_:function(e){const t={x:ci(e,"x","tan","float32")};return ti.runKernel(Er,t)}});function Ad(e,t){Xe(e);const n=oi(e,t);if(1!==n.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return mi(e,null,n,t)}function _d(e,t,n){if(Xe(e),null!=t&&2!==t.length)throw new Error("tensor2d() requires shape to have two numbers");const a=oi(e,n);if(2!==a.length&&1!==a.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===a.length&&null==t)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return mi(e,t,a,n)}function Fd(e,t,n){if(Xe(e),null!=t&&4!==t.length)throw new Error("tensor4d() requires shape to have four numbers");const a=oi(e,n);if(4!==a.length&&1!==a.length)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(1===a.length&&null==t)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return mi(e,t,a,n)}function Dd(e,t,n){if(Xe(e),null!=t&&5!==t.length)throw new Error("tensor5d() requires shape to have five numbers");const a=oi(e,n);if(5!==a.length&&1!==a.length)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(1===a.length&&null==t)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return mi(e,t,a,n)}function Od(e,t,n){if(Xe(e),null!=t&&6!==t.length)throw new Error("tensor6d() requires shape to have six numbers");const a=oi(e,n);if(6!==a.length&&1!==a.length)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(1===a.length&&null==t)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return mi(e,t=t||a,a,n)}function Md(e,t,n){const a=t.rank>1?t.shape[t.rank-1]:1,r=t.rank>1?t.rank-1:1,s=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${n.shape}, indices.shape: ${t.shape}, shape: ${e}, sliceDim: ${a}, and batchDim: ${r}.`;if(n.rank<r)throw new Error(s+` update.rank < ${r}. `);if(e.length<a+(n.rank-r))throw new Error(s+` Output shape length < ${a+(n.rank-r)}`);if(n.rank!==r+e.length-a)throw new Error(s+" update.rank != "+(r+e.length-a));for(let i=0;i<r;++i)if(n.shape[i]!==t.shape[i])throw new Error(s+` updates.shape[${i}] (${n.shape[i]}) != indices.shape[${i}] (${t.shape[i]}).`);for(let i=0;i<n.rank-r;++i)if(n.shape[i+r]!==e[i+a])throw new Error(s+` updates.shape[${i+r}] (${n.shape[i+r]}) != shape[${i+r}] (${e[i+r]})`)}function Ld(e,t,n){if(t.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(e.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${e.rank}.`);if("int32"!==t.dtype)throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${t.dtype}`);if(n.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${n}`);if(0===n.length){if(0===t.size)throw new Error(`Indices specified for empty output. indices shape: ${t.shape}`);if(0===e.size)throw new Error(`Updates specified for empty output. updates shape: ${e.shape}`)}Md(n,t,e)}function zd(e,t,n){const a=t.shape.length,r=a>1?t.shape[a-1]:1,s=n.length;let i=1;for(let l=r;l<s;++l)i*=n[l];const o=r<1?1:r;return{sliceRank:r,numUpdates:Ye(t.shape)/o,sliceSize:i,strides:[...ft(n.slice(0,r)),1],outputSize:Ye(n)}}const Pd=hi({tensorScatterUpdate_:function(e,t,n){const a=ci(e,"tensor","tensorScatterupdate"),r=ci(t,"indices","tensorScatterupdate","int32"),s=ci(n,"updates","tensorScatterupdate");if(Ld(s,r,a.shape),a.dtype!==s.dtype)throw new Error(`tensor and updates must have the same dtype, instead they are ${a.dtype} and ${s.dtype}.`);const i={tensor:a,indices:r,updates:s};return ti.runKernel(er,i,{})}});const Bd=hi({topk_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];const a=ci(e,"x","topk");if(0===a.rank)throw new Error("topk() expects the input to be of rank 1 or higher");const r=a.shape[a.shape.length-1];if(t<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${t}`);if(t>r)throw new Error(`'k' passed to topk() must be <= the last dimension (${r}) but got ${t}`);const s={x:a},i={k:t,sorted:n},[o,l]=ti.runKernel(Ar,s,i);return{values:o,indices:l}}});const Wd=hi({truncatedNormal_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,a=arguments.length>3?arguments[3]:void 0,r=arguments.length>4?arguments[4]:void 0;if(vt(e),null!=a&&"bool"===a)throw new Error("Unsupported data type $ { dtype }");const s=new Up(t,n,a,!0,r),i=$o(e,a);for(let o=0;o<i.values.length;o++)i.values[o]=s.nextValue();return i.toTensor()}});const Vd=hi({unique_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n=ci(e,"x","unique","string_or_numeric");qe(n.rank>0,(()=>"The input tensor must be at least 1D"));const a={x:n},r={axis:t},[s,i]=ti.runKernel(Dr,a,r);return{values:s,indices:i}}});const Ud=hi({unsortedSegmentSum_:function(e,t,n){const a=ci(e,"x","unsortedSegmentSum"),r=ci(t,"segmentIds","unsortedSegmentSum","int32");qe(Ze(n),(()=>"numSegments must be of dtype int"));const s={x:a,segmentIds:r},i={numSegments:n};return ti.runKernel(Mr,s,i)}});const jd=hi({unstack_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n=ci(e,"x","unstack","string_or_numeric");qe(t>=-n.shape.length&&t<n.shape.length,(()=>`Axis = ${t} is not in [-${n.shape.length}, ${n.shape.length})`));const a={value:n},r={axis:t};return ti.runKernel(Or,a,r)}});function Gd(e,t){return cp(e,t,"right")}function Hd(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],n=arguments.length>2?arguments[2]:void 0,a=arguments.length>3?arguments[3]:void 0;return ti.makeVariable(e,t,n,a)}function qd(e,t){const n=[];for(let s=0;s<t.length;s++)t[s]&&n.push(s);const a=$o(e,"int32"),r=$o([n.length,e.length],"int32");for(let s=0;s<n.length;s++){const t=a.indexToLoc(n[s]),i=s*e.length;r.values.set(t,i)}return r.toTensor()}const Kd=async function(e){const t=ci(e,"condition","whereAsync","bool"),n=await t.data(),a=qd(t.shape,n);return e!==t&&t.dispose(),a};const Xd=async function(e,t,n){const a=ci(e,"tensor","boolMask"),r=ci(t,"mask","boolMask","bool"),s=null==n?0:n,i=r.rank,o=a.shape;qe(i>0,(()=>"mask cannot be scalar")),Ke(o.slice(s,s+i),r.shape,"mask's shape must match the first K dimensions of tensor's shape,");let l=1;for(let m=s;m<s+i;m++)l*=o[m];const u=o.slice(0,s).concat([l],o.slice(s+i)),c=Tu(a,u),p=Tu(r,[-1]),d=await Kd(p),h=Td(d,[1]),f=Bc(c,h,s);return e!==a&&a.dispose(),t!==r&&r.dispose(),h.dispose(),c.dispose(),p.dispose(),d.dispose(),f};const Yd=hi({transpose_:function(e,t,n){const a=ci(e,"x","transpose");if(null==t&&(t=a.shape.map(((e,t)=>t)).reverse()),qe(a.rank===t.length,(()=>`Error in transpose: rank of input ${a.rank} must match length of perm ${t}.`)),t.forEach((e=>{qe(e>=0&&e<a.rank,(()=>"All entries in 'perm' must be between 0 and "+(a.rank-1)+` but got ${t}`))})),a.rank<=1)return a.clone();const r={x:a},s={perm:t};return"complex64"===a.dtype?wi((()=>{let e=Zp(a),t=Uc(a);return e=ti.runKernel(Fr,{x:e},s),t=ti.runKernel(Fr,{x:t},s),n&&(t=ep(t)),fi(e,t)})):ti.runKernel(Fr,r,s)}});const Qd=hi({movingAverage_:function(e,t,n,a){let r=!(arguments.length>4&&void 0!==arguments[4])||arguments[4];const s=ci(e,"v","movingAverage"),i=ci(t,"x","movingAverage"),o=ci(n,"decay","movingAverage");var l,u;u=i,qe((l=s).dtype===u.dtype,(()=>`The dtypes of the first(${l.dtype}) and second(${u.dtype}) input must match`)),qe(Qe(s.shape,i.shape),(()=>"Shape mismatch in v and x"));const c=Wo(1),p=Zo(c,o);let d=Mo(Zo(i,s),p);if(r){qe(null!=a,(()=>"When using zeroDebias: true, step is required."));const e=ci(a,"step","movingAverage");d=Oo(d,Zo(c,Qo(o,e)))}return Fo(s,d)}});const Zd=hi({scatterND_:function(e,t,n){vt(n);const a=ci(e,"indices","scatterND","int32"),r=ci(t,"updates","scatterND");Ld(r,a,n);const s={indices:a,updates:r},i={shape:n};return ti.runKernel(Ja,s,i)}});const Jd=hi({sparseToDense_:function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0;vt(n);const r=ci(e,"sparseIndices","sparseToDense","int32"),s=ci(t,"sparseValues","sparseToDense","string_or_numeric"),i=ci(a,"defaultValue","sparseToDense",s.dtype);!function(e,t,n,a){if("int32"!==e.dtype)throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${e.shape}.`);const r=e.rank>0?e.shape[0]:1,s=e.rank>1?e.shape[1]:1;if(n.length!==s)throw new Error(`outputShape has incorrect number of elements:, ${n.length}, should be: ${s}.`);const i=t.size;if(0!==t.rank&&(1!==t.rank||i!==r))throw new Error(`sparseValues has incorrect shape ${t.shape}, should be [] or [${r}]`);if(t.dtype!==a.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}(r,s,n,i);const o={sparseIndices:r,sparseValues:s,defaultValue:i},l={outputShape:n};return ti.runKernel(xr,o,l)}});const eh=hi({gatherND_:function(e,t){const n=ci(t,"indices","gatherND","int32"),a={params:ci(e,"x","gatherND","string_or_numeric"),indices:n};return ti.runKernel(Gn,a)}});const th=hi({dropout_:function(e,t,n,a){const r=ci(e,"x","dropout");if(qe("float32"===r.dtype,(()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${r.dtype} tensor instead.`)),qe(t>=0&&t<1,(()=>`rate must be a float in the range [0, 1), but got ${t}.`)),0===t)return e instanceof Ds?r.clone():r;const s=function(e,t){if(null==t)return e.shape.slice();if(Qe(e.shape,t))return t;if(e.shape.length===t.length){const n=[];for(let a=0;a<e.shape.length;a++)null==t[a]&&null!=e.shape[a]?n.push(e.shape[a]):n.push(t[a]);return n}return t}(r,n),i=1-t,o=Oo(Pc(Fo(Xp(s,0,1,"float32",a),i)),i);return Mo(r,o)}});function nh(e){return Math.floor(Math.pow(2,Math.ceil(Math.log(e)/Math.log(2))))}function ah(e,t,n){const a=1-e%2,r=new Float32Array(e);for(let s=0;s<e;++s){const i=2*Math.PI*s/(e+a-1);r[s]=t-n*Math.cos(i)}return Ad(r,"float32")}const rh=async function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1;const a=ci(e,"predictions","inTopK"),r=ci(t,"targets","inTopK");qe(a.rank>1,(()=>`inTopK() expects the predictions to be of rank 2 or higher, but got ${a.rank}`)),qe(a.rank-1===r.rank,(()=>`predictions rank should be 1 larger than targets rank, but got predictions rank ${a.rank} and targets rank ${r.rank}`)),Ke(a.shape.slice(0,a.shape.length-1),r.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");const s=a.shape[a.shape.length-1];qe(n>0&&n<=s,(()=>`'k' passed to inTopK() must be > 0 && <= the predictions last dimension (${s}), but got ${n}`));const i=await a.data(),o=await r.data(),[l,u]=[i.length/s,s],c=st("bool",l);for(let p=0;p<l;p++){const e=p*u,t=i.subarray(e,e+u),a=[];for(let n=0;n<t.length;n++)a.push({value:t[n],index:n});a.sort(((e,t)=>t.value-e.value)),c[p]=0;for(let r=0;r<n;r++)if(a[r].index===o[p]){c[p]=1;break}}return e!==a&&a.dispose(),t!==r&&r.dispose(),gi(c,r.shape,"bool")};const sh=hi({conv2DBackpropFilter_:function(e,t,n,a,r){let s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"NHWC",i=arguments.length>6?arguments[6]:void 0,o=e;3===e.rank&&(o=Tu(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let l=t;3===l.rank&&(l=Tu(t,[1,t.shape[0],t.shape[1],t.shape[2]])),qe(4===o.rank,(()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${o.shape}.`)),qe(4===l.rank,(()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${l.shape}.`)),qe(4===n.length,(()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${n}.`));const u="NHWC"===s?o.shape[3]:o.shape[1],c="NHWC"===s?l.shape[3]:l.shape[1];qe(u===n[2],(()=>`Error in conv2dDerFilter: depth of input ${u}) must match input depth in filter (${n[2]}.`)),qe(c===n[3],(()=>`Error in conv2dDerFilter: depth of dy (${c}) must match output depth for filter (${n[3]}).`)),Iu("conv2dDerFilter",r,i);const p={x:o,dy:l},d={strides:a,pad:r,dataFormat:s,dimRoundingMode:i,filterShape:n};return ti.runKernel(un,p,d)}});function ih(e,t,n){if(null==n||"linear"===n)return e;if("relu"===n)return Mo(e,Ed(t));throw new Error(`Cannot compute gradient for fused activation ${n}.`)}function oh(e,t){let n=t;const a=nl(e.shape,t.shape);return a.length>0&&(n=Rc(n,a)),Tu(n,e.shape)}function lh(e,t,n,a){if("linear"===t)return e;if("relu"===t)return ed(e);if("elu"===t)return yc(e);if("relu6"===t)return td(e);if("prelu"===t)return Mp(e,n);if("leakyrelu"===t)return qc(e,a);if("sigmoid"===t)return Au(e);throw new Error(`Unknown fused activation ${t}.`)}const uh=(e,t)=>!(e>0)||"linear"===t;const ch=hi({fusedConv2d_:function(e){let{x:t,filter:n,strides:a,pad:r,dataFormat:s="NHWC",dilations:i=[1,1],dimRoundingMode:o,bias:l,activation:u="linear",preluActivationWeights:c,leakyreluAlpha:p}=e;if(u=u||"linear",!1===uh(ti.state.gradientDepth,u)){qe("NHWC"===s,(()=>`Error in fused conv2d: got dataFormat of ${s} but only NHWC is currently supported for the case of gradient depth is 0 and the activation is not linear.`));let e=Yu(t,n,a,r,s,i,o);return null!=l&&(e=Fo(e,l)),lh(e,u,c,p)}const d=ci(t,"x","conv2d","float32"),h=ci(n,"filter","conv2d","float32");let f=d,m=!1;3===d.rank&&(m=!0,f=Tu(d,[1,d.shape[0],d.shape[1],d.shape[2]])),qe(4===f.rank,(()=>`Error in fused conv2d: input must be rank 4, but got rank ${f.rank}.`)),qe(4===h.rank,(()=>`Error in fused conv2d: filter must be rank 4, but got rank ${h.rank}.`)),Iu("fused conv2d",r,o);const g="NHWC"===s?f.shape[3]:f.shape[1];qe(h.shape[2]===g,(()=>`Error in conv2d: depth of input (${g}) must match input depth for filter ${h.shape[2]}.`)),qe(ku(a,i),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${a} and dilations '${i}'`));const y=fu(f.shape,h.shape,a,i,r,o);let b,x;if(null!=l&&(b=ci(l,"bias","fused conv2d"),[b]=qs(b,d),"NHWC"===s?al(y.outShape,b.shape):(qe(b.shape.length<=1,(()=>`Error in fused conv2d: only supports scalar or 1-D Tensor bias for NCHW format but got the bias of rank-${b.shape.length}.`)),qe(0===b.shape.length||b.shape[0]===y.outChannels||1===b.shape[0],(()=>`Error in fused conv2d: bias shape (${b.shape}) is not compatible with the number of output channels (${y.outChannels})`)))),null!=c){const e=c.shape;if(qe(e.length<=1||3===e.length,(()=>`Error in fused conv2d: only supports scalar, 1-D Tensor or 3-D Tensor PReLU activation weights but got a tensor of rank-${e.length}.`)),1===e.length)qe(1===e[0]||e[0]===y.outChannels,(()=>`Error in fused conv2d: PReLU activation weights (${e}) is not compatible with the number of output channels (${y.outChannels}).`));else if(3===e.length)try{al(e,y.outShape)}catch(N){const t=`Error in fused conv2d: PReLU activation weights (${e}) is not compatible with the output shape of the conv2d (${y.outShape}).`;throw Error(t)}x=ci(c,"prelu weights","fused conv2d")}const v=(e,t)=>{qe("NHWC"===s,(()=>`Error in gradient of fused conv2D: got dataFormat of ${s} but only NHWC is currently supported.`));const[n,o,l,c]=t,p=ih(e,l,u);qe(wu(i),(()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${i}'`));const d=[Zu(o.shape,p,n,a,r),sh(o,p,n.shape,a,r)];if(null!=c){const e=oh(c,p);d.push(e)}return d},w={x:f,filter:h,bias:b,preluActivationWeights:x},k={strides:a,pad:r,dataFormat:s,dilations:i,dimRoundingMode:o,activation:u,leakyreluAlpha:p};if(null==l){const e=Bo(((e,t,n)=>{let a=ti.runKernel(Vr,w,k);return n([t,e,a]),m&&(a=Tu(a,[a.shape[1],a.shape[2],a.shape[3]])),{value:a,gradFunc:v}}));return e(f,h)}{const e=Bo(((e,t,n,a)=>{let r=ti.runKernel(Vr,w,k);return a([t,e,r,n]),m&&(r=Tu(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:v}}));return e(f,h,b)}}});const ph=hi({depthwiseConv2dNativeBackpropFilter_:function(e,t,n,a,r){let s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1],i=arguments.length>6?arguments[6]:void 0,o=e;3===e.rank&&(o=Tu(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let l=t;3===l.rank&&(l=Tu(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const u={x:o,dy:l},c={strides:a,pad:r,dimRoundingMode:i,dilations:s,filterShape:n};return ti.runKernel(kn,u,c)}});const dh=hi({depthwiseConv2dNativeBackpropInput_:function(e,t,n,a,r){let s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1],i=arguments.length>6?arguments[6]:void 0,o=t,l=!1;3===t.rank&&(l=!0,o=Tu(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const u={dy:o,filter:n},c={strides:a,pad:r,dimRoundingMode:i,dilations:s,inputShape:e},p=ti.runKernel(Nn,u,c);return l?Tu(p,[p.shape[1],p.shape[2],p.shape[3]]):p}});const hh=hi({fusedDepthwiseConv2d_:function(e){let{x:t,filter:n,strides:a,pad:r,dataFormat:s="NHWC",dilations:i=[1,1],dimRoundingMode:o,bias:l,activation:u="linear",preluActivationWeights:c,leakyreluAlpha:p}=e;if(!1===uh(ti.state.gradientDepth,u)){let e=uc(t,n,a,r,s,i,o);return null!=l&&(e=Fo(e,l)),lh(e,u,c,p)}const d=ci(t,"x","depthwiseConv2d","float32"),h=ci(n,"filter","depthwiseConv2d","float32");let f=d,m=!1;3===d.rank&&(m=!0,f=Tu(d,[1,d.shape[0],d.shape[1],d.shape[2]])),qe(4===f.rank,(()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${f.rank}.`)),qe(4===h.rank,(()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${h.rank}.`)),qe(f.shape[3]===h.shape[2],(()=>`Error in fused depthwiseConv2d: number of input channels (${f.shape[3]}) must match the inChannels dimension in filter ${h.shape[2]}.`)),null==i&&(i=[1,1]),qe(ku(a,i),(()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${a} and dilations '${i}'`)),Iu("fused depthwiseConv2d",r,o);const g=fu(f.shape,h.shape,a,i,r,o,!0);let y,b;null!=l&&(y=ci(l,"bias","fused conv2d"),[y]=qs(y,d),al(g.outShape,y.shape)),null!=c&&(b=ci(c,"prelu weights","fused depthwiseConv2d"));const x=(e,t)=>{qe(wu(i),(()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${i}'`));const[n,s,l,c]=t,p=ih(e,l,u),d=dh(s.shape,p,n,a,r,i,o),h=ph(s,p,n.shape,a,r,i,o);if(null!=c){return[d,h,oh(y,p)]}return[d,h]},v={x:f,filter:h,bias:y,preluActivationWeights:b},w={strides:a,pad:r,dataFormat:s,dilations:i,dimRoundingMode:o,activation:u,leakyreluAlpha:p};if(null==l){const e=Bo(((e,t,n)=>{let a=ti.runKernel(Ur,v,w);return n([t,e,a]),m&&(a=Tu(a,[a.shape[1],a.shape[2],a.shape[3]])),{value:a,gradFunc:x}}));return e(f,h)}{const e=Bo(((e,t,n,a)=>{let r=ti.runKernel(Ur,v,w);return a([t,e,r,n]),m&&(r=Tu(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:x}}));return e(f,h,y)}}});const fh=hi({fusedMatMul_:function(e){let{a:t,b:n,transposeA:a=!1,transposeB:r=!1,bias:s,activation:i="linear",preluActivationWeights:o,leakyreluAlpha:l=.2}=e;if(!1===uh(ti.state.gradientDepth,i)){let e=Ru(t,n,a,r);return null!=s&&(e=Fo(e,s)),lh(e,i,o,l)}let u=ci(t,"a","fused matMul"),c=ci(n,"b","fused matMul");[u,c]=qs(u,c);const p=a?u.shape[u.rank-2]:u.shape[u.rank-1],d=r?c.shape[c.rank-1]:c.shape[c.rank-2],h=a?u.shape[u.rank-1]:u.shape[u.rank-2],f=r?c.shape[c.rank-2]:c.shape[c.rank-1],m=u.shape.slice(0,-2),g=c.shape.slice(0,-2),y=Ye(m),b=Ye(g);qe(p===d,(()=>`Error in fused matMul: inner shapes (${p}) and (${d}) of Tensors with shapes ${u.shape} and ${c.shape} and transposeA=${a} and transposeB=${r} must match.`));const x=al(u.shape.slice(0,-2),c.shape.slice(0,-2)).concat([h,f]),v=Tu(u,a?[y,p,h]:[y,h,p]),w=Tu(c,r?[b,f,d]:[b,d,f]);let k,N;null!=s&&(k=ci(s,"bias","fused matMul"),[k]=qs(k,u),al(x,k.shape)),null!=o&&(N=ci(o,"prelu weights","fused matMul"));const S=(e,t)=>{const[n,o,l,u]=t,c=ih(Tu(e,l.shape),l,i);let p,d;if(a||r?!a&&r?(p=Ru(c,o,!1,!1),d=Ru(c,n,!0,!1)):a&&!r?(p=Ru(o,c,!1,!0),d=Ru(n,c,!1,!1)):(p=Ru(o,c,!0,!0),d=Ru(c,n,!0,!0)):(p=Ru(c,o,!1,!0),d=Ru(n,c,!0,!1)),null!=s){return[p,d,oh(u,c)]}return[p,d]},I={a:v,b:w,bias:k,preluActivationWeights:N},T={transposeA:a,transposeB:r,activation:i,leakyreluAlpha:l};if(null==s){const e=Bo(((e,t,n)=>{const a=ti.runKernel(Wr,I,T);return n([e,t,a]),{value:Tu(a,x),gradFunc:S}}));return e(v,w)}{const e=Bo(((e,t,n,a)=>{const r=ti.runKernel(Wr,I,T);return a([e,t,r,n]),{value:Tu(r,x),gradFunc:S}}));return e(v,w,k)}}});const mh=hi({hammingWindow_:function(e){return ah(e,.54,.46)}});const gh=hi({hannWindow_:function(e){return ah(e,.5,.5)}});const yh=hi({frame_:function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0,s=0;const i=[];for(;s+t<=e.size;)i.push(_u(e,s,t)),s+=n;if(a)for(;s<e.size;){const a=s+t-e.size,o=$u([_u(e,s,t-a),Xo([a],r)]);i.push(o),s+=n}return 0===i.length?_d([],[0,t]):Tu($u(i),[i.length,t])}});const bh=hi({stft_:function(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:gh;null==a&&(a=nh(t));const s=yh(e,t,n),i=Mo(s,r(t));return Sd(i,a)}});const xh=hi({cropAndResize_:function(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"bilinear",s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:0;const i=ci(e,"image","cropAndResize"),o=ci(t,"boxes","cropAndResize","float32"),l=ci(n,"boxInd","cropAndResize","int32"),u=o.shape[0];qe(4===i.rank,(()=>`Error in cropAndResize: image must be rank 4,but got rank ${i.rank}.`)),qe(2===o.rank&&4===o.shape[1],(()=>`Error in cropAndResize: boxes must be have size [${u},4] but had shape ${o.shape}.`)),qe(1===l.rank&&l.shape[0]===u,(()=>`Error in cropAndResize: boxInd must be have size [${u}] but had shape ${o.shape}.`)),qe(2===a.length,(()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${a.length}.`)),qe(a[0]>=1&&a[1]>=1,(()=>`cropSize must be atleast [1,1], but was ${a}`)),qe("bilinear"===r||"nearest"===r,(()=>`method must be bilinear or nearest, but was ${r}`));const c={image:i,boxes:o,boxInd:l},p={method:r,extrapolationValue:s,cropSize:a};return ti.runKernel(bn,c,p)}});const vh=hi({flipLeftRight_:function(e){const t=ci(e,"image","flipLeftRight","float32");qe(4===t.rank,(()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`));const n={image:t};return ti.runKernel(Bn,n,{})}});const wh=hi({grayscaleToRGB_:function(e){const t=ci(e,"image","grayscaleToRGB"),n=t.rank-1,a=t.shape[n];qe(t.rank>=2,(()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${t.rank}.`)),qe(1===a,(()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${a}.`));const r=new Array(t.rank);return r.fill(1,0,n),r[n]=3,Lc(t,r)}});const kh=hi({rgbToGrayscale_:function(e){const t=ci(e,"image","RGBToGrayscale"),n=t.rank-1,a=t.shape[n];qe(t.rank>=2,(()=>`Error in RGBToGrayscale: images must be at least rank 2, but got rank ${t.rank}.`)),qe(3===a,(()=>`Error in RGBToGrayscale: last dimension of an RGB image should be size 3, but got size ${a}.`));const r=t.dtype,s=Ro(t,"float32"),i=Ad([.2989,.587,.114]);let o;switch(t.rank){case 2:o=gc("ij,j->i",s,i);break;case 3:o=gc("ijk,k->ij",s,i);break;case 4:o=gc("ijkl,l->ijk",s,i);break;case 5:o=gc("ijklm,m->ijkl",s,i);break;case 6:o=gc("ijklmn,n->ijklm",s,i);break;default:throw new Error("Not a valid tensor rank.")}return o=Oc(o,-1),Ro(o,r)}});const Nh=hi({rotateWithOffset_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5;const r=ci(e,"image","rotateWithOffset","float32");qe(4===r.rank,(()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${r.rank}.`));const s={image:r},i={radians:t,fillValue:n,center:a};return ti.runKernel(Br,s,i)}});function Sh(e,t,n,a,r,s){null==a&&(a=.5),null==r&&(r=Number.NEGATIVE_INFINITY),null==s&&(s=0);const i=e.shape[0];return n=Math.min(n,i),qe(0<=a&&a<=1,(()=>`iouThreshold must be in [0, 1], but was '${a}'`)),qe(2===e.rank,(()=>`boxes must be a 2D tensor, but was of rank '${e.rank}'`)),qe(4===e.shape[1],(()=>`boxes must have 4 columns, but 2nd dimension was ${e.shape[1]}`)),qe(1===t.rank,(()=>"scores must be a 1D tensor")),qe(t.shape[0]===i,(()=>`scores has incompatible shape with boxes. Expected ${i}, but was ${t.shape[0]}`)),qe(0<=s&&s<=1,(()=>`softNmsSigma must be in [0, 1], but was '${s}'`)),{maxOutputSize:n,iouThreshold:a,scoreThreshold:r,softNmsSigma:s}}const Ih=hi({nonMaxSuppression_:function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY;const s=ci(e,"boxes","nonMaxSuppression","float32"),i=ci(t,"scores","nonMaxSuppression","float32"),o=Sh(s,i,n,a,r);n=o.maxOutputSize,a=o.iouThreshold,r=o.scoreThreshold;const l={maxOutputSize:n,iouThreshold:a,scoreThreshold:r};return ti.runKernel(Ca,{boxes:s,scores:i},l)}});function Th(e,t,n){const a=function(e,t,n){return function(e,t,n){let a=0,r=e.length,s=0,i=!1;for(;a<r;){s=a+(r-a>>>1);const o=n(t,e[s]);o>0?a=s+1:(r=s,i=!o)}return i?a:-a-1}(e,t,n||Ch)}(e,t,n),r=a<0?-(a+1):a;e.splice(r,0,t)}function Ch(e,t){return e>t?1:e<t?-1:0}function Eh(e,t,n,a,r){return Ah(e,t,n,a,r,0)}function $h(e,t,n,a,r,s){return Ah(e,t,n,a,r,0,!1,s,!0)}function Rh(e,t,n,a,r,s){return Ah(e,t,n,a,r,s,!0)}function Ah(e,t,n,a,r,s){let i=arguments.length>6&&void 0!==arguments[6]&&arguments[6],o=arguments.length>7&&void 0!==arguments[7]&&arguments[7],l=arguments.length>8&&void 0!==arguments[8]&&arguments[8];const u=[];for(let g=0;g<t.length;g++)t[g]>r&&u.push({score:t[g],boxIndex:g,suppressBeginIndex:0});u.sort(Dh);const c=s>0?-.5/s:0,p=[],d=[];for(;p.length<n&&u.length>0;){const t=u.pop(),{score:n,boxIndex:s,suppressBeginIndex:i}=t;if(n<r)break;let o=!1;for(let l=p.length-1;l>=i;--l){const n=_h(e,s,p[l]);if(n>=a){o=!0;break}if(t.score=t.score*Fh(a,c,n),t.score<=r)break}t.suppressBeginIndex=p.length,o||(t.score===n?(p.push(s),d.push(t.score)):t.score>r&&Th(u,t,Dh))}const h=p.length,f=n-h;o&&f>0&&(p.push(...new Array(f).fill(0)),d.push(...new Array(f).fill(0)));const m={selectedIndices:p};return i&&(m.selectedScores=d),l&&(m.validOutputs=h),m}function _h(e,t,n){const a=e.subarray(4*t,4*t+4),r=e.subarray(4*n,4*n+4),s=Math.min(a[0],a[2]),i=Math.min(a[1],a[3]),o=Math.max(a[0],a[2]),l=Math.max(a[1],a[3]),u=Math.min(r[0],r[2]),c=Math.min(r[1],r[3]),p=Math.max(r[0],r[2]),d=Math.max(r[1],r[3]),h=(o-s)*(l-i),f=(p-u)*(d-c);if(h<=0||f<=0)return 0;const m=Math.max(s,u),g=Math.max(i,c),y=Math.min(o,p),b=Math.min(l,d),x=Math.max(y-m,0)*Math.max(b-g,0);return x/(h+f-x)}function Fh(e,t,n){const a=Math.exp(t*n*n);return n<=e?a:0}function Dh(e,t){return e.score-t.score||e.score===t.score&&t.boxIndex-e.boxIndex}const Oh=async function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY;const s=ci(e,"boxes","nonMaxSuppressionAsync"),i=ci(t,"scores","nonMaxSuppressionAsync"),o=Sh(s,i,n,a,r);n=o.maxOutputSize,a=o.iouThreshold,r=o.scoreThreshold;const l=await Promise.all([s.data(),i.data()]),u=l[0],c=l[1],{selectedIndices:p}=Eh(u,c,n,a,r);return s!==e&&s.dispose(),i!==t&&i.dispose(),Ad(p,"int32")};const Mh=hi({nonMaxSuppressionWithScore_:function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY,s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:0;const i=ci(e,"boxes","nonMaxSuppression"),o=ci(t,"scores","nonMaxSuppression"),l=Sh(i,o,n,a,r,s);n=l.maxOutputSize,a=l.iouThreshold,r=l.scoreThreshold,s=l.softNmsSigma;const u={boxes:i,scores:o},c={maxOutputSize:n,iouThreshold:a,scoreThreshold:r,softNmsSigma:s},p=ti.runKernel($a,u,c);return{selectedIndices:p[0],selectedScores:p[1]}}});const Lh=async function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY,s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:0;const i=ci(e,"boxes","nonMaxSuppressionAsync"),o=ci(t,"scores","nonMaxSuppressionAsync"),l=Sh(i,o,n,a,r,s);n=l.maxOutputSize,a=l.iouThreshold,r=l.scoreThreshold,s=l.softNmsSigma;const u=await Promise.all([i.data(),o.data()]),c=u[0],p=u[1],{selectedIndices:d,selectedScores:h}=Rh(c,p,n,a,r,s);return i!==e&&i.dispose(),o!==t&&o.dispose(),{selectedIndices:Ad(d,"int32"),selectedScores:Ad(h)}};const zh=hi({nonMaxSuppressionPadded_:function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY,s=arguments.length>5&&void 0!==arguments[5]&&arguments[5];const i=ci(e,"boxes","nonMaxSuppression"),o=ci(t,"scores","nonMaxSuppression"),l=Sh(i,o,n,a,r,null),u={boxes:i,scores:o},c={maxOutputSize:l.maxOutputSize,iouThreshold:l.iouThreshold,scoreThreshold:l.scoreThreshold,padToMaxOutputSize:s},p=ti.runKernel(Ea,u,c);return{selectedIndices:p[0],validOutputs:p[1]}}});const Ph=async function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY,s=arguments.length>5&&void 0!==arguments[5]&&arguments[5];const i=ci(e,"boxes","nonMaxSuppressionAsync"),o=ci(t,"scores","nonMaxSuppressionAsync"),l=Sh(i,o,n,a,r,null),u=l.maxOutputSize,c=l.iouThreshold,p=l.scoreThreshold,[d,h]=await Promise.all([i.data(),o.data()]),{selectedIndices:f,validOutputs:m}=$h(d,h,u,c,p,s);return i!==e&&i.dispose(),o!==t&&o.dispose(),{selectedIndices:Ad(f,"int32"),validOutputs:Wo(m,"int32")}};const Bh=hi({resizeBilinear_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const r=ci(e,"images","resizeBilinear");qe(3===r.rank||4===r.rank,(()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${r.rank}.`)),qe(2===t.length,(()=>`Error in resizeBilinear: new shape must 2D, but got shape ${t}.`)),qe(!1===a||!1===n,(()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false."));let s=r,i=!1;3===r.rank&&(i=!0,s=Tu(r,[1,r.shape[0],r.shape[1],r.shape[2]]));const[]=t,o={images:s},l={alignCorners:n,halfPixelCenters:a,size:t},u=ti.runKernel(qa,o,l);return i?Tu(u,[u.shape[1],u.shape[2],u.shape[3]]):u}});const Wh=hi({resizeNearestNeighbor_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const r=ci(e,"images","resizeNearestNeighbor");qe(3===r.rank||4===r.rank,(()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${r.rank}.`)),qe(2===t.length,(()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${t}.`)),qe("float32"===r.dtype||"int32"===r.dtype,(()=>"`images` must have `int32` or `float32` as dtype")),qe(!1===a||!1===n,(()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false."));let s=r,i=!1;3===r.rank&&(i=!0,s=Tu(r,[1,r.shape[0],r.shape[1],r.shape[2]]));const[]=t,o={images:s},l={alignCorners:n,halfPixelCenters:a,size:t},u=ti.runKernel(Ga,o,l);return i?Tu(u,[u.shape[1],u.shape[2],u.shape[3]]):u}});const Vh=hi({threshold_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"binary",n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5;const r=ci(e,"image","threshold"),s=r.shape[0]*r.shape[1];let i,o,l,u,c=Mo(Ad([a]),255);if(qe(3===r.rank,(()=>`Error in threshold: image must be rank 3,but got rank ${r.rank}.`)),qe(3===r.shape[2]||1===r.shape[2],(()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${r.shape[2]}.`)),qe("int32"===r.dtype||"float32"===r.dtype,(()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${r.dtype}.`)),qe("otsu"===t||"binary"===t,(()=>`Method must be binary or otsu, but was ${t}`)),3===r.shape[2]){[i,o,l]=Nd(r,[1,1,1],-1);const e=Mo(i,.2989),t=Mo(o,.587),n=Mo(l,.114);u=Fo(Fo(e,t),n)}else u=e;if("otsu"===t){c=function(e,t){let n,a,r,s,i,o,l=Ad([-1]),u=Ad([0]),c=Ad([0]);for(let p=0;p<e.size-1;p++){n=_u(e,0,p+1),a=_u(e,p+1),i=Oo(Rc(n),t),o=Oo(Rc(a),t);const d=Rc(Mo(n,Qp(0,n.size)));r=Oo(d,Rc(n));const h=Xo(a.shape,n.size),f=Fo(Qp(0,a.size),h),m=Mo(a,f);s=Oo(Rc(m),Rc(a));const g=Zo(r,s),y=Zo(r,s),b=Mo(i,o);c=Mo(Mo(b,g),y);const x=Wc(c,u);u=hc(x,c,u),l=hc(x,Ad([p]),l)}return l}(Bu(Ro(od(u),"int32"),gi([]),256),s)}const p=n?Xc(u,c):Wc(u,c);return Ro(Mo(p,255),"int32")}});const Uh=hi({transform_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"nearest",a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"constant",r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0,s=arguments.length>5?arguments[5]:void 0;const i=ci(e,"image","transform","float32"),o=ci(t,"transforms","transform","float32");qe(4===i.rank,(()=>`Error in transform: image must be rank 4,but got rank ${i.rank}.`)),qe(2===o.rank&&(o.shape[0]===i.shape[0]||1===o.shape[0])&&8===o.shape[1],(()=>"Error in transform: Input transform should be batch x 8 or 1 x 8")),qe(null==s||2===s.length,(()=>`Error in transform: outputShape must be [height, width] or null, but got ${s}.`));const l={image:i,transforms:o},u={interpolation:n,fillMode:a,fillValue:r,outputShape:s};return ti.runKernel(_r,l,u)}});const jh=hi({bandPart_:function(e,t,n){const a=ci(e,"a","bandPart");qe(a.rank>=2,(()=>`bandPart(): Rank must be at least 2, got ${a.rank}.`));const r=a.shape,[s,i]=a.shape.slice(-2);let o,l;"number"===typeof t?(qe(t%1===0,(()=>`bandPart(): numLower must be an integer, got ${t}.`)),qe(t<=s,(()=>`bandPart(): numLower (${t}) must not be greater than the number of rows (${s}).`)),o=ci(t<0?s:t,"numLower","bandPart")):(qe("int32"===t.dtype,(()=>"bandPart(): numLower's dtype must be an int32.")),o=hc(Kc(t,0),s,xp(t,s))),"number"===typeof n?(qe(n%1===0,(()=>`bandPart(): numUpper must be an integer, got ${n}.`)),qe(n<=i,(()=>`bandPart(): numUpper (${n}) must not be greater than the number of columns (${i}).`)),l=ci(n<0?i:n,"numUpper","bandPart")):(qe("int32"===n.dtype,(()=>"bandPart(): numUpper's dtype must be an int32.")),l=hc(Kc(n,0),i,xp(n,i)));const u=Tu(Qp(0,s,1,"int32"),[-1,1]),c=Qp(0,i,1,"int32"),p=Zo(u,c),d=sp(Xc(p,o),Vc(p,ep(l))),h=gp([s,i],a.dtype);return Tu(Cd(jd(Tu(a,[-1,s,i])).map((e=>hc(d,e,h)))),r)}});const Gh=hi({gramSchmidt_:function(e){let t;if(Array.isArray(e)){t=!1,qe(null!=e&&e.length>0,(()=>"Gram-Schmidt process: input must not be null, undefined, or empty"));const n=e[0].shape[0];for(let t=1;t<e.length;++t)qe(e[t].shape[0]===n,(()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${e[t].shape[0]} vs. ${n})`))}else t=!0,e=Nd(e,e.shape[0],0).map((e=>Td(e,[0])));qe(e.length<=e[0].shape[0],(()=>`Gram-Schmidt: Number of vectors (${e.length}) exceeds number of dimensions (${e[0].shape[0]}).`));const n=[],a=e;for(let r=0;r<e.length;++r)n.push(ti.tidy((()=>{let e=a[r];if(r>0)for(let t=0;t<r;++t){const a=Mo(Rc(Mo(n[t],e)),n[t]);e=Zo(e,a)}return Oo(e,_c(e,"euclidean"))})));return t?Cd(n,0):n}});function Hh(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];return ti.tidy((()=>{qe(2===e.shape.length,(()=>`qr2d() requires a 2D Tensor, but got a ${e.shape.length}D Tensor.`));const n=e.shape[0],a=e.shape[1];let r=zc(n),s=Ao(e);const i=_d([[1]],[1,1]);let o=Ao(i);const l=n>=a?a:n;for(let e=0;e<l;++e){const t=s,l=o,u=r;[o,s,r]=ti.tidy((()=>{const t=_u(s,[e,e],[n-e,1]),l=_c(t),u=_u(s,[e,e],[1,1]),c=hc(Wc(u,0),_d([[-1]]),_d([[1]])),p=Zo(u,Mo(c,l)),d=Oo(t,p);o=1===d.shape[0]?Ao(i):$u([i,_u(d,[1,0],[d.shape[0]-1,d.shape[1]])],0);const h=ep(Oo(Ru(c,p),l)),f=_u(s,[e,0],[n-e,a]),m=Mo(h,o),g=Yd(o);if(0===e)s=Zo(f,Ru(m,Ru(g,f)));else{const t=Zo(f,Ru(m,Ru(g,f)));s=$u([_u(s,[0,0],[e,a]),t],0)}const y=Yd(m),b=_u(r,[0,e],[n,r.shape[1]-e]);if(0===e)r=Zo(b,Ru(Ru(b,o),y));else{const t=Zo(b,Ru(Ru(b,o),y));r=$u([_u(r,[0,0],[n,e]),t],1)}return[o,s,r]})),ki([t,l,u])}return!t&&n>a&&(r=_u(r,[0,0],[n,a]),s=_u(s,[0,0],[a,a])),[r,s]}))}const qh=hi({qr_:function(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(qe(e.rank>=2,(()=>`qr() requires input tensor to have a rank >= 2, but got rank ${e.rank}`)),2===e.rank)return Hh(e,t);{const n=e.shape.slice(0,e.shape.length-2).reduce(((e,t)=>e*t)),a=jd(Tu(e,[n,e.shape[e.shape.length-2],e.shape[e.shape.length-1]]),0),r=[],s=[];a.forEach((e=>{const[n,a]=Hh(e,t);r.push(n),s.push(a)}));return[Tu(Cd(r,0),e.shape),Tu(Cd(s,0),e.shape)]}}});var Kh;!function(e){e[e.NONE=0]="NONE",e[e.MEAN=1]="MEAN",e[e.SUM=2]="SUM",e[e.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"}(Kh||(Kh={}));const Xh=hi({computeWeightedLoss_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:Kh.SUM_BY_NONZERO_WEIGHTS;const a=ci(e,"losses","computeWeightedLoss");let r=null;null!=t&&(r=ci(t,"weights","computeWeightedLoss"));const s=null==r?a:Mo(a,r);if(n===Kh.NONE)return s;if(n===Kh.SUM)return Rc(s);if(n===Kh.MEAN){if(null==r)return mp(s);{const e=a.size/r.size,t=Oo(Rc(s),Rc(r));return e>1?Oo(t,Wo(e)):t}}if(n===Kh.SUM_BY_NONZERO_WEIGHTS){if(null==r)return Oo(Rc(s),Wo(a.size));{const e=Mo(r,yp(a.shape)),t=Ro(Rc(Ip(e,Wo(0))),"float32");return Oo(Rc(s),t)}}throw Error(`Unknown reduction: ${n}`)}});const Yh=hi({absoluteDifference_:function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:Kh.SUM_BY_NONZERO_WEIGHTS;const r=ci(e,"labels","absoluteDifference"),s=ci(t,"predictions","absoluteDifference");let i=null;null!=n&&(i=ci(n,"weights","absoluteDifference")),Ke(r.shape,s.shape,"Error in absoluteDifference: ");const o=el(Zo(r,s));return Xh(o,i,a)}});const Qh=hi({cosineDistance_:function(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Kh.SUM_BY_NONZERO_WEIGHTS;const s=ci(e,"labels","cosineDistance"),i=ci(t,"predictions","cosineDistance");let o=null;null!=a&&(o=ci(a,"weights","cosineDistance")),Ke(s.shape,i.shape,"Error in cosineDistance: ");const l=Wo(1),u=Zo(l,Rc(Mo(s,i),n,!0));return Xh(u,o,r)}});const Zh=hi({hingeLoss_:function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:Kh.SUM_BY_NONZERO_WEIGHTS,r=ci(e,"labels","hingeLoss");const s=ci(t,"predictions","hingeLoss");let i=null;null!=n&&(i=ci(n,"weights","hingeLoss")),Ke(r.shape,s.shape,"Error in hingeLoss: ");const o=Wo(1);r=Zo(Mo(Wo(2),r),o);const l=ed(Zo(o,Mo(r,s)));return Xh(l,i,a)}});const Jh=hi({huberLoss_:function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Kh.SUM_BY_NONZERO_WEIGHTS;const s=ci(e,"labels","huberLoss"),i=ci(t,"predictions","huberLoss");let o=null;null!=n&&(o=ci(n,"weights","huberLoss")),Ke(s.shape,i.shape,"Error in huberLoss: ");const l=Wo(a),u=el(Zo(i,s)),c=xp(u,l),p=Zo(u,c),d=Fo(Mo(Wo(.5),zo(c)),Mo(l,p));return Xh(d,o,r)}});const ef=hi({logLoss_:function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1e-7,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Kh.SUM_BY_NONZERO_WEIGHTS;const s=ci(e,"labels","logLoss"),i=ci(t,"predictions","logLoss");let o=null;null!=n&&(o=ci(n,"weights","logLoss")),Ke(s.shape,i.shape,"Error in logLoss: ");const l=Wo(1),u=Wo(a),c=ep(Mo(s,Zc(Fo(i,u)))),p=Mo(Zo(l,s),Zc(Fo(Zo(l,i),u))),d=Zo(c,p);return Xh(d,o,r)}});const tf=hi({meanSquaredError_:function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:Kh.SUM_BY_NONZERO_WEIGHTS;const r=ci(e,"labels","meanSquaredError"),s=ci(t,"predictions","meanSquaredError");let i=null;null!=n&&(i=ci(n,"weights","meanSquaredError")),Ke(r.shape,s.shape,"Error in meanSquaredError: ");const o=Id(r,s);return Xh(o,i,a)}});const nf=hi({sigmoidCrossEntropy_:function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Kh.SUM_BY_NONZERO_WEIGHTS,s=ci(e,"multiClassLabels","sigmoidCrossEntropy");const i=ci(t,"logits","sigmoidCrossEntropy");let o=null;if(null!=n&&(o=ci(n,"weights","sigmoidCrossEntropy")),Ke(s.shape,i.shape,"Error in sigmoidCrossEntropy: "),a>0){const e=Wo(a),t=Wo(1),n=Wo(.5);s=Fo(Mo(s,Zo(t,e)),Mo(n,e))}const l=function(e,t){const n=ci(e,"labels","sigmoidCrossEntropyWithLogits"),a=ci(t,"logits","sigmoidCrossEntropyWithLogits");Ke(n.shape,a.shape,"Error in sigmoidCrossEntropyWithLogits: ");const r=ed(a),s=Mo(a,n),i=Jc(Dc(ep(el(a))));return Fo(Zo(r,s),i)}(s,i);return Xh(l,o,r)}});const af=hi({softmaxCrossEntropy_:function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Kh.SUM_BY_NONZERO_WEIGHTS,s=ci(e,"onehotLabels","softmaxCrossEntropy");const i=ci(t,"logits","softmaxCrossEntropy");let o=null;if(null!=n&&(o=ci(n,"weights","softmaxCrossEntropy")),Ke(s.shape,i.shape,"Error in softmaxCrossEntropy: "),a>0){const e=Wo(a),t=Wo(1),n=Wo(s.shape[1]);s=Fo(Mo(s,Zo(t,e)),Oo(e,n))}const l=function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:-1;if(-1===n&&(n=t.rank-1),n!==t.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${t.rank} and dim was ${n}`);const a=Bo(((e,t,a)=>{const r=rp(t,[n],!0),s=Zo(Ro(t,"float32"),r);a([e,s]);const i=ep(Mo(s,e));return{value:Rc(i,[n]),gradFunc:(e,t)=>{const[a,r]=t,s=Nc(e.shape,[n]);return[Mo(Tu(e,s),Zo(Ro(a,"float32"),Dc(r))),Mo(Tu(e,s),Zo(Dc(r),Ro(a,"float32")))]}}}));return a(e,t)}(s,i);return Xh(l,o,r)}});const rf=hi({sparseFillEmptyRows_:function(e,t,n,a){const r=ci(e,"indices","sparseFillEmptyRows","int32"),s=ci(t,"values","sparseFillEmptyRows"),i=ci(n,"denseShape","sparseFillEmptyRows","int32"),o=ci(a,"defaultValue","sparseFillEmptyRows",s.dtype);if(2!==r.rank)throw new Error(`Indices should be Tensor2D but received shape\n        ${r.shape}`);if(1!==s.rank)throw new Error(`Values should be Tensor1D but received shape ${s.shape}`);if(1!==i.rank)throw new Error(`Dense shape should be Tensor1D but received shape ${i.shape}`);if(0!==o.rank)throw new Error(`Default value should be a scalar but received shape ${o.shape}`);const l={indices:r,values:s,denseShape:i,defaultValue:o},u=ti.runKernel(mr,l);return{outputIndices:u[0],outputValues:u[1],emptyRowIndicator:u[2],reverseIndexMap:u[3]}}});const sf=hi({sparseReshape_:function(e,t,n){const a=ci(e,"inputIndices","sparseReshape","int32"),r=ci(t,"inputShape","sparseReshape","int32"),s=ci(n,"newShape","sparseReshape","int32");if(2!==a.rank)throw new Error(`Input indices should be Tensor2D but received shape\n        ${a.shape}`);if(1!==r.rank)throw new Error(`Input shape should be Tensor1D but received shape ${r.shape}`);if(1!==s.rank)throw new Error(`New shape should be Tensor1D but received shape ${s.shape}`);const i={inputIndices:a,inputShape:r,newShape:s},o=ti.runKernel(gr,i);return{outputIndices:o[0],outputShape:o[1]}}});const of=hi({sparseSegmentMean_:function(e,t,n){const a=ci(e,"data","sparseSegmentMean"),r=ci(t,"indices","sparseSegmentMean","int32"),s=ci(n,"segmentIds","sparseSegmentMean","int32");if(a.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.rank)throw new Error(`Indices should be Tensor1D but received shape\n          ${r.shape}`);if(1!==s.rank)throw new Error(`Segment ids should be Tensor1D but received shape\n          ${s.shape}`);const i={data:a,indices:r,segmentIds:s};return ti.runKernel(yr,i)}});const lf=hi({sparseSegmentSum_:function(e,t,n){const a=ci(e,"data","sparseSegmentSum"),r=ci(t,"indices","sparseSegmentSum","int32"),s=ci(n,"segmentIds","sparseSegmentSum","int32");if(a.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.rank)throw new Error(`Indices should be Tensor1D but received shape\n         ${r.shape}`);if(1!==s.rank)throw new Error(`Segment ids should be Tensor1D but received shape\n         ${s.shape}`);const i={data:a,indices:r,segmentIds:s};return ti.runKernel(br,i)}});const uf=hi({stringNGrams_:function(e,t,n,a,r,s,i,o){const l=ci(e,"data","stringNGrams","string");if("string"!==l.dtype)throw new Error("Data must be of datatype string");if(1!==l.shape.length)throw new Error(`Data must be a vector, saw: ${l.shape}`);const u=ci(t,"dataSplits","stringNGrams");if("int32"!==u.dtype)throw new Error("Data splits must be of datatype int32");const c={separator:n,nGramWidths:a,leftPad:r,rightPad:s,padWidth:i,preserveShortSequences:o},p={data:l,dataSplits:u},d=ti.runKernel(Sr,p,c);return{nGrams:d[0],nGramsSplits:d[1]}}});const cf=hi({stringSplit_:function(e,t){let n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];const a=ci(e,"input","stringSplit","string"),r=ci(t,"delimiter","stringSplit","string");if(1!==a.rank)throw new Error(`Input should be Tensor1D but received shape ${a.shape}`);if(0!==r.rank)throw new Error(`Delimiter should be a scalar but received shape ${r.shape}`);const s={skipEmpty:n},i={input:a,delimiter:r},o=ti.runKernel(Ir,i,s);return{indices:o[0],values:o[1],shape:o[2]}}});const pf=hi({stringToHashBucketFast_:function(e,t){const n=ci(e,"input","stringToHashBucketFast","string"),a={numBuckets:t};if(t<=0)throw new Error("Number of buckets must be at least 1");const r={input:n};return ti.runKernel(Tr,r,a)}});const df=hi({staticRegexReplace_:function(e,t,n){let a=!(arguments.length>3&&void 0!==arguments[3])||arguments[3];const r=ci(e,"input","staticRegexReplace","string"),s={pattern:t,rewrite:n,replaceGlobal:a};return ti.runKernel(kr,{x:r},s)}}),hf={fft:vd,ifft:wd,rfft:Sd,irfft:kd},ff={hammingWindow:mh,hannWindow:gh,frame:yh,stft:bh},mf={flipLeftRight:vh,grayscaleToRGB:wh,resizeNearestNeighbor:Wh,resizeBilinear:Bh,rgbToGrayscale:kh,rotateWithOffset:Nh,cropAndResize:xh,nonMaxSuppression:Ih,nonMaxSuppressionAsync:Oh,nonMaxSuppressionWithScore:Mh,nonMaxSuppressionWithScoreAsync:Lh,nonMaxSuppressionPadded:zh,nonMaxSuppressionPaddedAsync:Ph,threshold:Vh,transform:Uh},gf={bandPart:jh,gramSchmidt:Gh,qr:qh},yf={absoluteDifference:Yh,computeWeightedLoss:Xh,cosineDistance:Qh,hingeLoss:Zh,huberLoss:Jh,logLoss:ef,meanSquaredError:tf,sigmoidCrossEntropy:nf,softmaxCrossEntropy:af},bf={sparseFillEmptyRows:rf,sparseReshape:sf,sparseSegmentMean:of,sparseSegmentSum:lf},xf={stringNGrams:uf,stringSplit:cf,stringToHashBucketFast:pf,staticRegexReplace:df};const vf=class{static sgd(e){return new il(e)}static momentum(e,t){return new ol(e,t,arguments.length>2&&void 0!==arguments[2]&&arguments[2])}static rmsprop(e){return new ll(e,arguments.length>1&&void 0!==arguments[1]?arguments[1]:.9,arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,arguments.length>4&&void 0!==arguments[4]&&arguments[4])}static adam(){return new Jo(arguments.length>0&&void 0!==arguments[0]?arguments[0]:.001,arguments.length>1&&void 0!==arguments[1]?arguments[1]:.9,arguments.length>2&&void 0!==arguments[2]?arguments[2]:.999,arguments.length>3&&void 0!==arguments[3]?arguments[3]:null)}static adadelta(){return new Ko(arguments.length>0&&void 0!==arguments[0]?arguments[0]:.001,arguments.length>1&&void 0!==arguments[1]?arguments[1]:.95,arguments.length>2&&void 0!==arguments[2]?arguments[2]:null)}static adamax(){return new sl(arguments.length>0&&void 0!==arguments[0]?arguments[0]:.002,arguments.length>1&&void 0!==arguments[1]?arguments[1]:.9,arguments.length>2&&void 0!==arguments[2]?arguments[2]:.999,arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,arguments.length>4&&void 0!==arguments[4]?arguments[4]:0)}static adagrad(e){return new Yo(e,arguments.length>1&&void 0!==arguments[1]?arguments[1]:.1)}},wf="undefined"!==typeof requestAnimationFrame?requestAnimationFrame:"undefined"!==typeof setImmediate?setImmediate:e=>e();function kf(){return new Promise((e=>wf((()=>e()))))}function Nf(e,t){const n=e[0].length;e.forEach(((e,t)=>{qe(e.length===n,(()=>`Error in concat${n}D: rank of tensors[${t}] must be the same as the rank of the rest (${n})`))})),qe(t>=0&&t<n,(()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`));const a=e[0];e.forEach(((e,r)=>{for(let s=0;s<n;s++)qe(s===t||e[s]===a[s],(()=>`Error in concat${n}D: Shape of tensors[${r}] (${e}) does not match the shape of the rest (${a}) along the non-concatenated axis ${r}.`))}))}function Sf(e,t){const n=e[0].slice();for(let a=1;a<e.length;a++)n[t]+=e[a][t];return n}var If;function Tf(e,t,n){let a=new Array;if(null==n&&null==t)return a;if(null==t)for(;a.length<e+n.length;)a.push(-1);else a=t.slice();if(null==n)return a;if(e+n.length!==a.length)throw new Error(`rt input.shape and shape=${t} are incompatible: rt input.rank = ${e+n.length}, but shape.rank = ${a.length}`);for(let r=1;r<n.length;++r){const s=n[r],i=a[a.length-n.length+r],o=a[i];if(s>=0)if(o>=0){if(o!==s)throw new Error(`rt input.shape and shape=${t} are incompatible: rt input.shape[${r+e}] = ${s} but shape[${r+e}] = ${o}`)}else a[i]=s}return a}function Cf(e){const t={FIRST_DIM_SIZE:If.FIRST_DIM_SIZE,VALUE_ROWIDS:If.VALUE_ROWIDS,ROW_LENGTHS:If.ROW_LENGTHS,ROW_SPLITS:If.ROW_SPLITS,ROW_LIMITS:If.ROW_LIMITS,ROW_STARTS:If.ROW_STARTS},n=[];for(const a of e){if(!(a in t))break;n.push(t[a])}return n}function Ef(e){return 0===e.length?0:e[0]===If.FIRST_DIM_SIZE?e.length-1:e.length}function $f(e,t){if(null==e||null==t)return;const n=e.length,a=t.length;if(n>=a)throw new Error(`defaultValue.shape=${e} and ragged tensor flatValues.shape=${t}, are incompatible: defaultValue.rank = ${n} must be less than ragged tensor input flatValues.rank = ${a})`);for(let r=0;r<Math.min(n,a-1);++r){const n=e[r],a=t[r+1];if(n>=0&&a>=0&&1!==n&&n!==a)throw new Error(`defaultValue.shape=${e}, and ragged tensor input flatValues.shape=${t} are incompatible: defaultValue.shape[${r-e.length}] = ${n} but ragged tensor input.flatValues.shape[${r-e.length}] = ${a}`)}}!function(e){e[e.FIRST_DIM_SIZE=0]="FIRST_DIM_SIZE",e[e.VALUE_ROWIDS=1]="VALUE_ROWIDS",e[e.ROW_LENGTHS=2]="ROW_LENGTHS",e[e.ROW_SPLITS=3]="ROW_SPLITS",e[e.ROW_LIMITS=4]="ROW_LIMITS",e[e.ROW_STARTS=5]="ROW_STARTS"}(If||(If={}));const Rf=30;function Af(e){return e<=Rf?e:ht(e,Math.floor(Math.sqrt(e)))}function _f(e,t,n){return[n*("number"===typeof e?e:e[0]),t*("number"===typeof e?e:e[1])]}function Ff(e,t,n){let a=[];if(!(arguments.length>3&&void 0!==arguments[3])||arguments[3])a=a.concat(t.slice(0)),a.push(e[0]/n),a=a.concat(e.slice(1));else{a=a.concat(e[0]);const n=t.length;for(let r=0;r<n;++r)a=a.concat([e[r+1]/t[r],t[r]]);a=a.concat(e.slice(n+1))}return a}function Df(e,t){const n=[];if(!(arguments.length>2&&void 0!==arguments[2])||arguments[2]){n.push(t);for(let a=t+1;a<e;++a)a<=2*t?(n.push(a),n.push(a-(t+1))):n.push(a)}else{const a=[],r=[];for(let n=1;n<e;++n)n>=2*t+1||n%2===1?r.push(n):a.push(n);n.push(...a),n.push(0),n.push(...r)}return n}function Of(e,t,n){let a=!(arguments.length>3&&void 0!==arguments[3])||arguments[3];const r=[];a?r.push(e[0]/n):r.push(e[0]*n);for(let s=1;s<e.length;++s)s<=t.length?a?r.push(t[s-1]*e[s]):r.push(e[s]/t[s-1]):r.push(e[s]);return r}function Mf(e,t){const n=[0];for(let a=0;a<t;++a)n.push(e[a][0]);return n}function Lf(e,t,n){const a=e.slice(0,1);for(let r=0;r<n;++r)a.push(e[r+1]-t[r][0]-t[r][1]);return a}function zf(e,t){const n=e.shape.length,a=t.shape.length;if(n<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${n}.`);if(a<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${a}.`);if("int32"!==t.dtype)throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[a-1]>n)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[a-1]} vs. ${n}`);if(0===Ye(e.shape))throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${e.shape}.`);const r=t.shape,s=r[r.length-1];let i=1;for(let p=0;p<r.length-1;++p)i*=r[p];const o=e.shape,l=r.slice();l.pop();let u=1;for(let p=s;p<n;++p)u*=o[p],l.push(o[p]);const c=[...ft(e.shape).map((e=>e/u)),1].slice(0,s);return[l,i,u,c]}const Pf=1.7580993408473768,Bf=1.0507009873554805,Wf=.3275911,Vf=.254829592,Uf=-.284496736,jf=1.421413741,Gf=-1.453152027,Hf=1.061405429;function qf(e,t){if(e.length!==t.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${e.length}, imag: ${t.length}.`);const n=new Float32Array(2*e.length);for(let a=0;a<n.length;a+=2)n[a]=e[a/2],n[a+1]=t[a/2];return n}function Kf(e){const t=new Float32Array(e.length/2),n=new Float32Array(e.length/2);for(let a=0;a<e.length;a+=2)t[a/2]=e[a],n[a/2]=e[a+1];return{real:t,imag:n}}function Xf(e){const t=Math.ceil(e.length/4),n=new Float32Array(t),a=new Float32Array(t);for(let r=0;r<e.length;r+=4)n[Math.floor(r/4)]=e[r],a[Math.floor(r/4)]=e[r+1];return{real:n,imag:a}}function Yf(e){const t=Math.floor(e.length/4),n=new Float32Array(t),a=new Float32Array(t);for(let r=2;r<e.length;r+=4)n[Math.floor(r/4)]=e[r],a[Math.floor(r/4)]=e[r+1];return{real:n,imag:a}}function Qf(e,t){return{real:e[2*t],imag:e[2*t+1]}}function Zf(e,t,n,a){e[2*a]=t,e[2*a+1]=n}function Jf(e,t){const n=new Float32Array(e/2),a=new Float32Array(e/2);for(let r=0;r<Math.ceil(e/2);r++){const s=(t?2:-2)*Math.PI*(r/e);n[r]=Math.cos(s),a[r]=Math.sin(s)}return{real:n,imag:a}}function em(e,t,n){const a=(n?2:-2)*Math.PI*(e/t);return{real:Math.cos(a),imag:Math.sin(a)}}const tm="->",nm=/->/g,am=",",rm="...";function sm(e,t){const n=((e=e.replace(/\s/g,"")).length-e.replace(nm,"").length)/tm.length;if(n<1)throw new Error("Equations without an arrow are not supported.");if(n>1)throw new Error(`Equation must contain exactly one arrow ("${tm}").`);const[a,r]=e.split(tm);qe(-1===a.indexOf(rm),(()=>`The ellipsis notation ("${rm}") is not supported yet.`));const s=a.split(am),i=s.length;if(t!==i)throw new Error(`Expected ${i} input tensors, received ${t}`);if(i>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");const o=[];for(let p=0;p<r.length;++p){const e=r[p];if(!s.some((t=>-1!==t.indexOf(e))))throw new Error(`Output subscripts contain the label ${e} not present in the input subscripts.`);-1===o.indexOf(e)&&o.push(e)}for(let p=0;p<a.length;++p){const e=a[p];-1===o.indexOf(e)&&e!==am&&o.push(e)}const l=new Array(s.length);for(let p=0;p<i;++p){if(new Set(s[p].split("")).size!==s[p].length)throw new Error(`Found duplicate axes in input component ${s[p]}. Support for duplicate axes in input is not implemented yet.`);l[p]=[];for(let e=0;e<s[p].length;++e)l[p].push(o.indexOf(s[p][e]))}const u=o.length,c=[];for(let p=r.length;p<u;++p)c.push(p);return{allDims:o,summedDims:c,idDims:l}}function im(e,t){let n=new Array(e);n.fill(-1);for(let r=0;r<t.length;++r)n[t[r]]=r;const a=[];for(let r=0;r<e;++r)-1===n[r]&&a.push(r);return n=n.filter((e=>-1!==e)),{permutationIndices:n,expandDims:a}}function om(e,t,n){const a=new Array(e);for(let r=0;r<n.length;++r){const e=n[r].shape;for(let n=0;n<t[r].length;++n)void 0===a[t[r][n]]?a[t[r][n]]=e[n]:qe(a[t[r][n]]===e[n],(()=>`Expected dimension ${a[t[r][n]]} at axis ${n} of input shaped ${JSON.stringify(e)}, but got dimension ${e[n]}`))}}function lm(e,t){const n=e,a=[];let r=0;0===e.length&&n.push(-1),r=e.length+1;for(let i=0;i<r;++i)a.push([]);const s=[];for(let i=0;i<n.length;++i){const e=cm(t,n[i]);for(const t of e)-1===s.indexOf(t)&&(a[i].push(t),s.push(t))}return{path:n,steps:a}}function um(e){return e.every(((e,t)=>e===t))}function cm(e,t){const n=[];for(let a=0;a<e.length;++a)0!==e[a].length&&-1===e[a].indexOf(t)&&-1!==t||n.push(a);return n}function pm(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,a=[];if("number"===typeof t)qe(e.shape[n]%t===0,(()=>"Number of splits must evenly divide the axis.")),a=new Array(t).fill(e.shape[n]/t);else{const r=t.reduce(((e,t)=>(-1===t&&(e+=1),e)),0);qe(r<=1,(()=>"There should be only one negative value in split array."));const s=t.indexOf(-1);if(-1!==s){const a=t.reduce(((e,t)=>t>0?e+t:e));t[s]=e.shape[n]-a}qe(e.shape[n]===t.reduce(((e,t)=>e+t)),(()=>"The sum of sizes must match the size of the axis dimension.")),a=t}return a}function dm(e){return`Received SparseTensor with denseShape[0] = 0 but\n  indices.shape[0] = ${e}`}function hm(e,t){return`indices(${e}, 0) is invalid: ${t} < 0`}function fm(e,t,n){return`indices(${e}, 0) is invalid: ${t} >= ${n}`}function mm(e,t){return`only one output dimension may be -1, not both ${e} and ${t}`}function gm(e,t){return`size ${e} must be non-negative, not ${t}`}function ym(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function bm(e,t){return`Input to reshape is a SparseTensor with ${Ye(e)}\n  dense values, but the requested shape requires a multiple of ${Ye(t)}. inputShape=${e} outputShape= ${t}`}function xm(e,t){return`Input to reshape is a tensor with ${Ye(e)} dense values, but the requested shape has ${Ye(t)}. inputShape=${e} outputShape=${t}`}function vm(){return"segment ids must be >= 0"}function wm(){return"segment ids are not increasing"}function km(e,t){return`Segment id ${e} out of range [0, ${t}), possibly because segmentIds input is not sorted.`}function Nm(e,t,n){return`Bad: indices[${e}] == ${t} out of range [0, ${n})`}function Sm(e,t){let n,a=!1;for(e<=Rf?(n=e,a=!0):n=ht(e,Math.floor(Math.sqrt(e)));!a;)n>t||n===e?a=!0:n=ht(e,n+1);return n}function Im(e,t,n){const a=[],r=e.length;for(let s=0;s<r;s++)s!==t?a.push(e[s]):a.push(n);return a}function Tm(e,t,n,a){const r=t.shape.length,s=e.shape.length;if(0!==a&&(a<-r||a>r))throw new Error(`Expect batchDims in the range of [-${r}, ${r}], but got ${a}`);if(a<0&&(a+=r),a>s)throw new Error(`batchDims (${a}) must be less than rank(x) (\n    ${s}).`);if(n<a)throw new Error(`batchDims (${a}) must be less than or equal to axis (${n}).`);for(let p=0;p<a;++p)if(e.shape[p]!==t.shape[p])throw new Error(`x.shape[${p}]: ${e.shape[p]} should be equal to indices.shape[${p}]: ${t.shape[p]}.`);const i=e.shape[n],o=[];let l=1,u=1,c=1;for(let p=0;p<a;++p)o.push(e.shape[p]),l*=e.shape[p];for(let p=a;p<n;p++)o.push(e.shape[p]),u*=e.shape[p];for(let p=a;p<r;p++)o.push(t.shape[p]);for(let p=n+1;p<s;p++)o.push(e.shape[p]),c*=e.shape[p];return{batchSize:l,sliceSize:c,outerSize:u,dimSize:i,outputShape:o}}function Cm(e){try{return e.map((e=>xs(e)))}catch(JB){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${JB}`)}}function Em(e){return e.map((e=>bs(e)))}!function(){for(const e of ul)Ho(e)}();const $m={kernelName:_t,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Mo(e,Ed(Ro(n,"float32"),-1))}}},Rm={kernelName:Ft,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=zo(Ro(n,"float32")),a=Lo(Zo(Wo(1),t));return ep(Oo(e,a))}}}},Am={kernelName:Dt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=Lo(Zo(zo(Ro(n,"float32")),1));return Oo(e,t)}}}},_m={kernelName:Ot,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,a]=t,r=al(n.shape,a.shape);return{a:()=>{let t=e;const a=nl(n.shape,r);return a.length>0&&(t=Rc(t,a)),Tu(t,n.shape)},b:()=>{let t=e;const n=nl(a.shape,r);return n.length>0&&(t=Rc(t,n)),Tu(t,a.shape)}}}},Fm={kernelName:Mt,saveAllInputs:!0,gradFunc:(e,t)=>{const n={};return t.forEach(((t,a)=>{n[a]=()=>e.clone()})),n}},Dm={kernelName:Pt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Po(n)}}},Om={kernelName:Bt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Po(n)}}},Mm={kernelName:Wt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Oo(e,Lo(Zo(Wo(1),zo(Ro(n,"float32")))))}}},Lm={kernelName:Vt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=Lo(Fo(Wo(1),zo(Ro(n,"float32"))));return Oo(e,t)}}}},zm={kernelName:Gt,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,a]=t,r=al(n.shape,a.shape);return{a:()=>{const t=Fo(zo(n),zo(a));let s=Mo(e,Oo(a,t));const i=nl(n.shape,r);return i.length>0&&(s=Rc(s,i)),Tu(s,n.shape)},b:()=>{const t=Fo(zo(n),zo(a));let s=ep(Mo(e,Oo(n,t)));const i=nl(a.shape,r);return i.length>0&&(s=Rc(s,i)),Tu(s,a.shape)}}}},Pm={kernelName:Ut,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Oo(e,Fo(zo(Ro(n,"float32")),1))}}},Bm={kernelName:jt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Oo(e,Zo(Wo(1),zo(Ro(n,"float32"))))}}};const Wm=hi({avgPool3dGrad_:function(e,t,n,a,r,s){const i=ci(e,"dy","avgPool3dGrad"),o=ci(t,"input","avgPool3dGrad");let l=i,u=o,c=!1;4===o.rank&&(c=!0,l=Tu(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]]),u=Tu(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),qe(5===l.rank,(()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${l.rank}.`)),qe(5===u.rank,(()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${u.rank}.`)),Iu("avgPool3dGrad",r,s);const p={dy:l,input:u},d={filterSize:n,strides:a,pad:r,dimRoundingMode:s},h=ti.runKernel(Xt,p,d);return c?Tu(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}}),Vm={kernelName:Kt,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[a]=t,{filterSize:r,strides:s,pad:i,dimRoundingMode:o}=n;return{x:()=>Wm(e,a,r,s,i,o)}}};const Um=hi({avgPoolGrad_:function(e,t,n,a,r){const s=ci(e,"dy","avgPoolGrad"),i=ci(t,"input","avgPoolGrad");qe(i.rank===s.rank,(()=>`Rank of input (${i.rank}) does not match rank of dy (${s.rank})`));let o=i,l=s,u=!1;3===i.rank&&(u=!0,o=Tu(i,[1,i.shape[0],i.shape[1],i.shape[2]]),l=Tu(s,[1,s.shape[0],s.shape[1],s.shape[2]])),qe(4===l.rank,(()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${l.rank}.`)),qe(4===o.rank,(()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${o.rank}.`));const c={dy:l,input:o},p={filterSize:n,strides:a,pad:r},d=ti.runKernel(qt,c,p);return u?Tu(d,[d.shape[1],d.shape[2],d.shape[3]]):d}}),jm={kernelName:Ht,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[a]=t,{filterSize:r,strides:s,pad:i}=n;return{x:()=>Um(e,a,r,s,i)}}},Gm={kernelName:Yt,inputsToSave:["a","b"],gradFunc:(e,t,n)=>{const[a,r]=t,{transposeA:s,transposeB:i}=n;return s||i?!s&&i?{a:()=>Ru(e,r,!1,!1),b:()=>Ru(e,a,!0,!1)}:s&&!i?{a:()=>Ru(r,e,!1,!0),b:()=>Ru(a,e,!1,!1)}:{a:()=>Ru(r,e,!0,!0),b:()=>Ru(e,a,!0,!0)}:{a:()=>Ru(e,r,!1,!0),b:()=>Ru(a,e,!0,!1)}}},Hm={kernelName:Qt,gradFunc:(e,t,n)=>{const{blockShape:a,crops:r}=n;return{x:()=>Dp(e,a,r)}}},qm={kernelName:"BroadcastTo",gradFunc:(e,t,n)=>{const a=n,r=a.inputShape,s=a.shape,i=Array.from(s);for(let l=r.length-1;l>=0;l--)if(r[l]===s[l])i[l]=1;else if(1!==r[l])throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${s}].`);const o=[];for(let l=0;l<i.length;l++)i[l]>1&&o.push(l);return{x:()=>Rc(e,o,!0)}}},Km={kernelName:tn,gradFunc:e=>({x:()=>e.clone()})},Xm={kernelName:nn,gradFunc:e=>({x:()=>Po(e)})},Ym={kernelName:an,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[a]=t,{clipValueMin:r,clipValueMax:s}=n;return{x:()=>hc(sp(Vc(a,r),Xc(a,s)),e,Po(e))}}},Qm={kernelName:sn,inputsToSave:["x"],gradFunc:$m.gradFunc},Zm={kernelName:on,saveAllInputs:!0,gradFunc:(e,t,n)=>{const a=t.map((e=>e.shape)),{axis:r}=n,s=at(r,t[0].shape)[0],i=a.map((e=>e[s]));return Nd(e,i,s).map((e=>()=>e))}},Jm={kernelName:ln,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[a,r]=t,{dilations:s,strides:i,pad:o,dataFormat:l}=n;return qe(wu(s),(()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`)),{x:()=>Zu(a.shape,e,r,i,o,l),filter:()=>sh(a,e,r.shape,i,o,l)}}},eg={kernelName:cn,inputsToSave:["dy","filter"],gradFunc:(e,t,n)=>{const[a,r]=t,{strides:s,pad:i,dataFormat:o,dimRoundingMode:l}=n;return{dy:()=>Yu(e,r,s,i,o,1,l),filter:()=>sh(e,a,r.shape,s,i,o,l)}}};const tg=hi({conv3DBackpropFilter_:function(e,t,n,a,r){let s=e;4===e.rank&&(s=Tu(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]));let i=t;4===i.rank&&(i=Tu(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]])),qe(5===s.rank,(()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${s.shape}.`)),qe(5===i.rank,(()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${i.shape}.`)),qe(5===n.length,(()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${n}.`)),qe(s.shape[4]===n[3],(()=>`Error in conv3dDerFilter: depth of input ${s.shape[4]}) must match input depth in filter (${n[3]}.`)),qe(i.shape[4]===n[4],(()=>`Error in conv3dDerFilter: depth of dy (${i.shape[4]}) must match output depth for filter (${n[4]}).`));const o={x:s,dy:i},l={strides:a,pad:r,filterShape:n};return ti.runKernel(dn,o,l)}}),ng={kernelName:pn,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:a,strides:r,pad:s}=n;qe(wu(a),(()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${a}'`));const[i,o]=t;return{x:()=>tc(i.shape,e,o,r,s),filter:()=>tg(i,e,o.shape,r,s)}}},ag={kernelName:fn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Mo(ep(hd(Ro(n,"float32"))),e)}}},rg={kernelName:mn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Mo(fd(Ro(n,"float32")),e)}}},sg={kernelName:yn,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[a]=t,{axis:r,exclusive:s,reverse:i}=n;return{x:()=>{const t=Ic([r],a.rank);let n=ic(e,r,s,!i);return null!=t&&(n=Yd(n,t)),n}}}},ig={kernelName:wn,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:a,strides:r,pad:s,dimRoundingMode:i}=n,o=null==a?[1,1]:a;qe(wu(o),(()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${o}'`));const[l,u]=t;return qe(4===l.rank,(()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${l.rank}.`)),qe(4===u.rank,(()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${u.rank}.`)),qe(l.shape[3]===u.shape[2],(()=>`Error in gradient of depthwiseConv2d: number of input channels (${l.shape[3]}) must match the inChannels dimension in filter ${u.shape[2]}.`)),qe(ku(r,o),(()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${r} and dilations '${o}'.`)),Iu("depthwiseConv2d",s,i),{x:()=>dh(l.shape,e,u,r,s,o,i),filter:()=>ph(l,e,u.shape,r,s,o,i)}}},og={kernelName:In,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[a,r]=t,s={x:a,filter:r,dy:e},i={x:a,filter:r,dy:e};return{x:()=>ti.runKernel(Tn,s,n),filter:()=>ti.runKernel(Cn,i,n)}}},lg={kernelName:An,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t,a={dy:e,y:n};return{x:()=>ti.runKernel(_n,a)}}},ug={kernelName:Fn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,a=Mo(Dc(ep(zo(n))),2/Math.sqrt(Math.PI));return{x:()=>Mo(e,a)}}},cg={kernelName:On,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Mo(e,n)}}},pg={kernelName:Mn,inputsToSave:["input"],gradFunc:(e,t)=>{const[n]=t;return{input:()=>Tu(e,n.shape)}}},dg={kernelName:Ln,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Mo(e,Dc(n))}}},hg={kernelName:Wn,gradFunc:e=>({x:()=>Po(e)})},fg={kernelName:Vn,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,a]=t,r=al(n.shape,a.shape);return{a:()=>{const t=Oo(e,Ro(a,"float32")),s=nl(n.shape,r);return s.length>0?Tu(Rc(t,s),n.shape):t},b:()=>{let t=Mo(e,Ro(n,"float32"));const s=nl(a.shape,r);s.length>0&&(t=Tu(Rc(t,s),a.shape));const i=zo(a);return ep(Oo(t,Ro(i,"float32")))}}}},mg={kernelName:Un,inputsToSave:["x","mean","variance","scale"],gradFunc:(e,t,n)=>{const{varianceEpsilon:a}=n,[r,s,i,o]=t,l=null==o?Wo(1):o,u=nl(s.shape,r.shape),c=[];if(1===s.rank){for(let e=0;e<r.shape.length-1;++e)c.push(r.shape[e]);c.push(1)}const p=Zo(r,s),d=Mo(e,l),h=ld(Fo(i,Wo(a))),f=Mo(Mo(Mo(h,h),h),Wo(-.5));return{x:()=>1===s.rank?Tu(Mo(Mo(e,Lc(Tu(h,[1,1,1,s.shape[0]]),c)),l),r.shape):Tu(Mo(Mo(e,h),l),r.shape),mean:()=>{let e=Mo(Mo(h,Wo(-1)),d);return 1===s.rank&&(e=Rc(e,u)),Tu(e,s.shape)},variance:()=>{let e=Mo(Mo(f,p),d);return 1===s.rank&&(e=Rc(e,u)),Tu(e,s.shape)},scale:()=>{const t=Mo(p,h);let n=Mo(e,t);return 1===s.rank&&(n=Rc(n,u)),Tu(n,s.shape)},offset:()=>{let t=e;return 1===s.rank&&(t=Rc(t,u)),Tu(t,s.shape)}}}},gg={kernelName:jn,inputsToSave:["x","indices"],gradFunc:(e,t,n)=>{const[a,r]=t,{axis:s,batchDims:i}=n,o=at(s,a.shape)[0],l=(e,t,n)=>()=>{const a=e.shape,r=t.size,i=a.slice(0,o),l=i.length,u=a.slice(s,a.length).slice(1),c=u.length,p=yg(0,l),d=yg(l+1,l+1+c),h=bg([i,[r],u]),f=Tu(n,h),m=Tu(t,[r]),g=bg([[l],p,d]),y=Yd(f,g);let b=Ud(y,m,e.shape[o]);const x=Tc(g);return b=Yd(b,x),b};if(1===i){const t=a.shape[0],n=a.split(t,0);return{x:()=>{const t=Cd(n.map(((t,n)=>l(t,r.slice(n,1),e.slice(n,1))())));return t.reshape(a.shape)},indices:()=>r}}return{x:l(a,r,e),indices:()=>r}}};function yg(e,t){const n=[];for(let a=e;a<t;++a)n.push(a);return n}function bg(e){const t=[];for(let n=0;n<e.length;++n)for(let a=0;a<e[n].length;++a)t.push(e[n][a]);return t}const xg={kernelName:qn,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,a]=t;return{a:()=>Po(n),b:()=>Po(a)}}},vg={kernelName:Kn,gradFunc:e=>({x:()=>Ro(e,"float32")})},wg={kernelName:Qn,gradFunc:e=>({x:()=>Po(e)})},kg={kernelName:Zn,gradFunc:e=>({x:()=>Po(e)})},Ng={kernelName:Jn,gradFunc:e=>({x:()=>Po(e)})},Sg={kernelName:ea,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[a]=t,{alpha:r}=n,s=Wc(a,0);return{x:()=>hc(s,e,Mo(e,r))}}},Ig={kernelName:sa,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Oo(e,Fo(n,1))}}},Tg={kernelName:ra,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Oo(e,Ro(n,"float32"))}}},Cg={kernelName:"LogSoftmax",inputsToSave:[],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[a]=t,{axis:r}=n;return{logits:()=>{const t=Dc(a);return Zo(e,Mo(Rc(e,r,!0),t))}}}};const Eg=hi({localResponseNormalizationBackprop_:function(e,t,n){const a={x:e,y:t,dy:n},r={depthRadius:arguments.length>3&&void 0!==arguments[3]?arguments[3]:5,bias:arguments.length>4&&void 0!==arguments[4]?arguments[4]:1,alpha:arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,beta:arguments.length>6&&void 0!==arguments[6]?arguments[6]:.5};return ti.runKernel(ca,a,r)}}),$g={kernelName:ua,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[a,r]=t,{depthRadius:s,bias:i,alpha:o,beta:l}=n;return{x:()=>Eg(a,r,e,s,i,o,l)}}};function Rg(e,t,n,a){return t.rank<n.rank&&(t=Tu(t,Nc(t.shape,a))),e.rank<n.rank&&(e=Tu(e,Nc(e.shape,a))),{x:()=>Mo(e,Ro(dc(n,t),e.dtype))}}const Ag={kernelName:pa,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const a=n,{reductionIndices:r}=a,s=t[0],i=Rg(e,t[1],s,at(r,s.shape));return{x:()=>i.x()}}},_g={kernelName:da,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,a]=t;return{a:()=>Mo(e,Ro(Vc(n,a),"float32")),b:()=>Mo(e,Ro(Kc(n,a),"float32"))}}};const Fg=hi({maxPool3dGrad_:function(e,t,n,a,r,s,i){const o=ci(e,"dy","maxPool3dGrad"),l=ci(t,"input","maxPool3dGrad"),u=ci(n,"output","maxPool3dGrad");let c=o,p=l,d=u,h=!1;4===l.rank&&(h=!0,c=Tu(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]]),p=Tu(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]]),d=Tu(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]])),qe(5===c.rank,(()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${c.rank}.`)),qe(5===p.rank,(()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${p.rank}.`)),qe(5===d.rank,(()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${d.rank}.`)),Iu("maxPool3dGrad",s,i);const f={dy:c,input:p,output:d},m={filterSize:a,strides:r,pad:s,dimRoundingMode:i},g=ti.runKernel(ga,f,m);return h?Tu(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}}),Dg={kernelName:ma,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[a,r]=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:l}=n;return{x:()=>Fg(e,a,r,s,i,o,l)}}};const Og=hi({maxPoolGrad_:function(e,t,n,a,r,s,i){const o=ci(e,"dy","maxPoolGrad"),l=ci(t,"input","maxPoolGrad"),u=ci(n,"output","maxPoolGrad");qe(l.rank===o.rank,(()=>`Rank of input (${l.rank}) does not match rank of dy (${o.rank})`)),qe(4===o.rank,(()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${o.rank}.`)),qe(4===l.rank,(()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${l.rank}.`)),Iu("maxPoolGrad",s,i);const c={dy:o,input:l,output:u},p={filterSize:a,strides:r,pad:s,dimRoundingMode:i};return ti.runKernel(fa,c,p)}}),Mg={kernelName:ha,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[a,r]=t,{filterSize:s,strides:i,pad:o}=n;return{x:()=>Og(e,a,r,s,i,o)}}},Lg={kernelName:wa,inputsToSave:["x"],gradFunc:(e,t,n)=>{const a=t[0],{paddings:r}=n,s=r.map((e=>e[0]));return{x:()=>_u(e,s,a.shape)}}},zg={kernelName:Fa,inputsToSave:["x"],gradFunc:(e,t,n)=>{const a=t[0],{paddings:r}=n,s=r.map((e=>e[0]));return{x:()=>_u(e,s,a.shape)}}},Pg={kernelName:Da,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(e,t)=>{const[n,a,r]=t,s=n,i=a,o=al(s.shape,i.shape);return{a:()=>{const t=Ro(i,"float32");let n=Mo(e,Mo(t,Qo(s,Zo(t,Wo(1)))));const a=nl(s.shape,o);return a.length>0&&(n=Rc(n,a)),Tu(n,s.shape)},b:()=>{const t=Wc(s,0),n=hc(t,Zc(s),Po(s));let a=Mo(e,Mo(r,n));const l=nl(i.shape,o);return l.length>0&&(a=Rc(a,l)),Tu(a,i.shape)}}}};function Bg(e,t,n){const a=e.shape.length,r=a-n.length,s=Ic(n,a);let i=e;null!=s&&(i=Yd(e,s));const o=i.shape.slice(),l=o.splice(a-n.length,n.length).reduce(((e,t)=>e*t),1);o.push(l);let u=function(e,t,n){const a=e.shape.slice();a[n]=1;const r=Tu(t,a),s=sc(e,n,!0,!1),i=sc(e,n,!0,!0),o=Mo(s,i);return Mo(r,o)}(i.reshape(o),t,r);if(u=u.reshape(i.shape),null!=s){const e=Tc(s);u=Yd(u,e)}return u}const Wg={kernelName:ar,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=Wc(n,Wo(0)),a=Wo(Pf),r=Wo(Bf),s=Mo(e,r),i=Mo(Mo(e,a),Dc(Ro(n,"float32")));return hc(t,s,i)}}}},Vg={kernelName:dr,gradFunc:(e,t,n)=>{const{blockShape:a,paddings:r}=n;return{x:()=>Ou(e,a,r)}}},Ug={kernelName:hr,gradFunc:(e,t,n)=>{const{axis:a}=n;return{x:()=>$u(e,a)}}};const jg=[$m,Rm,Am,_m,Fm,Dm,Om,Mm,Lm,zm,Pm,Bm,Vm,jm,Gm,Hm,qm,Km,Xm,Ym,Qm,Zm,eg,Jm,ng,ag,rg,sg,ig,og,{kernelName:$n,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,a]=t,r=al(n.shape,a.shape);return{a:()=>{const t=Oo(e,Ro(a,"float32")),s=nl(n.shape,r);return s.length>0?Tu(Rc(t,s),n.shape):t},b:()=>{let t=Mo(e,Ro(n,"float32"));const s=nl(a.shape,r);s.length>0&&(t=Tu(Rc(t,s),a.shape));const i=zo(a);return ep(Oo(t,Ro(i,"float32")))}}}},lg,ug,cg,pg,dg,fg,hg,mg,gg,xg,vg,wg,kg,Ng,Sg,Ig,Tg,Cg,$g,Ag,Ag,_g,Dg,Mg,{kernelName:ba,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[a]=t,{axis:r}=n,s=at(r,a.shape),i=Ye(kc(a.shape,s)[1]);return{x:()=>{const t=a.shape.slice();s.forEach((e=>{t[e]=1}));const n=Tu(e,t);return Oo(Mo(n,yp(a.shape,"float32")),i)}}}},{kernelName:xa,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const a=n,{axis:r}=a,[s,i]=t,o=Rg(e,i,s,at(r,s.shape));return{x:()=>o.x()}}},{kernelName:va,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,a]=t;return{a:()=>Mo(e,Ro(Xc(n,a),"float32")),b:()=>Mo(e,Ro(Wc(n,a),"float32"))}}},Lg,{kernelName:ka,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,a]=t,r=al(n.shape,a.shape);return{a:()=>{const t=nl(n.shape,r);return t.length>0?Tu(Rc(e,t),n.shape):e},b:()=>{const t=Mo(e,ep(Pc(Oo(n,a)))),s=nl(a.shape,r);return s.length>0?Tu(Rc(t,s),a.shape):t}}}},{kernelName:Sa,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,a]=t,r=al(n.shape,a.shape);return{a:()=>{const t=Mo(e,Ro(a,"float32")),s=nl(n.shape,r);return s.length>0?Tu(Rc(t,s),n.shape):t},b:()=>{const t=Mo(e,Ro(n,"float32")),s=nl(a.shape,r);return s.length>0?Tu(Rc(t,s),a.shape):t}}}},{kernelName:Ia,gradFunc:e=>({x:()=>ep(e)})},{kernelName:Aa,inputsToSave:["indices"],gradFunc:(e,t)=>{const n=t[0];return{indices:()=>gp(n.shape,"float32")}}},{kernelName:Ra,gradFunc:e=>({x:()=>Po(e)})},{kernelName:_a,saveAllInputs:!0,gradFunc:(e,t,n)=>{const{axis:a}=n;return jd(e,a).map((e=>()=>e))}},zg,zg,Pg,{kernelName:Oa,inputsToSave:["x","alpha"],gradFunc:(e,t)=>{const[n,a]=t,r=Wc(n,0);return{x:()=>hc(r,e,Mo(e,a)),alpha:()=>{let t=hc(r,Po(e),Mo(e,n));const s=nl(a.shape,e.shape);return s.length>0&&(t=Rc(t,s)),Tu(t,a.shape)}}}},{kernelName:Ma,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[a]=t,{axis:r}=n;let s=[];return s=void 0===r||null===r?a.shape.map(((e,t)=>t)):"number"===typeof r?[r]:r,{x:()=>Bg(a,e,s)}}},{kernelName:Va,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Oo(e,ep(zo(n)))}}},{kernelName:Xa,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,a=Mo(Xc(n,6),Ed(n));return{x:()=>Mo(e,Ro(a,"float32"))}}},{kernelName:Ua,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Mo(e,Ro(Ed(n),"float32"))}}},{kernelName:ja,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Tu(e,n.shape)}}},{kernelName:qa,inputsToSave:["images"],gradFunc:(e,t,n)=>{const[a]=t,r={dy:e,images:a};return{images:()=>ti.runKernel(Ka,r,n)}}},{kernelName:Ga,inputsToSave:["images"],gradFunc:(e,t,n)=>{const[a]=t,r={dy:e,images:a};return{images:()=>ti.runKernel(Ha,r,n)}}},{kernelName:Ya,gradFunc:(e,t,n)=>{const{dims:a}=n,r=at(a,e.shape);return{x:()=>nd(e,r)}}},{kernelName:Qa,gradFunc:e=>({x:()=>Po(e)})},{kernelName:Za,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>ep(Oo(e,Mo(Qo(n,1.5),2)))}}},{kernelName:nr,inputsToSave:["condition"],gradFunc:(e,t)=>{const[n]=t;return{condition:()=>Ro(Po(n),"float32"),t:()=>Mo(e,Ro(n,e.dtype)),e:()=>Mo(e,Ro(ip(n),e.dtype))}}},Wg,{kernelName:lr,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Mo(e,Mo(n,Zo(Wo(1),n)))}}},{kernelName:or,gradFunc:e=>({x:()=>Po(e)})},{kernelName:sr,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Mo(ac(Ro(n,"float32")),e)}}},{kernelName:ir,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Mo(rc(Ro(n,"float32")),e)}}},{kernelName:rr,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[a]=t,{begin:r,size:s}=n,i=a.shape,[o,l]=Yl(a,r,s),u=[];for(let c=0;c<e.rank;c++)u.push([o[c],i[c]-o[c]-l[c]]);return{x:()=>$p(e,u)}}},{kernelName:fr,outputsToSave:[!0],gradFunc:(e,t,n)=>{const[a]=t,{dim:r}=n,s=Mo(e,a);return{logits:()=>Zo(s,Mo(Rc(s,[r],true),a))}}},{kernelName:ur,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Mo(e,Au(n))}}},Vg,Vg,Ug,Ug,{kernelName:cr,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Oo(e,Mo(Lo(Ro(n,"float32")),2))}}},{kernelName:vr,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,a]=t,r=Wo(2);return{a:()=>Mo(e,Mo(r,Zo(n,a))),b:()=>Mo(e,Mo(r,Zo(a,n)))}}},{kernelName:wr,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Mo(e,Mo(Ro(n,"float32"),2))}}},{kernelName:zr,gradFunc:e=>({x:()=>Po(e)})},{kernelName:Cr,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,a]=t,r=al(n.shape,a.shape);return{a:()=>{let t=e;const a=nl(n.shape,r);return a.length>0&&(t=Rc(t,a)),Tu(t,n.shape)},b:()=>{let t=e;const n=nl(a.shape,r);return n.length>0&&(t=Rc(t,n)),Tu(ep(t),a.shape)}}}},{kernelName:pr,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[a]=t,r=a.shape.slice(),{axis:s}=n;at(s,a.shape).forEach((e=>{r[e]=1}));const i=Tu(e,r),o=Mo(i,yp(a.shape,"float32"));return{x:()=>o}}},{kernelName:Er,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Oo(e,zo(ac(n)))}}},{kernelName:$r,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Mo(Zo(Wo(1),zo(n)),e)}}},{kernelName:Rr,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[a]=t,{reps:r}=n;return{x:()=>{let t=Po(a);if(1===a.rank)for(let n=0;n<r[0];++n)t=Fo(t,_u(e,[n*a.shape[0]],[a.shape[0]]));else if(2===a.rank)for(let n=0;n<r[0];++n)for(let s=0;s<r[1];++s)t=Fo(t,_u(e,[n*a.shape[0],s*a.shape[1]],[a.shape[0],a.shape[1]]));else if(3===a.rank)for(let n=0;n<r[0];++n)for(let s=0;s<r[1];++s)for(let i=0;i<r[2];++i)t=Fo(t,_u(e,[n*a.shape[0],s*a.shape[1],i*a.shape[2]],[a.shape[0],a.shape[1],a.shape[2]]));else{if(4!==a.rank)throw new Error(`Gradient for tile operation is not implemented for rank-${a.rank} tensors yet.`);for(let n=0;n<r[0];++n)for(let s=0;s<r[1];++s)for(let i=0;i<r[2];++i)for(let o=0;o<r[3];++o)t=Fo(t,_u(e,[n*a.shape[0],s*a.shape[1],i*a.shape[2],o*a.shape[3]],[a.shape[0],a.shape[1],a.shape[2],a.shape[3]]))}return t}}}},{kernelName:Fr,gradFunc:(e,t,n)=>{const a=n,{perm:r}=a,s=Tc(r);return{x:()=>Yd(e,s)}}},{kernelName:Or,gradFunc:(e,t,n)=>{const a=n,{axis:r}=a;return{value:()=>Cd(e,r)}}},{kernelName:Mr,inputsToSave:["segmentIds"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>function(e,t){const n=rl(t,Po(t)),a=Bc(e,n);let r=Vc(t,Wo(0,"int32"));const s=a.rank-r.rank;for(let o=0;o<s;++o)r=Oc(r,o+1);r=sp(r,yp(a.shape,"bool"));const i=Po(a);return hc(r,a,i)}(e,n)}}},{kernelName:Lr,gradFunc:e=>({x:()=>Po(e)})}];for(const n of jg)Zr(n);Os().prototype.abs=function(){return this.throwIfDisposed(),el(this)},Os().prototype.acos=function(){return this.throwIfDisposed(),Jl(this)},Os().prototype.acosh=function(){return this.throwIfDisposed(),eu(this)},Os().prototype.add=function(e){return this.throwIfDisposed(),Fo(this,e)},Os().prototype.all=function(e,t){return this.throwIfDisposed(),nu(this,e,t)},Os().prototype.any=function(e,t){return this.throwIfDisposed(),au(this,e,t)},Os().prototype.argMax=function(e){return this.throwIfDisposed(),ru(this,e)},Os().prototype.argMin=function(e){return this.throwIfDisposed(),su(this,e)},Os().prototype.asScalar=function(){return this.throwIfDisposed(),qe(1===this.size,(()=>"The array must have only 1 element.")),Tu(this,[])},Os().prototype.asType=function(e){return this.throwIfDisposed(),Ro(this,e)},Os().prototype.as1D=function(){return this.throwIfDisposed(),Tu(this,[this.size])},Os().prototype.as2D=function(e,t){return this.throwIfDisposed(),Tu(this,[e,t])},Os().prototype.as3D=function(e,t,n){return this.throwIfDisposed(),Tu(this,[e,t,n])},Os().prototype.as4D=function(e,t,n,a){return this.throwIfDisposed(),Tu(this,[e,t,n,a])},Os().prototype.as5D=function(e,t,n,a,r){return this.throwIfDisposed(),Tu(this,[e,t,n,a,r])},Os().prototype.asin=function(){return this.throwIfDisposed(),iu(this)},Os().prototype.asinh=function(){return this.throwIfDisposed(),ou(this)},Os().prototype.atan=function(){return this.throwIfDisposed(),lu(this)},Os().prototype.atan2=function(e){return this.throwIfDisposed(),uu(this,e)},Os().prototype.atanh=function(){return this.throwIfDisposed(),cu(this)},Os().prototype.avgPool=function(e,t,n,a){return this.throwIfDisposed(),Cu(this,e,t,n,a)},Os().prototype.batchToSpaceND=function(e,t){return this.throwIfDisposed(),Ou(this,e,t)},Os().prototype.batchNorm=function(e,t,n,a,r){return this.throwIfDisposed(),Mu(this,e,t,n,a,r)},Os().prototype.broadcastTo=function(e){return this.throwIfDisposed(),Uu(this,e)},Os().prototype.cast=function(e){return this.throwIfDisposed(),Ro(this,e)},Os().prototype.ceil=function(){return this.throwIfDisposed(),ju(this)},Os().prototype.clipByValue=function(e,t){return this.throwIfDisposed(),Gu(this,e,t)},Os().prototype.concat=function(e,t){return this.throwIfDisposed(),e instanceof Ds&&(e=[e]),$u([this,...e],t)},Os().prototype.conv1d=function(e,t,n,a,r,s){return this.throwIfDisposed(),Qu(this,e,t,n,a,r,s)},Os().prototype.conv2dTranspose=function(e,t,n,a,r){return this.throwIfDisposed(),Ju(this,e,t,n,a,r)},Os().prototype.conv2d=function(e,t,n,a,r,s){return this.throwIfDisposed(),Yu(this,e,t,n,a,r,s)},Os().prototype.cos=function(){return this.throwIfDisposed(),ac(this)},Os().prototype.cosh=function(){return this.throwIfDisposed(),rc(this)},Os().prototype.cumprod=function(e,t,n){return this.throwIfDisposed(),sc(this,e,t,n)},Os().prototype.cumsum=function(e,t,n){return this.throwIfDisposed(),ic(this,e,t,n)},Os().prototype.depthToSpace=function(e,t){return this.throwIfDisposed(),lc(this,e,t)},Os().prototype.depthwiseConv2d=function(e,t,n,a,r,s){return this.throwIfDisposed(),uc(this,e,t,n,a,r,s)},Os().prototype.dilation2d=function(e,t,n,a,r){return this.throwIfDisposed(),pc(this,e,t,n,a,r)},Os().prototype.divNoNan=function(e){return this.throwIfDisposed(),fc(this,e)},Os().prototype.div=function(e){return this.throwIfDisposed(),Oo(this,e)},Os().prototype.dot=function(e){return this.throwIfDisposed(),mc(this,e)},Os().prototype.elu=function(){return this.throwIfDisposed(),yc(this)},Os().prototype.equal=function(e){return this.throwIfDisposed(),dc(this,e)},Os().prototype.erf=function(){return this.throwIfDisposed(),xc(this)},Os().prototype.euclideanNorm=function(e,t){return this.throwIfDisposed(),Fc(this,e,t)},Os().prototype.exp=function(){return this.throwIfDisposed(),Dc(this)},Os().prototype.expandDims=function(e){return this.throwIfDisposed(),Oc(this,e)},Os().prototype.expm1=function(){return this.throwIfDisposed(),Mc(this)},Os().prototype.fft=function(){return this.throwIfDisposed(),vd(this)},Os().prototype.flatten=function(){return this.throwIfDisposed(),Tu(this,[this.size])},Os().prototype.floor=function(){return this.throwIfDisposed(),Pc(this)},Os().prototype.floorDiv=function(e){return this.throwIfDisposed(),Do(this,e)},Os().prototype.gather=function(e,t,n){return this.throwIfDisposed(),Bc(this,e,t,n)},Os().prototype.greaterEqual=function(e){return this.throwIfDisposed(),Vc(this,e)},Os().prototype.greater=function(e){return this.throwIfDisposed(),Wc(this,e)},Os().prototype.ifft=function(){return this.throwIfDisposed(),wd(this)},Os().prototype.irfft=function(){return this.throwIfDisposed(),kd(this)},Os().prototype.isFinite=function(){return this.throwIfDisposed(),jc(this)},Os().prototype.isInf=function(){return this.throwIfDisposed(),Gc(this)},Os().prototype.isNaN=function(){return this.throwIfDisposed(),Hc(this)},Os().prototype.leakyRelu=function(e){return this.throwIfDisposed(),qc(this,e)},Os().prototype.lessEqual=function(e){return this.throwIfDisposed(),Xc(this,e)},Os().prototype.less=function(e){return this.throwIfDisposed(),Kc(this,e)},Os().prototype.localResponseNormalization=function(e,t,n,a){return this.throwIfDisposed(),Qc(this,e,t,n,a)},Os().prototype.logSigmoid=function(){return this.throwIfDisposed(),np(this)},Os().prototype.logSoftmax=function(e){return this.throwIfDisposed(),ap(this,e)},Os().prototype.logSumExp=function(e,t){return this.throwIfDisposed(),rp(this,e,t)},Os().prototype.log=function(){return this.throwIfDisposed(),Zc(this)},Os().prototype.log1p=function(){return this.throwIfDisposed(),Jc(this)},Os().prototype.logicalAnd=function(e){return this.throwIfDisposed(),sp(this,e)},Os().prototype.logicalNot=function(){return this.throwIfDisposed(),ip(this)},Os().prototype.logicalOr=function(e){return this.throwIfDisposed(),op(this,e)},Os().prototype.logicalXor=function(e){return this.throwIfDisposed(),lp(this,e)},Os().prototype.matMul=function(e,t,n){return this.throwIfDisposed(),Ru(this,e,t,n)},Os().prototype.maxPool=function(e,t,n,a){return this.throwIfDisposed(),dp(this,e,t,n,a)},Os().prototype.max=function(e,t){return this.throwIfDisposed(),Ec(this,e,t)},Os().prototype.maximum=function(e){return this.throwIfDisposed(),rl(this,e)},Os().prototype.mean=function(e,t){return this.throwIfDisposed(),mp(this,e,t)},Os().prototype.min=function(e,t){return this.throwIfDisposed(),$c(this,e,t)},Os().prototype.minimum=function(e){return this.throwIfDisposed(),xp(this,e)},Os().prototype.mirrorPad=function(e,t){return this.throwIfDisposed(),vp(this,e,t)},Os().prototype.mod=function(e){return this.throwIfDisposed(),wp(this,e)},Os().prototype.mul=function(e){return this.throwIfDisposed(),Mo(this,e)},Os().prototype.neg=function(){return this.throwIfDisposed(),ep(this)},Os().prototype.norm=function(e,t,n){return this.throwIfDisposed(),_c(this,e,t,n)},Os().prototype.notEqual=function(e){return this.throwIfDisposed(),Ip(this,e)},Os().prototype.oneHot=function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;return this.throwIfDisposed(),Tp(this,e,t,n)},Os().prototype.onesLike=function(){return this.throwIfDisposed(),Cp(this)},Os().prototype.pad=function(e,t){return this.throwIfDisposed(),$p(this,e,t)},Os().prototype.pool=function(e,t,n,a,r,s){return this.throwIfDisposed(),Op(this,e,t,n,a,r,s)},Os().prototype.pow=function(e){return this.throwIfDisposed(),Qo(this,e)},Os().prototype.prelu=function(e){return this.throwIfDisposed(),Mp(this,e)},Os().prototype.prod=function(e,t){return this.throwIfDisposed(),Lp(this,e,t)},Os().prototype.reciprocal=function(){return this.throwIfDisposed(),Jp(this)},Os().prototype.relu=function(){return this.throwIfDisposed(),ed(this)},Os().prototype.relu6=function(){return this.throwIfDisposed(),td(this)},Os().prototype.reshapeAs=function(e){return this.throwIfDisposed(),Tu(this,e.shape)},Os().prototype.reshape=function(e){return this.throwIfDisposed(),Tu(this,e)},Os().prototype.resizeBilinear=function(e,t,n){return this.throwIfDisposed(),Bh(this,e,t,n)},Os().prototype.resizeNearestNeighbor=function(e,t,n){return this.throwIfDisposed(),Wh(this,e,t,n)},Os().prototype.reverse=function(e){return this.throwIfDisposed(),nd(this,e)},Os().prototype.rfft=function(){return this.throwIfDisposed(),Sd(this)},Os().prototype.round=function(){return this.throwIfDisposed(),od(this)},Os().prototype.rsqrt=function(){return this.throwIfDisposed(),ld(this)},Os().prototype.selu=function(){return this.throwIfDisposed(),ud(this)},Os().prototype.separableConv2d=function(e,t,n,a,r,s){return this.throwIfDisposed(),cd(this,e,t,n,a,r,s)},Os().prototype.sigmoid=function(){return this.throwIfDisposed(),Au(this)},Os().prototype.sign=function(){return this.throwIfDisposed(),dd(this)},Os().prototype.sin=function(){return this.throwIfDisposed(),hd(this)},Os().prototype.sinh=function(){return this.throwIfDisposed(),fd(this)},Os().prototype.slice=function(e,t){return this.throwIfDisposed(),_u(this,e,t)},Os().prototype.softmax=function(e){return this.throwIfDisposed(),xd(this,e)},Os().prototype.softplus=function(){return this.throwIfDisposed(),tp(this)},Os().prototype.spaceToBatchND=function(e,t){return this.throwIfDisposed(),Dp(this,e,t)},Os().prototype.split=function(e,t){return this.throwIfDisposed(),Nd(this,e,t)},Os().prototype.sqrt=function(){return this.throwIfDisposed(),Lo(this)},Os().prototype.square=function(){return this.throwIfDisposed(),zo(this)},Os().prototype.squaredDifference=function(e){return this.throwIfDisposed(),Id(this,e)},Os().prototype.squeeze=function(e){return this.throwIfDisposed(),Td(this,e)},Os().prototype.stack=function(e,t){this.throwIfDisposed();const n=e instanceof Ds?[this,e]:[this,...e];return Cd(n,t)},Os().prototype.step=function(e){return this.throwIfDisposed(),Ed(this,e)},Os().prototype.stridedSlice=function(e,t,n,a,r,s,i,o){return this.throwIfDisposed(),$d(this,e,t,n,a,r,s,i,o)},Os().prototype.sub=function(e){return this.throwIfDisposed(),Zo(this,e)},Os().prototype.sum=function(e,t){return this.throwIfDisposed(),Rc(this,e,t)},Os().prototype.tan=function(){return this.throwIfDisposed(),Rd(this)},Os().prototype.tanh=function(){return this.throwIfDisposed(),Fu(this)},Os().prototype.tile=function(e){return this.throwIfDisposed(),Lc(this,e)},Os().prototype.toBool=function(){return this.throwIfDisposed(),Ro(this,"bool")},Os().prototype.toFloat=function(){return this.throwIfDisposed(),Ro(this,"float32")},Os().prototype.toInt=function(){return this.throwIfDisposed(),Ro(this,"int32")},Os().prototype.topk=function(e,t){return this.throwIfDisposed(),Bd(this,e,t)},Os().prototype.transpose=function(e){return this.throwIfDisposed(),Yd(this,e)},Os().prototype.unique=function(e){return this.throwIfDisposed(),Vd(this,e)},Os().prototype.unsortedSegmentSum=function(e,t){return this.throwIfDisposed(),Ud(this,e,t)},Os().prototype.unstack=function(e){return this.throwIfDisposed(),jd(this,e)},Os().prototype.where=function(e,t){return this.throwIfDisposed(),hc(e,this,t)},Os().prototype.zerosLike=function(){return this.throwIfDisposed(),Po(this)};class Gg extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Gg.prototype)}}class Hg extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Hg.prototype)}}class qg extends Error{constructor(e){super(e),Object.setPrototypeOf(this,qg.prototype)}}class Kg extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Kg.prototype)}}class Xg extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Xg.prototype)}}Error;class Yg{constructor(e){this.maxEntries=e||100,this.cache=new Map}get(e){let t;return this.cache.has(e)&&(t=this.cache.get(e),this.cache.delete(e),this.cache.set(e,t)),t}put(e,t){if(this.cache.has(e))this.cache.delete(e);else if(this.cache.size>=this.maxEntries){const e=this.cache.keys().next().value;this.cache.delete(e)}this.cache.set(e,t)}getMaxEntries(){return this.maxEntries}setMaxEntries(e){if(e<0)throw new Error(`The maxEntries of LRU caches must be at least 0, but got ${e}.`);if(this.maxEntries>e)for(let t=0;t<this.maxEntries-e;t++){const e=this.cache.keys().next().value;this.cache.delete(e)}this.maxEntries=e}}function Qg(e,t){if(Array.isArray(e)){let n=[];for(let a=0;a<t;a++)n=n.concat(e);return n}{const n=new Array(t);return n.fill(e),n}}function Zg(e,t){if(!e)throw new Xg(t)}function Jg(e,t){let n=0;for(const a of e)a===t&&n++;return n}function ey(e){return 1===e.length?e[0]:e}function ty(e){return Array.isArray(e)?e:[e]}function ny(e){const t=e.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return"_"!==t[0]?t:"private"+t}function ay(e){return e.length<=1||-1===e.indexOf("_")?e:e.replace(/[_]+(\w|$)/g,((e,t)=>t.toUpperCase()))}let ry={};function sy(e){if(null===e||void 0===e)return null;const t={};return t.className=e.getClassName(),t.config=e.getConfig(),t}function iy(e){if(null!=e&&"object"===typeof e)if(Array.isArray(e))e.forEach((e=>iy(e)));else{const t=Object.keys(e);for(const n of t){const t=e[n];null!=t&&"object"===typeof t&&(Array.isArray(t)||"ndarray"!==t.type||"number"!==typeof t.value?iy(t):e[n]=t.value)}}}function oy(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"object",r=arguments.length>4&&void 0!==arguments[4]&&arguments[4];if("string"===typeof e){const r=e;let s;if(r in n)s=n[r];else if(r in ry)s=ry[r];else if(s=t[r],null==s)throw new qg(`Unknown ${a}: ${e}. This may be due to one of the following reasons:\n1. The ${a} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${a} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return s}{const s=e;if(null==s.className||null==s.config)throw new qg(`${a}: Improper config format: ${JSON.stringify(s)}.\n'className' and 'config' must set.`);const i=s.className;let o,l;if(i in n?[o,l]=n[i]:i in ry?[o,l]=ry.className:i in t&&([o,l]=t[i]),null==o)throw new qg(`Unknown ${a}: ${i}. This may be due to one of the following reasons:\n1. The ${a} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${a} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(null!=l){const e={};for(const n of Object.keys(ry))e[n]=ry[n];for(const r of Object.keys(n))e[r]=n[r];s.config.customObjects=e;const t=Object.assign({},ry);for(const r of Object.keys(n))ry[r]=n[r];iy(s.config);const a=l(o,s.config,n,r);return ry=Object.assign({},t),a}{const e=Object.assign({},ry);for(const a of Object.keys(n))ry[a]=n[a];const t=new o(s.config);return ry=Object.assign({},e),t}}}function ly(e,t){return-1*function(e,t){return e<t?-1:e>t?1:0}(e,t)}function uy(e){if(null==e)return e;const t=[];for(const n of e)-1===t.indexOf(n)&&t.push(n);return t}function cy(e){if(null==e)throw new qg(`Invalid value in obj: ${JSON.stringify(e)}`);for(const t in e)if(e.hasOwnProperty(t))return!1;return!0}function py(e,t,n){if(null!=n&&e.indexOf(n)<0)throw new qg(`${n} is not a valid ${t}.  Valid values are ${e} or null/undefined.`)}function dy(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1/0;return Zg(n>=0),Zg(a>=n),Array.isArray(e)&&e.length>=n&&e.length<=a&&e.every((e=>typeof e===t))}function hy(e,t){Array.isArray(e)?(qe(e.length>0,(()=>`${t} is unexpectedly an empty array.`)),e.forEach(((e,n)=>hy(e,`element ${n+1} of ${t}`)))):qe(Number.isInteger(e)&&e>0,(()=>`Expected ${t} to be a positive integer, but got ${fy(e)}.`))}function fy(e){return null===e?"null":Array.isArray(e)?"["+e.map((e=>fy(e))).join(",")+"]":"string"===typeof e?`"${e}"`:`${e}`}function my(e){return"relu"===e?"relu":"linear"===e?"linear":"elu"===e?"elu":null}let gy=0;function yy(){return gy++}const by={};function xy(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";return e in by||(by[e]=0),by[e]+=1,e+by[e].toString()}const vy=["channelsFirst","channelsLast"],wy=["nearest","bilinear"],ky=["valid","same","causal"],Ny=["max","avg"],Sy=["sum","mul","concat","ave"],Iy=new Map;function Ty(e){py(vy,"DataFormat",e)}function Cy(e){py(ky,"PaddingMode",e)}function Ey(e){py(Ny,"PoolMode",e)}const $y=[];function Ry(e,t){$y.push(e);try{const e=t();return $y.pop(),e}catch(n){throw $y.pop(),n}}function Ay(e){if(!Dy(e))throw new Error("Not a valid tensor name: '"+e+"'");return(0===$y.length?"":$y.join("/")+"/")+e}function _y(e){if(!Dy(e))throw new Error("Not a valid tensor name: '"+e+"'");Iy.has(e)||Iy.set(e,0);const t=Iy.get(e);if(Iy.set(e,Iy.get(e)+1),t>0){const n=`${e}_${t}`;return Iy.set(n,1),n}return e}const Fy=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function Dy(e){return!!e.match(Fy)}function Oy(e,t,n){null==t&&(t=0),null==n&&(n=e.length);let a=1;for(let r=t;r<n;++r)a*=e[r];return a}function My(e){if(0===e.length)return Number.NaN;let t=Number.POSITIVE_INFINITY;for(let n=0;n<e.length;n++){const a=e[n];a<t&&(t=a)}return t}function Ly(e){if(0===e.length)return Number.NaN;let t=Number.NEGATIVE_INFINITY;for(let n=0;n<e.length;n++){const a=e[n];a>t&&(t=a)}return t}function zy(e,t){if(t<e)throw new qg(`end (${t}) < begin (${e}) is forbidden.`);const n=[];for(let a=e;a<t;++a)n.push(a);return n}let Py;function By(){return null==Py&&(Py=Ii().epsilon()),Py}function Wy(e,t){return Ro(e,t)}function Vy(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;const n=e.shape.slice();return t<0&&(t=n.length+t+1),n.splice(t,0,1),Tu(e,n)}function Uy(e,t,n){return wi((()=>{switch(e.rank){case 1:return md(e,t,n);case 2:return gd(e,[t,0],[n,e.shape[1]]);case 3:return yd(e,[t,0,0],[n,e.shape[1],e.shape[2]]);case 4:return bd(e,[t,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3]]);case 5:return _u(e,[t,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4]]);case 6:return _u(e,[t,0,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4],e.shape[5]]);default:throw new qg(`sliceAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function jy(e,t,n){return wi((()=>{switch(e.rank){case 1:return md(e,t,n);case 2:return gd(e,[0,t],[e.shape[0],n]);case 3:return yd(e,[0,0,t],[e.shape[0],e.shape[1],n]);case 4:return bd(e,[0,0,0,t],[e.shape[0],e.shape[1],e.shape[2],n]);default:throw new qg(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function Gy(e,t,n,a){return wi((()=>{switch(e.rank){case 1:return md(e,t,n);case 2:switch(a){case 1:return Uy(e,t,n);case 2:return jy(e,t,n);default:throw new qg(`The axis is not within the rank of the tensor ${a}`)}case 3:switch(a){case 1:return Uy(e,t,n);case 2:return yd(e,[0,t,0],[e.shape[0],n,e.shape[2]]);case 3:return jy(e,t,n);default:throw new qg(`The axis is not within the rank of the tensor ${a}`)}case 4:switch(a){case 1:return Uy(e,t,n);case 2:return bd(e,[0,t,0,0],[e.shape[0],n,e.shape[2],e.shape[3]]);case 3:return bd(e,[0,0,t,0],[e.shape[0],e.shape[1],n,e.shape[3]]);case 4:return jy(e,t,n);default:throw new qg(`The axis is not within the rank of the tensor ${a}`)}default:throw new qg(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function Hy(e){let t,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;return n<0&&(t=e[0].rank,n=0!==t?t:0),n===e[0].rank&&(n=-1),$u(e,n)}function qy(e,t){switch(e.rank){case 1:return Hu([e,t]);case 2:return qu([e,t],0);case 3:return Ku([e,t],0);case 4:return Xu([e,t],0);default:throw new qg(`concatAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}function Ky(e,t){if(Array.isArray(t)||(t=[t]),e.rank!==t.length)throw new qg(`The length of input n (${t.length}) does not match the number of dimensions in input x (${e.rank})`);return Lc(e,t)}function Xy(e){return qp(e,arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,arguments.length>3?arguments[3]:void 0,arguments.length>4?arguments[4]:void 0)}function Yy(e,t,n,a){if(e.rank<2||t.rank<2)throw new Kg(`dot requires both inputs to be rank >= 2 but got x shape = ${e.shape} and y shape = ${t.shape}`);if(t.rank>=3){if(e.shape.slice(-1)[0]!==t.shape.slice(-2)[0])throw new Kg(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${e.shape} and  y shape = ${t.shape}`)}if(2===e.rank&&2===t.rank){return fh({a:e,b:t,transposeA:!1,transposeB:!1,bias:a?Jy(e.rank,a,"channelsLast"):null,activation:n})}{const r=e.shape.slice(),s=r.pop();e=Tu(e,[-1,s]);const i=t.shape.slice(),o=i.pop(),l=i.pop(),u=[...i,o],c=Array.from({length:t.rank},((e,n)=>0===n?t.rank-2:n<=t.rank-2?n-1:n));t=Tu(Yd(t,c),[l,-1]);const p=[...r,...u];return Tu(fh({a:e,b:t,transposeA:!1,transposeB:!1,bias:a?Jy(e.rank,a,"channelsLast"):null,activation:n}),p)}}function Qy(e,t,n){return wi((()=>(t=Array.isArray(t)?Ad(t,"int32"):Ro(t,"int32"),Bc(e,t,n))))}function Zy(e){return Mo(e,e)}function Jy(e,t,n){const a=t.shape;if(1!==t.rank&&t.rank!==e)throw new qg(`Unexpected bias dimensions: ${t.rank}; expected it to be 1 or ${e}`);if(5===e){if("channelsFirst"===n)return 1===a.length?Tu(t,[1,a[0],1,1,1]):Tu(t,[1,a[3],a[0],a[1],a[2]]);if("channelsLast"===n)return 1===a.length?Tu(t,[1,1,1,1,a[0]]):Tu(t,[1].concat(a))}else if(4===e){if("channelsFirst"===n)return 1===a.length?Tu(t,[1,a[0],1,1]):Tu(t,[1,a[2],a[0],a[1]]);if("channelsLast"===n)return 1===a.length?Tu(t,[1,1,1,a[0]]):Tu(t,[1].concat(a))}else if(3===e){if("channelsFirst"===n)return 1===a.length?Tu(t,[1,a[0],1]):Tu(t,[1,a[1],a[0]]);if("channelsLast"===n)return 1===a.length?Tu(t,[1,1,a[0]]):Tu(t,[1].concat(a))}else if(e<3)return t;throw new qg(`Unsupported input rank by biasAdd: ${t.rank}`)}function eb(e,t,n){return wi((()=>(null==n&&(n="channelsLast"),Ty(n),Fo(e,Jy(e.rank,t,n)))))}function tb(e,t,n,a){return wi((()=>th(e,t,n,a)))}function nb(e,t){return arguments.length>2&&void 0!==arguments[2]&&arguments[2]?e():t()}const ab=["fanIn","fanOut","fanAvg"],rb=["normal","uniform","truncatedNormal"];class sb extends jo{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}}class ib extends sb{apply(e,t){return gp(e,t)}}ib.className="Zeros",Ho(ib);class ob extends sb{apply(e,t){return yp(e,t)}}ob.className="Ones",Ho(ob);class lb extends sb{constructor(e){if(super(),"object"!==typeof e)throw new qg(`Expected argument of type ConstantConfig but got ${e}`);if(void 0===e.value)throw new qg(`config must have value set but got ${e}`);this.value=e.value}apply(e,t){return wi((()=>Mo(Wo(this.value),yp(e,t))))}getConfig(){return{value:this.value}}}lb.className="Constant",Ho(lb);class ub extends sb{constructor(e){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=e.minval||this.DEFAULT_MINVAL,this.maxval=e.maxval||this.DEFAULT_MAXVAL,this.seed=e.seed}apply(e,t){return Xp(e,this.minval,this.maxval,t,this.seed)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}}ub.className="RandomUniform",Ho(ub);class cb extends sb{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new Kg(`randomNormal does not support dType ${t}.`);return Xy(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}cb.className="RandomNormal",Ho(cb);class pb extends sb{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new Kg(`truncatedNormal does not support dType ${t}.`);return Wd(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}pb.className="TruncatedNormal",Ho(pb);class db extends sb{constructor(e){super(),this.gain=null!=e.gain?e.gain:1}apply(e,t){return wi((()=>{if(2!==e.length||e[0]!==e[1])throw new qg("Identity matrix initializer can only be used for 2D square matrices.");return Mo(this.gain,zc(e[0]))}))}getConfig(){return{gain:this.gain}}}db.className="Identity",Ho(db);class hb extends sb{constructor(e){if(super(),e.scale<0)throw new qg(`scale must be a positive float. Got: ${e.scale}`);var t;this.scale=null==e.scale?1:e.scale,this.mode=null==e.mode?"fanIn":e.mode,t=this.mode,py(ab,"FanMode",t),this.distribution=null==e.distribution?"normal":e.distribution,function(e){py(rb,"Distribution",e)}(this.distribution),this.seed=e.seed}apply(e,t){const n=function(e){let t,n,a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"channelsLast";if(Ty(a),2===e.length)t=e[0],n=e[1];else if(-1!==[3,4,5].indexOf(e.length)){if("channelsFirst"===a){const a=Oy(e,2);t=e[1]*a,n=e[0]*a}else if("channelsLast"===a){const a=Oy(e,0,e.length-2);t=e[e.length-2]*a,n=e[e.length-1]*a}}else{const a=Oy(e);t=Math.sqrt(a),n=Math.sqrt(a)}return[t,n]}(e),a=n[0],r=n[1];let s=this.scale;if("fanIn"===this.mode?s/=Math.max(1,a):"fanOut"===this.mode?s/=Math.max(1,r):s/=Math.max(1,(a+r)/2),"normal"===this.distribution){const n=Math.sqrt(s);if("float32"!==(t=t||"float32")&&"int32"!==t)throw new Kg(`${this.getClassName()} does not support dType ${t}.`);return Wd(e,0,n,t,this.seed)}{const n=Math.sqrt(3*s);return Xp(e,-n,n,t,this.seed)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}}hb.className="VarianceScaling",Ho(hb);class fb extends hb{constructor(e){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return hb.className}}fb.className="GlorotUniform",Ho(fb);class mb extends hb{constructor(e){super({scale:1,mode:"fanAvg",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return hb.className}}mb.className="GlorotNormal",Ho(mb);class gb extends hb{constructor(e){super({scale:2,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return hb.className}}gb.className="HeNormal",Ho(gb);class yb extends hb{constructor(e){super({scale:2,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return hb.className}}yb.className="HeUniform",Ho(yb);class bb extends hb{constructor(e){super({scale:1,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return hb.className}}bb.className="LeCunNormal",Ho(bb);class xb extends hb{constructor(e){super({scale:1,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return hb.className}}xb.className="LeCunUniform",Ho(xb);class vb extends sb{constructor(e){super(),this.DEFAULT_GAIN=1,this.ELEMENTS_WARN_SLOW=2e3,this.gain=null==e.gain?this.DEFAULT_GAIN:e.gain,this.seed=e.seed}apply(e,t){return wi((()=>{if(e.length<2)throw new Kg("Shape must be at least 2D.");if("int32"!==t&&"float32"!==t&&void 0!==t)throw new TypeError(`Unsupported data type ${t}.`);const n=Ye(e.slice(0,-1)),a=e[e.length-1],r=n*a;r>this.ELEMENTS_WARN_SLOW&&console.warn(`Orthogonal initializer is being called on a matrix with more than ${this.ELEMENTS_WARN_SLOW} (${r}) elements: Slowness may result.`);const s=Xy([Math.max(a,n),Math.min(a,n)],0,1,t,this.seed),i=gf.qr(s,!1);let o=i[0];const l=i[1].flatten().stridedSlice([0],[Math.min(a,n)*Math.min(a,n)],[Math.min(a,n)+1]);return o=Mo(o,l.sign()),n<a&&(o=o.transpose()),Mo(Wo(this.gain),o.reshape(e))}))}getConfig(){return{gain:this.gain,seed:this.seed}}}vb.className="Orthogonal",Ho(vb);const wb={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function kb(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return oy(e,Go.getMap().classNameMap,t,"initializer")}function Nb(e){return sy(e)}function Sb(e){if("string"===typeof e){const t=e in wb?wb[e]:e;if("GlorotNormal"===t)return new mb;if("GlorotUniform"===t)return new fb;if("HeNormal"===t)return new gb;if("HeUniform"===t)return new yb;if("LeCunNormal"===t)return new bb;if("LeCunUniform"===t)return new xb;{const e={};return e.className=t,e.config={},kb(e)}}return e instanceof sb?e:kb(e)}function Ib(e){return Array.isArray(e)&&Array.isArray(e[0])}function Tb(e){return 0===e.length?[]:Array.isArray(e[0])?e:[e]}function Cb(e){let t;if(Array.isArray(e)){if(1!==e.length)throw new qg(`Expected Tensor length to be 1; got ${e.length}`);t=e[0]}else t=e;return t}function Eb(e){if(Array.isArray(e)&&Array.isArray(e[0])){if(1===e.length)return e[0];throw new qg(`Expected exactly 1 Shape; got ${e.length}`)}return e}function $b(e){let t=0;for(const n of e)0===n.shape.length?t+=1:t+=n.shape.reduce(((e,t)=>e*t));return t}const Rb="Variable";class Ab{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"float32",n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:Rb,a=!(arguments.length>3&&void 0!==arguments[3])||arguments[3],r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null;this.dtype=null==t?"float32":t,this.shape=e.shape,this.id=yy(),n=null==n?Rb:n,this.originalName=Ay(n),this.name=_y(this.originalName),this.trainable_=a,this.constraint=r,this.val=Hd(e,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(e){return this.assertNotDisposed(),function(e,t){if(e.shape.toString()!==t.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(e.shape)+" vs. "+JSON.stringify(t.shape))}(this.val,e),this.val.id!==e.id&&(this.val.assign(e),null!=this.constraint&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(e){this.trainable_=e,this.val.trainable=e}}function _b(e){return e.map((e=>e.read()))}function Fb(e){e.forEach((e=>{e[0].write(e[1])}))}class Db{constructor(e){this.dtype=e.dtype,this.shape=e.shape,null!=e.shape?this.ndim=e.shape.length:this.ndim=e.ndim,this.maxNDim=e.maxNDim,this.minNDim=e.minNDim,this.axes=e.axes||{}}}class Ob{constructor(e,t,n,a,r,s,i){this.dtype=e,this.shape=t,this.sourceLayer=n,this.inputs=a,this.callArgs=r,this.outputTensorIndex=i,this.id=yy(),null!=s&&(this.originalName=Ay(s),this.name=_y(this.originalName)),this.rank=t.length}}let Mb=0;class Lb{constructor(e,t){this.callArgs=t,this.id=Mb++,this.outboundLayer=e.outboundLayer,this.inboundLayers=e.inboundLayers,this.nodeIndices=e.nodeIndices,this.tensorIndices=e.tensorIndices,this.inputTensors=e.inputTensors,this.outputTensors=e.outputTensors,this.inputMasks=e.inputMasks,this.outputMasks=e.outputMasks,this.inputShapes=e.inputShapes,this.outputShapes=e.outputShapes;for(const n of e.inboundLayers)null!=n&&n.outboundNodes.push(this);e.outboundLayer.inboundNodes.push(this)}getConfig(){const e=[];for(const t of this.inboundLayers)null!=t?e.push(t.name):e.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:e,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}}let zb=0;class Pb extends jo{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=zb++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let t=e.name;if(!t){const e=this.getClassName();t=ny(e)+"_"+xy(e)}if(this.name=t,this.trainable_=null==e.trainable||e.trainable,null!=e.inputShape||null!=e.batchInputShape){let t;if(null!=e.batchInputShape)t=e.batchInputShape;else if(null!=e.inputShape){let n=null;null!=e.batchSize&&(n=e.batchSize),t=[n].concat(e.inputShape)}this.batchInputShape=t;let n=e.dtype;null==n&&(n=e.inputDType),null==n&&(n="float32"),this.dtype=n}null!=e.weights?this.initialWeights=e.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(e,t){return e.name+"_ib-"+t.toString()}getNodeAtIndex(e,t){if(0===this.inboundNodes.length)throw new Hg(`The layer has never been called and thus has no defined ${t}.`);if(this.inboundNodes.length<=e)throw new qg(`Asked to get ${t} at node ${e}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[e]}getInputAt(e){return ey(this.getNodeAtIndex(e,"input").inputTensors)}getOutputAt(e){return ey(this.getNodeAtIndex(e,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new Gg(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(0===this.inboundNodes.length)throw new Gg(`Layer ${this.name} is not connected, no input to return.`);return ey(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(0===this.inboundNodes.length)throw new Gg(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new Gg(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return ey(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map((e=>e()))}get updates(){return this._updates}get built(){return this._built}set built(e){this._built=e}get trainable(){return this.trainable_}set trainable(e){this._trainableWeights.forEach((t=>t.trainable=e)),this.trainable_=e}get trainableWeights(){return this.trainable_?this._trainableWeights.filter((e=>e.trainable)):[]}set trainableWeights(e){this._trainableWeights=e}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter((e=>!e.trainable)).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(e){this._nonTrainableWeights=e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(e){const t=ty(e);if(null==this.inputSpec||0===this.inputSpec.length)return;const n=ty(this.inputSpec);if(t.length!==n.length)throw new qg(`Layer ${this.name} expects ${n.length} inputs, but it received ${t.length} input tensors. Input received: ${e}`);for(let a=0;a<t.length;a++){const e=t[a],r=n[a];if(null==r)continue;const s=e.rank;if(null!=r.ndim&&s!==r.ndim)throw new qg(`Input ${a} is incompatible with layer ${this.name}: expected ndim=${r.ndim}, found ndim=${s}`);if(null!=r.maxNDim&&s>r.maxNDim)throw new qg(`Input ${a} is incompatible with layer ${this.name}: expected max_ndim=${r.maxNDim}, found ndim=${s}`);if(null!=r.minNDim&&s<r.minNDim)throw new qg(`Input ${a} is incompatible with layer ${this.name}: expected min_ndim=${r.minNDim}, found ndim=${s}.`);if(null!=r.dtype&&e.dtype!==r.dtype)throw new qg(`Input ${a} is incompatible with layer ${this.name} : expected dtype=${r.dtype}, found dtype=${e.dtype}.`);if(r.axes){const t=e.shape;for(const e in r.axes){const n=Number(e),s=r.axes[e],i=n>=0?t[n]:t[t.length+n];if(null!=s&&-1===[s,null].indexOf(i))throw new qg(`Input ${a} is incompatible with layer ${this.name}: expected axis ${n} of input shape to have value ${s} but got shape ${t}.`)}}if(null!=r.shape)for(let t=0;t<r.shape.length;++t){const n=r.shape[t],s=e.shape[t];if(null!=n&&null!=s&&n!==s)throw new qg(`Input ${a} is incompatible with layer ${this.name}: expected shape=${r.shape}, found shape=${e.shape}.`)}}}call(e,t){return e}invokeCallHook(e,t){null!=this._callHook&&this._callHook(e,t)}setCallHook(e){this._callHook=e}clearCallHook(){this._callHook=null}apply(e,t){t=t||{},this.assertNotDisposed();const n=ty(e),a=function(e){let t=!0;for(const n of ty(e))if(!(n instanceof Ob)){t=!1;break}return t}(e),r=function(e){let t=!0;for(const n of ty(e))if(n instanceof Ob){t=!1;break}return t}(e);if(a===r)throw new qg("Arguments to apply() must be all SymbolicTensors or all Tensors");return Ry(this.name,(()=>{if(!this.built){this.assertInputCompatibility(e);const t=[];for(const n of ty(e))t.push(n.shape);this.build(ey(t)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),null===this._refCount&&r&&(this._refCount=1)}if(this.assertInputCompatibility(e),r){let a=this.call(e,t);this.supportsMasking&&this.setMaskMetadata(e,a);const r=ty(a),s=[];for(let e of r)-1!==n.indexOf(e)&&(e=e.clone()),s.push(e);if(a=ey(s),null!=this.activityRegularizer)throw new Kg("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return a}{const n=function(e){e=ty(e);const t=[];for(const n of e)t.push(n.shape);return ey(t)}(e),a=this.computeOutputShape(n);let r;const s="float32";if(this.warnOnIncompatibleInputShape(Array.isArray(e)?n[0]:n),r=null!=a&&a.length>0&&Array.isArray(a[0])?a.map(((n,a)=>new Ob(s,n,this,ty(e),t,this.name,a))):new Ob(s,a,this,ty(e),t,this.name),this.addInboundNode(e,r,null,null,n,a,t),this._refCount++,null!=this.activityRegularizer)throw new Kg("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return r}}))}warnOnIncompatibleInputShape(e){if(null!=this.batchInputShape)if(e.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(e)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let t=!1;this.batchInputShape.forEach(((n,a)=>{null!=n&&null!=e[a]&&e[a]!==n&&(t=!0)})),t&&console.warn(`The shape of the input tensor (${JSON.stringify(e)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(null==this.inboundNodes||0===this.inboundNodes.length)throw new Gg(`The layer ${this.name} has never been called and thus has no defined output shape.`);const e=[];for(const t of this.inboundNodes){const n=JSON.stringify(t.outputShapes);-1===e.indexOf(n)&&e.push(n)}if(1===e.length){const e=this.inboundNodes[0].outputShapes;return Array.isArray(e)&&Array.isArray(e[0])&&1===e.length?e[0]:e}throw new Gg(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new Hg(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return $b(this.weights)}build(e){this.built=!0}getWeights(){return _b(arguments.length>0&&void 0!==arguments[0]&&arguments[0]?this.trainableWeights:this.weights)}setWeights(e){wi((()=>{const t=this.weights;if(t.length!==e.length)throw new qg(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${e.length}, but the layer was expecting ${t.length} weights. Provided weights: ${e}...`);if(0===t.length)return;const n=[],a=_b(t);for(let r=0;r<a.length;++r){const s=a[r],i=t[r],o=e[r];if(!Qe(s.shape,o.shape))throw new qg(`Layer weight shape ${s.shape} not compatible with provided weight shape ${o.shape}`);n.push([i,o])}Fb(n)}))}addWeight(e,t,n,a,r,s,i,o){if(-1!==this._addedWeightNames.indexOf(e))throw new qg(`Duplicate weight name ${e} for layer ${this.name}`);this._addedWeightNames.push(e),null==n&&(n="float32"),this.fastWeightInitDuringBuild&&(a=null!=o?o():Sb("zeros"));const l=a.apply(t,n),u=new Ab(l,n,e,s,i);return l.dispose(),null!=r&&this.addLoss((()=>r.apply(u.read()))),null==s&&(s=!0),s?this._trainableWeights.push(u):this._nonTrainableWeights.push(u),u}setFastWeightInitDuringBuild(e){this.fastWeightInitDuringBuild=e}addLoss(e){null==e||Array.isArray(e)&&0===e.length||(e=ty(e),void 0!==this._losses&&null!==this._losses&&this.losses.push(...e))}computeOutputShape(e){return e}computeMask(e,t){if(!this.supportsMasking){if(null!=t){if(!Array.isArray(t))throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);t.forEach((e=>{if(null!=e)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)}))}return null}return t}setMaskMetadata(e,t,n){if(!this.supportsMasking)return;const a=this.computeMask(e,n),r=ty(t),s=ty(a);if(r.length!==s.length)throw new Error(`${this.name} outputs ${r.length} tensors but ${r.length} masks for those tensors`);for(let i=0;i<r.length;i++)r[i].kerasMask=s[i]}addInboundNode(e,t,n,a,r,s){let i=arguments.length>6&&void 0!==arguments[6]?arguments[6]:null;const o=ty(e);t=ty(t),n=ty(n),a=ty(a),r=Tb(r),s=Tb(s);const l=[],u=[],c=[];for(const p of o)l.push(p.sourceLayer),u.push(p.nodeIndex),c.push(p.tensorIndex);new Lb({outboundLayer:this,inboundLayers:l,nodeIndices:u,tensorIndices:c,inputTensors:o,outputTensors:t,inputMasks:n,outputMasks:a,inputShapes:r,outputShapes:s},i);for(let p=0;p<t.length;p++)t[p].sourceLayer=this,t[p].nodeIndex=this.inboundNodes.length-1,t[p].tensorIndex=p}getConfig(){const e={name:this.name,trainable:this.trainable};return null!=this.batchInputShape&&(e.batchInputShape=this.batchInputShape),null!=this.dtype&&(e.dtype=this.dtype),e}disposeWeights(){return this.weights.forEach((e=>e.dispose())),this.weights.length}assertNotDisposed(){if(0===this._refCount)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(null===this._refCount)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let e=0;return 0===--this._refCount&&(e=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:e}}}function Bb(e,t,n){if((null==t||null!=n&&n>0)&&(t=e.sourceLayer,n=e.nodeIndex),0===t.inboundNodes.length)return[e];{const e=t.inboundNodes[n];if(0===e.inboundLayers.length)return e.inputTensors;{const t=[];for(let n=0;n<e.inboundLayers.length;n++){const a=Bb(e.inputTensors[n],e.inboundLayers[n],e.nodeIndices[n]);for(const e of a)-1===t.indexOf(e)&&t.push(e)}return t}}}class Wb extends Pb{constructor(e){if(super({dtype:e.dtype,name:null!=e.name?e.name:xy("input").toString()}),null==e.batchSize&&(e.batchSize=null),null==e.sparse&&(e.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=e.sparse,null!=e.inputShape&&null!=e.batchInputShape)throw new qg("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let t=e.batchInputShape;if(null==t){if(null==e.inputShape)throw new qg("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");t=[e.batchSize].concat(e.inputShape)}else if(null!=e.batchSize)throw new qg("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");const n=e.dtype||"float32";this.batchInputShape=t,this.dtype=n,this.inputSpec=[{shape:t}];const a=new Ob(this.dtype,this.batchInputShape,this,[],{},this.name);a.nodeIndex=0,a.tensorIndex=0,new Lb({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[a],outputTensors:[a],inputMasks:[null],outputMasks:[null],inputShapes:[t],outputShapes:[t]})}apply(e,t){throw new qg(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}}Wb.className="InputLayer",Ho(Wb);class Vb{constructor(e){if(this.id2Value={},this.id2Mask={},this.name2Id={},e instanceof Vb)for(const t in e.id2Value)this.id2Value[t]=e.id2Value[t],t in e.id2Mask&&(this.id2Mask[t]=e.id2Mask[t]);else{if(null==e)return;for(const t of e)this.add(t.key,t.value)}}add(e,t,n){if(null!=this.id2Value[e.id])throw new qg(`Duplicate key: name=${e.name}, id=${e.id}`);return this.id2Value[e.id]=function(e,t){if(null==e.dtype||e.dtype===t.dtype)return t;try{return Ro(t,e.dtype)}catch(JB){throw new qg(`The dtype of the feed (${t.dtype}) can not be cast to the dtype of the key '${e.name}' (${e.dtype}).`)}}(e,t),this.name2Id[e.name]=e.id,null!=n&&(this.id2Mask[e.id]=n),this}addFeed(e){this.add(e.key,e.value)}hasKey(e){return null!=this.id2Value[e.id]}names(){return Object.keys(this.name2Id)}getValue(e){if(e instanceof Ob){if(null==this.id2Value[e.id])throw new qg(`Nonexistent key: ${e.name}`);return this.id2Value[e.id]}{const t=this.name2Id[e];if(null==t)throw new qg(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Value[t]}}getMask(e){if(e instanceof Ob){if(null==this.id2Value[e.id])throw new qg(`Nonexistent key: ${e.name}`);return this.id2Mask[e.id]}{const t=this.name2Id[e];if(null==t)throw new qg(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Mask[t]}}disposeMasks(){null!=this.id2Mask&&ki(this.id2Mask)}}const Ub=new Yg,jb=new Yg;function Gb(e,t,n,a){const r=null!=n&&n.training,s=Array.isArray(e),i=s?e:[e],o=i.map((e=>e.name)),l=[],u=t.names();for(const f of o)-1!==u.indexOf(f)?l.push(t.getValue(f)):l.push(null);null!=a&&(a.maxNumTensors=-1/0,a.minNumTensors=1/0);const c=o.join(",")+"|"+t.names().sort().join(",");let p,d=Ub.get(c);if(null==d){const e=function(e,t){qe(null!=e&&e.length>0,(()=>"Expected at least one fetch, got none"));let n=[],a={};if(1===e.length){const r=qb(e[0],t);n=r.sorted,a=r.recipientMap}else{const r=new Set;for(const s of e){const{sorted:e,recipientMap:i}=qb(s,t);for(const t of e)r.has(t.name)||(n.push(t),r.add(t.name));for(const t in i)null==a[t]&&(a[t]=new Set),i[t].forEach((e=>a[t].add(e)))}}return{sorted:n,recipientCounts:Hb(a)}}(i,t);d=e.sorted,p=e.recipientCounts,Ub.put(c,d),jb.put(c,p)}p={},r||Object.assign(p,jb.get(c));const h=new Vb(t);for(let f=0;f<d.length;++f){if(null!=a){const e=vi().numTensors;e>a.maxNumTensors&&(a.maxNumTensors=e),e<a.minNumTensors&&(a.minNumTensors=e)}const e=d[f],s=e.sourceLayer;if(s instanceof Wb)continue;const i=[],u=[],c=[];let m=!1;for(const n of e.inputs){const e=h.getValue(n),a=h.getMask(n);i.push(e),u.push(a),null!=a&&(m=!0),r||(p[n.name]--,0!==p[n.name]||t.hasKey(n)||-1!==o.indexOf(n.name)||e.isDisposed||!0===n.sourceLayer.stateful||c.push(e))}m&&((n=n||{}).mask=u[0]);const g=ty(s.apply(i,n));let y=null;s.supportsMasking&&(y=s.computeMask(i,u));const b=Kb(e),x=Array.isArray(b)?b:[b];for(let t=0;t<x.length;++t){h.hasKey(x[t])||h.add(x[t],g[t],Array.isArray(y)?y[0]:y);const e=o.indexOf(x[t].name);-1!==e&&(l[e]=g[t])}r||ki(c)}return h.disposeMasks(),s?l:l[0]}function Hb(e){const t={};for(const n in e)t[n]=e[n].size;return t}function qb(e,t){const n=new Set,a=[],r={};for(const o of t.names())n.add(o);const s=[],i=[];for(s.push(e);s.length>0;){const e=s[s.length-1];if(n.has(e.name)){s.pop();continue}const t=i[i.length-1]===s.length-1;if(0===e.inputs.length||t)s.pop(),a.push(e),n.add(e.name),t&&i.pop();else{i.push(s.length-1);for(const t of e.inputs)null==r[t.name]&&(r[t.name]=new Set),r[t.name].add(e.name),n.has(t.name)||s.push(t)}}return{sorted:a,recipientMap:r}}function Kb(e){let t;if(1===e.sourceLayer.inboundNodes.length)t=e.sourceLayer.output;else{let n=null;for(let t=0;t<e.sourceLayer.inboundNodes.length;++t)for(const a of e.sourceLayer.inboundNodes[t].outputTensors)if(a.id===e.id){n=t;break}t=e.sourceLayer.getOutputAt(n)}return t}function Xb(e,t){return wi((()=>Lo(Rc(Mo(e,e),t,!0))))}Ct().registerFlag("TOPOLOGICAL_SORT_CACHE_MAX_ENTRIES",(()=>100),(function(e){null!=Ub&&Ub.setMaxEntries(e),null!=jb&&jb.setMaxEntries(e)}));class Yb extends jo{getConfig(){return{}}}class Qb extends Yb{constructor(e){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return wi((()=>{const t=Xb(e,this.axis),n=Gu(t,0,this.maxValue);return Mo(e,Oo(n,Fo(By(),t)))}))}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}}Qb.className="MaxNorm",Ho(Qb);class Zb extends Yb{constructor(e){super(),this.defaultAxis=0,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return wi((()=>Oo(e,Fo(By(),Xb(e,this.axis)))))}getConfig(){return{axis:this.axis}}}Zb.className="UnitNorm",Ho(Zb);class Jb extends Yb{apply(e){return ed(e)}}Jb.className="NonNeg",Ho(Jb);class ex extends Yb{constructor(e){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=null!=e.minValue?e.minValue:this.defaultMinValue,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.rate=null!=e.rate?e.rate:this.defaultRate,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return wi((()=>{const t=Xb(e,this.axis),n=Fo(Mo(this.rate,Gu(t,this.minValue,this.maxValue)),Mo(1-this.rate,t));return Mo(e,Oo(n,Fo(By(),t)))}))}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}}ex.className="MinMaxNorm",Ho(ex);const tx={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function nx(e){return sy(e)}function ax(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return oy(e,Go.getMap().classNameMap,t,"constraint")}function rx(e){if(null==e)return null;if("string"===typeof e){return ax({className:e in tx?tx[e]:e,config:{}})}return e instanceof Yb?e:ax(e)}async function sx(e){if(null==e)return;const t=[],n=[],a=[];for(const r in e){const s=e[r];if("number"!==typeof s){const e=s;t.push(e.data()),n.push(r),a.push(e)}}if(t.length>0){const r=await Promise.all(t);for(let t=0;t<r.length;++t)e[n[t]]=r[t][0];ki(a)}}function ix(e){if(null!=e)for(const t in e){const n=e[t];"number"!==typeof n&&n.dispose()}}var ox;!function(e){e[e.SILENT=0]="SILENT",e[e.VERBOSE=1]="VERBOSE"}(ox||(ox={}));class lx{constructor(){this.validationData=null}setParams(e){this.params=e}async onEpochBegin(e,t){}async onEpochEnd(e,t){}async onBatchBegin(e,t){}async onBatchEnd(e,t){}async onTrainBegin(e){}async onTrainEnd(e){}setModel(e){}}class ux{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:10;null==e&&(e=[]),this.callbacks=e,this.queueLength=t}append(e){this.callbacks.push(e)}setParams(e){for(const t of this.callbacks)t.setParams(e)}setModel(e){for(const t of this.callbacks)t.setModel(e)}async onEpochBegin(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onEpochBegin(e,t)}async onEpochEnd(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onEpochEnd(e,t)}async onBatchBegin(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onBatchBegin(e,t)}async onBatchEnd(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onBatchEnd(e,t)}async onTrainBegin(e){null==e&&(e={});for(const t of this.callbacks)await t.onTrainBegin(e)}async onTrainEnd(e){null==e&&(e={});for(const t of this.callbacks)await t.onTrainEnd(e)}}class cx extends lx{constructor(){super()}async onEpochBegin(e){this.seen=0,this.totals={}}async onBatchEnd(e,t){null==t&&(t={});const n=null==t.size?0:t.size;this.seen+=n;for(const a in t){const e=t[a];if("number"===typeof e)this.totals.hasOwnProperty(a)||(this.totals[a]=0),this.totals[a]=this.totals[a]+e*n;else{let t;a in this.totals?t=this.totals[a]:this.totals[a]=0;const r=wi((()=>Fo(this.totals[a],Mo(e,n))));this.totals[a]=r,null!=t&&t.dispose()}}}async onEpochEnd(e,t){if(null!=t)for(const n of this.params.metrics)null!=this.totals[n]&&("number"===typeof this.totals[n]?t[n]=this.totals[n]/this.seen:wi((()=>{const e=Mo(Oo(1,this.seen),this.totals[n]);t[n]=e,this.totals[n].dispose(),Ni(t[n])})))}}class px extends lx{async onTrainBegin(e){this.epoch=[],this.history={}}async onEpochEnd(e,t){null==t&&(t={}),this.epoch.push(e);for(const n in t)null==this.history[n]&&(this.history[n]=[]),this.history[n].push(t[n])}async syncData(){const e=[],t=[],n=[];for(const r in this.history){const a=this.history[r];for(let s=0;s<a.length;++s)if("number"!==typeof a[s]){const i=a[s];e.push(i.data()),t.push(r),n.push(s)}}const a=await Promise.all(e);for(let r=0;r<a.length;++r){this.history[t[r]][n[r]].dispose(),this.history[t[r]][n[r]]=a[r][0]}}}class dx extends lx{constructor(e,t){if(super(),this.currentEpoch=0,this.nowFunc=e.nowFunc,this.nextFrameFunc=e.nextFrameFunc||kf,this.yieldEvery=t||"auto","auto"===this.yieldEvery&&(this.yieldEvery=125),"never"===this.yieldEvery&&null!=e.onYield)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");ct(this.yieldEvery)&&(this.maybeWait=function(e,t,n){let a,r=null!=n?n():ys();return function(){const s=null!=n?n():ys();return s-r<t||(r=s,a=e(...arguments)),a}}(this.maybeWait.bind(this),this.yieldEvery,this.nowFunc)),this.trainBegin=e.onTrainBegin,this.trainEnd=e.onTrainEnd,this.epochBegin=e.onEpochBegin,this.epochEnd=e.onEpochEnd,this.batchBegin=e.onBatchBegin,this.batchEnd=e.onBatchEnd,this.yield=e.onYield}async maybeWait(e,t,n){const a=[];null!=this.yield&&(await sx(n),a.push(this.yield(e,t,n))),a.push(this.nextFrameFunc()),await Promise.all(a)}async onEpochBegin(e,t){this.currentEpoch=e,null!=this.epochBegin&&(await sx(t),await this.epochBegin(e,t))}async onEpochEnd(e,t){const n=[];null!=this.epochEnd&&(await sx(t),n.push(this.epochEnd(e,t))),"epoch"===this.yieldEvery&&n.push(this.nextFrameFunc()),await Promise.all(n)}async onBatchBegin(e,t){null!=this.batchBegin&&(await sx(t),await this.batchBegin(e,t))}async onBatchEnd(e,t){const n=[];null!=this.batchEnd&&(await sx(t),n.push(this.batchEnd(e,t))),"batch"===this.yieldEvery?n.push(this.nextFrameFunc()):ct(this.yieldEvery)&&n.push(this.maybeWait(this.currentEpoch,e,t)),await Promise.all(n)}async onTrainBegin(e){null!=this.trainBegin&&(await sx(e),await this.trainBegin(e))}async onTrainEnd(e){null!=this.trainEnd&&(await sx(e),await this.trainEnd(e))}}function hx(e,t){if(null==e&&(e={}),e instanceof lx)return[e];if(Array.isArray(e)&&e[0]instanceof lx)return e;return ty(e).map((e=>new dx(e,t)))}class fx{constructor(){}static registerCallbackConstructor(e,t){qe(e>=0&&Number.isInteger(e),(()=>`Verbosity level is expected to be an integer >= 0, but got ${e}`)),fx.checkForDuplicate(t),null==fx.constructors[e]&&(fx.constructors[e]=[]),fx.constructors[e].push(t)}static checkForDuplicate(e){for(const t in fx.constructors){fx.constructors[+t].forEach((t=>{if(t===e)throw new qg("Duplicate callback constructor.")}))}}static clear(){fx.constructors={}}static createCallbacks(e){const t=[];for(const n in fx.constructors){const a=+n;e>=a&&t.push(...fx.constructors[a])}return t.map((e=>new e))}}function mx(e,t,n,a,r,s,i,o,l){const u=new px,c=[new cx,...fx.createCallbacks(t)];null!=e&&c.push(...e),c.push(u);const p=new ux(c);return p.setParams({epochs:n,initialEpoch:a,samples:r,steps:s,batchSize:i,verbose:t,doValidation:o,metrics:l}),{callbackList:p,history:u}}function gx(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];return oy(e,Go.getMap().classNameMap,t,"layer",n)}function yx(e,t){return wi((()=>{"float32"!==e.dtype&&(e=Ro(e,"float32"));const n=Rc(Zy(e),t,!0),a=Xo(n.shape,By()),r=Lo(rl(n,a));return Oo(e,r)}))}function bx(e,t){return wi((()=>mp(Zy(Zo(t,e)),-1)))}function xx(e,t){return wi((()=>mp(el(Zo(t,e)),-1)))}function vx(e,t){return wi((()=>{const n=Zo(e,t),a=Gu(el(e),By(),Number.MAX_VALUE),r=el(Oo(n,a));return Mo(100,mp(r,-1))}))}function wx(e,t){return wi((()=>{const n=Gu(t,By(),Number.MAX_VALUE),a=Zc(Fo(1,n)),r=Gu(e,By(),Number.MAX_VALUE),s=Zc(Fo(1,r));return mp(Zy(Zo(a,s)),-1)}))}function kx(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];return wi((()=>{if(n)t=xd(t);else{const e=Rc(t,t.shape.length-1,!0);t=Oo(t,e)}return t=Gu(t,By(),1-By()),ep(Rc(Mo(Ro(e,"float32"),Zc(t)),t.shape.length-1))}))}function Nx(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];return wi((()=>{const a=Ro(Pc(function(e){const t=[Oy(e.shape)];return Tu(e,t)}(e)),"int32"),r=(t=Gu(t,By(),1-By())).shape;return kx(Tu(Tp(a,r[r.length-1]),r),t,n)}))}function Sx(e,t){return wi((()=>{let n;return n=Gu(t,By(),1-By()),n=Zc(Oo(n,Zo(1,n))),mp(function(e,t){if(!Qe(e.shape,t.shape))throw new qg(`logits and labels must have the same shape, but got shapes ${JSON.stringify(e.shape)} and ${JSON.stringify(t.shape)}`);return wi((()=>{const n=ed(t),a=ep(el(t));return Fo(Zo(n,Mo(t,e)),Jc(Dc(a)))}))}(e,n),-1)}))}function Ix(e,t){return wi((()=>{const n=Gu(e,By(),1),a=Gu(t,By(),1);return Rc(Mo(e,Zc(Oo(n,a))),-1)}))}function Tx(e,t){return wi((()=>{const n=yx(e,-1),a=yx(t,-1),r=Mo(n,a);return ep(Rc(r,-1))}))}fx.constructors={};const Cx={meanSquaredError:bx,meanAbsoluteError:xx,meanAbsolutePercentageError:vx,meanSquaredLogarithmicError:wx,squaredHinge:function(e,t){return wi((()=>{const n=rl(0,Zo(1,Mo(e,t)));return mp(Zy(n),-1)}))},hinge:function(e,t){return wi((()=>{const n=rl(0,Zo(1,Mo(e,t)));return mp(n,-1)}))},categoricalHinge:function(e,t){return wi((()=>{const n=Rc(Mo(e,t),-1),a=Ec(Mo(Zo(1,e),t),-1);return rl(0,Fo(1,Zo(a,n)))}))},logcosh:function(e,t){return wi((()=>{const n=Math.log(2),a=Zo(t,e),r=Zo(Fo(a,tp(Mo(-2,a))),n);return mp(r,-1)}))},categoricalCrossentropy:kx,sparseCategoricalCrossentropy:Nx,binaryCrossentropy:Sx,kullbackLeiblerDivergence:Ix,poisson:function(e,t){return wi((()=>{const n=Zc(Fo(By(),t));return mp(Zo(t,Mo(e,n)),-1)}))},cosineProximity:Tx};function Ex(e){if("string"===typeof e){if(e in Cx)return Cx[e];let t=`Unknown loss ${e}`;throw e.toLowerCase().includes("softmaxcrossentropy")&&(t=`Unknown loss ${e}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new qg(t)}return e}function $x(e,t){return wi((()=>{const n=Mo(.5,Cp(t)),a=Wy(Wc(t,n),e.dtype);return mp(dc(e,a),-1)}))}function Rx(e,t){return wi((()=>Wy(dc(ru(e,-1),ru(t,-1)),"float32")))}function Ax(e,t){return wi((()=>Ro(Rc(sp(dc(e,1),dc(t,1))),"float32")))}function _x(e,t){return Sx(e,t)}function Fx(e,t){return e.rank===t.rank&&(e=Td(e,[e.rank-1])),(t=ru(t,-1)).dtype!==e.dtype&&(t=Ro(t,e.dtype)),Ro(dc(e,t),"float32")}const Dx=kx,Ox=Nx,Mx={binaryAccuracy:$x,categoricalAccuracy:Rx,precision:function(e,t){return wi((()=>{const n=Ax(e,t),a=function(e,t){return wi((()=>Ro(Rc(sp(dc(e,0),dc(t,1))),"float32")))}(e,t),r=Fo(n,a);return Ro(hc(Wc(r,0),Oo(n,r),0),"float32")}))},categoricalCrossentropy:Dx,sparseCategoricalCrossentropy:Ox,mse:bx,MSE:bx,mae:xx,MAE:xx,mape:vx,MAPE:vx,cosine:Tx};function Lx(e){if("string"===typeof e&&e in Mx)return Mx[e];if("string"!==typeof e&&null!=e)return e;throw new qg(`Unknown metric ${e}`)}function zx(e){if(Zg(null!==e,`Unknown LossOrMetricFn ${e}`),"string"===typeof e)return e;{let t;for(const n of Object.keys(Cx))if(Cx[n]===e){t=n;break}if(void 0!==t)return t;for(const n of Object.keys(Mx))if(Mx[n]===e){t=n;break}return void 0!==t?t:e.name}}const Px=1048576;function Bx(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];if(null==e||"object"!==typeof e||Object.getPrototypeOf(e)!==Object.prototype||!Wx(e))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(n){const n=JSON.stringify(e);n.length>Px&&console.warn(`User-defined metadata of model "${t}" is too large in size (length=${n.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= 1048576.`)}}function Wx(e){if(null===e)return!0;if("object"===typeof e){if(Object.getPrototypeOf(e)===Object.prototype){const t=Object.keys(e);for(const n of t){if("string"!==typeof n)return!1;if(!Wx(e[n]))return!1}return!0}if(Array.isArray(e)){for(const t of e)if(!Wx(t))return!1;return!0}return!1}{const t=typeof e;return"string"===t||"number"===t||"boolean"===t}}function Vx(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:console.log;const r=function(e){let t=!0;const n=[],a=[];for(const r in e.nodesByDepth)n.push(e.nodesByDepth[r]);for(const r of n){if(r.length>1||1===r.length&&r[0].inboundLayers.length>1){t=!1;break}a.push(...r)}if(t)for(const r of e.layers){let e=!1;for(const n of r.inboundNodes)if(-1!==a.indexOf(n)){if(e){t=!1;break}e=!0}if(!t)break}return t}(e),s=["Layer (type)","Input Shape","Output shape","Param #"];let i;if(r?(t=t||90,n=n||[.32,.61,.89,1]):(t=t||115,n=n||[.24,.48,.7,.8,1]),n[n.length-1]<=1&&(n=n.map((e=>Math.floor(t*e)))),!r){s.push("Receives inputs"),i=[];for(const t in e.nodesByDepth)i.push(...e.nodesByDepth[t])}a("_".repeat(t)),Ux(s,n,a),a("=".repeat(t));const o=e.layers;for(let c=0;c<o.length;++c)r?jx(o[c],n,a):Gx(o[c],n,i,a),a((c===o.length-1?"=":"_").repeat(t));e.checkTrainableWeightsConsistency();const l=function(e){let t;t=null!=e.collectedTrainableWeights?$b(e.collectedTrainableWeights):$b(e.trainableWeights);return t}(e),u=$b(e.nonTrainableWeights);a(`Total params: ${l+u}`),a(`Trainable params: ${l}`),a(`Non-trainable params: ${u}`),a("_".repeat(t))}function Ux(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:console.log,a="";for(let r=0;r<e.length;++r)r>0&&(a=a.slice(0,a.length-1)+" "),a+=e[r],a=a.slice(0,t[r]),a+=" ".repeat(t[r]-a.length);n(a)}function jx(e,t,n){let a,r;try{r=e.inboundNodes.map((e=>JSON.stringify(e.inputShapes))).join(",")}catch(JB){r="multiple"}try{a=JSON.stringify(e.outputShape)}catch(JB){a="multiple"}Ux([`${e.name} (${e.getClassName()})`,r,a,e.countParams().toString()],t,n)}function Gx(e,t,n,a){let r,s;try{s=e.inboundNodes.map((e=>JSON.stringify(e.inputShapes))).join(",")}catch(JB){s="multiple"}try{r=JSON.stringify(e.outputShape)}catch(JB){r="multiple"}const i=[];for(const c of e.inboundNodes)if(!(null!=n&&n.length>0&&-1===n.indexOf(c)))for(let e=0;e<c.inboundLayers.length;++e){const t=c.inboundLayers[e].name,n=c.nodeIndices[e],a=c.tensorIndices[e];i.push(`${t}[${n}][${a}]`)}const o=e.name,l=e.getClassName(),u=0===i.length?"":i[0];Ux([`${o} (${l})`,s,r,e.countParams().toString(),u],t,a);for(let c=1;c<i.length;++c)Ux(["","","","",i[c]],t,a)}function Hx(e,t,n){return("inboundNodes"===e||"outputLayers"===e||"inputLayers"===e)&&0===t&&"string"===typeof n}function qx(e,t){if(null===e)return null;if("string"===typeof e)return ay(e);if("number"===typeof e||"boolean"===typeof e)return e;if(e instanceof Array){const n=[],a=e.length;for(let r=0;r<a;++r){const a=e[r];Hx(t,r,a)?n.push(a):n.push(qx(a,t))}return n}{const t={};for(const n of Object.keys(e)){const a=e[n];if("name"===n&&"string"===typeof a)t[n]=a;else{const e=ay(n);t[e]=qx(a,e)}}return t}}function Kx(e,t){if(null===e||void 0===e)return null;if("string"===typeof e)return ny(e);if("number"===typeof e||"boolean"===typeof e)return e;if(e instanceof Array){const n=[],a=e.length;for(let r=0;r<a;++r){const a=e[r];Hx(t,r,a)?n.push(a):n.push(Kx(a,t))}return n}{const t={};for(const n of Object.keys(e)){const a=e[n],r=ny(n);t[r]="name"!==n&&"className"!==n||"string"!==typeof a?Kx(a,n):a}return t}}const Xx="4.22.0";class Yx extends Pb{constructor(e){if(super({}),this.containerNodes=new Set,this.name=e.name,null==this.name){const e=this.getClassName().toLowerCase();this.name=xy(e)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(e.inputs)?this.inputs=e.inputs.slice():this.inputs=[e.inputs],Array.isArray(e.outputs)?this.outputs=e.outputs.slice():this.outputs=[e.outputs],uy(this.inputs).length!==this.inputs.length)throw new qg(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map((e=>e.name))}`);uy(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map((e=>e.name))}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(const y of this.outputs){const e=y.sourceLayer,t=y.nodeIndex,n=y.tensorIndex;this.outputLayers.push(e),this.outputLayersNodeIndices.push(t),this.outputLayersTensorIndices.push(n)}for(const y of this.inputs){const e=y.sourceLayer,t=y.nodeIndex,n=y.tensorIndex;Zg(0===t,"input layer has >1 nodes"),Zg(0===n,"input layer has >1 tensors"),this.inputLayers.push(e),this.inputLayersNodeIndices.push(t),this.inputLayersTensorIndices.push(n)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let y=0;y<this.inputLayers.length;y++){const t=this.inputLayers[y];if(!(t instanceof Wb))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${e.inputs}. Input ${y} (0-based) originates from layer type ${t.getClassName()}.`);this.inputNames.push(t.name),this.feedInputShapes.push(t.batchInputShape),this.feedInputNames.push(t.name)}for(const y of this.outputLayers)this.outputNames.push(y.name);this.internalInputShapes=this.inputs.map((e=>e.shape)),this.internalOutputShapes=this.outputs.map((e=>e.shape));const t={},n={},a={},r={},s={},i=[],o=(e,t,n,a,r,l)=>{null!=a&&null!=r&&null!=l||(a=e.sourceLayer,r=e.nodeIndex,l=e.tensorIndex);const u=a.inboundNodes[r];if(-1!==n.indexOf(u))throw new Hg(`The tensor ${e.name} at layer "${a.name}" is part of a cycle.`);if(-1!==t.indexOf(u))return;this.containerNodes.add(Yx.nodeKey(a,r)),a.id in s||(s[a.id]=Object.keys(s).length),-1===n.indexOf(u)&&n.push(u);const c=u.inboundLayers.length;for(let s=0;s<c;s++){const e=u.inputTensors[s],a=u.inboundLayers[s],r=u.nodeIndices[s],i=u.tensorIndices[s];o(e,t,n,a,r,i)}for(t.push(u);n.indexOf(u)>=0;)n.splice(n.indexOf(u),1);i.push(u)},l=[],u=[];for(const y of this.outputs)o(y,l,u);const c=i.slice().reverse();for(const y of c){n[y.id]=y,y.id in t||(t[y.id]=0);let e=t[y.id];const s=null==a[y.outboundLayer.id]?0:a[y.outboundLayer.id];e=Math.max(e,s),a[y.outboundLayer.id]=e,r[y.outboundLayer.id]=y.outboundLayer,t[y.id]=e;for(let a=0;a<y.inboundLayers.length;a++){const r=y.inboundLayers[a],s=y.nodeIndices[a],i=r.inboundNodes[s],o=null==t[i.id]?0:t[i.id];t[i.id]=Math.max(e+1,o),n[i.id]=i}}const p={};for(const y in t){const e=t[y];e in p||(p[e]=[]),p[e].push(n[y])}const d={};for(const y in a){const e=a[y];e in d||(d[e]=[]),d[e].push(r[y])}let h=Object.keys(d).map((e=>parseInt(e,10))).sort(ly);this.layers=[];for(const y of h){const e=d[y];e.sort(((e,t)=>{const n=s[e.id],a=s[t.id];return n<a?-1:n>a?1:0}));for(const t of e)t instanceof Yx&&this.internalContainerRefs.push(t),this.layers.push(t)}this.layersByDepth=d,h=Object.keys(p).map((e=>parseInt(e,10))).sort(ly);const f=this.inputs.slice(),m=[];for(const y of h)for(const e of p[y]){const t=e.outboundLayer;if(null!=t){for(const n of e.inputTensors)if(-1===f.indexOf(n))throw new Hg(`Graph disconnected: cannot obtain value for tensor ${n} at layer "${t.name}". The following previous layers were accessed without issue: ${m}`);for(const t of e.outputTensors)f.push(t);m.push(t.name)}}this.nodesByDepth=p;const g=this.layers.map((e=>e.name));for(const y of g){const e=g.filter((e=>e===y)).length;if(1!==e)throw new Hg(`The name "${y}" is used ${e} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(g))}this.outboundNodes=[],this.inboundNodes=[],new Lb({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map((e=>null)),outputMasks:this.outputs.map((e=>null)),inputShapes:this.inputs.map((e=>e.shape)),outputShapes:this.outputs.map((e=>e.shape))}),this.built=!0,this._refCount=1}assertNotDisposed(){if(0===this._refCount)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();const e={refCountAfterDispose:null,numDisposedVariables:0};if(0===--this._refCount){for(const t of this.layers)e.numDisposedVariables+=t.dispose().numDisposedVariables;for(const t of this.internalContainerRefs)e.numDisposedVariables+=t.dispose().numDisposedVariables}return e.refCountAfterDispose=this._refCount,e}get trainable(){return this.trainable_}set trainable(e){this.layers.forEach((t=>{t._trainableWeights.forEach((t=>t.trainable=e))})),this.trainable_=e}get trainableWeights(){if(this._trainableWeights.length>0)throw new qg("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let e=[];for(const t of this.layers)e=e.concat(t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.layers)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const e of this.layers)t.push(...e.trainableWeights);return t.concat(e)}return e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];const n={};let a=0;const r=(e=>{const t=Object.keys(e);if(0===t.length)return!1;const n=t[0].split("/");return!isNaN(parseInt(n[n.length-1],10))})(e);r&&this.parseWeights(e);for(const i of this.layers)for(const[e,t]of i.weights.entries()){const s=r?`${t.name.split("/").slice(0,-1).join("/")+"/"}${e}`:t.originalName;if(null!=n[s])throw new qg(`Duplicate weight name: ${s}`);n[s]=t,a++}const s=[];for(const i in e){let a=i;if(null==n[i]){const e=i.split("/");a=e.slice(0,-2).concat([e[e.length-1]]).join("/")}if(null!=n[a])s.push([n[a],e[i]]);else if(t)throw new qg(`Provided weight data has no target variable: ${i}`);delete n[a]}if(t){const e=[];for(const t in n)e.push(t);if(e.length>0)throw new qg(`${e.length} of ${a} weights are not set: ${e}`)}Fb(s)}parseWeights(e){for(const t in Object.keys(e)){const n=t.split("/"),a=["vars","layer_checkpoint_dependencies"],r=n.map((e=>e.startsWith("_")?e.slice(1):e)).filter((e=>!a.includes(e))).join("/");r!==t&&(e[r]=e[t],delete e[t])}}updatedConfig(){const e=this.getConfig(),t={};return t.className=this.getClassName(),t.config=e,t.kerasVersion=`tfjs-layers ${Xx}`,t.backend="TensorFlow.js",t}toJSON(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];const n=Kx(this.updatedConfig());return t?JSON.stringify(n):n}call(e,t){return wi((()=>{e=ty(e);const n=new Vb;for(let t=0;t<this.inputs.length;++t)n.add(this.inputs[t],e[t]);return Gb(this.outputs,n,t)}))}computeMask(e,t){return wi((()=>{let n;return e=ty(e),n=null==t?Qg(null,e.length):ty(t),this.runInternalGraph(e,n)[1]}))}computeOutputShape(e){const t=Tb(e);if(t.length!==this.inputLayers.length)throw new qg(`Invalid inputShape argument ${e}: model has ${this.inputLayers.length} tensor inputs.`);const n={};for(let i=0;i<t.length;i++){const e=this.inputLayers[i],a=t[i];n[e.name+"_0_0"]=a}const a=Object.keys(this.nodesByDepth).map((e=>parseInt(e,10))).sort(ly);if(a.length>1)for(const i of a){const e=this.nodesByDepth[i];for(const t of e){const e=t.outboundLayer;if(-1!==this.inputLayers.map((e=>e.id)).indexOf(e.id))continue;const a=[];for(let i=0;i<t.inboundLayers.length;i++){const e=t.inboundLayers[i],r=t.nodeIndices[i],s=t.tensorIndices[i],o=n[`${e.name}_${r}_${s}`];a.push(o)}const r=Tb(e.computeOutputShape(ey(a))),s=e.inboundNodes.indexOf(t);for(let t=0;t<r.length;t++){n[`${e.name}_${s}_${t}`]=r[t]}}}const r=[],s=[];for(let i=0;i<this.outputLayers.length;i++){const e=this.outputLayers[i],t=this.outputLayersNodeIndices[i],n=this.outputLayersTensorIndices[i],a=`${e.name}_${t}_${n}`;s.push(a)}for(let i=0;i<s.length;i++){const e=s[i];Zg(e in n),r.push(n[e])}return ey(r)}runInternalGraph(e,t){null==t&&(t=Qg(null,e.length));const n={};for(let o=0;o<this.inputs.length;++o){const a=this.inputs[o],r=e[o],s=t[o];n[a.id]=[r,s]}const a=Object.keys(this.nodesByDepth).map((e=>parseInt(e,10))).sort(ly);for(const o of a){const e=this.nodesByDepth[o];for(const t of e){const e=t.outboundLayer,a=t.inputTensors,r=t.outputTensors,s=new Array;for(const t of a)t.id in n&&s.push(n[t.id]);if(s.length===a.length){let a,i,o,l,u={};if(null!=t.callArgs&&(u=t.callArgs),1===s.length){const[t,n]=s[0];null==u.mask&&(u.mask=n),o=ty(e.call(t,u)),l=ty(e.computeMask(t,n)),a=[t],i=[n]}else a=s.map((e=>e[0])),i=s.map((e=>e[1])),null==u.mask&&(u.mask=i),o=ty(e.call(a,u)),l=ty(e.computeMask(a,i));if(e.activityRegularizer)throw new Kg("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let e=0;e<r.length;++e){const t=r[e],a=o[e],s=l[e];n[t.id]=[a,s]}}}}const r=[],s=[],i=[];for(const o of this.outputs){Zg(o.id in n,`Could not compute output ${o.name} : ${o.id}`);const[e,t]=n[o.id];i.push(e.shape),r.push(e),s.push(t)}return[r,s,i]}buildNodeConversionMap(e){const t={};let n;for(const a of this.layers){n=a instanceof Yx?1:0;for(let e=0;e<a.inboundNodes.length;e++){const r=Yx.nodeKey(a,e);this.containerNodes.has(r)&&(t[r]=n,n+=1)}}return t}getLayer(e,t){if(null!=t)return this.findLayer(t);if(null==e)throw new qg("Provide either a layer name or layer index");if("number"===typeof e)return this.findLayer(e);for(const n of this.layers)if(n.name===e)return n;throw new qg(`No such layer: ${e}`)}findLayer(e){if(this.layers.length<=e)throw new qg(`Was asked to retrieve layer at index ${e}, but model only has ${this.layers.length} layer(s).`);return this.layers[e]}calculateLosses(){return wi((()=>{const e=[];for(const t of this.layers)for(let n=0;n<t.inboundNodes.length;++n){const a=Yx.nodeKey(t,n);this.containerNodes.has(a)&&e.push(...t.calculateLosses())}return e}))}getConfig(){const e={name:this.name},t=this.buildNodeConversionMap(this.layers),n=[];for(const s of this.layers){const e=s.getClassName(),a=s.getConfig(),r=[];for(let n=0;n<s.inboundNodes.length;n++){const e=s.inboundNodes[n],a=Yx.nodeKey(s,n);let i={};if(this.containerNodes.has(a)){if(e.callArgs)try{JSON.stringify(e.callArgs),i=e.callArgs}catch(JB){console.warn(`Layer ${s.name} was passed non-serializable keyword arguments: ${e.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),i={}}if(e.inboundLayers.length>0){const n=[];for(let a=0;a<e.inboundLayers.length;a++){const r=e.inboundLayers[a],s=e.nodeIndices[a],o=e.tensorIndices[a];let l=t[Yx.nodeKey(r,s)];null==l&&(l=0),n.push([r.name,l,o,i])}r.push(n)}}}const i={};i.name=s.name,i.className=e,i.config=a,i.inboundNodes=r,n.push(i)}e.layers=n;const a=[];for(let s=0;s<this.inputLayers.length;s++){const e=this.inputLayers[s],n=this.inputLayersNodeIndices[s],r=Yx.nodeKey(e,n);if(!this.containerNodes.has(r))continue;let i=t[r];null!==i&&void 0!==i||(i=0);const o=this.inputLayersTensorIndices[s];a.push([e.name,i,o])}e.inputLayers=a;const r=[];for(let s=0;s<this.outputLayers.length;s++){const e=this.outputLayers[s],n=this.outputLayersNodeIndices[s],a=Yx.nodeKey(e,n);if(!this.containerNodes.has(a))continue;let i=t[a];null!==i&&void 0!==i||(i=0);const o=this.outputLayersTensorIndices[s];r.push([e.name,i,o])}return e.outputLayers=r,e}static fromConfig(e,t){let n=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const a={},r={};function s(e,t){e.name in r?r[e.name].push(t):r[e.name]=[t]}function i(e,t){const n=[];let r;for(const i of t){const o=i[0],l=i[1],u=i[2];if(r=null==i[3]?{}:i[3],!(o in a))return void s(e,t);const c=a[o];if(c.inboundNodes.length<=l)return void s(e,t);const p=c.inboundNodes[l];n.push(p.outputTensors[u])}n.length>0&&e.apply(ey(n),r)}function o(e){const r=e.name,i=gx(e,null!=t.customObjects?t.customObjects:{});i.setFastWeightInitDuringBuild(n),a[r]=i;e.inboundNodes.forEach((e=>{if(!(e instanceof Array))throw new qg(`Corrupted configuration, expected array for nodeData: ${e}`);s(i,e)}))}const l=t.name,u=t.layers;for(const f of u)o(f);for(;!cy(r);)for(const e of u){const t=a[e.name];if(t.name in r){const e=r[t.name];delete r[t.name];for(const n of e)i(t,n)}}const c=[],p=[],d=t.inputLayers;for(const f of d){const e=f[0],t=f[1],n=f[2];Zg(e in a);const r=a[e].inboundNodes[t].outputTensors;c.push(r[n])}const h=t.outputLayers;for(const f of h){const e=f[0],t=f[1],n=f[2];Zg(e in a);const r=a[e].inboundNodes[t].outputTensors;p.push(r[n])}return new e({inputs:c,outputs:p,name:l})}get stateful(){if(this._stateful)throw new qg("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(const e of this.layers)if(e.stateful)return!0;return!1}resetStates(){wi((()=>{this.layers.forEach((e=>{e.stateful&&e.resetStates()}))}))}}function Qx(e,t,n){const a=t.length;if(null==e||Array.isArray(e)&&0===e.length)return t.map((e=>null));if(1===a)return Array.isArray(e)&&1===e.length?e:"object"===typeof e&&t[0]in e?[e[t[0]]]:[e];if(Array.isArray(e)){if(e.length!==a)throw new Error(`Provided ${n} is an array of ${e.length} element(s), but the model has ${a} outputs. Make sure a set of weights is provided for each model output.`);return e}if("object"===typeof e&&Object.keys(e).length>0&&"object"===typeof e[Object.keys(e)[0]]){const n=[];return t.forEach((t=>{t in e?n.push(e[t]):n.push(null)})),n}throw new Error(`The model has multiple (${a}) outputs, so ${n} must be either an array with ${a} elements or an object with ${t} keys. Provided ${n} not understood: ${JSON.stringify(e)}`)}function Zx(e,t){return Qx(e,t,"classWeight")}async function Jx(e,t,n,a){if(null!=t||null!=a)throw new Error("Support sampleWeight is not implemented yet");if(null!=n){const t=wi((()=>{if(1===e.shape.length)return Ao(e);if(2===e.shape.length){if(e.shape[1]>1){return ru(e,1)}if(1===e.shape[1])return Tu(e,[e.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${e.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}throw new Error(`Unexpected rank of target (y) tensor (${e.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)})),a=Array.from(await t.data());ki(t);const r=[];return a.forEach((e=>{if(null==n[e])throw new Error(`classWeight must contain all classes in the training data. The class ${e} exists in the data but not in classWeight`);r.push(n[e])})),Ad(r,"float32")}return null}function ev(e,t){return Mo(e,t)}function tv(e,t){let n,a;const r=t;n=r.xs,a=r.ys,qe(null!=n&&null!=a,(()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${t}`));const s=nv("input",e.inputNames,n),i=nv("output",e.outputNames,a),o=s[0].shape[0];qe(s.length===e.inputs.length,(()=>`LayersModel has ${e.inputs.length} inputs, but the dataset provides ${s.length} inputs.  (Expected input keys: ${JSON.stringify(e.inputNames)})`)),qe(i.length===e.outputs.length,(()=>`LayersModel has ${e.outputs.length} outputs, but the dataset provides ${i.length} outputs.  (Expected output keys: ${JSON.stringify(e.outputNames)})`));for(let l=0;l<s.length;l++)qe(s[l].shape[0]===o,(()=>`Batch size mismatch: input ${e.inputNames[l]} has ${s[l].shape[0]}; expected  ${o} based on input ${e.inputNames[0]}.`));for(let l=0;l<i.length;l++)qe(i[l].shape[0]===o,(()=>`Batch size mismatch: output ${e.outputNames[l]} has ${i[l].shape[0]}; expected  ${o} based on input ${e.inputNames[0]}.`));return{xs:s,ys:i}}function nv(e,t,n){if(n instanceof Ds)return[n];if(Array.isArray(n))return qe(n.length===t.length,(()=>`Received an array of ${n.length} Tensors, but expected ${t.length} to match the ${e} keys ${t}.`)),n;{const a=[];for(const r of t){if(null==n[r])throw new qg(`The feature data generated by the dataset lacks the required ${e} key '${r}'.`);a.push(n[r])}return a}}async function av(e,t,n){const a=null!=n.batchesPerEpoch;if(qe(null!=e.optimizer,(()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig).")),qe(null!=n,(()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call.")),qe(null!=n.epochs&&n.epochs>0&&Number.isInteger(n.epochs),(()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${n.epochs}`)),qe(!a||n.batchesPerEpoch>0&&Number.isInteger(n.batchesPerEpoch),(()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${n.batchesPerEpoch}`)),qe(null==n.validationSplit,(()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead.")),e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");e.isTraining=!0;try{const r=null!=n.validationData;let s,i;if(r)if(rv(n.validationData))qe(null==n.validationBatches||n.validationBatches>0&&Number.isInteger(n.validationBatches),(()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${n.validationBatches}`));else{const e=function(e){if(3===e.length)throw new Kg("Validation with sample weights is not implemented yet.");return{xs:e[0],ys:e[1]}}(n.validationData);s=e.xs,i=e.ys}const o=e.makeTrainFunction(),l=e.getDedupedMetricsNames();let u;u=r?l.slice().concat(l.map((e=>"val_"+e))):l.slice();const c=hx(n.callbacks,n.yieldEvery),p=null==n.verbose?1:n.verbose,{callbackList:d,history:h}=mx(c,p,n.epochs,null,null,function(e,t){let n=null;null!=t.batchesPerEpoch?n=t.batchesPerEpoch:Number.isFinite(e.size)&&(n=e.size);return n}(t,n),null,r,u);d.setModel(e),e.history=h,await d.onTrainBegin(),e.stopTraining_=!1;let f=null==n.initialEpoch?0:n.initialEpoch,m=await t.iterator();for(;f<n.epochs;){const u={};await d.onEpochBegin(f);let c=0,p=0;for(a||(m=await t.iterator());!a||c<n.batchesPerEpoch;){const t=await m.next();if(a&&t.done){console.warn(`You provided \`batchesPerEpoch\` as ${n.batchesPerEpoch}, but your dataset iterator ran out of data after ${c} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, `+n.batchesPerEpoch*n.epochs+" batches). You may need to use the repeat() function when building your dataset.");break}if(null!=t.value){const{xs:a,ys:r}=tv(e,t.value),s={};s.batch=p,s.size=a[0].shape[0],await d.onBatchBegin(p,s);const i=[];if(null!=n.classWeight){const t=Zx(n.classWeight,e.outputNames);for(let e=0;e<t.length;++e)i.push(await Jx(r[e],null,t[e]))}const u=a.concat(r).concat(i),h=o(u);ki(u);for(let e=0;e<l.length;++e){const t=l[e],n=h[e];s[t]=n,Ni(n)}await d.onBatchEnd(p,s),ix(s),p++,c++}if(a?c>=n.batchesPerEpoch:t.done){if(r){let t;t=rv(n.validationData)?ty(await e.evaluateDataset(n.validationData,{batches:n.validationBatches})):ty(e.evaluate(s,i,{batchSize:null==n.validationBatchSize?32:n.validationBatchSize,verbose:0}));for(let n=0;n<e.metricsNames.length;++n)u[`val_${e.metricsNames[n]}`]=t[n]}break}if(e.stopTraining_)break}if(await d.onEpochEnd(f,u),f++,e.stopTraining_)break}return await d.onTrainEnd(),await e.history.syncData(),e.history}finally{e.isTraining=!1}}function rv(e){return"function"===typeof e.iterator}function sv(e){qe(e>0&&Number.isInteger(e),(()=>`batchSize is required to be a positive integer, but got ${e}`))}function iv(e,t,n){return null==e?[null]:Array.isArray(e)?e.map((e=>Uy(e,t,n-t))):Uy(e,t,n-t)}function ov(e,t){return wi((()=>null==e?null:Array.isArray(e)?e.map((e=>ov(e,t))):Qy(e,"int32"===t.dtype?t:Ro(t,"int32"))))}function lv(e,t){const n=[];let a=0,r=null;for(;a<e;)r=a+t,r>=e&&(r=e),n.push([a,r]),a=r;return n}function uv(e){const t=[];e instanceof Ds&&(e=[e]);for(let n=0;n<e.length;++n){const a=e[n];if(1===a.rank)t.push(Vy(a,1));else{if(0===a.rank)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");t.push(a)}}return t}function cv(e,t){if(null==e)return;const n=[];if(t instanceof Ds)n.push(t.id);else if(Array.isArray(t))t.forEach((e=>n.push(e.id)));else if(null!=t)for(const r in t){const e=t[r];n.push(e.id)}const a=[];if(e instanceof Ds)-1===n.indexOf(e.id)&&a.push(e);else if(Array.isArray(e))e.forEach((e=>{-1===n.indexOf(e.id)&&a.push(e)}));else if(null!=e)for(const r in e){const t=e[r];-1===n.indexOf(t.id)&&a.push(t)}a.forEach((e=>{e.isDisposed||e.dispose()}))}function pv(e){return Array.isArray(e)}function dv(e){return!function(e){return e instanceof Ds}(e)&&!pv(e)}function hv(e,t,n){let a,r=!(arguments.length>3&&void 0!==arguments[3])||arguments[3],s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"";if(null==t||0===t.length){if(null!=e){let t=!1;if(pv(e)&&e.length>0)t=!0;else if(dv(e)){for(const n in e)if(e.hasOwnProperty(n)){t=!0;break}}else t=!0;if(t)throw new qg(`Error when checking model ${s} expected no data, but got ${e}`)}return[]}if(null==e)return t.map((e=>null));if(dv(e)){a=[];for(const n of t){if(null==e[n])throw new qg(`No data provided for "${n}". Need data for each key in: ${t}`);a.push(e[n])}}else if(pv(e)){if(e.length!==t.length)throw new qg(`Error when checking model ${s}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${t.length} Tensor(s), but instead got the following list of Tensor(s): ${e}`);a=e}else{if(t.length>1)throw new qg(`The model ${s} expects ${t.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${e.shape}`);a=[e]}if(a=uv(a),null!=n)for(let i=0;i<t.length;++i){if(null==n[i])continue;const e=a[i];if(e.shape.length!==n[i].length)throw new qg(`Error when checking ${s}: expected ${t[i]} to have ${n[i].length} dimension(s). but got array with shape ${e.shape}`);for(let t=0;t<n[i].length;++t){if(0===t&&!r)continue;const a=e.shape[t],o=n[i][t];if(null!=o&&o>=0&&a!==o)throw new qg(`${s} expected a batch of elements where each example has shape [${n[i].slice(1,n[i].length)}] (i.e.,tensor shape [*,${n[i].slice(1,n[i].length)}]) but the ${s} received an input with ${e.shape[0]} examples, each with shape [${e.shape.slice(1,e.shape.length)}] (tensor shape [${e.shape}])`)}}return a}function fv(e,t,n){let a,r=!(arguments.length>3&&void 0!==arguments[3])||arguments[3],s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"";if(Array.isArray(e)){if(e.length!==t.length)throw new qg(`Error when checking model ${s}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${t.length} Tensor(s), but instead got ${e.length} Tensors(s).`);a=e}else{if(t.length>1)throw new qg(`The model expects ${t.length} ${s} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(e.shape)}.`);a=[e]}if(null!=n)for(let i=0;i<t.length;++i){if(null==n[i])continue;const e=a[i];if(e.shape.length!==n[i].length)throw new qg(`Error when checking ${s}: expected ${t[i]} to have ${n[i].length} dimension(s), but got array with shape ${JSON.stringify(e.shape)}`);for(let a=0;a<n[i].length;++a){if(0===a&&!r)continue;const o=e.shape[a],l=n[i][a];if(null!=l&&l!==o)throw new qg(`Error when checking ${s}: expected ${t[i]} to have shape ${JSON.stringify(n[i])} but got array with shape ${JSON.stringify(e.shape)}.`)}}}class mv extends Yx{constructor(e){super(e),this.isTraining=!1}summary(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:console.log;if(!this.built)throw new qg("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");Vx(this,e,t,n)}compile(e){if(null==e.loss&&(e.loss=[]),this.loss=e.loss,"string"===typeof e.optimizer)this.optimizer_=function(e){const t={Adagrad:()=>vf.adagrad(.01),Adadelta:()=>vf.adadelta(1,.95,By()),Adam:()=>vf.adam(.001,.9,.999,By()),Adamax:()=>vf.adamax(.002,.9,.999,By(),0),RMSProp:()=>vf.rmsprop(.001,.9,0,By()),SGD:()=>vf.sgd(.01)};if(t.adagrad=t.Adagrad,t.adadelta=t.Adadelta,t.adam=t.Adam,t.adamax=t.Adamax,t.rmsprop=t.RMSProp,t.sgd=t.SGD,e in t)return t[e]();throw new qg(`Unknown Optimizer ${e}`)}(e.optimizer),this.isOptimizerOwned=!0;else{if(!(e.optimizer instanceof qo))throw new qg("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=e.optimizer,this.isOptimizerOwned=!1}let t=[];if(Array.isArray(e.loss)||"string"===typeof e.loss||"function"===typeof e.loss)if(Array.isArray(e.loss)){if(e.loss.length!==this.outputs.length)throw new qg(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${e.loss}.`);const n=e.loss;t=n.map((e=>Ex(e)))}else{const n=Ex(e.loss);this.outputs.forEach((e=>{t.push(n)}))}else{e.loss=e.loss;for(const t in e.loss)if(-1===this.outputNames.indexOf(t))throw new qg(`Unknown entry in loss dictionary: "${t}". Only expected the following keys: ${this.outputNames}`);for(const n of this.outputNames)null==e.loss[n]&&console.warn(`Output "${n}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${n} during training`),t.push(Ex(e.loss[n]))}this.lossFunctions=t,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let s=0;s<this.outputs.length;++s){const e=this.internalOutputShapes[s],t=this.outputNames[s];this.feedOutputNames.push(t),this.feedOutputShapes.push(e),this.feedLossFns.push(this.lossFunctions[s])}const n=[];this.metrics=e.metrics,this.metricsNames=["loss"],this.metricsTensors=[],Ry("loss",(()=>{for(let e=0;e<this.outputs.length;++e){if(-1!==n.indexOf(e))continue;const t=this.lossFunctions[e];this.outputs.length>1&&(this.metricsTensors.push([t,e]),this.metricsNames.push(this.outputNames[e]+"_loss"))}}));const a=function(e,t){if(null==e||Array.isArray(e)&&0===e.length)return t.map((e=>[]));let n;if("string"===typeof e||"function"===typeof e)n=[e];else{if(!Array.isArray(e)&&"object"!==typeof e)throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${e}`);n=e}if(Array.isArray(n))return t.map((e=>n));{const e=[];for(const a of t){let t=n.hasOwnProperty(a)?n[a]:[];Array.isArray(t)||(t=[t]),e.push(t)}return e}}(e.metrics,this.outputNames),r=(e,t,n)=>{this.outputNames.length>1&&(t=this.outputNames[e]+"_"+t),this.metricsNames.push(t),this.metricsTensors.push([n,e])};Ry("metric",(()=>{for(let e=0;e<this.outputs.length;++e){if(-1!==n.indexOf(e))continue;(t=>{let n,a,s;for(const i of t){if("string"===typeof i&&-1!==["accuracy","acc","crossentropy","ce"].indexOf(i)){const t=this.internalOutputShapes[e];let r;1===t[t.length-1]||this.lossFunctions[e]===Sx?-1!==["accuracy","acc"].indexOf(i)?a=$x:-1!==["crossentropy","ce"].indexOf(i)&&(a=_x):this.lossFunctions[e]===Nx?-1!==["accuracy","acc"].indexOf(i)?a=Fx:-1!==["crossentropy","ce"].indexOf(i)&&(a=Ox):-1!==["accuracy","acc"].indexOf(i)?a=Rx:-1!==["crossentropy","ce"].indexOf(i)&&(a=Dx),-1!==["accuracy","acc"].indexOf(i)?r="acc":-1!==["crossentropy","ce"].indexOf(i)&&(r="ce"),s=a,n=""+r}else{const e=Lx(i);s=e,n=""+zx(i)}let t;Ry(n,(()=>{t=s})),r(e,n,t)}})(a[e])}})),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){null!=this.collectedTrainableWeights&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const a=null==n.batchSize?32:n.batchSize;sv(a);const r=this.standardizeUserDataXY(e,t,!0,a);try{const e=r[0].concat(r[1]);this.makeTestFunction();const t=this.testFunction;return ey(this.testLoop(t,e,a,n.verbose,n.steps))}finally{cv(r[0],e),cv(r[1],t)}}async evaluateDataset(e,t){return this.makeTestFunction(),async function(e,t,n){const a=null!=(n=n||{}).batches,r=e.testFunction;let s=[];if(n.verbose>0)throw new Kg("Verbose mode is not implemented yet.");qe(!a||n.batches>0&&Number.isInteger(n.batches),(()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(n.batches)}`));const i="function"===typeof t.next?t:await t.iterator();let o=0,l=0;for(;!a||l<n.batches;){const t=await i.next();if(s=wi((()=>{if(t.value){const{xs:n,ys:a}=tv(e,t.value),i=n.concat(a),u=wi((()=>r(i)));if(ki(i),0===l)for(let e=0;e<u.length;++e)s.push(Wo(0));const c=i[0].shape[0];for(let e=0;e<u.length;++e){const t=u[e],n=s[e];s[e]=wi((()=>Fo(s[e],Mo(c,t)))),l>0&&ki(n)}ki(u),o+=c,++l}return s})),t.done){a&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${n.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let u=0;u<s.length;++u){const e=s[u];s[u]=Oo(s[u],o),ki(e)}return ey(s)}(this,e,t)}checkNumSamples(e,t,n){let a,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"steps";if(null!=n){if(a=null,null!=t)throw new qg(`If ${r} is set, batchSize must be null or undefined.Got batchSize = ${t}`)}else{if(null==e)throw new qg(`Either the input data should have a defined shape, or ${r} shoud be specified.`);a=Array.isArray(e)?e[0].shape[0]:e.shape[0]}return a}execute(e,t){if(Array.isArray(t)&&0===t.length)throw new qg("`outputs` is an empty Array, which is not allowed.");const n=Array.isArray(t),a=n?t:[t],r=this.retrieveSymbolicTensors(a),s=new Vb;if(e instanceof Ds&&(e=[e]),Array.isArray(e)){if(e.length!==this.inputs.length)throw new qg(`The number of inputs provided (${e.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let t=0;t<this.inputs.length;++t)s.add(this.inputs[t],e[t])}else for(const o of this.inputs){const t=e[o.name];if(null==t)throw new qg(`No value is provided for the model's input ${o.name}`);s.add(o,t)}const i=Gb(r,s);return n?i:i[0]}retrieveSymbolicTensors(e){const t=Qg(null,e.length);let n=e.length;for(const a of this.layers){const r=Array.isArray(a.output)?a.output:[a.output],s=r.map((e=>e.name));for(let a=0;a<e.length;++a){const i=s.indexOf(e[a]);if(-1!==i&&(t[a]=r[i],n--),0===n)break}if(0===n)break}if(n>0){const n=[];throw t.forEach(((t,a)=>{null==t&&n.push(e[a])})),new qg(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(n)}`)}return t}predictLoop(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:32,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];return wi((()=>{const a=this.checkNumSamples(e);if(n)throw new Kg("Verbose predictLoop() is not implemented yet.");const r=lv(a,t),s=this.outputs.map((e=>[]));for(let t=0;t<r.length;++t){wi((()=>{const n=r[t][0],a=r[t][1],s=iv(e,n,a),i=[];if(Array.isArray(s))for(let e=0;e<s.length;++e)i.push({key:this.inputs[e],value:s[e]});else i.push({key:this.inputs[0],value:s});const o=new Vb(i);return Gb(this.outputs,o)})).forEach(((e,t)=>s[t].push(e)))}return ey(s.map((e=>$u(e,0))))}))}predict(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const n=uv(e);fv(n,this.inputNames,this.feedInputShapes,!1);try{const e=null==t.batchSize?32:t.batchSize;return sv(e),this.predictLoop(n,e)}finally{cv(n,e)}}predictOnBatch(e){fv(e,this.inputNames,this.feedInputShapes,!0);const t=(Array.isArray(e)?e[0]:e).shape[0];return this.predictLoop(e,t)}standardizeUserDataXY(e,t){let n=arguments.length>3?arguments[3]:void 0;if(null==this.optimizer_)throw new Hg("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");const a=[];for(let r=0;r<this.feedOutputShapes.length;++r){const e=this.feedOutputShapes[r];this.feedLossFns[r]===Nx?a.push(e.slice(0,e.length-1).concat([1])):a.push(e)}if(function(e,t){const n=uy(e.map((e=>e.shape[0])));n.sort();const a=uy(t.map((e=>e.shape[0])));if(a.sort(),n.length>1)throw new qg(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(e.map((e=>e.shape)))}`);if(a.length>1)throw new qg(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(t.map((e=>e.shape)))}`);if(n.length>0&&a.length>0&&!Qe(n,a))throw new qg(`Input Tensors should have the same number of samples as target Tensors. Found ${n[0]} input sample(s) and ${a[0]} target sample(s).`)}(e=hv(e,this.feedInputNames,this.feedInputShapes,!1,"input"),t=hv(t,this.feedOutputNames,a,!1,"target")),function(e,t,n){const a=[bx,Sx,kx];for(let r=0;r<e.length;++r){const s=e[r],i=t[r],o=n[r];if(null!=i){if(i===kx&&1===s.shape[s.shape.length-1])throw new qg(`You are passing a target array of shape ${s.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(-1!==a.indexOf(i)){const e=s.shape.slice(1),t=o.slice(1);for(let n=0;n<e.length;++n){const a=e[n],r=t[n];if(null!=r&&a!==r)throw new qg(`A target Tensor with shape ${s.shape} was passed for an output of shape ${o}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}(t,this.feedLossFns,this.feedOutputShapes),this.stateful&&null!=n&&n>0&&e[0].shape[0]%n!==0)throw new qg(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${n}. Found: ${e[0].shape[0]} sample(s).`);return[e,t]}async standardizeUserData(e,t,n,a){let r=!(arguments.length>4&&void 0!==arguments[4])||arguments[4],s=arguments.length>5?arguments[5]:void 0;const[i,o]=this.standardizeUserDataXY(e,t,r,s);if(null!=n)throw new Error("sample weight is not supported yet.");let l=null;if(null!=a){const e=Zx(a,this.outputNames);l=[];for(let t=0;t<e.length;++t)l.push(await Jx(o[t],null,e[t]))}return[i,o,l]}testLoop(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,r=arguments.length>4?arguments[4]:void 0;return wi((()=>{const s=this.checkNumSamples(t,n,r,"steps"),i=[];if(a>0)throw new Kg("Verbose mode is not implemented yet.");if(null!=r)throw new Kg("steps mode in testLoop() is not implemented yet");{const a=lv(s,n),r=Ad(zy(0,s));for(let n=0;n<a.length;++n){const s=a[n][0],o=a[n][1],l=Uy(r,s,o-s),u=ov(t,l),c=e(u);if(0===n)for(let e=0;e<c.length;++e)i.push(Wo(0));for(let e=0;e<c.length;++e){const t=c[e];i[e]=Fo(i[e],Mo(o-s,t))}}for(let e=0;e<i.length;++e)i[e]=Oo(i[e],s)}return i}))}getDedupedMetricsNames(){const e=this.metricsNames,t=[];for(let n=0;n<e.length;++n){const a=e[n];let r=a;if(Jg(e,a)>1){r+=`_${Jg(e.slice(0,n),a)}`}t.push(r)}return t}makeTrainFunction(){return e=>{const t=[],n=e.slice(0,this.inputs.length),a=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),r=e.slice(this.inputs.length+this.outputs.length,this.inputs.length+2*this.outputs.length),s=[],i=this.collectedTrainableWeights.map((e=>e.read()));return[this.optimizer_.minimize((()=>{const e=[];for(let t=0;t<this.inputs.length;++t)e.push({key:this.inputs[t],value:n[t]});const i=new Vb(e),o=Gb(this.outputs,i,{training:!0});let l;for(let n=0;n<this.lossFunctions.length;++n){let e=(0,this.lossFunctions[n])(a[n],o[n]);null!=r[n]&&(e=ev(e,r[n]));const s=mp(e);t.push(s),l=0===n?e:Fo(l,e)}for(let n=0;n<this.metricsTensors.length;++n){let e;if(this.outputs.length>1&&n<this.outputs.length)e=t[n];else{const t=this.metricsTensors[n][0],r=this.metricsTensors[n][1];e=mp(t(a[r],o[r]))}Ni(e),s.push(e)}return l=mp(l),this.calculateLosses().forEach((e=>{l=Fo(l,e)})),l}),!0,i)].concat(s)}}makeTestFunction(){this.testFunction=e=>wi((()=>{const t=[];let n;const a=e.slice(0,this.inputs.length),r=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),s=[];for(let e=0;e<this.inputs.length;++e)s.push({key:this.inputs[e],value:a[e]});const i=new Vb(s),o=Gb(this.outputs,i);for(let e=0;e<this.lossFunctions.length;++e){const a=this.lossFunctions[e],s=mp(a(r[e],o[e]));n=0===e?s:Fo(n,s),t.push(n)}for(let e=0;e<this.metricsTensors.length;++e){const n=this.metricsTensors[e][0],a=this.metricsTensors[e][1],s=mp(n(r[a],o[a]));t.push(s)}return t}))}async fit(e,t){let n,a,r,s,i,o,l,u,c,p=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if(this.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");this.isTraining=!0;try{const d=null==p.batchSize?32:p.batchSize;sv(d);const h=!1,f=await this.standardizeUserData(e,t,p.sampleWeight,p.classWeight,h,d);n=f[0],a=f[1],c=f[2];let m,g=!1;if(null!=p.validationData&&p.validationData.length>0){if(g=!0,2!==p.validationData.length)throw 3===p.validationData.length?new Kg("validationData including sample weights is not supported yet."):new qg(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${p.validationData} is invalid.`);i=p.validationData[0],o=p.validationData[1];const e=!0,t=await this.standardizeUserData(i,o,null,null,e,d);l=t[0],u=t[1],m=l.concat(u)}else if(null!=p.validationSplit&&p.validationSplit>0&&p.validationSplit<1){g=!0;const e=Math.floor(n[0].shape[0]*(1-p.validationSplit)),t=n[0].shape[0];l=iv(n,e,t),r=n,n=iv(n,0,e),u=iv(a,e,t),s=a,a=iv(a,0,e),m=l.concat(u)}else null!=p.validationSteps&&(g=!0);const y=n.concat(a).concat(c);this.checkTrainableWeightsConsistency();const b=this.makeTrainFunction(),x=this.getDedupedMetricsNames();let v,w;g?(this.makeTestFunction(),v=this.testFunction,w=x.slice().concat(x.map((e=>"val_"+e)))):(v=null,m=[],w=x.slice());const k=hx(p.callbacks,p.yieldEvery);return await this.fitLoop(b,y,x,d,p.epochs,p.verbose,k,v,m,p.shuffle,w,p.initialEpoch,null,null)}finally{this.isTraining=!1,cv(n,e),cv(a,t),cv(r,e),cv(s,t),cv(l,i),cv(u,o),null!=c&&ki(c)}}async fitLoop(e,t,n,a,r,s,i,o,l,u,c,p,d,h){null==a&&(a=32),null==r&&(r=1),null==u&&(u=!0),null==p&&(p=0);let f=!1;if(null!=o&&null!=l&&(f=!0),null!=h&&(f=!0,null==d))throw new qg("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");const m=this.checkNumSamples(t,a,d,"steps_per_epoch");let g;null!=m&&(g=zy(0,m)),null==s&&(s=1);const{callbackList:y,history:b}=mx(i,s,r,p,m,d,a,f,c);y.setModel(this),this.history=b,await y.onTrainBegin(),this.stopTraining_=!1;for(let x=p;x<r;++x){await y.onEpochBegin(x);const r={};if(null!=d)throw new Kg("stepsPerEpoch mode is not implemented yet.");{if("batch"===u)throw new Kg("batch shuffling is not implemneted yet");u&&Ue(g);const s=Ad(g),i=lv(m,a);for(let u=0;u<i.length;++u){const c={};if(await y.onBatchBegin(u,c),wi((()=>{const p=i[u][0],d=i[u][1],h=Uy(s,p,d-p);c.batch=u,c.size=d-p;const m=ov(t,h),g=e(m);for(let e=0;e<n.length;++e){const t=n[e],a=g[e];c[t]=a,Ni(a)}if(u===i.length-1&&f){const e=this.testLoop(o,l,a);for(let t=0;t<n.length;++t){const a=n[t],s=e[t];Ni(s),r["val_"+a]=s}}})),await y.onBatchEnd(u,c),ix(c),this.stopTraining_)break}s.dispose()}if(await y.onEpochEnd(x,r),this.stopTraining_)break}return await y.onTrainEnd(),await this.history.syncData(),this.history}async fitDataset(e,t){return av(this,e,t)}async trainOnBatch(e,t){const n=await this.standardizeUserData(e,t),a=n[0],r=n[1],s=this.makeTrainFunction()(a.concat(r)),i=[];for(const o of s){const e=await o.data();i.push(e[0])}return ki(s),cv(n[0],e),cv(n[1],t),ey(i)}getNamedWeights(e){const t=[],n=null!=e&&e.trainableOnly,a=n?this.trainableWeights:this.weights,r=this.getWeights(n);for(let s=0;s<a.length;++s)n&&!a[s].trainable||t.push({name:a[s].originalName,tensor:r[s]});return t}set stopTraining(e){this.stopTraining_=e}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(e){this.optimizer_!==e&&(this.optimizer_=e,this.isOptimizerOwned=!1)}dispose(){const e=super.dispose();if(0===e.refCountAfterDispose&&null!=this.optimizer&&this.isOptimizerOwned){const t=vi().numTensors;this.optimizer_.dispose(),e.numDisposedVariables+=t-vi().numTensors}return e}getLossIdentifiers(){let e;if("string"===typeof this.loss)e=ny(this.loss);else if(Array.isArray(this.loss)){for(const e of this.loss)if("string"!==typeof e)throw new Error("Serialization of non-string loss is not supported.");e=this.loss.map((e=>ny(e)))}else{const t=Object.keys(this.loss);e={};const n=this.loss;for(const a of t){if("string"!==typeof n[a])throw new Error("Serialization of non-string loss is not supported.");e[a]=ny(n[a])}}return e}getMetricIdentifiers(){if("string"===typeof this.metrics||"function"===typeof this.metrics)return[ny(zx(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map((e=>ny(zx(e))));{const e={};for(const t in this.metrics)e[t]=ny(zx(this.metrics[t]));return e}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(e){if(null!=e.weighted_metrics)throw new Error("Loading weight_metrics is not supported yet.");if(null!=e.loss_weights)throw new Error("Loading loss_weights is not supported yet.");if(null!=e.sample_weight_mode)throw new Error("Loading sample_weight_mode is not supported yet.");const t=gx(qx(e.optimizer_config));let n,a;if("string"===typeof e.loss)n=ay(e.loss);else if(Array.isArray(e.loss))n=e.loss.map((e=>ay(e)));else if(null!=e.loss){n={};for(const t in e.loss)n[t]=ay(e.loss[t])}if(Array.isArray(e.metrics))a=e.metrics.map((e=>ay(e)));else if(null!=e.metrics){a={};for(const t in e.metrics)a[t]=ay(e.metrics[t])}this.compile({loss:n,metrics:a,optimizer:t})}async save(e,t){if("string"===typeof e){const t=qi(e);if(0===t.length)throw new qg(`Cannot find any save handlers for URL '${e}'`);if(t.length>1)throw new qg(`Found more than one (${t.length}) save handlers for URL '${e}'`);e=t[0]}if(null==e.save)throw new qg("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");const n=await Ci(this.getNamedWeights(t)),a={modelTopology:this.toJSON(null,!1),format:"layers-model",generatedBy:`TensorFlow.js tfjs-layers v${Xx}`,convertedBy:null};if(null!=t&&t.includeOptimizer&&null!=this.optimizer){a.trainingConfig=this.getTrainingConfig();const e="optimizer",{data:t,specs:r}=await Ci(await this.optimizer.getWeights(),e);n.specs.push(...r),n.data=Li([n.data,t])}if(null!=this.userDefinedMetadata){const e=!0;Bx(this.userDefinedMetadata,this.name,e),a.userDefinedMetadata=this.userDefinedMetadata}return a.weightData=n.data,a.weightSpecs=n.specs,e.save(a)}setUserDefinedMetadata(e){Bx(e,this.name),this.userDefinedMetadata=e}getUserDefinedMetadata(){return this.userDefinedMetadata}}mv.className="Model",Ho(mv);class gv extends mv{}gv.className="Functional",Ho(gv);class yv extends mv{constructor(e){if(super({inputs:[],outputs:[]}),e=e||{},this.trainable=!0,this.built=!1,this.name=null!=e.name?e.name:xy("sequential_"),null!=e.layers)for(const t of e.layers)this.add(t)}checkShape(e){if(e.inboundNodes[0].outputTensors[0].shape.some((e=>e<0)))throw new qg(`Negative dimension size caused by adding layer ${e.name} with input shape [${e.inboundNodes[0].inputTensors[0].shape}]`)}add(e){const t=e instanceof yv||e instanceof mv;let n;if(t){if(n=e,1!==n.outputs.length)throw new qg("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(1!==n.inputs.length)throw new qg("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(0===this.outputs.length){if(0===e.inboundNodes.length){if(null==e.batchInputShape)throw new qg("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");const t=function(e){if(null==e.batchShape&&null==e.shape)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(null!=e.batchShape&&null!=e.shape)throw new qg("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let t=e.batchShape;null!=e.shape&&null==t&&(t=[null].concat(e.shape));let n=e.dtype;return null==n&&(n="float32"),new Wb({batchInputShape:t,name:e.name,dtype:n,sparse:e.sparse}).inboundNodes[0].outputTensors[0]}({batchShape:e.batchInputShape,dtype:e.dtype,name:e.name+"_input"});e.apply(t)}if(t)this.outputs=n.outputs,this.inputs=n.inputs;else{if(1!==e.inboundNodes.length)throw new qg(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${e.name} which has ${e.inboundNodes.length} pre-existing inbound connections.`);if(1!==e.inboundNodes[0].outputTensors.length)throw new qg("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[e.inboundNodes[0].outputTensors[0]],this.inputs=Bb(this.outputs[0])}this.inboundNodes=[],new Lb({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:Qg(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map((e=>e.shape)),outputShapes:this.outputs[0].shape})}else{const t=e.apply(this.outputs[0]);if(Array.isArray(t))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[t],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(e),this.built=!1}pop(){if(0===this.layers.length)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),0===this.layers.length)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{const e=this.layers.length-1;this.layers[e].outboundNodes=[],this.outputs=[this.layers[e].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(e,t){return null==this.model&&this.build(),this.model.call(e,t)}build(e){if(Eb(e),0===this.inputs.length||0===this.outputs.length)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new mv({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:console.log;this.built||this.build(),super.summary(e,t,n)}setWeights(e){null==this.model&&this.build(),this.model.setWeights(e)}evaluate(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if(!this.built)throw new Hg("The model needs to be compiled before being used.");return this.model.evaluate(e,t,n)}async evaluateDataset(e,t){if(!this.built)throw new Hg("The model needs to be compiled before being used.");return this.model.evaluateDataset(e,t)}predict(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return null==this.model&&this.build(),this.model.predict(e,t)}predictOnBatch(e){return null==this.model&&this.build(),this.model.predictOnBatch(e)}compile(e){this.build(),this.model.compile(e),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return null==this.model?void 0:this.model.optimizer}set optimizer(e){this.model.optimizer=e}async fit(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if(!this.built)throw new Hg("The model needs to be compiled before being used.");return this.model.fit(e,t,n)}async fitDataset(e,t){if(!this.built)throw new Hg("The model needs to be compiled before being used.");return this.model.fitDataset(e,t)}async trainOnBatch(e,t){return this.model.trainOnBatch(e,t)}static fromConfig(e,t){let n,a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r={};if(t instanceof Array){if(null==t[0].className||"Merge"===t[0].className)throw new qg("Legacy serialization format not supported yet.");n=t}else qe(null!=t.layers,(()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field.")),n=t.layers,delete t.layers,r=t;const s=new e(r);if(!(s instanceof yv))throw new Kg(`Sequential.fromConfig called on non-Sequential input: ${s}`);for(const i of n){const e=gx(i,void 0,a);a&&e.setFastWeightInitDuringBuild(!0),s.add(e)}return s}set stopTraining(e){if(null==this.model)throw new qg("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=e}get stopTraining(){if(null==this.model)throw new qg("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){const e=[];for(const t of this.layers){const n={};n.className=t.getClassName(),n.config=t.getConfig(),e.push(n)}return{name:this.name,layers:e}}}yv.className="Sequential",Ho(yv);class bv extends jo{getConfig(){return{}}}class xv extends bv{apply(e){return function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1;if(1!==t)throw new Kg(`Support for alpha values other than 1 (${t}) is not implemented yet.`);return yc(e)}(e,arguments.length>1&&void 0!==arguments[1]?arguments[1]:1)}}xv.className="elu",Ho(xv);class vv extends bv{apply(e){return ud(e)}}vv.className="selu",Ho(vv);class wv extends bv{apply(e){return ed(e)}}wv.className="relu",Ho(wv);class kv extends bv{apply(e){return wi((()=>xp(6,ed(e))))}}kv.className="relu6",Ho(kv);class Nv extends bv{apply(e){return e}}Nv.className="linear",Ho(Nv);class Sv extends bv{apply(e){return Au(e)}}Sv.className="sigmoid",Ho(Sv);class Iv extends bv{apply(e){return function(e){return wi((()=>{const t=Fo(.5,Mo(.2,e));return Gu(t,0,1)}))}(e)}}Iv.className="hardSigmoid",Ho(Iv);class Tv extends bv{apply(e){return tp(e)}}Tv.className="softplus",Ho(Tv);class Cv extends bv{apply(e){return function(e){return wi((()=>Oo(e,Fo(el(e),1))))}(e)}}Cv.className="softsign",Ho(Cv);class Ev extends bv{apply(e){return Fu(e)}}Ev.className="tanh",Ho(Ev);class $v extends bv{apply(e){return xd(e,arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1)}}$v.className="softmax",Ho($v);class Rv extends bv{apply(e){return ap(e,arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1)}}Rv.className="logSoftmax",Ho(Rv);class Av extends bv{apply(e){return wi((()=>wi((()=>{const t=Math.sqrt(2),n=Mo(.5,Fo(1,xc(Oo(e,t))));return Mo(e,n)}))))}}Av.className="gelu",Ho(Av);class _v extends bv{apply(e){return wi((()=>Mo(.5,Mo(e,Fo(1,Fu(Mo(Lo(Oo(2,Math.PI)),Fo(e,Mo(.044715,Qo(e,3))))))))))}}_v.className="gelu_new",Ho(_v);class Fv extends bv{apply(e){return wi((()=>Mo(e,Fu(tp(e)))))}}Fv.className="mish",Ho(Fv);class Dv extends bv{apply(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1;return wi((()=>Mo(Au(Mo(e,t)),e)))}}function Ov(e){return e.getClassName()}function Mv(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return oy(e,Go.getMap().classNameMap,t,"activation")}function Lv(e){if(null==e){const e={className:"linear",config:{}};return Mv(e)}if("string"===typeof e){const t={};return t.className=e,t.config={},Mv(t)}return e instanceof bv?e:Mv(e)}function zv(e){if(null!=e&&"object"!==typeof e)throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${e}`)}Dv.className="swish",Ho(Dv);class Pv extends jo{}class Bv extends Pv{constructor(e){super(),zv(e),this.l1=null==e||null==e.l1?.01:e.l1,this.l2=null==e||null==e.l2?.01:e.l2,this.hasL1=0!==this.l1,this.hasL2=0!==this.l2}apply(e){return wi((()=>{let t=gp([1]);return this.hasL1&&(t=Fo(t,Rc(Mo(this.l1,el(e))))),this.hasL2&&(t=Fo(t,Rc(Mo(this.l2,Zy(e))))),Tu(t,[])}))}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(e,t){return new e({l1:t.l1,l2:t.l2})}}Bv.className="L1L2",Ho(Bv);const Wv={l1l2:"L1L2"};function Vv(e){return sy(e)}function Uv(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return oy(e,Go.getMap().classNameMap,t,"regularizer")}function jv(e){if(null==e)return null;if("string"===typeof e){return Uv({className:e in Wv?Wv[e]:e,config:{}})}return e instanceof Pv?e:Uv(e)}class Gv extends Pb{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,null!=e&&(this.maxValue=e.maxValue)}call(e,t){e=Cb(e);let n=ed(e);return null!=this.maxValue&&(n=Gu(n,0,this.maxValue)),n}computeOutputShape(e){return e}getConfig(){const e={maxValue:this.maxValue},t=super.getConfig();return Object.assign(e,t),e}}Gv.className="ReLU",Ho(Gv);class Hv extends Pb{constructor(e){super(null==e?{}:e),this.DEFAULT_ALPHA=.3,null==e&&(e={}),this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){const n=Cb(e);return qc(n,this.alpha)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}Hv.className="LeakyReLU",Ho(Hv);class qv extends Pb{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA_INITIALIZER="zeros",null==e&&(e={}),this.supportsMasking=!0,this.alphaInitializer=Sb(e.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=jv(e.alphaRegularizer),this.alphaConstraint=rx(e.alphaConstraint),null==e.sharedAxes)this.sharedAxes=null;else if(Array.isArray(e.sharedAxes))this.sharedAxes=e.sharedAxes;else{if("number"!==typeof e.sharedAxes)throw new qg(`Expected sharedAxes to be a number or an array of numbers, but got ${e.sharedAxes}`);this.sharedAxes=[e.sharedAxes]}}build(e){const t=(e=Eb(e)).slice(1);if(null!=this.sharedAxes)for(const a of this.sharedAxes)t[a-1]=1;this.alpha=this.addWeight("alpha",t,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);const n={};if(null!=this.sharedAxes)for(let a=1;a<e.length;++a)n[a]=e[a];this.inputSpec=[new Db({ndim:e.length,axes:n})],this.built=!0}call(e,t){return e=Cb(e),Mp(e,this.alpha.read())}getConfig(){const e={alphaInitializer:Nb(this.alphaInitializer),alphaRegularizer:Vv(this.alphaRegularizer),alphaConstraint:nx(this.alphaConstraint),sharedAxes:this.sharedAxes},t=super.getConfig();return Object.assign(e,t),e}}qv.className="PReLU",Ho(qv);class Kv extends Pb{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA=1,null==e&&(e={}),null!=e.alpha&&e.alpha!==this.DEFAULT_ALPHA)throw new Kg(`Non-default alpha value (${e.alpha}) is not supported by the ELU layer yet.`);this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){const n=Cb(e);return yc(n)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}Kv.className="ELU",Ho(Kv);class Xv extends Pb{constructor(e){super(null==e?{}:e),this.DEFAULT_THETA=1,null==e&&(e={}),this.theta=null==e.theta?this.DEFAULT_THETA:e.theta}call(e,t){const n=Cb(e);return Mo(n,Ro(Wc(n,this.theta),"float32"))}computeOutputShape(e){return e}getConfig(){const e={theta:this.theta},t=super.getConfig();return Object.assign(e,t),e}}Xv.className="ThresholdedReLU",Ho(Xv);class Yv extends Pb{constructor(e){super(null==e?{}:e),this.DEFAULT_AXIS=1,null==e&&(e={}),this.softmax=(new $v).apply,this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis}call(e,t){return wi((()=>{let n=Cb(e);const a=t.mask;if(null!=a){const e=Mo(Zo(yp(n.shape),Ro(a,n.dtype)),Wo(-1e9));n=Fo(n,e)}return this.axis instanceof Array?this.axis.length>1?Dc(Zo(n,rp(n,this.axis,!0))):this.softmax(n,this.axis[0]):this.softmax(n,this.axis)}))}computeOutputShape(e){return e}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}function Qv(e,t,n){if("number"===typeof e)return Qg(e,t);if(e.length!==t)throw new qg(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${e.length} elements.`);for(let r=0;r<t;++r){const s=e[r];if((a=s)!==parseInt(a.toString(),10))throw new qg(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${JSON.stringify(e)} including a non-integer number ${s}`)}return e;var a}function Zv(e,t,n,a){if(null==e)return e;let r;return r="same"===n?e:e-(t+(t-1)*((arguments.length>4&&void 0!==arguments[4]?arguments[4]:1)-1))+1,Math.floor((r+a-1)/a)}function Jv(e,t,n,a){if(null==e)return null;if("valid"===a)e=e*t+Ly([n-t,0]);else{if("same"!==a)throw new qg(`Unsupport padding mode: ${a}.`);e*=t}return e}function ew(e,t){return wi((()=>(Ty(t),"channelsFirst"===t?Yd(e,[0,2,3,1]):e)))}function tw(e,t){return wi((()=>(Ty(t),"channelsFirst"===t?Yd(e,[0,2,3,4,1]):e)))}function nw(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"valid",s=arguments.length>5?arguments[5]:void 0,i=arguments.length>6&&void 0!==arguments[6]?arguments[6]:1;return wi((()=>{if(null==s&&(s="channelsLast"),Ty(s),3!==e.shape.length)throw new qg(`The input of a conv1dWithBias operation should be 3, but is ${e.shape.length} instead.`);if(3!==t.shape.length)throw new qg(`The kernel for a conv1dWithBias operation should be 3, but is ${t.shape.length} instead`);if(null!=n&&1!==n.shape.length)throw new qg(`The bias for a conv1dWithBias operation should be 1, but is ${n.shape.length} instead`);if("channelsFirst"===s&&(e=Yd(e,[0,2,1])),"causal"===r)throw new Kg("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let o=Qu(e,t,a,"same"===r?"same":"valid","NWC",i);return null!=n&&(o=eb(o,n)),o}))}function aw(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:[1,1],r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"valid",s=arguments.length>5?arguments[5]:void 0,i=arguments.length>6?arguments[6]:void 0,o=arguments.length>7&&void 0!==arguments[7]?arguments[7]:null;return wi((()=>{if(null==s&&(s="channelsLast"),Ty(s),3!==e.rank&&4!==e.rank)throw new qg(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${e.rank}.`);if(3!==t.rank&&4!==t.rank)throw new qg(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${e.rank}.`);let l=ew(e,s);if("causal"===r)throw new Kg("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return l=ch({x:l,filter:t,strides:a,pad:"same"===r?"same":"valid",dilations:i,dataFormat:"NHWC",bias:n,activation:o}),"channelsFirst"===s&&(l=Yd(l,[0,3,1,2])),l}))}function rw(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:[1,1,1],r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"valid",s=arguments.length>5?arguments[5]:void 0,i=arguments.length>6?arguments[6]:void 0;return wi((()=>{if(null==s&&(s="channelsLast"),Ty(s),4!==e.rank&&5!==e.rank)throw new qg(`conv3dWithBias expects input to be of rank 4 or 5, but received ${e.rank}.`);if(4!==t.rank&&5!==t.rank)throw new qg(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${e.rank}.`);let o=tw(e,s);if("causal"===r)throw new Kg("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return o=ec(o,t,a,"same"===r?"same":"valid","NDHWC",i),null!=n&&(o=eb(o,n)),"channelsFirst"===s&&(o=Yd(o,[0,4,1,2,3])),o}))}Yv.className="Softmax",Ho(Yv);class sw extends Pb{constructor(e,t){if(super(t),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",sw.verifyArgs(t),this.rank=e,hy(this.rank,"rank"),1!==this.rank&&2!==this.rank&&3!==this.rank)throw new Kg(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=Qv(t.kernelSize,e,"kernelSize"),this.strides=Qv(null==t.strides?1:t.strides,e,"strides"),this.padding=null==t.padding?"valid":t.padding,Cy(this.padding),this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,Ty(this.dataFormat),this.activation=Lv(t.activation),this.useBias=null==t.useBias||t.useBias,this.biasInitializer=Sb(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=rx(t.biasConstraint),this.biasRegularizer=jv(t.biasRegularizer),this.activityRegularizer=jv(t.activityRegularizer),this.dilationRate=Qv(null==t.dilationRate?1:t.dilationRate,e,"dilationRate"),1===this.rank&&Array.isArray(this.dilationRate)&&1!==this.dilationRate.length)throw new qg(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(2===this.rank){if("number"===typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate];else if(2!==this.dilationRate.length)throw new qg(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(3===this.rank)if("number"===typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(3!==this.dilationRate.length)throw new qg(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}static verifyArgs(e){if(Zg("kernelSize"in e,"required key 'kernelSize' not in config"),"number"!==typeof e.kernelSize&&!dy(e.kernelSize,"number",1,3))throw new qg(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(e.kernelSize)}.`)}getConfig(){const e={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:Ov(this.activation),useBias:this.useBias,biasInitializer:Nb(this.biasInitializer),biasRegularizer:Vv(this.biasRegularizer),activityRegularizer:Vv(this.activityRegularizer),biasConstraint:nx(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}class iw extends sw{constructor(e,t){super(e,t),this.kernel=null,iw.verifyArgs(t),this.filters=t.filters,hy(this.filters,"filters"),this.kernelInitializer=Sb(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=rx(t.kernelConstraint),this.kernelRegularizer=jv(t.kernelRegularizer)}build(e){e=Eb(e);const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new qg(`The channel dimension of the input should be defined. Found ${e[t]}`);const n=e[t],a=this.kernelSize.concat([n,this.filters]);this.kernel=this.addWeight("kernel",a,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[t]:n}}],this.built=!0}call(e,t){return wi((()=>{let t;e=Cb(e);const n=null==this.bias?null:this.bias.read(),a=my(this.activation.getClassName());if(null!=a&&2===this.rank)t=aw(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate,a);else{if(1===this.rank)t=nw(e,this.kernel.read(),n,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(2===this.rank)t=aw(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate);else{if(3!==this.rank)throw new Kg("convolutions greater than 3D are not implemented yet.");t=rw(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate)}null!=this.activation&&(t=this.activation.apply(t))}return t}))}computeOutputShape(e){e=Eb(e);const t=[],n="channelsLast"===this.dataFormat?e.slice(1,e.length-1):e.slice(2);for(let r=0;r<n.length;++r){const e=Zv(n[r],this.kernelSize[r],this.padding,this.strides[r],"number"===typeof this.dilationRate?this.dilationRate:this.dilationRate[r]);t.push(e)}let a=[e[0]];return"channelsLast"===this.dataFormat?(a=a.concat(t),a.push(this.filters)):(a.push(this.filters),a=a.concat(t)),a}getConfig(){const e={filters:this.filters,kernelInitializer:Nb(this.kernelInitializer),kernelRegularizer:Vv(this.kernelRegularizer),kernelConstraint:nx(this.kernelConstraint)},t=super.getConfig();return Object.assign(e,t),e}static verifyArgs(e){if(!("filters"in e)||"number"!==typeof e.filters||e.filters<1)throw new qg(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(e.filters)}`)}}class ow extends iw{constructor(e){super(2,e),ow.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!==typeof e.kernelSize&&!dy(e.kernelSize,"number",1,2))throw new qg(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(e.kernelSize)}.`)}}ow.className="Conv2D",Ho(ow);class lw extends iw{constructor(e){super(3,e),lw.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!==typeof e.kernelSize&&(!Array.isArray(e.kernelSize)||1!==e.kernelSize.length&&3!==e.kernelSize.length))throw new qg(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(e.kernelSize)}.`)}}lw.className="Conv3D",Ho(lw);class uw extends ow{constructor(e){if(super(e),this.inputSpec=[new Db({ndim:4})],"same"!==this.padding&&"valid"!==this.padding)throw new qg(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(4!==(e=Eb(e)).length)throw new qg("Input should have rank 4; Received input shape: "+JSON.stringify(e));const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new qg("The channel dimension of the inputs should be defined. Found `None`.");const n=e[t],a=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",a,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Db({ndim:4,axes:{[t]:n}})],this.built=!0}call(e,t){return wi((()=>{let t=Cb(e);if(4!==t.shape.length)throw new qg(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${t.shape.length}`);const n=t.shape,a=n[0];let r,s;"channelsFirst"===this.dataFormat?(r=2,s=3):(r=1,s=2);const i=n[r],o=n[s],l=this.kernelSize[0],u=this.kernelSize[1],c=this.strides[0],p=this.strides[1],d=[a,Jv(i,c,l,this.padding),Jv(o,p,u,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(t=Yd(t,[0,2,3,1]));let h=Ju(t,this.kernel.read(),d,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(h=Yd(h,[0,3,1,2])),null!=this.bias&&(h=eb(h,this.bias.read(),this.dataFormat)),null!=this.activation&&(h=this.activation.apply(h)),h}))}computeOutputShape(e){const t=(e=Eb(e)).slice();let n,a,r;"channelsFirst"===this.dataFormat?(n=1,a=2,r=3):(n=3,a=1,r=2);const s=this.kernelSize[0],i=this.kernelSize[1],o=this.strides[0],l=this.strides[1];return t[n]=this.filters,t[a]=Jv(t[a],o,s,this.padding),t[r]=Jv(t[r],l,i,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}uw.className="Conv2DTranspose",Ho(uw);class cw extends lw{constructor(e){if(super(e),this.inputSpec=[new Db({ndim:5})],"same"!==this.padding&&"valid"!==this.padding)throw new qg(`Conv3DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(5!==(e=Eb(e)).length)throw new qg("Input should have rank 5; Received input shape: "+JSON.stringify(e));const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new qg("The channel dimension of the inputs should be defined. Found `None`.");const n=e[t],a=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",a,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Db({ndim:5,axes:{[t]:n}})],this.built=!0}call(e,t){return wi((()=>{let t=Cb(e);if(5!==t.shape.length)throw new qg(`Conv3DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${t.shape.length}`);const n=t.shape,a=n[0];let r,s,i;"channelsFirst"===this.dataFormat?(i=2,r=3,s=4):(i=1,r=2,s=3);const o=n[i],l=n[r],u=n[s],c=this.kernelSize[0],p=this.kernelSize[1],d=this.kernelSize[2],h=this.strides[0],f=this.strides[1],m=this.strides[2],g=[a,Jv(o,h,c,this.padding),Jv(l,f,p,this.padding),Jv(u,m,d,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(t=Yd(t,[0,2,3,4,1]));let y=nc(t,this.kernel.read(),g,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(y=Yd(y,[0,4,1,2,3])),null!==this.bias&&(y=eb(y,this.bias.read(),this.dataFormat)),null!==this.activation&&(y=this.activation.apply(y)),y}))}computeOutputShape(e){const t=(e=Eb(e)).slice();let n,a,r,s;"channelsFirst"===this.dataFormat?(n=1,a=2,r=3,s=4):(n=4,a=1,r=2,s=3);const i=this.kernelSize[0],o=this.kernelSize[1],l=this.kernelSize[2],u=this.strides[0],c=this.strides[1],p=this.strides[2];return t[n]=this.filters,t[a]=Jv(t[a],u,i,this.padding),t[r]=Jv(t[r],c,o,this.padding),t[s]=Jv(t[s],p,l,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}cw.className="Conv3DTranspose",Ho(cw);class pw extends iw{constructor(e,t){if(super(e,t),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,null==t.filters)throw new qg("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(null!=t.kernelInitializer||null!=t.kernelRegularizer||null!=t.kernelConstraint)throw new qg("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(null!=t.padding&&"same"!==t.padding&&"valid"!==t.padding)throw new qg(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(t.padding)}`);this.depthMultiplier=null==t.depthMultiplier?1:t.depthMultiplier,this.depthwiseInitializer=Sb(t.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=jv(t.depthwiseRegularizer),this.depthwiseConstraint=rx(t.depthwiseConstraint),this.pointwiseInitializer=Sb(t.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=jv(t.pointwiseRegularizer),this.pointwiseConstraint=rx(t.pointwiseConstraint)}build(e){if((e=Eb(e)).length<this.rank+2)throw new qg(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(e)}`);const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t]||e[t]<0)throw new qg(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(e[t])}`);const n=e[t],a=this.kernelSize.concat([n,this.depthMultiplier]),r=[];for(let i=0;i<this.rank;++i)r.push(1);r.push(n*this.depthMultiplier,this.filters);const s=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",a,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,s,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",r,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,s,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,s,this.biasConstraint):this.bias=null,this.inputSpec=[new Db({ndim:this.rank+2,axes:{[t]:n}})],this.built=!0}call(e,t){return wi((()=>{let t;if(e=Cb(e),1===this.rank)throw new Kg("1D separable convolution is not implemented yet.");return 2===this.rank&&("channelsFirst"===this.dataFormat&&(e=Yd(e,[0,2,3,1])),t=cd(e,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(t=eb(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),"channelsFirst"===this.dataFormat&&(t=Yd(t,[0,3,1,2])),t}))}getConfig(){const e=super.getConfig();return delete e.rank,delete e.kernelInitializer,delete e.kernelRegularizer,delete e.kernelConstraint,e.depthwiseInitializer=Nb(this.depthwiseInitializer),e.pointwiseInitializer=Nb(this.pointwiseInitializer),e.depthwiseRegularizer=Vv(this.depthwiseRegularizer),e.pointwiseRegularizer=Vv(this.pointwiseRegularizer),e.depthwiseConstraint=nx(this.depthwiseConstraint),e.pointwiseConstraint=nx(this.pointwiseConstraint),e}}pw.className="SeparableConv";class dw extends pw{constructor(e){super(2,e)}}dw.className="SeparableConv2D",Ho(dw);class hw extends iw{constructor(e){super(1,e),hw.verifyArgs(e),this.inputSpec=[{ndim:3}]}getConfig(){const e=super.getConfig();return delete e.rank,delete e.dataFormat,e}static verifyArgs(e){if("number"!==typeof e.kernelSize&&!dy(e.kernelSize,"number",1,1))throw new qg(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(e.kernelSize)}.`)}}hw.className="Conv1D",Ho(hw);class fw extends Pb{constructor(e){super(e),"number"===typeof e.cropping?this.cropping=[[e.cropping,e.cropping],[e.cropping,e.cropping]]:"number"===typeof e.cropping[0]?this.cropping=[[e.cropping[0],e.cropping[0]],[e.cropping[1],e.cropping[1]]]:this.cropping=e.cropping,this.dataFormat=void 0===e.dataFormat?"channelsLast":e.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(e){return"channelsFirst"===this.dataFormat?[e[0],e[1],e[2]-this.cropping[0][0]-this.cropping[0][1],e[3]-this.cropping[1][0]-this.cropping[1][1]]:[e[0],e[1]-this.cropping[0][0]-this.cropping[0][1],e[2]-this.cropping[1][0]-this.cropping[1][1],e[3]]}call(e,t){return wi((()=>{if(e=Cb(e),"channelsLast"===this.dataFormat){const t=Gy(e,this.cropping[0][0],e.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return Gy(t,this.cropping[1][0],e.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}{const t=Gy(e,this.cropping[0][0],e.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return Gy(t,this.cropping[1][0],e.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}}))}getConfig(){const e={cropping:this.cropping,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}fw.className="Cropping2D",Ho(fw);class mw extends Pb{constructor(e){var t;super(e),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=null==e.size?this.DEFAULT_SIZE:e.size,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Ty(this.dataFormat),this.interpolation=null==e.interpolation?"nearest":e.interpolation,t=this.interpolation,py(wy,"InterpolationFormat",t)}computeOutputShape(e){if("channelsFirst"===this.dataFormat){const t=null==e[2]?null:this.size[0]*e[2],n=null==e[3]?null:this.size[1]*e[3];return[e[0],e[1],t,n]}{const t=null==e[1]?null:this.size[0]*e[1],n=null==e[2]?null:this.size[1]*e[2];return[e[0],t,n,e[3]]}}call(e,t){return wi((()=>{let t=Cb(e);const n=t.shape;if("channelsFirst"===this.dataFormat){t=Yd(t,[0,2,3,1]);const e=this.size[0]*n[2],a=this.size[1]*n[3],r="nearest"===this.interpolation?mf.resizeNearestNeighbor(t,[e,a]):mf.resizeBilinear(t,[e,a]);return Yd(r,[0,3,1,2])}{const e=this.size[0]*n[1],a=this.size[1]*n[2];return"nearest"===this.interpolation?mf.resizeNearestNeighbor(t,[e,a]):mf.resizeBilinear(t,[e,a])}}))}getConfig(){const e={size:this.size,dataFormat:this.dataFormat,interpolation:this.interpolation},t=super.getConfig();return Object.assign(e,t),e}}mw.className="UpSampling2D",Ho(mw);class gw extends sw{constructor(e){super(2,e),this.depthwiseKernel=null,this.depthMultiplier=null==e.depthMultiplier?1:e.depthMultiplier,this.depthwiseInitializer=Sb(e.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=rx(e.depthwiseConstraint),this.depthwiseRegularizer=jv(e.depthwiseRegularizer)}build(e){if((e=Eb(e)).length<4)throw new qg(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(e)}.`);const t="channelsFirst"===this.dataFormat?1:3;if(null==e[t]||e[t]<0)throw new qg(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${e[t]}).`);const n=e[t],a=[this.kernelSize[0],this.kernelSize[1],n,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",a,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[n*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return wi((()=>{let t=function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:[1,1],a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"valid",r=arguments.length>4?arguments[4]:void 0,s=arguments.length>5?arguments[5]:void 0;return wi((()=>{null==r&&(r="channelsLast"),Ty(r);let i=ew(e,r);if(4!==e.rank)throw new qg(`Input for depthwiseConv2d is required to be 4-D, but is instead ${e.rank}-D`);if(4!==t.rank)throw new qg(`depthwiseKernel is required to be 4-D, but is instead ${t.rank}-D`);return i=uc(i,t,n,"same"===a?"same":"valid","NHWC",s),"channelsFirst"===r&&(i=Yd(i,[0,3,1,2])),i}))}(e=Cb(e),this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(t=eb(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),t}))}computeOutputShape(e){e=Eb(e);const t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],a="channelsFirst"===this.dataFormat?e[1]*this.depthMultiplier:e[3]*this.depthMultiplier,r=Zv(t,this.kernelSize[0],this.padding,this.strides[0]),s=Zv(n,this.kernelSize[1],this.padding,this.strides[1]);return"channelsFirst"===this.dataFormat?[e[0],a,r,s]:[e[0],r,s,a]}getConfig(){const e=super.getConfig();return e.depthMultiplier=this.depthMultiplier,e.depthwiseInitializer=Nb(this.depthwiseInitializer),e.depthwiseRegularizer=Vv(this.depthwiseRegularizer),e.depthwiseConstraint=nx(this.depthwiseRegularizer),e}}function yw(e,t,n,a){if(Array.isArray(e)){if(null!=t||null!=n)throw new qg("When inputs is an array, neither initialState or constants should be provided");null!=a&&(n=e.slice(e.length-a,e.length),e=e.slice(0,e.length-a)),e.length>1&&(t=e.slice(1,e.length)),e=e[0]}function r(e){return null==e||Array.isArray(e)?e:[e]}return{inputs:e,initialState:t=r(t),constants:n=r(n)}}function bw(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r=arguments.length>4?arguments[4]:void 0,s=arguments.length>5?arguments[5]:void 0,i=arguments.length>6&&void 0!==arguments[6]&&arguments[6],o=arguments.length>7&&void 0!==arguments[7]&&arguments[7];return wi((()=>{const l=t.shape.length;if(l<3)throw new qg(`Input should be at least 3D, but is ${l}D.`);const u=[1,0].concat(zy(2,l));if(t=Yd(t,u),null!=s)throw new Kg("The rnn() functoin of the deeplearn.js backend does not support constants yet.");i&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),null!=r&&(r=Ro(Ro(r,"bool"),"float32"),r.rank===l-1&&(r=Oc(r,-1)),r=Yd(r,u)),a&&(t=nd(t,0),null!=r&&(r=nd(r,0)));const c=[];let p,d=n;const h=t.shape[0],f=jd(t);let m,g;null!=r&&(m=jd(r));for(let t=0;t<h;++t){const n=f[t],a=wi((()=>e(n,d)));if(null==r)p=a[0],d=a[1];else{const e=wi((()=>{const e=m[t],n=Zo(Cp(e),e);return{output:Fo(Mo(a[0],e),Mo(d[0],n)),newStates:d.map(((t,r)=>Fo(Mo(a[1][r],e),Mo(t,n))))}}));p=e.output,d=e.newStates}o&&c.push(p)}if(o){g=Cd(c,1)}return[p,g,d]}))}gw.className="DepthwiseConv2D",Ho(gw);class xw extends Pb{constructor(e){let t;if(super(e),null==e.cell)throw new qg("cell property is missing for the constructor of RNN.");if(t=Array.isArray(e.cell)?new Cw({cells:e.cell}):e.cell,null==t.stateSize)throw new qg("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=t,this.returnSequences=null!=e.returnSequences&&e.returnSequences,this.returnState=null!=e.returnState&&e.returnState,this.goBackwards=null!=e.goBackwards&&e.goBackwards,this._stateful=null!=e.stateful&&e.stateful,this.unroll=null!=e.unroll&&e.unroll,this.supportsMasking=!0,this.inputSpec=[new Db({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){if(null==this.states_){return zy(0,Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1).map((e=>null))}return this.states_}setStates(e){this.states_=e}computeOutputShape(e){Ib(e)&&(e=e[0]);let t=this.cell.stateSize;Array.isArray(t)||(t=[t]);const n=t[0];let a;if(a=this.returnSequences?[e[0],e[1],n]:[e[0],n],this.returnState){const n=[];for(const a of t)n.push([e[0],a]);return[a].concat(n)}return a}computeMask(e,t){return wi((()=>{Array.isArray(t)&&(t=t[0]);const e=this.returnSequences?t:null;if(this.returnState){const t=this.states.map((e=>null));return[e].concat(t)}return e}))}get states(){if(null==this.states_){const e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,t=[];for(let n=0;n<e;++n)t.push(null);return t}return this.states_}set states(e){this.states_=e}build(e){if(null!=this.numConstants)throw new Kg("Constants support is not implemented in RNN yet.");Ib(e)&&(e=e[0]);const t=this.stateful?e[0]:null,n=e.slice(2);this.inputSpec[0]=new Db({shape:[t,null,...n]});const a=[e[0]].concat(e.slice(2));let r;if(this.cell.build(a),r=Array.isArray(this.cell.stateSize)?this.cell.stateSize:[this.cell.stateSize],null!=this.stateSpec){if(!Qe(this.stateSpec.map((e=>e.shape[e.shape.length-1])),r))throw new qg(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=r.map((e=>new Db({shape:[null,e]})));this.stateful&&this.resetStates()}resetStates(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];wi((()=>{if(!this.stateful)throw new Gg("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape[0];if(null==n)throw new qg("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.states_)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((e=>gp([n,e]))):this.states_=[gp([n,this.cell.stateSize])];else if(null==e)ki(this.states_),null!=this.keptStates&&(ki(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((e=>gp([n,e]))):this.states_[0]=gp([n,this.cell.stateSize]);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new qg(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);!0===t?this.keptStates.push(this.states_.slice()):ki(this.states_);for(let t=0;t<this.states_.length;++t){const a=e[t],r=Array.isArray(this.cell.stateSize)?this.cell.stateSize[t]:this.cell.stateSize,s=[n,r];if(!Qe(a.shape,s))throw new qg(`State ${t} is incompatible with layer ${this.name}: expected shape=${s}, received shape=${a.shape}`);this.states_[t]=a}}this.states_=this.states_.map((e=>Ni(e.clone())))}))}apply(e,t){let n=null==t?null:t.initialState,a=null==t?null:t.constants;null==t&&(t={});const r=yw(e,n,a,this.numConstants);e=r.inputs,n=r.initialState,a=r.constants;let s=[],i=[];if(null!=n){t.initialState=n,s=s.concat(n),this.stateSpec=[];for(const e of n)this.stateSpec.push(new Db({shape:e.shape}));i=i.concat(this.stateSpec)}null!=a&&(t.constants=a,s=s.concat(a),this.numConstants=a.length);if(s[0]instanceof Ob){const n=[e].concat(s),a=this.inputSpec.concat(i),r=this.inputSpec;this.inputSpec=a;const o=super.apply(n,t);return this.inputSpec=r,o}return super.apply(e,t)}call(e,t){return wi((()=>{const n=null==t?null:t.mask,a=null==t?null:t.training;let r=null==t?null:t.initialState;e=Cb(e),null==r&&(r=this.stateful?this.states_:this.getInitialState(e));const s=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(r.length!==s)throw new qg(`RNN Layer has ${s} state(s) but was passed ${r.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");const i={training:a},o=bw(((e,t)=>{const n=this.cell.call([e].concat(t),i);return[n[0],n.slice(1)]}),e,r,this.goBackwards,n,null,this.unroll,this.returnSequences),l=o[0],u=o[1],c=o[2];this.stateful&&this.resetStates(c,a);const p=this.returnSequences?u:l;return this.returnState?[p].concat(c):p}))}getInitialState(e){return wi((()=>{let t=gp(e.shape);return t=Rc(t,[1,2]),t=Vy(t),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map((e=>e>1?Ky(t,[1,e]):t)):this.cell.stateSize>1?[Ky(t,[1,this.cell.stateSize])]:[t]}))}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.cell&&this.cell.setFastWeightInitDuringBuild(e)}getConfig(){const e=super.getConfig(),t={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};null!=this.numConstants&&(t.numConstants=this.numConstants);const n=this.cell.getConfig();return this.getClassName()===xw.className&&(t.cell={className:this.cell.getClassName(),config:n}),Object.assign(Object.assign(Object.assign({},n),e),t)}static fromConfig(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const a=gx(t.cell,n);return new e(Object.assign(t,{cell:a}))}}xw.className="RNN",Ho(xw);class vw extends Pb{}class ww extends vw{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,hy(this.units,"units"),this.activation=Lv(null==e.activation?this.DEFAULT_ACTIVATION:e.activation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=Sb(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Sb(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Sb(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=jv(e.kernelRegularizer),this.recurrentRegularizer=jv(e.recurrentRegularizer),this.biasRegularizer=jv(e.biasRegularizer),this.kernelConstraint=rx(e.kernelConstraint),this.recurrentConstraint=rx(e.recurrentConstraint),this.biasConstraint=rx(e.biasConstraint),this.dropout=My([1,Ly([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=My([1,Ly([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=Eb(e),this.kernel=this.addWeight("kernel",[e[e.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return wi((()=>{if(2!==e.length)throw new qg(`SimpleRNNCell expects 2 input Tensors, got ${e.length}.`);let n=e[1];e=e[0];const a=null!=t.training&&t.training;let r;0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Ew({ones:()=>Cp(e),rate:this.dropout,training:a,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Ew({ones:()=>Cp(n),rate:this.recurrentDropout,training:a,dropoutFunc:this.dropoutFunc}));const s=this.dropoutMask,i=this.recurrentDropoutMask;r=Yy(null!=s?Mo(e,s):e,this.kernel.read()),null!=this.bias&&(r=eb(r,this.bias.read())),null!=i&&(n=Mo(n,i));let o=Fo(r,Yy(n,this.recurrentKernel.read()));return null!=this.activation&&(o=this.activation.apply(o)),[o,o]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:Ov(this.activation),useBias:this.useBias,kernelInitializer:Nb(this.kernelInitializer),recurrentInitializer:Nb(this.recurrentInitializer),biasInitializer:Nb(this.biasInitializer),kernelRegularizer:Vv(this.kernelRegularizer),recurrentRegularizer:Vv(this.recurrentRegularizer),biasRegularizer:Vv(this.biasRegularizer),activityRegularizer:Vv(this.activityRegularizer),kernelConstraint:nx(this.kernelConstraint),recurrentConstraint:nx(this.recurrentConstraint),biasConstraint:nx(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign(Object.assign({},e),t)}}ww.className="SimpleRNNCell",Ho(ww);class kw extends xw{constructor(e){e.cell=new ww(e),super(e)}call(e,t){return wi((()=>{null!=this.cell.dropoutMask&&(ki(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(ki(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,a=null==t?null:t.training,r=null==t?null:t.initialState;return super.call(e,{mask:n,training:a,initialState:r})}))}static fromConfig(e,t){return new e(t)}}kw.className="SimpleRNN",Ho(kw);class Nw extends vw{constructor(e){if(super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.resetAfter)throw new qg("GRUCell does not support reset_after parameter set to true.");this.units=e.units,hy(this.units,"units"),this.activation=Lv(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=Lv(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=Sb(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Sb(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Sb(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=jv(e.kernelRegularizer),this.recurrentRegularizer=jv(e.recurrentRegularizer),this.biasRegularizer=jv(e.biasRegularizer),this.kernelConstraint=rx(e.kernelConstraint),this.recurrentConstraint=rx(e.recurrentConstraint),this.biasConstraint=rx(e.biasConstraint),this.dropout=My([1,Ly([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=My([1,Ly([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){const t=(e=Eb(e))[e.length-1];this.kernel=this.addWeight("kernel",[t,3*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,3*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[3*this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return wi((()=>{if(2!==e.length)throw new qg(`GRUCell expects 2 input Tensors (inputs, h, c), got ${e.length}.`);const n=null!=t.training&&t.training;let a=e[1];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Ew({ones:()=>Cp(e),rate:this.dropout,training:n,count:3,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Ew({ones:()=>Cp(a),rate:this.recurrentDropout,training:n,count:3,dropoutFunc:this.dropoutFunc}));const r=this.dropoutMask,s=this.recurrentDropoutMask;let i,o,l;0<this.dropout&&this.dropout<1&&(e=Mo(e,r[0]));let u=Yy(e,this.kernel.read());this.useBias&&(u=eb(u,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(a=Mo(a,s[0]));const c=this.recurrentKernel.read(),[p,d]=Nd(c,[2*this.units,this.units],c.rank-1),h=Yy(a,p),[f,m,g]=Nd(u,3,u.rank-1),[y,b]=Nd(h,2,h.rank-1);i=this.recurrentActivation.apply(Fo(f,y)),o=this.recurrentActivation.apply(Fo(m,b));const x=Yy(Mo(o,a),d);l=this.activation.apply(Fo(g,x));const v=Fo(Mo(i,a),Mo(Fo(1,ep(i)),l));return[v,v]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:Ov(this.activation),recurrentActivation:Ov(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Nb(this.kernelInitializer),recurrentInitializer:Nb(this.recurrentInitializer),biasInitializer:Nb(this.biasInitializer),kernelRegularizer:Vv(this.kernelRegularizer),recurrentRegularizer:Vv(this.recurrentRegularizer),biasRegularizer:Vv(this.biasRegularizer),activityRegularizer:Vv(this.activityRegularizer),kernelConstraint:nx(this.kernelConstraint),recurrentConstraint:nx(this.recurrentConstraint),biasConstraint:nx(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign(Object.assign({},e),t)}}Nw.className="GRUCell",Ho(Nw);class Sw extends xw{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new Nw(e),super(e)}call(e,t){return wi((()=>{null!=this.cell.dropoutMask&&(ki(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(ki(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,a=null==t?null:t.training,r=null==t?null:t.initialState;return super.call(e,{mask:n,training:a,initialState:r})}))}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}}Sw.className="GRU",Ho(Sw);class Iw extends vw{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,hy(this.units,"units"),this.activation=Lv(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=Lv(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=Sb(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Sb(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Sb(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=e.unitForgetBias,this.kernelRegularizer=jv(e.kernelRegularizer),this.recurrentRegularizer=jv(e.recurrentRegularizer),this.biasRegularizer=jv(e.biasRegularizer),this.kernelConstraint=rx(e.kernelConstraint),this.recurrentConstraint=rx(e.recurrentConstraint),this.biasConstraint=rx(e.biasConstraint),this.dropout=My([1,Ly([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=My([1,Ly([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){var t;const n=(e=Eb(e))[e.length-1];let a;if(this.kernel=this.addWeight("kernel",[n,4*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,4*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){if(this.unitForgetBias){const e=this.biasInitializer,n=this.units;a=new((t=class extends sb{apply(t,a){const r=e.apply([n]),s=(new ob).apply([n]),i=e.apply([2*n]);return qy(qy(r,s),i)}}).className="CustomInit",t)}else a=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.units],null,a,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(e,t){return wi((()=>{const n=null!=t.training&&t.training;if(3!==e.length)throw new qg(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let a=e[1];const r=e[2];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Ew({ones:()=>Cp(e),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Ew({ones:()=>Cp(a),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const s=this.dropoutMask,i=this.recurrentDropoutMask;let o,l,u,c;0<this.dropout&&this.dropout<1&&(e=Mo(e,s[0]));let p=Yy(e,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(a=Mo(a,i[0])),p=Fo(p,Yy(a,this.recurrentKernel.read())),this.useBias&&(p=eb(p,this.bias.read()));const[d,h,f,m]=Nd(p,4,p.rank-1);o=this.recurrentActivation.apply(d),l=this.recurrentActivation.apply(h),u=Fo(Mo(l,r),Mo(o,this.activation.apply(f))),c=this.recurrentActivation.apply(m);const g=Mo(c,this.activation.apply(u));return[g,g,u]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:Ov(this.activation),recurrentActivation:Ov(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Nb(this.kernelInitializer),recurrentInitializer:Nb(this.recurrentInitializer),biasInitializer:Nb(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:Vv(this.kernelRegularizer),recurrentRegularizer:Vv(this.recurrentRegularizer),biasRegularizer:Vv(this.biasRegularizer),activityRegularizer:Vv(this.activityRegularizer),kernelConstraint:nx(this.kernelConstraint),recurrentConstraint:nx(this.recurrentConstraint),biasConstraint:nx(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign(Object.assign({},e),t)}}Iw.className="LSTMCell",Ho(Iw);class Tw extends xw{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new Iw(e),super(e)}call(e,t){return wi((()=>{null!=this.cell.dropoutMask&&(ki(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(ki(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,a=null==t?null:t.training,r=null==t?null:t.initialState;return super.call(e,{mask:n,training:a,initialState:r})}))}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}}Tw.className="LSTM",Ho(Tw);class Cw extends vw{constructor(e){super(e),this.cells=e.cells}get stateSize(){const e=[];for(const t of this.cells.slice().reverse())Array.isArray(t.stateSize)?e.push(...t.stateSize):e.push(t.stateSize);return e}call(e,t){return wi((()=>{let n=e.slice(1);const a=[];for(const e of this.cells.slice().reverse())Array.isArray(e.stateSize)?a.push(n.splice(0,e.stateSize.length)):a.push(n.splice(0,1));a.reverse();const r=[];let s;for(let i=0;i<this.cells.length;++i){const o=this.cells[i];n=a[i],s=0===i?[e[0]].concat(n):[s[0]].concat(n),s=o.call(s,t),r.push(s.slice(1))}n=[];for(const e of r.slice().reverse())n.push(...e);return[s[0]].concat(n)}))}build(e){let t;Ib(e)&&(e=e[0]),this.cells.forEach(((n,a)=>{Ry(`RNNCell_${a}`,(()=>{n.build(e),t=Array.isArray(n.stateSize)?n.stateSize[0]:n.stateSize,e=[e[0],t]}))})),this.built=!0}getConfig(){const e=super.getConfig(),t={cells:this.cells.map((e=>({className:e.getClassName(),config:e.getConfig()})))};return Object.assign(Object.assign({},e),t)}static fromConfig(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const a=[];for(const r of t.cells)a.push(gx(r,n));return new e({cells:a})}get trainableWeights(){if(!this.trainable)return[];const e=[];for(const t of this.cells)e.push(...t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.cells)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const e of this.cells)t.push(...e.trainableWeights);return t.concat(e)}return e}getWeights(){const e=[];for(const t of this.cells)e.push(...t.weights);return _b(e)}setWeights(e){const t=[];for(const n of this.cells){const a=n.weights.length,r=e.splice(a);for(let e=0;e<n.weights.length;++e)t.push([n.weights[e],r[e]])}Fb(t)}}function Ew(e){const{ones:t,rate:n,training:a=!1,count:r=1,dropoutFunc:s}=e,i=()=>null!=s?s(t(),n):tb(t(),n),o=()=>nb(i,t,a);if(!r||r<=1)return Ni(o().clone());return Array(r).fill(void 0).map(o).map((e=>Ni(e.clone())))}Cw.className="StackedRNNCells",Ho(Cw);var $w=function(e,t){var n={};for(var a in e)Object.prototype.hasOwnProperty.call(e,a)&&t.indexOf(a)<0&&(n[a]=e[a]);if(null!=e&&"function"===typeof Object.getOwnPropertySymbols){var r=0;for(a=Object.getOwnPropertySymbols(e);r<a.length;r++)t.indexOf(a[r])<0&&Object.prototype.propertyIsEnumerable.call(e,a[r])&&(n[a[r]]=e[a[r]])}return n};class Rw extends xw{constructor(e){if(e.unroll)throw new Kg("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(e.cell))throw new Kg("It is not possible at the moment to stack convolutional cells.");super(e),this.inputSpec=[new Db({ndim:5})]}call(e,t){return wi((()=>{if(null!=this.cell.dropoutMask&&(ki(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(ki(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),t&&t.constants)throw new qg("ConvRNN2D cell does not support constants");const n=null==t?null:t.mask,a=null==t?null:t.training,r=null==t?null:t.initialState;return super.call(e,{mask:n,training:a,initialState:r})}))}computeOutputShape(e){let t=this.computeSingleOutputShape(e);return this.returnSequences||(t=[t[0],...t.slice(2)]),this.returnState&&(t=[t,...Array(2).fill([e[0],...t.slice(-3)])]),t}getInitialState(e){return wi((()=>{const{stateSize:t}=this.cell,n=e.shape,a=this.computeSingleOutputShape(n),r=gp([a[0],...a.slice(2)]);return Array.isArray(t)?Array(t.length).fill(r):[r]}))}resetStates(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];wi((()=>{if(!this.stateful)throw new Gg("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape,a=this.computeSingleOutputShape(n),r=[a[0],...a.slice(2)];if(null==n[0])throw new qg("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.getStates())Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>gp(r))):this.states_=[gp(r)];else if(null==e)ki(this.states_),null!=this.keptStates&&(ki(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>gp(r))):this.states_[0]=gp(r);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new qg(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t?this.keptStates.push(this.states_.slice()):ki(this.states_);for(let t=0;t<this.states_.length;++t){const n=e[t],a=r;if(!Qe(n.shape,a))throw new qg(`State ${t} is incompatible with layer ${this.name}: expected shape=${a}, received shape=${n.shape}`);this.states_[t]=n}}this.states_=this.states_.map((e=>Ni(e.clone())))}))}computeSingleOutputShape(e){const{dataFormat:t,filters:n,kernelSize:a,padding:r,strides:s,dilationRate:i}=this.cell,o="channelsFirst"===t,l=e[o?3:2],u=e[o?4:3],c=Zv(l,a[0],r,s[0],i[0]),p=Zv(u,a[1],r,s[1],i[1]);return[...e.slice(0,2),...o?[n,c,p]:[c,p,n]]}}Rw.className="ConvRNN2D";class Aw extends Iw{constructor(e){const{filters:t,kernelSize:n,strides:a,padding:r,dataFormat:s,dilationRate:i}=e;super(Object.assign(Object.assign({},e),{units:t})),this.filters=t,hy(this.filters,"filters"),this.kernelSize=Qv(n,2,"kernelSize"),this.kernelSize.forEach((e=>hy(e,"kernelSize"))),this.strides=Qv(a||1,2,"strides"),this.strides.forEach((e=>hy(e,"strides"))),this.padding=r||"valid",Cy(this.padding),this.dataFormat=s||"channelsLast",Ty(this.dataFormat),this.dilationRate=Qv(i||1,2,"dilationRate"),this.dilationRate.forEach((e=>hy(e,"dilationRate")))}build(e){var t;e=Eb(e);const n="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[n])throw new qg(`The channel dimension of the input should be defined. Found ${e[n]}`);const a=e[n],r=this.kernelSize.concat([a,4*this.filters]);this.kernel=this.addWeight("kernel",r,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);const s=this.kernelSize.concat([this.filters,4*this.filters]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",s,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let e;if(this.unitForgetBias){const n=this.biasInitializer,a=this.filters;e=new((t=class extends sb{apply(e,t){return Hy([n.apply([a]),yp([a]),n.apply([2*a])])}}).className="CustomInit",t)}else e=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.filters],null,e,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(e,t){return wi((()=>{if(3!==e.length)throw new qg(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);const n=t.training||!1,a=e[0],r=e[1],s=e[2];0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Ew({ones:()=>Cp(a),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const i=this.dropoutMask,o=(e,t,n)=>t&&t[n]?Mo(t[n],e):e;let l=o(a,i,0),u=o(a,i,1),c=o(a,i,2),p=o(a,i,3);0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Ew({ones:()=>Cp(r),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const d=this.recurrentDropoutMask;let h=o(r,d,0),f=o(r,d,1),m=o(r,d,2),g=o(r,d,3);const[y,b,x,v]=Nd(this.kernel.read(),4,3),[w,k,N,S]=this.useBias?Nd(this.bias.read(),4):[null,null,null,null];l=this.inputConv(l,y,w,this.padding),u=this.inputConv(u,b,k,this.padding),c=this.inputConv(c,x,N,this.padding),p=this.inputConv(p,v,S,this.padding);const[I,T,C,E]=Nd(this.recurrentKernel.read(),4,3);h=this.recurrentConv(h,I),f=this.recurrentConv(f,T),m=this.recurrentConv(m,C),g=this.recurrentConv(g,E);const $=this.recurrentActivation.apply(Fo(l,h)),R=this.recurrentActivation.apply(Fo(u,f)),A=Fo(Mo(R,s),Mo($,this.activation.apply(Fo(c,m)))),_=Mo(this.recurrentActivation.apply(Fo(p,g)),this.activation.apply(A));return[_,_,A]}))}getConfig(){const e=super.getConfig(),{units:t}=e,n=$w(e,["units"]),a={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign(Object.assign({},n),a)}inputConv(e,t,n,a){const r=Yu(e,t,this.strides,a||"valid","channelsFirst"===this.dataFormat?"NCHW":"NHWC",this.dilationRate);return n?eb(r,n,this.dataFormat):r}recurrentConv(e,t){return Yu(e,t,1,"same","channelsFirst"===this.dataFormat?"NCHW":"NHWC")}}Aw.className="ConvLSTM2DCell",Ho(Aw);class _w extends Rw{constructor(e){const t=new Aw(e);super(Object.assign(Object.assign({},e),{cell:t}))}static fromConfig(e,t){return new e(t)}}_w.className="ConvLSTM2D",Ho(_w);class Fw extends Pb{constructor(e){super(e),this.rate=Math.max(Math.min(e.rate,1),0),this.noiseShape=e.noiseShape,this.seed=e.seed,this.supportsMasking=!0}getNoiseShape(e){if(null==this.noiseShape)return this.noiseShape;const t=e.shape,n=[];for(let a=0;a<this.noiseShape.length;++a)n.push(null==this.noiseShape[a]?t[a]:this.noiseShape[a]);return n}call(e,t){return wi((()=>{this.invokeCallHook(e,t);const n=Cb(e);if(0<this.rate&&this.rate<1){const e=null!=t.training&&t.training,a=this.getNoiseShape(n);return nb((()=>tb(n,this.rate,a,this.seed)),(()=>n),e)}return e}))}getConfig(){const e={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},t=super.getConfig();return Object.assign(e,t),e}dispose(){return super.dispose()}}Fw.className="Dropout",Ho(Fw);class Dw extends Fw{constructor(e){super(e),this.inputSpec=[{ndim:3}]}getNoiseShape(e){const t=e.shape;return[t[0],1,t[2]]}}Dw.className="SpatialDropout1D",Ho(Dw);class Ow extends Pb{constructor(e){if(super(e),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",null==e.batchInputShape&&null==e.inputShape&&null!=e.inputDim){let t=null;null!=e.batchSize&&(t=e.batchSize),this.batchInputShape=[t,e.inputDim]}this.units=e.units,hy(this.units,"units"),this.activation=Lv(e.activation),null!=e.useBias&&(this.useBias=e.useBias),this.kernelInitializer=Sb(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=Sb(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=rx(e.kernelConstraint),this.biasConstraint=rx(e.biasConstraint),this.kernelRegularizer=jv(e.kernelRegularizer),this.biasRegularizer=jv(e.biasRegularizer),this.activityRegularizer=jv(e.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(e){const t=(e=Eb(e))[e.length-1];null==this.kernel&&(this.kernel=this.addWeight("kernel",[t,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:t}}],this.built=!0}computeOutputShape(e){const t=(e=Eb(e)).slice();return t[t.length-1]=this.units,t}call(e,t){return wi((()=>{this.invokeCallHook(e,t);const n=Cb(e),a=my(this.activation.getClassName());let r;return null!=a?r=Yy(n,this.kernel.read(),a,this.bias?this.bias.read():null):(r=Yy(n,this.kernel.read()),null!=this.bias&&(r=eb(r,this.bias.read())),null!=this.activation&&(r=this.activation.apply(r))),r}))}getConfig(){const e={units:this.units,activation:Ov(this.activation),useBias:this.useBias,kernelInitializer:Nb(this.kernelInitializer),biasInitializer:Nb(this.biasInitializer),kernelRegularizer:Vv(this.kernelRegularizer),biasRegularizer:Vv(this.biasRegularizer),activityRegularizer:Vv(this.activityRegularizer),kernelConstraint:nx(this.kernelConstraint),biasConstraint:nx(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}Ow.className="Dense",Ho(Ow);class Mw extends Pb{constructor(e){super(e=e||{}),this.inputSpec=[{minNDim:3}],this.dataFormat=e.dataFormat}computeOutputShape(e){e=Eb(e);for(const t of e.slice(1))if(null==t)throw new qg(`The shape of the input to "Flatten" is not fully defined (got ${e.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[e[0],Oy(e,1)]}call(e,t){return wi((()=>{this.invokeCallHook(e,t);let n=Cb(e);if("channelsFirst"===this.dataFormat&&n.rank>1){const e=[0];for(let t=2;t<n.rank;++t)e.push(t);e.push(1),n=Yd(n,e)}return function(e){if(e.rank<=1)throw new qg(`batchFlatten requires a minimum rank of 2. Got rank: ${e.rank}.`);const t=[e.shape[0],Oy(e.shape,1)];return Tu(e,t)}(n)}))}getConfig(){const e={};null!=this.dataFormat&&(e.dataFormat=this.dataFormat);const t=super.getConfig();return Object.assign(e,t),e}}Mw.className="Flatten",Ho(Mw);class Lw extends Pb{constructor(e){super(e),this.supportsMasking=!0,this.activation=Lv(e.activation)}call(e,t){return wi((()=>{this.invokeCallHook(e,t);const n=Cb(e);return this.activation.apply(n)}))}getConfig(){const e={activation:Ov(this.activation)},t=super.getConfig();return Object.assign(e,t),e}}Lw.className="Activation",Ho(Lw);class zw extends Pb{constructor(e){super(e),this.n=e.n,this.inputSpec=[{ndim:2}]}computeOutputShape(e){return[e[0],this.n,e[1]]}call(e,t){return wi((()=>{return e=Cb(e),t=e,n=this.n,wi((()=>{if(2!==t.shape.length)throw new qg(`repeat() expects a rank-2 tensor, but received a rank-${t.shape.length} tensor.`);return Ky(Vy(t,1),[1,n,1])}));var t,n}))}getConfig(){const e={n:this.n},t=super.getConfig();return Object.assign(e,t),e}}zw.className="RepeatVector",Ho(zw);class Pw extends Pb{constructor(e){super(e),this.targetShape=e.targetShape;for(let t=0;t<this.targetShape.length;++t)this.isUnknown(this.targetShape[t])&&(this.targetShape[t]=null)}isUnknown(e){return e<0||null==e}fixUnknownDimension(e,t){const n="Total size of new array must be unchanged.",a=t.slice();let r=1,s=null;for(let o=0;o<a.length;++o){const e=a[o];if(this.isUnknown(e)){if(null!==s)throw new qg("Can only specifiy one unknown dimension.");s=o}else r*=e}const i=Oy(e);if(null!==s){if(0===r||i%r!==0)throw new qg(n);a[s]=i/r}else if(i!==r)throw new qg(n);return a}computeOutputShape(e){let t=!1;for(let n=0;n<e.length;++n)if(this.isUnknown(e[n])){t=!0;break}return t?e.slice(0,1).concat(this.targetShape):e.slice(0,1).concat(this.fixUnknownDimension(e.slice(1),this.targetShape))}call(e,t){return wi((()=>{this.invokeCallHook(e,t);const n=Cb(e),a=n.shape,r=a.slice(0,1).concat(this.fixUnknownDimension(a.slice(1),this.targetShape));return Tu(n,r)}))}getConfig(){const e={targetShape:this.targetShape},t=super.getConfig();return Object.assign(e,t),e}}Pw.className="Reshape",Ho(Pw);class Bw extends Pb{constructor(e){if(super(e),null==e.dims)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(e.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${e.dims} instead.`);const t=zy(1,e.dims.length+1);if(!Qe(e.dims.slice().sort(),t))throw new Error("Invalid permutation `dims`: "+JSON.stringify(e.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=e.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new Db({ndim:this.dims.length+1})]}computeOutputShape(e){const t=(e=Eb(e)).slice();return this.dims.forEach(((n,a)=>{t[a+1]=e[n]})),t}call(e,t){return Yd(Cb(e),this.dimsIncludingBatch)}getConfig(){const e={dims:this.dims},t=super.getConfig();return Object.assign(e,t),e}}Bw.className="Permute",Ho(Bw);class Ww extends Pb{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,this.maskValue=null!=e?null==e.maskValue?0:e.maskValue:0}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={maskValue:this.maskValue};return Object.assign(t,e),t}computeMask(e,t){const n=Cb(e);return au(Ip(n,this.maskValue),-1)}call(e,t){return wi((()=>{this.invokeCallHook(e,t);const n=Cb(e),a=au(Ip(n,this.maskValue),-1,!0);return Mo(n,Ro(a,n.dtype))}))}}Ww.className="Masking",Ho(Ww);class Vw extends Pb{constructor(e){if(super(e),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",null==e.batchInputShape&&null==e.inputShape){let t=null;null!=e.batchSize&&(t=e.batchSize),null==e.inputLength?this.batchInputShape=[t,null]:this.batchInputShape=[t].concat(ty(e.inputLength))}this.inputDim=e.inputDim,hy(this.inputDim,"inputDim"),this.outputDim=e.outputDim,hy(this.outputDim,"outputDim"),this.embeddingsInitializer=Sb(e.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=jv(e.embeddingsRegularizer),this.activityRegularizer=jv(e.activityRegularizer),this.embeddingsConstraint=rx(e.embeddingsConstraint),this.maskZero=e.maskZero,this.supportsMasking=e.maskZero,this.inputLength=e.inputLength}build(e){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(e){}computeMask(e,t){return wi((()=>this.maskZero?(e=Cb(e),Ip(e,Po(e))):null))}computeOutputShape(e){if(e=Eb(e),null==this.inputLength)return[...e,this.outputDim];const t=ty(this.inputLength);if(t.length!==e.length-1)throw new qg(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);{let n=0;for(let a=0;a<t.length;++a){const r=t[a],s=e[a+1];if(null!=r&&null!=s&&r!==s)throw new qg(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);null==r&&(t[n]=s),n++}}return[e[0],...t,this.outputDim]}call(e,t){return wi((()=>{this.invokeCallHook(e,t);let n=Cb(e);"int32"!==n.dtype&&(n=Wy(n,"int32"));const a=Qy(this.embeddings.read(),Tu(n,[n.size]));return Tu(a,Eb(this.computeOutputShape(n.shape)))}))}getConfig(){const e={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:Nb(this.embeddingsInitializer),embeddingsRegularizer:Vv(this.embeddingsRegularizer),activityRegularizer:Vv(this.activityRegularizer),embeddingsConstraint:nx(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},t=super.getConfig();return Object.assign(e,t),e}}Vw.className="Embedding",Ho(Vw);class Uw extends Pb{constructor(e){super(e||{}),this.supportsMasking=!0}mergeFunction(e){throw new Kg}computeElementwiseOpOutputShape(e,t){if(null==e||null==t)return null;if(e.length<t.length)return this.computeElementwiseOpOutputShape(t,e);if(0===t.length)return e;const n=e.slice(0,e.length-t.length);for(let a=0;a<t.length;++a){const r=e[e.length-t.length+a],s=t[a];if(null==r||null==s||r<0||s<0)n.push(null);else if(1===r)n.push(s);else if(1===s)n.push(r);else{if(r!==s)throw new qg("Operands could not be broadcast together with shapes "+JSON.stringify(e)+" "+JSON.stringify(t));n.push(r)}}return n}build(e){if(Array.isArray(e)&&!Array.isArray(e[0])&&(e=[Eb(e)]),e.length<2)throw new qg(`A merge layer should be called on an Array of at least 2 inputs. Got ${e.length} input(s).`);let t=[];for(const r of e)null!=r&&null!==r[0]&&t.push(r[0]);if(t=uy(t),t.length>1)throw new qg(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(e)}.`);let n=null==e[0]?null:e[0].slice(1);for(let r=1;r<e.length;++r){const t=null==e[r]?null:e[r].slice(1);n=this.computeElementwiseOpOutputShape(n,t)}const a=e.map((e=>e.length));-1===e.indexOf(null)&&1===uy(a).length?this.reshapeRequired=!1:this.reshapeRequired=!0}call(e,t){return wi((()=>{if(this.reshapeRequired){const t=[],n=e.map((e=>e.rank));if(-1===n.indexOf(null)){const a=Ly(n);for(let n of e){const e=n.rank;for(let t=0;t<a-e;++t)n=Vy(n,1);t.push(n)}return this.mergeFunction(t)}{let n=!1;for(const s of e){const e=s.rank;if(null==e){const e=s.shape,a=e[0],r=e.slice(1).concat([a]);let i=Tu(s,[a].concat(Oy(e.slice(1))));i=Yd(i,[1,0]),i=Tu(i,r),t.push(i),n=!0}else if(e>1){const a=zy(1,e).concat([0]);t.push(Yd(s,a)),n=!0}else t.push(s)}let a=this.mergeFunction(t);const r=a.rank;if(n)if(null==r){const e=a.shape,t=e[e.length-1],n=[t].concat(e.slice(0,e.length-1));a=Tu(Yd(Tu(a,[-1,t]),[1,0]),n)}else if(r>1){const e=[r-1].concat(zy(0,r-1));a=Yd(a,e)}return a}}return this.mergeFunction(e)}))}computeOutputShape(e){let t;t=null==e[0]?null:e[0].slice(1);for(let a=1;a<e.length;++a){const n=null==e[a]?null:e[a].slice(1);t=this.computeElementwiseOpOutputShape(t,n)}let n=[];for(const a of e)null!=a&&null!==a[0]&&n.push(a[0]);return n=uy(n),t=1===n.length?n.concat(t):[null].concat(t),t}computeMask(e,t){return wi((()=>{if(null==t)return null;if(!Array.isArray(t))throw new qg("`mask` should be an Array");if(!Array.isArray(e))throw new qg("`inputs` should be an Array");if(t.length!==e.length)throw new qg(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${e.length} vs ${t.length})`);if(t.every((e=>null==e)))return null;let n=(t=t.map((e=>null==e?e:Oc(e,0))))[0];for(let e=1;e<t.length-1;++e)n=sp(n,t[e]);return n}))}}class jw extends Uw{constructor(e){super(e)}mergeFunction(e){return wi((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=Fo(t,e[n]);return t}))}}jw.className="Add",Ho(jw);class Gw extends Uw{constructor(e){super(e)}mergeFunction(e){return wi((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=Mo(t,e[n]);return t}))}}Gw.className="Multiply",Ho(Gw);class Hw extends Uw{constructor(e){super(e)}mergeFunction(e){return wi((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=Fo(t,e[n]);return Mo(1/e.length,t)}))}}Hw.className="Average",Ho(Hw);class qw extends Uw{constructor(e){super(e)}mergeFunction(e){return wi((()=>{let t=e[0];for(let n=1;n<e.length;++n)t=rl(t,e[n]);return t}))}}qw.className="Maximum",Ho(qw);class Kw extends Uw{constructor(e){super(e)}mergeFunction(e){return wi((()=>{let t=e[0];for(let n=1;n<e.length;++n)t=xp(t,e[n]);return t}))}}Kw.className="Minimum",Ho(Kw);class Xw extends Uw{constructor(e){super(e),this.DEFAULT_AXIS=-1,null==e&&(e={}),this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){if(!Array.isArray(e)||!Array.isArray(e[0])||1===e.length)throw new qg("A `Concatenate` layer should be called on a list of at least 2 inputs");let t=!0;for(const a of e)if(null!=a){t=!1;break}if(t)return;const n=[];for(let a=0;a<e.length;++a){const t=e[a].slice();t.splice(this.axis,1);let r=!1;for(const e of n)if(Qe(e,t)){r=!0;break}r||n.push(t)}if(n.length>1)throw new qg("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(e))}mergeFunction(e){return wi((()=>Hy(e,this.axis)))}computeOutputShape(e){if(!Array.isArray(e)||!Array.isArray(e[0]))throw new qg("A `Concatenate` layer should be called on a list of inputs.");const t=e,n=t[0].slice(),a=this.axis<0?n.length+this.axis:this.axis;for(const r of t.slice(1)){if(null==n[a]||null==r[a]){n[a]=null;break}n[a]+=r[a]}return n}computeMask(e,t){if(null==t)return null;if(!Array.isArray(t))throw new qg("`mask` should be an array for Concatenate");if(!Array.isArray(e))throw new qg("`inputs` should be an array for Concatenate");if(t.length!==e.length)throw new qg(`Mismatch in the length of mask (${t.length}) and the legnth of inputs (${e.length})`);return wi((()=>{let n=!0;if(t.forEach((e=>{null==e||(n=!1)})),n)return null;const a=[];for(let s=0;s<e.length;++s)null==t[s]?a.push(Ro(Cp(e[s]),"bool")):t[s].rank<e[s].rank?a.push(Oc(t[s],-1)):a.push(t[s]);const r=$u(a,this.axis);return nu(r,-1,!1)}))}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}function Yw(e,t){for(;e<0;)e+=t;return e}Xw.className="Concatenate",Ho(Xw);class Qw extends Uw{constructor(e){super(e),this.axes=e.axes,this.normalize=null!=e.normalize&&e.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){qe(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const t=e[0],n=e[1];if(t.length>3||n.length>3)throw new Kg("Dot layer does not support tensors of 4D or higher rank yet.");const a=this.interpretAxes(t,n);if(t[a[0]]!==n[a[1]])throw new qg(`Dimension incompatibility: ${t[a[0]]} !== ${n[a[1]]}`)}mergeFunction(e){if(2!==e.length)throw new qg(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${e.length} input(s).`);let t,n=e[0],a=e[1];return t=Array.isArray(this.axes)?this.axes.map(((t,n)=>Yw(t,e[n].shape.length))):[Yw(this.axes,n.shape.length),Yw(this.axes,a.shape.length)],this.normalize&&(n=yx(n,t[0]),a=yx(a,t[1])),function(e,t,n){if(e.shape.length>3||t.shape.length>3)throw new Kg("batchDot is not implemented for tensors of 4D or higher rank yet");if(qe(e.shape.length>=2,(()=>`batchDot requires the rank of x to be >= 2, but got ${e.shape.length}`)),qe(e.shape.length>=2,(()=>`batchDot requires the rank of y to be >= 2, but got ${t.shape.length}`)),"number"===typeof n&&(n=[n,n]),"complex64"===e.dtype||"complex64"===t.dtype)throw new Kg("batchDot is not implemented for complex64-type Tensors yet.");const a=e.shape.length,r=t.shape.length;null==n&&(n=[a-1,r-2]);const s=n;return wi((()=>{let n,i;if(a>r){n=a-r;const e=[];for(let t=0;t<n;++t)e.push(1);t=Tu(t,t.shape.concat(e))}else if(r>a){n=r-a;const t=[];for(let e=0;e<n;++e)t.push(1);e=Tu(e,e.shape.concat(t))}else n=0;if(2===e.shape.length&&2===t.shape.length)i=s[0]===s[1]?Rc(Mo(e,t),s[0]):Rc(Mo(Yd(e,[1,0]),t),s[1]);else{const n=s[0]!==e.shape.length-1,a=s[1]===t.shape.length-1;i=Ru(e,t,n,a)}if(n>0){let e;e=a>r?a+r-3:a-1;const t=[];for(let a=e;a<e+n;++a)t.push(a);i=Td(i,t)}return 1===i.shape.length&&(i=Oc(i,1)),i}))}(n,a,t)}interpretAxes(e,t){let n;return n=Array.isArray(this.axes)?this.axes:[Yw(this.axes,e.length),Yw(this.axes,t.length)],n}computeOutputShape(e){qe(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const t=e[0].slice(),n=e[1].slice();if(t.length>3||n.length>3)throw new Kg("Dot layer does not support tensors of 4D or higher rank yet.");const a=this.interpretAxes(t,n);t.splice(a[0],1),n.splice(a[1],1),n.splice(0,1);const r=t.concat(n);return 1===r.length&&r.push(1),r}computeMask(e,t){return null}getConfig(){const e={axes:this.axes,normalize:this.normalize},t=super.getConfig();return Object.assign(e,t),e}}Qw.className="Dot",Ho(Qw);class Zw extends Pb{constructor(e){super(e),this.supportsMasking=!0,this.stddev=e.stddev}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={stddev:this.stddev};return Object.assign(t,e),t}call(e,t){return wi((()=>{this.invokeCallHook(e,t);const n=Cb(e);return nb((()=>Fo(Xy(n.shape,0,this.stddev),n)),(()=>n),t.training||!1)}))}}Zw.className="GaussianNoise",Ho(Zw);class Jw extends Pb{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return wi((()=>{this.invokeCallHook(e,t);const n=Cb(e);if(this.rate>0&&this.rate<1){return nb((()=>{const e=Math.sqrt(this.rate/(1-this.rate));return Mo(n,Xy(n.shape,1,e))}),(()=>n),t.training||!1)}return n}))}}Jw.className="GaussianDropout",Ho(Jw);class ek extends Pb{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate,this.noiseShape=e.noiseShape}_getNoiseShape(e){return this.noiseShape||Cb(e).shape}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return wi((()=>{if(this.rate<1&&this.rate>0){const n=this._getNoiseShape(e),a=()=>{const t=Cb(e),a=-1.7580993408473766;let r=Vc(Xp(n),this.rate);r=Wy(r,"float32");const s=((1-this.rate)*(1+this.rate*a**2))**-.5,i=-s*a*this.rate,o=Fo(Mo(t,r),Mo(Fo(r,-1),a));return Fo(Mo(o,s),i)};return nb(a,(()=>Cb(e)),t.training||!1)}return e}))}}function tk(e,t,n,a,r){let s,i=arguments.length>5&&void 0!==arguments[5]?arguments[5]:.001;if(2===e.rank)s=Lu(e,t,n,a,r,i);else if(3===e.rank)s=zu(e,t,n,a,r,i);else{if(4!==e.rank)throw new Kg(`batchNormalization is not implemented for array of rank ${e.rank} yet`);s=Pu(e,t,n,a,r,i)}return s}function nk(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:.001;return Qe(a.slice().sort(),zy(0,e.rank-1))?function(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:.001;return wi((()=>{const s=kp(e,a),i=s.mean,o=s.variance;return[tk(e,i,o,n,t,r),i,o]}))}(e,t,n,a,r):function(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:.001;return wi((()=>{const s=kp(e,a),i=s.mean,o=s.variance,l=[];for(const t of zy(0,e.rank))-1!==a.indexOf(t)?l.push(1):l.push(e.shape[t]);const u=Tu(i,l),c=Tu(o,l),p=null==t?null:Tu(t,l),d=null==n?null:Tu(n,l);return[tk(e,u,c,d,p,r),i,o]}))}(e,t,n,a,r)}ek.className="AlphaDropout",Ho(ek);class ak extends Pb{constructor(e){null==e&&(e={}),super(e),this.supportsMasking=!0,this.axis=null==e.axis?-1:e.axis,this.momentum=null==e.momentum?.99:e.momentum,this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=Sb(e.betaInitializer||"zeros"),this.gammaInitializer=Sb(e.gammaInitializer||"ones"),this.movingMeanInitializer=Sb(e.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=Sb(e.movingVarianceInitializer||"ones"),this.betaConstraint=rx(e.betaConstraint),this.gammaConstraint=rx(e.gammaConstraint),this.betaRegularizer=jv(e.betaRegularizer),this.gammaRegularizer=jv(e.gammaRegularizer)}build(e){e=Eb(e);const t=this.axis>=0?this.axis:this.axis+e.length,n=e[t];if(null==n)throw new qg(`Axis ${t} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(e)}.`);this.inputSpec=[new Db({ndim:e.length,axes:{[t]:n}})];const a=[n];this.scale&&(this.gamma=this.addWeight("gamma",a,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",a,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",a,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",a,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(e,t){return wi((()=>{const n=null!=t.training&&t.training,a=Cb(e),r=a.shape,s=r.length,i=zy(0,s),o=this.axis>=0?this.axis:this.axis+s;i.splice(o,1);const l=Qg(1,s);l[o]=r[o];const u=i.slice();u.sort();const c=!Qe(u,zy(0,s).slice(0,s-1));if(!n)return(()=>{if(c){const e=Tu(this.movingMean.read(),l),t=Tu(this.movingVariance.read(),l),n=this.center?Tu(this.beta.read(),l):null,r=this.scale?Tu(this.gamma.read(),l):null;return tk(a,e,t,n,r,this.epsilon)}return tk(a,this.movingMean.read(),this.movingVariance.read(),null==this.beta?null:this.beta.read(),null==this.gamma?null:this.gamma.read(),this.epsilon)})();const[p,d,h]=nk(a,this.gamma.read(),this.beta.read(),i,this.epsilon),f=(e,t,n)=>{wi((()=>{const a=1-n,r=e.read(),s=Mo(Zo(r,t),a);e.write(Zo(r,s))}))};return(()=>{f(this.movingMean,d,this.momentum),f(this.movingVariance,h,this.momentum)})(),p}))}getConfig(){const e={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Nb(this.betaInitializer),gammaInitializer:Nb(this.gammaInitializer),movingMeanInitializer:Nb(this.movingMeanInitializer),movingVarianceInitializer:Nb(this.movingVarianceInitializer),betaRegularizer:Vv(this.betaRegularizer),gammaRegularizer:Vv(this.gammaRegularizer),betaConstraint:nx(this.betaConstraint),gammaConstraint:nx(this.gammaConstraint)},t=super.getConfig();return Object.assign(e,t),e}}ak.className="BatchNormalization",Ho(ak);class rk extends Pb{constructor(e){if(null==e&&(e={}),super(e),this.axis=null==e.axis?-1:e.axis,"number"===typeof this.axis){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else{if(!Array.isArray(this.axis))throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);for(const e of this.axis)if(!Number.isInteger(e))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=Sb(e.betaInitializer||"zeros"),this.gammaInitializer=Sb(e.gammaInitializer||"ones"),this.betaRegularizer=jv(e.betaRegularizer),this.gammaRegularizer=jv(e.gammaRegularizer),this.supportsMasking=!0}build(e){const t=(e=Eb(e)).length;"number"===typeof this.axis&&(this.axis=[this.axis]);for(let r=0;r<this.axis.length;++r)this.axis[r]<0&&(this.axis[r]+=t);for(const r of this.axis)if(r<0||r>=t)throw new Error(`Invalid axis: ${r}`);if(this.axis.length!==uy(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);const n=this.axis.map((t=>e[t])),a=!0;this.scale?this.gamma=this.addWeight("gamma",n,"float32",this.gammaInitializer,this.gammaRegularizer,a):this.gamma=null,this.center?this.beta=this.addWeight("beta",n,"float32",this.betaInitializer,this.betaRegularizer,a):this.beta=null,this.built=!0}call(e,t){const n=Cb(e),a=n.shape,r=a.length;return wi((()=>{let{mean:e,variance:t}=kp(n,this.axis,!0);const s=Qg(1,r);for(const n of this.axis)s[n]=a[n];const i=e=>null!=e&&e.shape.length!==r?Tu(e,s):e;let o=this.scale?i(this.gamma.read()):null,l=this.center?i(this.beta.read()):null;const u=[],c=[];for(let n=0;n<r;++n)-1!==this.axis.indexOf(n)?(u.push(a[n]),c.push(1)):(u.push(1),c.push(a[n]));return e=Lc(e,u),t=Lc(t,u),null!=o&&(o=Lc(o,c)),null!=l&&(l=Lc(l,c)),tk(n,e,t,l,o,this.epsilon)}))}getConfig(){const e={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Nb(this.betaInitializer),gammaInitializer:Nb(this.gammaInitializer),betaRegularizer:Vv(this.betaRegularizer),gammaRegularizer:Vv(this.gammaRegularizer)},t=super.getConfig();return Object.assign(e,t),e}}rk.className="LayerNormalization",Ho(rk);class sk extends Pb{constructor(e){if(null==e&&(e={}),super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,null==e.padding)this.padding=[[1,1],[1,1]];else if("number"===typeof e.padding)this.padding=[[e.padding,e.padding],[e.padding,e.padding]];else{if(e.padding=e.padding,2!==e.padding.length)throw new qg(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${e.padding.length} array.`);let t,n;if("number"===typeof e.padding[0])t=[e.padding[0],e.padding[0]],n=[e.padding[1],e.padding[1]];else{if(e.padding=e.padding,2!==e.padding[0].length)throw new qg(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${e.padding[0].length} array.`);if(t=e.padding[0],2!==e.padding[1].length)throw new qg(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${e.padding[1].length} array.`);n=e.padding[1]}this.padding=[t,n]}this.inputSpec=[new Db({ndim:4})]}computeOutputShape(e){let t,n;return e=Eb(e),"channelsFirst"===this.dataFormat?(t=null!=e[2]&&e[2]>=0?e[2]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[3]&&e[3]>=0?e[3]+this.padding[1][0]+this.padding[1][1]:null,[e[0],e[1],t,n]):(t=null!=e[1]&&e[1]>=0?e[1]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[2]&&e[2]>=0?e[2]+this.padding[1][0]+this.padding[1][1]:null,[e[0],t,n,e[3]])}call(e,t){return wi((()=>{return t=Cb(e),n=this.padding,a=this.dataFormat,wi((()=>{if(4!==t.rank)throw new qg(`temporalPadding expects input tensor to be 4-D, but received a ${t.rank}-D tensor.`);if(null==n&&(n=[[1,1],[1,1]]),2!==n.length||2!==n[0].length||2!==n[1].length)throw new qg("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(null==a&&(a="channelsLast"),"channelsLast"!==a&&"channelsFirst"!==a)throw new qg(`Unknown data format: ${a}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let e;return e="channelsFirst"===a?[[0,0],[0,0],n[0],n[1]]:[[0,0],n[0],n[1],[0,0]],$p(t,e)}));var t,n,a}))}getConfig(){const e={padding:this.padding,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}function ik(e,t,n,a,r,s){return wi((()=>{let i;Ty(r),Ey(s),Cy(a),null==n&&(n=[1,1]),null==a&&(a="valid"),null==r&&(r="channelsLast"),null==s&&(s="max"),e=ew(e,r);const o="same"===a?"same":"valid";return i="max"===s?dp(e,t,n,o):Cu(e,t,n,o),"channelsFirst"===r&&(i=Yd(i,[0,3,1,2])),i}))}function ok(e,t,n,a,r,s){return wi((()=>{let i;Ty(r),Ey(s),Cy(a),null==n&&(n=[1,1,1]),null==a&&(a="valid"),null==r&&(r="channelsLast"),null==s&&(s="max"),e=tw(e,r);const o="same"===a?"same":"valid";return i="max"===s?hp(e,t,n,o):Eu(e,t,n,o),"channelsFirst"===r&&(i=Yd(i,[0,4,1,2,3])),i}))}sk.className="ZeroPadding2D",Ho(sk);class lk extends Pb{constructor(e){if(null==e.poolSize&&(e.poolSize=2),super(e),"number"===typeof e.poolSize)this.poolSize=[e.poolSize];else{if(!Array.isArray(e.poolSize)||1!==e.poolSize.length||"number"!==typeof e.poolSize[0])throw new qg(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.poolSize)}`);this.poolSize=e.poolSize}if(hy(this.poolSize,"poolSize"),null==e.strides)this.strides=this.poolSize;else if("number"===typeof e.strides)this.strides=[e.strides];else{if(!Array.isArray(e.strides)||1!==e.strides.length||"number"!==typeof e.strides[0])throw new qg(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.strides)}`);this.strides=e.strides}hy(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,Cy(this.padding),this.inputSpec=[new Db({ndim:3})]}computeOutputShape(e){const t=Zv((e=Eb(e))[1],this.poolSize[0],this.padding,this.strides[0]);return[e[0],t,e[2]]}call(e,t){return wi((()=>{this.invokeCallHook(e,t),e=Vy(Cb(e),2);const n=this.poolingFunction(Cb(e),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return Td(n,[2])}))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides},t=super.getConfig();return Object.assign(e,t),e}}class uk extends lk{constructor(e){super(e)}poolingFunction(e,t,n,a,r){return Ty(r),Cy(a),ik(e,t,n,a,r,"max")}}uk.className="MaxPooling1D",Ho(uk);class ck extends lk{constructor(e){super(e)}poolingFunction(e,t,n,a,r){return Ty(r),Cy(a),ik(e,t,n,a,r,"avg")}}ck.className="AveragePooling1D",Ho(ck);class pk extends Pb{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(2!==e.strides.length)throw new qg(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides];hy(this.poolSize,"poolSize"),hy(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Ty(this.dataFormat),Cy(this.padding),this.inputSpec=[new Db({ndim:4})]}computeOutputShape(e){e=Eb(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2];return t=Zv(t,this.poolSize[0],this.padding,this.strides[0]),n=Zv(n,this.poolSize[1],this.padding,this.strides[1]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n]:[e[0],t,n,e[3]]}call(e,t){return wi((()=>(this.invokeCallHook(e,t),this.poolingFunction(Cb(e),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class dk extends pk{constructor(e){super(e)}poolingFunction(e,t,n,a,r){return Ty(r),Cy(a),ik(e,t,n,a,r,"max")}}dk.className="MaxPooling2D",Ho(dk);class hk extends pk{constructor(e){super(e)}poolingFunction(e,t,n,a,r){return Ty(r),Cy(a),ik(e,t,n,a,r,"avg")}}hk.className="AveragePooling2D",Ho(hk);class fk extends Pb{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(3!==e.strides.length)throw new qg(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides,e.strides];hy(this.poolSize,"poolSize"),hy(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Ty(this.dataFormat),Cy(this.padding),this.inputSpec=[new Db({ndim:5})]}computeOutputShape(e){e=Eb(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],a="channelsFirst"===this.dataFormat?e[4]:e[3];return t=Zv(t,this.poolSize[0],this.padding,this.strides[0]),n=Zv(n,this.poolSize[1],this.padding,this.strides[1]),a=Zv(a,this.poolSize[2],this.padding,this.strides[2]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n,a]:[e[0],t,n,a,e[4]]}call(e,t){return wi((()=>(this.invokeCallHook(e,t),this.poolingFunction(Cb(e),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class mk extends fk{constructor(e){super(e)}poolingFunction(e,t,n,a,r){return Ty(r),Cy(a),ok(e,t,n,a,r,"max")}}mk.className="MaxPooling3D",Ho(mk);class gk extends fk{constructor(e){super(e)}poolingFunction(e,t,n,a,r){return Ty(r),Cy(a),ok(e,t,n,a,r,"avg")}}gk.className="AveragePooling3D",Ho(gk);class yk extends Pb{constructor(e){super(e),this.inputSpec=[new Db({ndim:3})]}computeOutputShape(e){return[e[0],e[2]]}call(e,t){throw new Kg}}class bk extends yk{constructor(e){super(e||{})}call(e,t){return wi((()=>{const t=Cb(e);return mp(t,1)}))}}bk.className="GlobalAveragePooling1D",Ho(bk);class xk extends yk{constructor(e){super(e||{})}call(e,t){return wi((()=>{const t=Cb(e);return Ec(t,1)}))}}xk.className="GlobalMaxPooling1D",Ho(xk);class vk extends Pb{constructor(e){super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Ty(this.dataFormat),this.inputSpec=[new Db({ndim:4})]}computeOutputShape(e){return"channelsLast"===this.dataFormat?[e[0],e[3]]:[e[0],e[1]]}call(e,t){throw new Kg}getConfig(){const e={dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class wk extends vk{call(e,t){return wi((()=>{const t=Cb(e);return"channelsLast"===this.dataFormat?mp(t,[1,2]):mp(t,[2,3])}))}}wk.className="GlobalAveragePooling2D",Ho(wk);class kk extends vk{call(e,t){return wi((()=>{const t=Cb(e);return"channelsLast"===this.dataFormat?Ec(t,[1,2]):Ec(t,[2,3])}))}}kk.className="GlobalMaxPooling2D",Ho(kk);class Nk extends Pb{constructor(e){super(e),this.layer=e.layer}build(e){this.built=!0}get trainable(){return null!=this.layer&&this.layer.trainable}set trainable(e){null!=this.layer&&(this.layer.trainable=e)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(e){this.layer.setWeights(e)}getConfig(){const e={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},t=super.getConfig();return Object.assign(e,t),e}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.layer&&this.layer.setFastWeightInitDuringBuild(e)}static fromConfig(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const a=gx(t.layer,n);delete t.layer;const r={layer:a};return Object.assign(r,t),new e(r)}}class Sk extends Nk{constructor(e){super(e),this.supportsMasking=!0}build(e){if((e=Eb(e)).length<3)throw new qg(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(e)}`);this.inputSpec=[{shape:e}];const t=[e[0]].concat(e.slice(2));this.layer.built||(this.layer.build(t),this.layer.built=!0),super.build(e)}computeOutputShape(e){const t=[(e=Eb(e))[0]].concat(e.slice(2)),n=this.layer.computeOutputShape(t),a=e[1];return[n[0],a].concat(n.slice(1))}call(e,t){return wi((()=>bw(((e,n)=>[Cb(this.layer.call(e,t)),[]]),e=Cb(e),[],!1,null,null,!1,!0)[1]))}}Sk.className="TimeDistributed",Ho(Sk);class Ik extends Nk{constructor(e){super(e);const t=e.layer.getConfig(),n={};n.className=e.layer.getClassName(),n.config=t,this.forwardLayer=gx(n),t.goBackwards=!0!==t.goBackwards;const a={};var r;if(a.className=e.layer.getClassName(),a.config=t,this.backwardLayer=gx(a),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=void 0===e.mergeMode?"concat":e.mergeMode,r=this.mergeMode,py(Sy,"BidirectionalMergeMode",r),e.weights)throw new Kg("weights support is not implemented for Bidirectional layer yet.");this._stateful=e.layer.stateful,this.returnSequences=e.layer.returnSequences,this.returnState=e.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=e.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(e){this._trainable=e,null!=this.forwardLayer&&(this.forwardLayer.trainable=e),null!=this.backwardLayer&&(this.backwardLayer.trainable=e)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(e){const t=e.length,n=Math.floor(t/2);this.forwardLayer.setWeights(e.slice(0,n)),this.backwardLayer.setWeights(e.slice(n))}computeOutputShape(e){let t,n,a,r=this.forwardLayer.computeOutputShape(e);return Array.isArray(r)&&Array.isArray(r[0])||(r=[r]),this.returnState?(a=r.slice(1),t=r[0]):t=r[0],"concat"===this.mergeMode?(t[t.length-1]*=2,n=[t]):n=null==this.mergeMode?[t,t.slice()]:[t],this.returnState?null==this.mergeMode?n.concat(a).concat(a.slice()):[t].concat(a).concat(a.slice()):ey(n)}apply(e,t){let n=null==t?null:t.initialState,a=null==t?null:t.constants;null==t&&(t={});const r=yw(e,n,a,this.numConstants);if(e=r.inputs,n=r.initialState,a=r.constants,Array.isArray(e)&&(n=e.slice(1),e=e[0]),(null==n||0===n.length)&&null==a)return super.apply(e,t);const s=[],i=[];if(null!=n){const e=n.length;if(e%2>0)throw new qg("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");t.initialState=n,s.push(...n);const a=n.map((e=>new Db({shape:e.shape})));this.forwardLayer.stateSpec=a.slice(0,e/2),this.backwardLayer.stateSpec=a.slice(e/2),i.push(...a)}if(null!=a)throw new Kg("Support for constants in Bidirectional layers is not implemented yet.");const o=s[0]instanceof Ob;for(const l of s)if(l instanceof Ob!==o)throw new qg("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(o){const n=[e].concat(s),a=this.inputSpec.concat(i),r=this.inputSpec;this.inputSpec=a;const o=super.apply(n,t);return this.inputSpec=r,o}return super.apply(e,t)}call(e,t){return wi((()=>{const n=t.initialState;let a,r,s,i;if(null==n)a=this.forwardLayer.call(e,t),r=this.backwardLayer.call(e,t);else{const s=n.slice(0,n.length/2),i=n.slice(n.length/2);a=this.forwardLayer.call(e,Object.assign(t,{initialState:s})),r=this.backwardLayer.call(e,Object.assign(t,{initialState:i}))}return this.returnState&&(Array.isArray(a)&&(s=a.slice(1).concat(r.slice(1))),a=a[0],r=r[0]),this.returnSequences&&(r=nd(r,1)),"concat"===this.mergeMode?i=Hy([a,r]):"sum"===this.mergeMode?i=Fo(a,r):"ave"===this.mergeMode?i=Mo(.5,Fo(a,r)):"mul"===this.mergeMode?i=Mo(a,r):null==this.mergeMode&&(i=[a,r]),this.returnState?null==this.mergeMode?i.concat(s):[i].concat(s):i}))}resetStates(e){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(e){Ry(this.forwardLayer.name,(()=>{this.forwardLayer.build(e)})),Ry(this.backwardLayer.name,(()=>{this.backwardLayer.build(e)})),this.built=!0}computeMask(e,t){let n;if(Array.isArray(t)&&(t=t[0]),n=this.returnSequences?null==this.mergeMode?[t,t]:t:null==this.mergeMode?[null,null]:null,this.returnState){const e=this.forwardLayer.states.map((e=>null));return Array.isArray(n)?n.concat(e).concat(e):[n].concat(e).concat(e)}return n}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.forwardLayer&&this.forwardLayer.setFastWeightInitDuringBuild(e),null!=this.backwardLayer&&this.backwardLayer.setFastWeightInitDuringBuild(e)}getConfig(){const e={mergeMode:this.mergeMode},t=super.getConfig();return Object.assign(e,t),e}static fromConfig(e,t){const n=gx(t.layer);if(delete t.layer,null!=t.numConstants)throw new Kg("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");const a=t;return a.layer=n,new e(a)}}Ik.className="Bidirectional",Ho(Ik);class Tk extends Pb{constructor(e){super(e),this.scale=e.scale,e.offset?this.offset=e.offset:this.offset=0}getConfig(){const e={scale:this.scale,offset:this.offset},t=super.getConfig();return Object.assign(e,t),e}call(e,t){return wi((()=>("float32"!==(e=Cb(e)).dtype&&(e=Wy(e,"float32")),Fo(Mo(e,this.scale),this.offset))))}}Tk.className="Rescaling",Ho(Tk);const{resizeBilinear:Ck,cropAndResize:Ek}=mf;class $k extends Pb{constructor(e){super(e),this.height=e.height,this.width=e.width}centerCrop(e,t,n,a,r,s,i,o){return wi((()=>{let l,u=!1;const c=[t/s,n/i,(a+t)/s,(r+n)/i],p=[];3===e.rank?(u=!0,l=Cd([e])):l=e;for(let e=0;e<l.shape[0];e++)p.push(c);const d=gi(p,[p.length,4]),h=Qp(0,p.length,1,"int32"),f=Ek(l,d,h,[a,r],"nearest");return Wy(u?Cb(jd(f)):f,o)}))}upsize(e,t,n,a){return wi((()=>Wy(Ck(e,[t,n]),a)))}call(e,t){return wi((()=>{const t=Cb(e),n=t.dtype,a=t.shape,r=a[a.length-3],s=a[a.length-2];let i=0;r!==this.height&&(i=Math.floor((r-this.height)/2));let o=0;return s!==this.width&&(o=Math.floor((s-this.width)/2),0===o&&(o=1)),i>=0&&o>=0?this.centerCrop(t,i,o,this.height,this.width,r,s,n):this.upsize(e,this.height,this.width,n)}))}getConfig(){const e={height:this.height,width:this.width},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){const t=(e=Eb(e)).length-3,n=e.length-2;return e[t]=this.height,e[n]=this.width,e}}$k.className="CenterCrop",Ho($k);class Rk extends Pb{constructor(e){super(e),this.numTokens=e.numTokens,e.outputMode?this.outputMode=e.outputMode:this.outputMode="multiHot"}getConfig(){const e={numTokens:this.numTokens,outputMode:this.outputMode},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){return null==(e=Eb(e))?[this.numTokens]:"oneHot"===this.outputMode&&1!==e[e.length-1]?(e.push(this.numTokens),e):(e[e.length-1]=this.numTokens,e)}call(e,t){return wi((()=>{let n;if("int32"!==(e=Cb(e)).dtype&&(e=Wy(e,"int32")),"undefined"!==typeof t.countWeights){if("count"!==this.outputMode)throw new qg(`countWeights is not used when outputMode !== count.\n              Received countWeights=${t.countWeights}`);n=Cb(t.countWeights)}const a=Ec(e),r=$c(e),s=Wc(this.numTokens,a).bufferSync().get(0),i=Vc(r,0).bufferSync().get(0);if(!s||!i)throw new qg(`Input values must be between 0 < values <= numTokens with numTokens=${this.numTokens}`);return function(e,t,n,a){let r=Cb(e);if("int32"!==r.dtype&&(r=Wy(r,"int32")),"int"===t)return r;const s=r.shape;if(0===r.rank&&(r=Oc(r,-1)),"oneHot"===t&&1!==r.shape[r.shape.length-1]&&(r=Oc(r,-1)),r.rank>2)throw new qg(`When outputMode is not int, maximum output rank is 2 Received outputMode ${t} and input shape ${s} which would result in output rank ${r.rank}.`);const i=["multiHot","oneHot"].includes(t),o=r;let l;if(l=oc(o,"undefined"!==typeof a&&"count"===t?a:[],n,i),"tfIdf"!==t)return l;if(a)return Mo(l,a);throw new qg("When outputMode is 'tfIdf', weights must be provided.")}(e,this.outputMode,this.numTokens,n)}))}}Rk.className="CategoryEncoding",Ho(Rk);const Ak=new Set(["bilinear","nearest"]);class _k extends Pb{constructor(e){if(super(e),this.height=e.height,this.width=e.width,e.interpolation){if(!Ak.has(e.interpolation))throw new qg(`Invalid interpolation parameter: ${e.interpolation} is not implemented`);this.interpolation=e.interpolation}else this.interpolation="bilinear";this.cropToAspectRatio=Boolean(e.cropToAspectRatio)}computeOutputShape(e){const t=(e=Eb(e))[2];return[this.height,this.width,t]}getConfig(){const e={height:this.height,width:this.width,interpolation:this.interpolation,cropToAspectRatio:this.cropToAspectRatio},t=super.getConfig();return Object.assign(e,t),e}call(e,t){return wi((()=>{const t=[this.height,this.width];if("bilinear"===this.interpolation)return mf.resizeBilinear(e,t,!this.cropToAspectRatio);if("nearest"===this.interpolation)return mf.resizeNearestNeighbor(e,t,!this.cropToAspectRatio);throw new Error(`Interpolation is ${this.interpolation} but only ${[...Ak]} are supported`)}))}}_k.className="Resizing",Ho(_k);class Fk{constructor(e){this.seed=e}next(){if(void 0!==this.seed)return this.seed++}}Fk.className="RandomSeed";class Dk extends Pb{constructor(e){super(e),this.randomGenerator=new Fk(e.seed)}getConfig(){const e={seed:this.randomGenerator.seed},t=super.getConfig();return Object.assign(e,t),e}}Dk.className="BaseRandomLayer";const Ok=new Set(["bilinear","nearest"]);class Mk extends Dk{constructor(e){super(e);const{factor:t,interpolation:n="bilinear"}=e;if(this.factor=t,Array.isArray(this.factor)&&2===this.factor.length)this.widthLower=this.factor[0],this.widthUpper=this.factor[1];else{if(Array.isArray(this.factor)||!(this.factor>0))throw new qg(`Invalid factor: ${this.factor}. Must be positive number or tuple of 2 numbers`);this.widthLower=-this.factor,this.widthUpper=this.factor}if(this.widthLower<-1||this.widthUpper<-1)throw new qg(`factor must have values larger than -1. Got: ${this.factor}`);if(this.widthUpper<this.widthLower)throw new qg(`factor cannot have upper bound less than lower bound.\n        Got upper bound: ${this.widthUpper}.\n        Got lower bound: ${this.widthLower}\n      `);if(n){if(!Ok.has(n))throw new qg(`Invalid interpolation parameter: ${n} is not implemented`);this.interpolation=n}}getConfig(){const e={factor:this.factor,interpolation:this.interpolation},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){const t=(e=Eb(e))[2];return[this.imgHeight,-1,t]}call(e,t){return wi((()=>{const t=Cb(e);this.imgHeight=t.shape[t.shape.length-3];const n=t.shape[t.shape.length-2];this.widthFactor=Xp([1],1+this.widthLower,1+this.widthUpper,"float32",this.randomGenerator.next());let a=this.widthFactor.dataSync()[0]*n;a=Math.round(a);const r=[this.imgHeight,a];switch(this.interpolation){case"bilinear":return mf.resizeBilinear(e,r);case"nearest":return mf.resizeNearestNeighbor(e,r);default:throw new Error(`Interpolation is ${this.interpolation}\n          but only ${[...Ok]} are supported`)}}))}}Mk.className="RandomWidth",Ho(Mk);var Lk,zk;Ct().registerFlag("KEEP_INTERMEDIATE_TENSORS",(()=>!1),(e=>{e&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")})),function(e){e[e.DT_INVALID=0]="DT_INVALID",e[e.DT_FLOAT=1]="DT_FLOAT",e[e.DT_DOUBLE=2]="DT_DOUBLE",e[e.DT_INT32=3]="DT_INT32",e[e.DT_UINT8=4]="DT_UINT8",e[e.DT_INT16=5]="DT_INT16",e[e.DT_INT8=6]="DT_INT8",e[e.DT_STRING=7]="DT_STRING",e[e.DT_COMPLEX64=8]="DT_COMPLEX64",e[e.DT_INT64=9]="DT_INT64",e[e.DT_BOOL=10]="DT_BOOL",e[e.DT_QINT8=11]="DT_QINT8",e[e.DT_QUINT8=12]="DT_QUINT8",e[e.DT_QINT32=13]="DT_QINT32",e[e.DT_BFLOAT16=14]="DT_BFLOAT16",e[e.DT_QINT16=15]="DT_QINT16",e[e.DT_QUINT16=16]="DT_QUINT16",e[e.DT_UINT16=17]="DT_UINT16",e[e.DT_COMPLEX128=18]="DT_COMPLEX128",e[e.DT_HALF=19]="DT_HALF",e[e.DT_RESOURCE=20]="DT_RESOURCE",e[e.DT_VARIANT=21]="DT_VARIANT",e[e.DT_UINT32=22]="DT_UINT32",e[e.DT_UINT64=23]="DT_UINT64",e[e.DT_FLOAT_REF=101]="DT_FLOAT_REF",e[e.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",e[e.DT_INT32_REF=103]="DT_INT32_REF",e[e.DT_UINT8_REF=104]="DT_UINT8_REF",e[e.DT_INT16_REF=105]="DT_INT16_REF",e[e.DT_INT8_REF=106]="DT_INT8_REF",e[e.DT_STRING_REF=107]="DT_STRING_REF",e[e.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",e[e.DT_INT64_REF=109]="DT_INT64_REF",e[e.DT_BOOL_REF=110]="DT_BOOL_REF",e[e.DT_QINT8_REF=111]="DT_QINT8_REF",e[e.DT_QUINT8_REF=112]="DT_QUINT8_REF",e[e.DT_QINT32_REF=113]="DT_QINT32_REF",e[e.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",e[e.DT_QINT16_REF=115]="DT_QINT16_REF",e[e.DT_QUINT16_REF=116]="DT_QUINT16_REF",e[e.DT_UINT16_REF=117]="DT_UINT16_REF",e[e.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",e[e.DT_HALF_REF=119]="DT_HALF_REF",e[e.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",e[e.DT_VARIANT_REF=121]="DT_VARIANT_REF",e[e.DT_UINT32_REF=122]="DT_UINT32_REF",e[e.DT_UINT64_REF=123]="DT_UINT64_REF"}(Lk||(Lk={})),function(e){let t;!function(e){e[e.LEGACY=0]="LEGACY",e[e.V1=1]="V1",e[e.V2=2]="V2"}(t=e.CheckpointFormatVersion||(e.CheckpointFormatVersion={}))}(zk||(zk={}));const Pk={};function Bk(e){return Pk[e]}function Wk(e,t,n,a,r){const s=t.inputParams[e];if(s&&void 0!==s.inputIndexStart){const e=s.inputIndexStart,i=0===s.inputIndexEnd?void 0:void 0===s.inputIndexEnd?e+1:s.inputIndexEnd,o=e<0?t.inputNames.length+e:e;if("tensor"===s.type)return Vk(t.inputNames[o],n,a,r);if("tensors"===s.type){const s=t.inputs.slice(e,i);return t.inputNames.slice(e,i).filter(((e,t)=>{var n;return"NoOp"!==(null===(n=s[t])||void 0===n?void 0:n.op)})).map((e=>Vk(e,n,a,r)))}const l=Vk(t.inputNames[o],n,a,r),u=l.dataSync();return"number"===s.type?u[0]:gt(l.shape,u)}const i=t.attrParams[e];return i&&i.value}function Vk(e,t,n,a){const[r,s]=Hk(e,n);if(null!=a){const e=a.getHashTableHandleByName(r);if(null!=e)return e}const i=n.currentContextIds.find((e=>!!t[Gk(r,e)]));return void 0!==i?t[Gk(r,i)][s]:void 0}function Uk(e,t,n){return t[Gk(e,n.currentContextId)]}function jk(e,t){const[n,a,r]=Hk(e,t);return[Gk(n,t&&t.currentContextId),a,r]}function Gk(e,t){return t?`${e}-${t}`:e}function Hk(e,t){if(""===e)return["",0,void 0];const n=null!=t&&null!=t.parseNodeNameCache;if(n){const n=t.parseNodeNameCache.get(e);if(null!=n)return n}const a=e.split(":");let r;if(1===a.length)r=[e,0,void 0];else{const e=a[0],t=3===a.length?a[1]:void 0;r=[e,Number(a[a.length-1]),t]}return n&&t.parseNodeNameCache.set(e,r),r}function qk(e,t,n){let a=Wk("pad",e,t,n);if("explicit"===a){a=Wk("explicitPaddings",e,t,n);const r=[[0,0],[0,0],[0,0],[0,0]];for(let e=0;e<4;e++)r[e][0]=a[2*e],r[e][1]=a[2*e+1];return r}return a}function Kk(e){return e.kept?e:Ao(e)}const Xk=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],Yk=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsNan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsFinite",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsInf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],Qk=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcatV2",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListLength",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}]},{tfOpName:"TensorListResize",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"size",type:"number"}]}],Zk=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}],Jk=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomStandardNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniformInt",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number"},{tfName:"maxval",name:"maxval",type:"number"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}],eN=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],tN=[{tfOpName:"LowerBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"UpperBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}],nN=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}],aN=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"InitializeTable",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]},{tfOpName:"InitializeTableV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]}],rN=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]},{tfOpName:"ImageProjectiveTransformV3",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"transforms",type:"tensor"},{start:2,name:"outputShape",type:"number[]"},{start:3,name:"fillValue",type:"number"}],attrs:[{tfName:"interpolation",name:"interpolation",type:"string"},{tfName:"fill_mode",name:"fillMode",type:"string"}]}],sN=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BitwiseAnd",category:"logical",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}]}],iN=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Einsum",category:"matrices",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"equation",name:"equation",type:"string"},{tfName:"N",name:"n",type:"number",defaultValue:2},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"MatrixBandPart",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"numLower",type:"tensor"},{start:1,name:"numUpper",type:"tensor"}]}],oN=[{tfOpName:"EuclideanNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",defaultValue:!1}]},{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]}],lN=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cumprod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}],uN=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]},{tfOpName:"TensorScatterUpdate",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"values",type:"tensor"}]}],cN=[{tfOpName:"SparseFillEmptyRows",category:"sparse",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"denseShape",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}]},{tfOpName:"SparseReshape",category:"sparse",inputs:[{start:0,name:"inputIndices",type:"tensor"},{start:1,name:"inputShape",type:"tensor"},{start:2,name:"newShape",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SparseSegmentMean",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]},{tfOpName:"SparseSegmentSum",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]}],pN=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}],dN=[{tfOpName:"StaticRegexReplace",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"pattern",name:"pattern",type:"string"},{tfName:"rewrite",name:"rewrite",type:"string"},{tfName:"replace_global",name:"replaceGlobal",type:"bool"}]},{tfOpName:"StringNGrams",category:"string",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"dataSplits",type:"tensor"}],attrs:[{tfName:"separator",name:"separator",type:"string"},{tfName:"ngram_widths",name:"nGramWidths",type:"number[]"},{tfName:"left_pad",name:"leftPad",type:"string"},{tfName:"right_pad",name:"rightPad",type:"string"},{tfName:"pad_width",name:"padWidth",type:"number"},{tfName:"preserve_short_sequences",name:"preserveShortSequences",type:"bool"}],outputs:["ngrams","ngrams_splits"]},{tfOpName:"StringSplit",category:"string",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"delimiter",type:"tensor"}],attrs:[{tfName:"skip_empty",name:"skipEmpty",type:"bool"}],outputs:["indices","values","shape"]},{tfOpName:"StringToHashBucketFast",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"num_buckets",name:"numBuckets",type:"number"}]}],hN=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"EnsureShape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]},{tfOpName:"BroadcastArgs",category:"transformation",inputs:[{start:0,name:"s0",type:"tensor"},{start:1,name:"s1",type:"tensor"}],attrs:[]}];class fN{static get Instance(){return this._instance||(this._instance=new this)}constructor(){const e=[].concat(...[i,o,l,u,c,p,d,h,f,m,g,y,b,x,v,w,k,N,S].map((e=>e.json)));this.opMappers=e.reduce(((e,t)=>(e[t.tfOpName]=t,e)),{})}transformGraph(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const n=e.node,a=[],r=[],s=[],i=n.reduce(((e,t)=>(e[t.name]=this.mapNode(t),t.op.startsWith("Placeholder")?a.push(e[t.name]):"Const"===t.op?r.push(e[t.name]):null!=t.input&&0!==t.input.length||s.push(e[t.name]),e)),{});let o=[];const l=[];let u={},c={};null!=t&&(u=this.mapSignatureEntries(t.inputs),c=this.mapSignatureEntries(t.outputs));const p=Object.keys(i);p.forEach((e=>{const t=i[e];t.inputNames.forEach(((e,n)=>{const[a,,r]=jk(e),s=i[a];if(null!=s.outputs){const e=s.outputs.indexOf(r);if(-1!==e){const r=`${a}:${e}`;t.inputNames[n]=r}}t.inputs.push(s),s.children.push(t)}))})),0===Object.keys(c).length?p.forEach((e=>{const t=i[e];0===t.children.length&&l.push(t)})):Object.keys(c).forEach((e=>{const[t]=jk(e),n=i[t];null!=n&&(n.signatureKey=c[e],l.push(n))})),Object.keys(u).length>0?Object.keys(u).forEach((e=>{const[t]=jk(e),n=i[t];n&&(n.signatureKey=u[e],o.push(n))})):o=a;let d={};null!=e.library&&null!=e.library.function&&(d=e.library.function.reduce(((e,t)=>(e[t.signature.name]=this.mapFunction(t),e)),{}));const h={nodes:i,inputs:o,outputs:l,weights:r,placeholders:a,signature:t,functions:d};return s.length>0&&(h.initNodes=s),h}mapSignatureEntries(e){return Object.keys(e||{}).reduce(((t,n)=>(t[e[n].name]=n,t)),{})}mapNode(e){const t=Bk(e.op)||this.opMappers[e.op]||{};null==e.attr&&(e.attr={});const n={name:e.name,op:e.op,category:t.category,inputNames:(e.input||[]).map((e=>e.startsWith("^")?e.slice(1):e)),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:e.attr,outputs:t.outputs};return null!=t.inputs&&(n.inputParams=t.inputs.reduce(((e,t)=>(e[t.name]={type:t.type,inputIndexStart:t.start,inputIndexEnd:t.end},e)),{})),null!=t.attrs&&(n.attrParams=t.attrs.reduce(((t,n)=>{const a=n.type;let r;switch(n.type){case"string":r=gN(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=gN(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"string[]":r=TN(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=TN(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number":r=bN(e.attr,n.tfName,n.defaultValue||0),void 0===r&&n.tfDeprecatedName&&(r=bN(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number[]":r=IN(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=IN(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool":r=yN(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=yN(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool[]":r=EN(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=EN(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape":r=SN(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=SN(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape[]":r=CN(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=CN(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype":r=wN(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=wN(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype[]":r=kN(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=kN(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"func":r=vN(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=vN(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${n.type} for op: ${e.op}`)}return t[n.name]={value:r,type:a},t}),{})),n}mapFunction(e){const t=e.nodeDef,n=[];let a={};null!=t&&(a=t.reduce(((e,t)=>(e[t.name]=this.mapNode(t),"Const"===t.op&&n.push(e[t.name]),e)),{}));const r=[],s=[];e.signature.inputArg.forEach((e=>{const[t]=jk(e.name),n={name:t,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:xN(e.type),type:"dtype"}},children:[]};n.signatureKey=e.name,r.push(n),a[t]=n}));Object.keys(a).forEach((e=>{const t=a[e];t.inputNames.forEach(((e,n)=>{const[r,,s]=jk(e),i=a[r];if(null!=i.outputs){const e=i.outputs.indexOf(s);if(-1!==e){const a=`${r}:${e}`;t.inputNames[n]=a}}t.inputs.push(i),i.children.push(t)}))}));const i=e.ret;e.signature.outputArg.forEach((e=>{const[t,n]=jk(i[e.name]),r=a[t];null!=r&&(r.defaultOutput=n,s.push(r))}));const o=this.mapArgsToSignature(e);return{nodes:a,inputs:r,outputs:s,weights:n,placeholders:[],signature:o}}mapArgsToSignature(e){return{methodName:e.signature.name,inputs:e.signature.inputArg.reduce(((e,t)=>(e[t.name]=this.mapArgToTensorInfo(t),e)),{}),outputs:e.signature.outputArg.reduce(((t,n)=>(t[n.name]=this.mapArgToTensorInfo(n,e.ret),t)),{})}}mapArgToTensorInfo(e,t){let n=e.name;return null!=t&&(n=t[n]),{name:n,dtype:e.type}}}function mN(e,t){const n=Array.isArray(e)?String.fromCharCode.apply(null,e):function(e){const t=Ct().global;if("undefined"!==typeof t.atob)return t.atob(e);if("undefined"!==typeof Buffer)return new Buffer(e,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}(e);return t?n:n.toLowerCase()}function gN(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const r=e[t];return null!=r?mN(r.s,a):n}function yN(e,t,n){const a=e[t];return a?a.b:n}function bN(e,t,n){const a=e[t]||{},r=null!=a.i?a.i:null!=a.f?a.f:n;return"number"===typeof r?r:parseInt(r,10)}function xN(e){switch("string"===typeof e&&(e=Lk[e]),e){case Lk.DT_FLOAT:case Lk.DT_HALF:return"float32";case Lk.DT_INT32:case Lk.DT_INT64:case Lk.DT_INT8:case Lk.DT_UINT8:return"int32";case Lk.DT_BOOL:return"bool";case Lk.DT_DOUBLE:return"float32";case Lk.DT_STRING:return"string";case Lk.DT_COMPLEX64:case Lk.DT_COMPLEX128:return"complex64";default:return null}}function vN(e,t,n){const a=e[t];return a&&a.func?a.func.name:n}function wN(e,t,n){const a=e[t];return a&&a.type?xN(a.type):n}function kN(e,t,n){const a=e[t];return a&&a.list&&a.list.type?a.list.type.map((e=>xN(e))):n}function NN(e){if(!e.unknownRank)return null!=e.dim?e.dim.map((e=>"number"===typeof e.size?e.size:parseInt(e.size,10))):[]}function SN(e,t,n){const a=e[t];return a&&a.shape?NN(a.shape):n}function IN(e,t,n){const a=e[t];return a?((a.list.f&&a.list.f.length?a.list.f:a.list.i)||[]).map((e=>"number"===typeof e?e:parseInt(e,10))):n}function TN(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const r=e[t];return r&&r.list&&r.list.s?r.list.s.map((e=>mN(e,a))):n}function CN(e,t,n){const a=e[t];return a&&a.list&&a.list.shape?a.list.shape.map((e=>NN(e))):n}function EN(e,t,n){const a=e[t];return a&&a.list&&a.list.b?a.list.b:n}class $N{constructor(e,t,n){this.node=e,this.tensorMap=t,this.context=n,this.inputs=[],this.attrs={},this.inputs=e.inputNames.map((e=>this.getInput(e))),null!=e.rawAttrs&&(this.attrs=Object.keys(e.rawAttrs).reduce(((e,t)=>(e[t]=this.getAttr(t),e)),{}))}getInput(e){return Vk(e,this.tensorMap,this.context)}getAttr(e,t){const n=this.node.rawAttrs[e];if(null!=n.tensor)return Vk(e,this.tensorMap,this.context);if(null!=n.i||null!=n.f)return bN(this.node.rawAttrs,e,t);if(null!=n.s)return gN(this.node.rawAttrs,e,t);if(null!=n.b)return yN(this.node.rawAttrs,e,t);if(null!=n.shape)return SN(this.node.rawAttrs,e,t);if(null!=n.type)return wN(this.node.rawAttrs,e,t);if(null!=n.list){if(null!=n.list.i||null!=n.list.f)return IN(this.node.rawAttrs,e,t);if(null!=n.list.s)return TN(this.node.rawAttrs,e,t);if(null!=n.list.shape)return CN(this.node.rawAttrs,e,t);if(null!=n.list.b)return EN(this.node.rawAttrs,e,t);if(null!=n.list.type)return kN(this.node.rawAttrs,e,t)}return t}}function RN(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"";if("number"!==typeof e&&"number"!==typeof t){qe(e.length===t.length,(()=>n+` Shapes ${e} and ${t} must match`));for(let a=0;a<e.length;a++){const r=e[a],s=t[a];qe(r<0||s<0||r===s,(()=>n+` Shapes ${e} and ${t} must match`))}}}function AN(e){return"number"!==typeof e&&!e.some((e=>e<0))}function _N(e,t,n){let a=FN(e,n);const r=!AN(a);if(r&&0===t.length)throw new Error(`Tried to calculate elements of an empty list with non-fully-defined elementShape: ${a}`);if(r&&t.forEach((e=>{a=FN(e.shape,a)})),!AN(a))throw new Error(`Non-fully-defined elementShape: ${a}`);return a}function FN(e,t){if("number"===typeof e)return t;if("number"===typeof t)return e;if(e.length!==t.length)throw new Error(`Incompatible ranks during merge: ${e} vs. ${t}`);const n=[];for(let a=0;a<e.length;++a){const r=e[a],s=t[a];if(r>=0&&s>=0&&r!==s)throw new Error(`Incompatible shape during merge: ${e} vs. ${t}`);n[a]=r>=0?r:s}return n}class DN{constructor(e,t,n,a,r,s,i){this.name=e,this.dtype=t,this.maxSize=n,this.elementShape=a,this.identicalElementShapes=r,this.dynamicSize=s,this.clearAfterRead=i,this.tensors=[],this.closed_=!1,this.idTensor=Wo(0),Ni(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(e){this.tensors.forEach((t=>{null!=e&&e.has(t.tensor.id)||t.tensor.dispose()})),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||e>=this.size())throw new Error(`Tried to read from index ${e}, but array size is: ${this.size()}`);const t=this.tensors[e];if(t.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${e} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(t.cleared=!0),t.read=!0,t.tensor}readMany(e){return e.map((e=>this.read(e)))}write(e,t){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||!this.dynamicSize&&e>=this.maxSize)throw new Error(`Tried to write to index ${e}, but array is not resizeable and size is: ${this.maxSize}`);const n=this.tensors[e]||{};if(t.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e},\n          because the value dtype is ${t.dtype}, but TensorArray dtype is ${this.dtype}.`);if(0!==this.size()||null!=this.elementShape&&0!==this.elementShape.length||(this.elementShape=t.shape),RN(this.elementShape,t.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${e}.`),n.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been read.`);if(n.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been written.`);n.tensor=t,Ni(t),n.written=!0,this.tensors[e]=n}writeMany(e,t){if(e.length!==t.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${e.length} is not the same as tensors size: ${t.length}.`);e.forEach(((e,n)=>this.write(e,t[n])))}gather(e,t){if(t&&t!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${t}`);if(e)e=e.slice(0,this.size());else{e=[];for(let t=0;t<this.size();t++)e.push(t)}if(0===e.length)return gi([],[0].concat(this.elementShape));const n=this.readMany(e);return RN(this.elementShape,n[0].shape,"TensorArray shape mismatch: "),Cd(n,0)}concat(e){if(e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${e}`);if(0===this.size())return gi([],[0].concat(this.elementShape));const t=[];for(let a=0;a<this.size();a++)t.push(a);const n=this.readMany(t);return RN(this.elementShape,n[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${n[0].shape})`),$u(n,0)}scatter(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);if(e.length!==t.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${t.shape[0]}`);const n=Math.max(...e);if(!this.dynamicSize&&n>=this.maxSize)throw new Error(`Max index must be < array size (${n}  vs. ${this.maxSize})`);this.writeMany(e,jd(t,0))}split(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);let n=0;const a=e.map((e=>(n+=e,n)));if(n!==t.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${n}, and tensor's shape is: ${t.shape}`);if(!this.dynamicSize&&e.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${e.length}), and the TensorArray is not marked as dynamically resizeable`);const r=0===n?0:t.size/n,s=[];wi((()=>{t=Tu(t,[1,n,r]);for(let n=0;n<e.length;++n){const i=[0,0===n?0:a[n-1],0],o=[1,e[n],r];s[n]=Tu(_u(t,i,o),this.elementShape)}return s}));const i=[];for(let o=0;o<e.length;o++)i[o]=o;this.writeMany(i,s)}}class ON{get id(){return this.idTensor.id}constructor(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:-1;this.tensors=e,this.elementShape=t,this.elementDtype=n,null!=e&&e.forEach((e=>{if(n!==e.dtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${e.dtype}`);RN(t,e.shape,"TensorList shape mismatch: "),Ni(e)})),this.idTensor=Wo(0),this.maxNumElements=a,Ni(this.idTensor)}copy(){return new ON([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(e){this.tensors.forEach((t=>{null!=e&&e.has(t.id)||t.dispose()})),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:-1;if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(-1!==n&&this.tensors.length!==n)throw new Error(`Operation expected a list with ${n} elements but got a list with ${this.tensors.length} elements.`);RN(e,this.elementShape,"TensorList shape mismatch: ");const a=_N(this.elementShape,this.tensors,e);return wi((()=>{const e=this.tensors.map((e=>Tu(e,a)));return Cd(e,0)}))}popBack(e,t){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(0===this.size())throw new Error("Trying to pop from an empty list.");const n=_N(this.elementShape,this.tensors,e),a=this.tensors.pop();return a.kept=!1,RN(a.shape,e,"TensorList shape mismatch: "),Tu(a,n)}pushBack(e){if(e.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if(RN(e.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");Ni(e),this.tensors.push(e)}resize(e){if(e<0)throw new Error(`TensorListResize expects size to be non-negative. Got: ${e}`);if(-1!==this.maxNumElements&&e>this.maxNumElements)throw new Error(`TensorListResize input size ${e} is greater maxNumElement ${this.maxNumElements}.`);const t=new ON([],this.elementShape,this.elementDtype,this.maxNumElements);t.tensors.length=e;for(let n=0;n<Math.min(this.tensors.length,e);++n)t.tensors[n]=this.tensors[n];return t}getItem(e,t,n){if(n!==this.elementDtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${this.elementDtype}`);if(e<0||e>this.tensors.length)throw new Error(`Trying to access element ${e} in a list with ${this.tensors.length} elements.`);if(null==this.tensors[e])throw new Error(`element at index ${e} is null.`);RN(this.tensors[e].shape,t,"TensorList shape mismatch: ");const a=_N(this.elementShape,this.tensors,t);return Tu(this.tensors[e],a)}setItem(e,t){if(t.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(e<0||-1!==this.maxNumElements&&e>=this.maxNumElements)throw new Error(`Trying to set element ${e} in a list with max ${this.maxNumElements} elements.`);RN(this.elementShape,t.shape,"TensorList shape mismatch: "),Ni(t),null!=this.tensors[e]&&(this.tensors[e].kept=!1),this.tensors[e]=t}gather(e,t,n){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);RN(this.elementShape,n,"TensorList shape mismatch: "),e=e.slice(0,this.size());const a=_N(this.elementShape,this.tensors,n);return 0===e.length?gi([],[0].concat(a)):wi((()=>{const t=e.map((e=>Tu(this.tensors[e],a)));return Cd(t,0)}))}concat(e,t){if(e&&e!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${e}`);RN(this.elementShape,t,"TensorList shape mismatch: ");const n=_N(this.elementShape,this.tensors,t);return 0===this.size()?gi([],[0].concat(n)):wi((()=>{const e=this.tensors.map((e=>Tu(e,n)));return $u(e,0)}))}}const MN=async(e,t,n)=>{switch(e.op){case"If":case"StatelessIf":{const a=Wk("thenBranch",e,t,n),r=Wk("elseBranch",e,t,n),s=Wk("cond",e,t,n),i=Wk("args",e,t,n);return(await s.data())[0]?n.functionMap[a].executeFunctionAsync(i,n.tensorArrayMap,n.tensorListMap):n.functionMap[r].executeFunctionAsync(i,n.tensorArrayMap,n.tensorListMap)}case"While":case"StatelessWhile":{const a=Wk("body",e,t,n),r=Wk("cond",e,t,n),s=Wk("args",e,t,n),i=await n.functionMap[r].executeFunctionAsync(s,n.tensorArrayMap,n.tensorListMap),o=s.map((e=>e.id));let l=await i[0].data();i.forEach((e=>{e.kept||-1!==o.indexOf(e.id)||e.dispose()}));let u=s;for(;l[0];){const e=u;u=await n.functionMap[a].executeFunctionAsync(u,n.tensorArrayMap,n.tensorListMap);const t=u.map((e=>e.id));e.forEach((e=>{e.kept||-1!==o.indexOf(e.id)||-1!==t.indexOf(e.id)||e.dispose()}));const s=await n.functionMap[r].executeFunctionAsync(u,n.tensorArrayMap,n.tensorListMap);l=await s[0].data(),s.forEach((e=>{e.kept||-1!==o.indexOf(e.id)||-1!==t.indexOf(e.id)||e.dispose()}))}return u}case"LoopCond":return[Kk(Wk("pred",e,t,n))];case"Switch":{const a=Wk("pred",e,t,n);let r=Wk("data",e,t,n);return r.kept||(r=Kk(r)),(await a.data())[0]?[void 0,r]:[r,void 0]}case"Merge":{const a=e.inputNames.find((e=>void 0!==Vk(e,t,n)));if(a){return[Kk(Vk(a,t,n))]}return}case"Enter":{const a=Wk("frameName",e,t,n),r=Wk("tensor",e,t,n);return n.enterFrame(a),[Kk(r)]}case"Exit":{const a=Wk("tensor",e,t,n);return n.exitFrame(),[Kk(a)]}case"NextIteration":{const a=Wk("tensor",e,t,n);return n.nextIteration(),[Kk(a)]}case"TensorArrayV3":{const a=Wk("size",e,t,n),r=Wk("dtype",e,t,n),s=Wk("elementShape",e,t,n),i=Wk("dynamicSize",e,t,n),o=Wk("clearAfterRead",e,t,n),l=Wk("identicalElementShapes",e,t,n),u=Wk("name",e,t,n),c=new DN(u,r,a,s,l,i,o);return n.addTensorArray(c),[c.idTensor,Wo(1)]}case"TensorArrayWriteV3":{const a=Wk("tensorArrayId",e,t,n),r=Wk("index",e,t,n),s=Wk("tensor",e,t,n),i=n.getTensorArray(a.id);return i.write(r,s),[i.idTensor]}case"TensorArrayReadV3":{const a=Wk("tensorArrayId",e,t,n),r=Wk("index",e,t,n);return[n.getTensorArray(a.id).read(r)]}case"TensorArrayGatherV3":{const a=Wk("tensorArrayId",e,t,n),r=Wk("indices",e,t,n),s=Wk("dtype",e,t,n);return[n.getTensorArray(a.id).gather(r,s)]}case"TensorArrayScatterV3":{const a=Wk("tensorArrayId",e,t,n),r=Wk("indices",e,t,n),s=Wk("tensor",e,t,n),i=n.getTensorArray(a.id);return i.scatter(r,s),[i.idTensor]}case"TensorArrayConcatV3":{const a=Wk("tensorArrayId",e,t,n),r=n.getTensorArray(a.id),s=Wk("dtype",e,t,n);return[r.concat(s)]}case"TensorArraySplitV3":{const a=Wk("tensorArrayId",e,t,n),r=Wk("tensor",e,t,n),s=Wk("lengths",e,t,n),i=n.getTensorArray(a.id);return i.split(s,r),[i.idTensor]}case"TensorArraySizeV3":{const a=Wk("tensorArrayId",e,t,n);return[Wo(n.getTensorArray(a.id).size(),"int32")]}case"TensorArrayCloseV3":{const a=Wk("tensorArrayId",e,t,n),r=n.getTensorArray(a.id);return r.clearAndClose(),[r.idTensor]}case"TensorListSetItem":{const a=Wk("tensorListId",e,t,n),r=Wk("index",e,t,n),s=Wk("tensor",e,t,n),i=n.getTensorList(a.id);return i.setItem(r,s),[i.idTensor]}case"TensorListGetItem":{const a=Wk("tensorListId",e,t,n),r=Wk("index",e,t,n),s=Wk("elementShape",e,t,n),i=Wk("elementDType",e,t,n);return[n.getTensorList(a.id).getItem(r,s,i)]}case"TensorListScatterV2":case"TensorListScatter":{const a=Wk("indices",e,t,n),r=function(e,t,n,a){if(t.length!==e.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${t.length} vs. ${e.shape[0]}`);const r=Math.max(...t);if(null!=a&&-1!==a&&r>=a)throw new Error(`Max index must be < array size (${r}  vs. ${a})`);const s=new ON([],n,e.dtype,a),i=jd(e,0);return t.forEach(((e,t)=>{s.setItem(e,i[t])})),s}(Wk("tensor",e,t,n),a,Wk("elementShape",e,t,n),Wk("numElements",e,t,n));return n.addTensorList(r),[r.idTensor]}case"TensorListReserve":case"EmptyTensorList":{const a=Wk("elementShape",e,t,n),r=Wk("elementDType",e,t,n);let s;s="TensorListReserve"===e.op?"numElements":"maxNumElements";const i=Wk(s,e,t,n),o=function(e,t,n,a){return new ON([],e,t,a)}(a,r,0,"TensorListReserve"===e.op?-1:i);return n.addTensorList(o),[o.idTensor]}case"TensorListGather":{const a=Wk("tensorListId",e,t,n),r=Wk("indices",e,t,n),s=Wk("elementShape",e,t,n),i=Wk("elementDType",e,t,n);return[n.getTensorList(a.id).gather(r,i,s)]}case"TensorListStack":{const a=Wk("tensorListId",e,t,n),r=Wk("elementShape",e,t,n),s=Wk("elementDType",e,t,n),i=Wk("numElements",e,t,n);return[n.getTensorList(a.id).stack(r,s,i)]}case"TensorListFromTensor":{const a=function(e,t,n){const a=e.dtype;if(e.shape.length<1)throw new Error(`Tensor must be at least a vector, but saw shape: ${e.shape}`);if(e.dtype!==n)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${n}`);RN(e.shape.slice(1),t,"TensorList shape mismatch: ");const r=jd(e);return new ON(r,t,a)}(Wk("tensor",e,t,n),Wk("elementShape",e,t,n),Wk("elementDType",e,t,n));return n.addTensorList(a),[a.idTensor]}case"TensorListConcat":case"TensorListConcatV2":{const a=Wk("tensorListId",e,t,n),r=n.getTensorList(a.id),s=Wk("dtype",e,t,n),i=Wk("elementShape",e,t,n);return[r.concat(s,i)]}case"TensorListPushBack":{const a=Wk("tensorListId",e,t,n),r=Wk("tensor",e,t,n),s=n.getTensorList(a.id);return s.pushBack(r),[s.idTensor]}case"TensorListPopBack":{const a=Wk("tensorListId",e,t,n),r=Wk("elementShape",e,t,n),s=Wk("elementDType",e,t,n);return[n.getTensorList(a.id).popBack(r,s)]}case"TensorListSplit":{const a=Wk("tensor",e,t,n),r=Wk("elementShape",e,t,n),s=function(e,t,n){let a=0;const r=t.map((e=>(a+=e,a)));if(a!==e.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${a}, and tensor's shape is: ${e.shape}`);const s=FN(e.shape.slice(1),n),i=0===a?0:e.size/a,o=wi((()=>{const n=[];e=Tu(e,[1,a,i]);for(let a=0;a<t.length;++a){const o=[0,0===a?0:r[a-1],0],l=[1,t[a],i];n[a]=Tu(_u(e,o,l),s)}return e.dispose(),n})),l=new ON([],n,e.dtype,t.length);for(let u=0;u<o.length;u++)l.setItem(u,o[u]);return l}(a,Wk("lengths",e,t,n),r);return n.addTensorList(s),[s.idTensor]}case"TensorListLength":{const a=Wk("tensorListId",e,t,n);return[Wo(n.getTensorList(a.id).size(),"int32")]}case"TensorListResize":{const a=Wk("tensorListId",e,t,n),r=Wk("size",e,t,n),s=n.getTensorList(a.id).resize(r);return n.addTensorList(s),[s.idTensor]}default:throw TypeError(`Node type ${e.op} is not implemented`)}};function LN(e,t,n){const[a,r]=Wk("fusedOps",e,t,n),s="biasadd"===a,i=!s,o="prelu"===r,l="fusedbatchnorm"===a,u=Wk("numArgs",e,t,n);if(s){if(o&&2!==u)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!o&&s&&1!==u)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(l)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported");const c=Wk("strides",e,t,n),p=qk(e,t,n),d=Wk("dataFormat",e,t,n).toUpperCase(),h=Wk("dilations",e,t,n);let[f,m]=Wk("args",e,t,n);i&&(m=f,f=void 0);return{stride:c,pad:p,dataFormat:d,dilations:h,biasArg:f,preluArg:m,activationFunc:r,leakyreluAlpha:Wk("leakyreluAlpha",e,t,n)}}function zN(e,t,n){return{boxes:Wk("boxes",e,t,n),scores:Wk("scores",e,t,n),maxOutputSize:Wk("maxOutputSize",e,t,n),iouThreshold:Wk("iouThreshold",e,t,n),scoreThreshold:Wk("scoreThreshold",e,t,n),softNmsSigma:Wk("softNmsSigma",e,t,n)}}class PN{get id(){return this.handle.id}constructor(e,t){this.keyDType=e,this.valueDType=t,this.handle=Wo(0),this.tensorMap=new Map,Ni(this.handle)}clearAndClose(){this.tensorMap.forEach((e=>e.dispose())),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}tensorSize(){return Wo(this.size(),"int32")}async import(e,t){this.checkKeyAndValueTensor(e,t);const n=await e.data();return this.tensorMap.forEach((e=>e.dispose())),this.tensorMap.clear(),wi((()=>{const e=jd(t),a=n.length,r=e.length;qe(a===r,(()=>`The number of elements doesn't match, keys has ${a} elements, the values has ${r} elements.`));for(let t=0;t<a;t++){const a=n[t],r=e[t];Ni(r),this.tensorMap.set(a,r)}return this.handle}))}async find(e,t){this.checkKeyAndValueTensor(e,t);const n=await e.data();return wi((()=>{const e=[];for(let a=0;a<n.length;a++){const r=n[a],s=this.findWithDefault(r,t);e.push(s)}return Cd(e)}))}findWithDefault(e,t){const n=this.tensorMap.get(e);return null!=n?n:t}checkKeyAndValueTensor(e,t){if(e.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got ${e.dtype}`);if(t.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got ${t.dtype}`)}}function BN(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:wi;const s=((e,t,n)=>{switch(e.category){case"arithmetic":return r((()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:I;switch(e.op){case"BiasAdd":case"AddV2":case"Add":return[a.add(Wk("a",e,t,n),Wk("b",e,t,n))];case"AddN":return[a.addN(Wk("tensors",e,t,n))];case"FloorMod":case"Mod":return[a.mod(Wk("a",e,t,n),Wk("b",e,t,n))];case"Mul":return[a.mul(Wk("a",e,t,n),Wk("b",e,t,n))];case"RealDiv":case"Div":return[a.div(Wk("a",e,t,n),Wk("b",e,t,n))];case"DivNoNan":return[a.divNoNan(Wk("a",e,t,n),Wk("b",e,t,n))];case"FloorDiv":return[a.floorDiv(Wk("a",e,t,n),Wk("b",e,t,n))];case"Sub":return[a.sub(Wk("a",e,t,n),Wk("b",e,t,n))];case"Minimum":return[a.minimum(Wk("a",e,t,n),Wk("b",e,t,n))];case"Maximum":return[a.maximum(Wk("a",e,t,n),Wk("b",e,t,n))];case"Pow":return[a.pow(Wk("a",e,t,n),Wk("b",e,t,n))];case"SquaredDifference":return[a.squaredDifference(Wk("a",e,t,n),Wk("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}}(e,t,n)));case"basic_math":return r((()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:I;switch(e.op){case"Abs":case"ComplexAbs":return[a.abs(Wk("x",e,t,n))];case"Acos":return[a.acos(Wk("x",e,t,n))];case"Acosh":return[a.acosh(Wk("x",e,t,n))];case"Asin":return[a.asin(Wk("x",e,t,n))];case"Asinh":return[a.asinh(Wk("x",e,t,n))];case"Atan":return[a.atan(Wk("x",e,t,n))];case"Atan2":return[a.atan2(Wk("x",e,t,n),Wk("y",e,t,n))];case"Atanh":return[a.atanh(Wk("x",e,t,n))];case"Ceil":return[a.ceil(Wk("x",e,t,n))];case"Complex":return[a.complex(Wk("real",e,t,n),Wk("imag",e,t,n))];case"Cos":return[a.cos(Wk("x",e,t,n))];case"Cosh":return[a.cosh(Wk("x",e,t,n))];case"Elu":return[a.elu(Wk("x",e,t,n))];case"Erf":return[a.erf(Wk("x",e,t,n))];case"Exp":return[a.exp(Wk("x",e,t,n))];case"Expm1":return[a.expm1(Wk("x",e,t,n))];case"Floor":return[a.floor(Wk("x",e,t,n))];case"Log":return[a.log(Wk("x",e,t,n))];case"Log1p":return[a.log1p(Wk("x",e,t,n))];case"Imag":return[a.imag(Wk("x",e,t,n))];case"Neg":return[a.neg(Wk("x",e,t,n))];case"Reciprocal":return[a.reciprocal(Wk("x",e,t,n))];case"Real":return[a.real(Wk("x",e,t,n))];case"Relu":return[a.relu(Wk("x",e,t,n))];case"Round":return[a.round(Wk("x",e,t,n))];case"Selu":return[a.selu(Wk("x",e,t,n))];case"Sigmoid":return[a.sigmoid(Wk("x",e,t,n))];case"Sin":return[a.sin(Wk("x",e,t,n))];case"Sign":return[a.sign(Wk("x",e,t,n))];case"Sinh":return[a.sinh(Wk("x",e,t,n))];case"Softplus":return[a.softplus(Wk("x",e,t,n))];case"Sqrt":return[a.sqrt(Wk("x",e,t,n))];case"Square":return[a.square(Wk("x",e,t,n))];case"Tanh":return[a.tanh(Wk("x",e,t,n))];case"Tan":return[a.tan(Wk("x",e,t,n))];case"ClipByValue":return[a.clipByValue(Wk("x",e,t,n),Wk("clipValueMin",e,t,n),Wk("clipValueMax",e,t,n))];case"Relu6":return[a.relu6(Wk("x",e,t,n))];case"Rsqrt":return[a.rsqrt(Vk(e.inputNames[0],t,n))];case"LeakyRelu":return[a.leakyRelu(Wk("x",e,t,n),Wk("alpha",e,t,n))];case"Prelu":return[a.prelu(Wk("x",e,t,n),Wk("alpha",e,t,n))];case"IsNan":return[a.isNaN(Vk(e.inputNames[0],t,n))];case"IsInf":return[a.isInf(Vk(e.inputNames[0],t,n))];case"IsFinite":return[a.isFinite(Vk(e.inputNames[0],t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}}(e,t,n)));case"control":return MN(e,t,n);case"convolution":return r((()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:I;switch(e.op){case"Conv1D":{const r=Wk("stride",e,t,n),s=Wk("pad",e,t,n),i=Wk("dataFormat",e,t,n).toUpperCase(),o=Wk("dilation",e,t,n);return[a.conv1d(Wk("x",e,t,n),Wk("filter",e,t,n),r,s,i,o)]}case"Conv2D":{const r=Wk("strides",e,t,n),s=qk(e,t,n),i=Wk("dataFormat",e,t,n).toUpperCase(),o=Wk("dilations",e,t,n);return[a.conv2d(Wk("x",e,t,n),Wk("filter",e,t,n),[r[1],r[2]],s,i,[o[1],o[2]])]}case"_FusedConv2D":{const{stride:r,pad:s,dataFormat:i,dilations:o,biasArg:l,preluArg:u,activationFunc:c,leakyreluAlpha:p}=LN(e,t,n);return[a.fused.conv2d({x:Wk("x",e,t,n),filter:Wk("filter",e,t,n),strides:[r[1],r[2]],pad:s,dataFormat:i,dilations:[o[1],o[2]],bias:l,activation:c,preluActivationWeights:u,leakyreluAlpha:p})]}case"FusedDepthwiseConv2dNative":{const{stride:r,pad:s,dataFormat:i,dilations:o,biasArg:l,preluArg:u,activationFunc:c,leakyreluAlpha:p}=LN(e,t,n);return[a.fused.depthwiseConv2d({x:Wk("x",e,t,n),filter:Wk("filter",e,t,n),strides:[r[1],r[2]],pad:s,dataFormat:i,dilations:[o[1],o[2]],bias:l,activation:c,preluActivationWeights:u,leakyreluAlpha:p})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{const r=Wk("outputShape",e,t,n),s=Wk("strides",e,t,n),i=qk(e,t,n);return[a.conv2dTranspose(Wk("x",e,t,n),Wk("filter",e,t,n),r,[s[1],s[2]],i)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{const r=Wk("strides",e,t,n),s=qk(e,t,n),i=Wk("dilations",e,t,n),o=Wk("dataFormat",e,t,n).toUpperCase();return[a.depthwiseConv2d(Wk("input",e,t,n),Wk("filter",e,t,n),[r[1],r[2]],s,o,[i[1],i[2]])]}case"Conv3D":{const r=Wk("strides",e,t,n),s=Wk("pad",e,t,n),i=Wk("dataFormat",e,t,n).toUpperCase(),o=Wk("dilations",e,t,n);return[a.conv3d(Wk("x",e,t,n),Wk("filter",e,t,n),[r[1],r[2],r[3]],s,i,[o[1],o[2],o[3]])]}case"AvgPool":{const r=Wk("strides",e,t,n),s=Wk("pad",e,t,n),i=Wk("kernelSize",e,t,n);return[a.avgPool(Wk("x",e,t,n),[i[1],i[2]],[r[1],r[2]],s)]}case"MaxPool":{const r=Wk("strides",e,t,n),s=Wk("pad",e,t,n),i=Wk("kernelSize",e,t,n);return[a.maxPool(Wk("x",e,t,n),[i[1],i[2]],[r[1],r[2]],s)]}case"MaxPoolWithArgmax":{const r=Wk("strides",e,t,n),s=Wk("pad",e,t,n),i=Wk("kernelSize",e,t,n),o=Wk("includeBatchInIndex",e,t,n),{result:l,indexes:u}=a.maxPoolWithArgmax(Wk("x",e,t,n),[i[1],i[2]],[r[1],r[2]],s,o);return[l,u]}case"AvgPool3D":{const r=Wk("strides",e,t,n),s=Wk("pad",e,t,n),i=Wk("kernelSize",e,t,n);return[a.avgPool3d(Wk("x",e,t,n),[i[1],i[2],i[3]],[r[1],r[2],r[3]],s)]}case"MaxPool3D":{const r=Wk("strides",e,t,n),s=Wk("pad",e,t,n),i=Wk("kernelSize",e,t,n);return[a.maxPool3d(Wk("x",e,t,n),[i[1],i[2],i[3]],[r[1],r[2],r[3]],s)]}case"Dilation2D":{const r=Wk("strides",e,t,n),s=Wk("pad",e,t,n),i=Wk("dilations",e,t,n),o=r[1],l=r[2],u=i[1],c=i[2];return[a.dilation2d(Wk("x",e,t,n),Wk("filter",e,t,n),[o,l],s,[u,c],"NHWC")]}default:throw TypeError(`Node type ${e.op} is not implemented`)}}(e,t,n)));case"creation":return r((()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:I;switch(e.op){case"Fill":{const r=Wk("shape",e,t,n),s=Wk("dtype",e,t,n),i=Wk("value",e,t,n);return[a.fill(r,i,s)]}case"LinSpace":{const r=Wk("start",e,t,n),s=Wk("stop",e,t,n),i=Wk("num",e,t,n);return[a.linspace(r,s,i)]}case"Multinomial":{const r=Wk("logits",e,t,n),s=Wk("numSamples",e,t,n),i=Wk("seed",e,t,n);return[a.multinomial(r,s,i)]}case"OneHot":{const r=Wk("indices",e,t,n),s=Wk("depth",e,t,n),i=Wk("onValue",e,t,n),o=Wk("offValue",e,t,n),l=Wk("dtype",e,t,n);return[a.oneHot(r,s,i,o,l)]}case"Ones":return[a.ones(Wk("shape",e,t,n),Wk("dtype",e,t,n))];case"OnesLike":return[a.onesLike(Wk("x",e,t,n))];case"RandomStandardNormal":return[a.randomStandardNormal(Wk("shape",e,t,n),Wk("dtype",e,t,n),Wk("seed",e,t,n))];case"RandomUniform":return[a.randomUniform(Wk("shape",e,t,n),Wk("minval",e,t,n),Wk("maxval",e,t,n),Wk("dtype",e,t,n))];case"RandomUniformInt":return[a.randomUniformInt(Wk("shape",e,t,n),Wk("minval",e,t,n),Wk("maxval",e,t,n),Wk("seed",e,t,n))];case"Range":{const r=Wk("start",e,t,n),s=Wk("stop",e,t,n),i=Wk("step",e,t,n);return[a.range(r,s,i,Wk("dtype",e,t,n))]}case"TruncatedNormal":{const r=Wk("shape",e,t,n),s=Wk("mean",e,t,n),i=Wk("stdDev",e,t,n),o=Wk("seed",e,t,n);return[a.truncatedNormal(r,s,i,Wk("dtype",e,t,n),o)]}case"Zeros":return[a.zeros(Wk("shape",e,t,n),Wk("dtype",e,t,n))];case"ZerosLike":return[a.zerosLike(Wk("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}}(e,t,n)));case"dynamic":return async function(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:I;switch(e.op){case"NonMaxSuppressionV5":{const{boxes:a,scores:s,maxOutputSize:i,iouThreshold:o,scoreThreshold:l,softNmsSigma:u}=zN(e,t,n),c=await r.image.nonMaxSuppressionWithScoreAsync(a,s,i,o,l,u);return[c.selectedIndices,c.selectedScores]}case"NonMaxSuppressionV4":{const{boxes:a,scores:s,maxOutputSize:i,iouThreshold:o,scoreThreshold:l}=zN(e,t,n),u=Wk("padToMaxOutputSize",e,t,n),c=await r.image.nonMaxSuppressionPaddedAsync(a,s,i,o,l,u);return[c.selectedIndices,c.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{const{boxes:a,scores:s,maxOutputSize:i,iouThreshold:o,scoreThreshold:l}=zN(e,t,n);return[await r.image.nonMaxSuppressionAsync(a,s,i,o,l)]}case"Where":{const a=r.cast(Wk("condition",e,t,n),"bool"),s=[await r.whereAsync(a)];return a.dispose(),s}case"ListDiff":return r.setdiff1dAsync(Wk("x",e,t,n),Wk("y",e,t,n));default:throw TypeError(`Node type ${e.op} is not implemented`)}}(e,t,n);case"evaluation":return r((()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:I;switch(e.op){case"LowerBound":{const r=Wk("sortedSequence",e,t,n),s=Wk("values",e,t,n);return[a.lowerBound(r,s)]}case"TopKV2":{const r=Wk("x",e,t,n),s=Wk("k",e,t,n),i=Wk("sorted",e,t,n),o=a.topk(r,s,i);return[o.values,o.indices]}case"UpperBound":{const r=Wk("sortedSequence",e,t,n),s=Wk("values",e,t,n);return[a.upperBound(r,s)]}case"Unique":{const r=Wk("x",e,t,n),s=a.unique(r);return[s.values,s.indices]}case"UniqueV2":{const r=Wk("x",e,t,n),s=Wk("axis",e,t,n),i=a.unique(r,s);return[i.values,i.indices]}default:throw TypeError(`Node type ${e.op} is not implemented`)}}(e,t,n)));case"image":return r((()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:I;switch(e.op){case"ResizeBilinear":{const r=Wk("images",e,t,n),s=Wk("size",e,t,n),i=Wk("alignCorners",e,t,n),o=Wk("halfPixelCenters",e,t,n);return[a.image.resizeBilinear(r,[s[0],s[1]],i,o)]}case"ResizeNearestNeighbor":{const r=Wk("images",e,t,n),s=Wk("size",e,t,n),i=Wk("alignCorners",e,t,n),o=Wk("halfPixelCenters",e,t,n);return[a.image.resizeNearestNeighbor(r,[s[0],s[1]],i,o)]}case"CropAndResize":{const r=Wk("image",e,t,n),s=Wk("boxes",e,t,n),i=Wk("boxInd",e,t,n),o=Wk("cropSize",e,t,n),l=Wk("method",e,t,n),u=Wk("extrapolationValue",e,t,n);return[a.image.cropAndResize(r,s,i,o,l,u)]}case"ImageProjectiveTransformV3":{const r=Wk("images",e,t,n),s=Wk("transforms",e,t,n),i=Wk("outputShape",e,t,n),o=Wk("fillValue",e,t,n),l=Wk("interpolation",e,t,n),u=Wk("fillMode",e,t,n);return[a.image.transform(r,s,l.toLowerCase(),u.toLowerCase(),o,i)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}}(e,t,n)));case"graph":return r((()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:I;switch(e.op){case"Const":return t[e.name];case"PlaceholderWithDefault":const r=Wk("default",e,t,n);return[Vk(e.name,t,n)||r];case"Placeholder":return[Vk(e.name,t,n)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":case"Snapshot":return[Kk(Wk("x",e,t,n))];case"IdentityN":return Wk("x",e,t,n).map((e=>Kk(e)));case"Shape":return[a.tensor1d(Wk("x",e,t,n).shape,"int32")];case"ShapeN":return Wk("x",e,t,n).map((e=>a.tensor1d(e.shape)));case"Size":return[a.scalar(Wk("x",e,t,n).size,"int32")];case"Rank":return[a.scalar(Wk("x",e,t,n).rank,"int32")];case"NoOp":return[a.scalar(1)];case"Print":const s=Wk("x",e,t,n),i=Wk("data",e,t,n),o=Wk("message",e,t,n),l=Wk("summarize",e,t,n);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(o);for(let e=0;e<i.length;e++)console.log(Array.prototype.slice.call(i[e].dataSync()).slice(0,l));return[s];default:throw TypeError(`Node type ${e.op} is not implemented`)}}(e,t,n)));case"logical":return r((()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:I;switch(e.op){case"Equal":return[a.equal(Wk("a",e,t,n),Wk("b",e,t,n))];case"NotEqual":return[a.notEqual(Wk("a",e,t,n),Wk("b",e,t,n))];case"Greater":return[a.greater(Wk("a",e,t,n),Wk("b",e,t,n))];case"GreaterEqual":return[a.greaterEqual(Wk("a",e,t,n),Wk("b",e,t,n))];case"Less":return[a.less(Wk("a",e,t,n),Wk("b",e,t,n))];case"LessEqual":return[a.lessEqual(Wk("a",e,t,n),Wk("b",e,t,n))];case"LogicalAnd":return[a.logicalAnd(Wk("a",e,t,n),Wk("b",e,t,n))];case"LogicalNot":return[a.logicalNot(Wk("a",e,t,n))];case"LogicalOr":return[a.logicalOr(Wk("a",e,t,n),Wk("b",e,t,n))];case"Select":case"SelectV2":return[a.where(Wk("condition",e,t,n),Wk("a",e,t,n),Wk("b",e,t,n))];case"BitwiseAnd":return[a.bitwiseAnd(Wk("a",e,t,n),Wk("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}}(e,t,n)));case"matrices":return r((()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:I;switch(e.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[a.matMul(Wk("a",e,t,n),Wk("b",e,t,n),Wk("transposeA",e,t,n),Wk("transposeB",e,t,n))];case"Einsum":return[a.einsum(Wk("equation",e,t,n),...Wk("tensors",e,t,n))];case"Transpose":return[a.transpose(Wk("x",e,t,n),Wk("perm",e,t,n))];case"_FusedMatMul":const[r,s]=Wk("fusedOps",e,t,n),i="biasadd"===r,o="prelu"===s,l=Wk("numArgs",e,t,n),u=Wk("leakyreluAlpha",e,t,n);if(i){if(o&&2!==l)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!o&&1!==l)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}const[c,p]=Wk("args",e,t,n);return[a.fused.matMul({a:Wk("a",e,t,n),b:Wk("b",e,t,n),transposeA:Wk("transposeA",e,t,n),transposeB:Wk("transposeB",e,t,n),bias:c,activation:s,preluActivationWeights:p,leakyreluAlpha:u})];case"MatrixBandPart":return[a.linalg.bandPart(Wk("a",e,t,n),Wk("numLower",e,t,n),Wk("numUpper",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}}(e,t,n)));case"normalization":return r((()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:I;switch(e.op){case"EuclideanNorm":return[a.euclideanNorm(Wk("x",e,t,n),Wk("axis",e,t,n),Wk("keepDims",e,t,n))];case"FusedBatchNorm":case"FusedBatchNormV2":case"FusedBatchNormV3":return[a.batchNorm(Wk("x",e,t,n),Wk("mean",e,t,n),Wk("variance",e,t,n),Wk("offset",e,t,n),Wk("scale",e,t,n),Wk("epsilon",e,t,n))];case"LRN":return[a.localResponseNormalization(Wk("x",e,t,n),Wk("radius",e,t,n),Wk("bias",e,t,n),Wk("alpha",e,t,n),Wk("beta",e,t,n))];case"Softmax":return[a.softmax(Wk("x",e,t,n))];case"LogSoftmax":return[a.logSoftmax(Wk("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}}(e,t,n)));case"ragged":return r((()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:I;switch(e.op){case"RaggedGather":{const{outputNestedSplits:r,outputDenseValues:s}=a.raggedGather(Wk("paramsNestedSplits",e,t,n),Wk("paramsDenseValues",e,t,n),Wk("indices",e,t,n),Wk("outputRaggedRank",e,t,n));return r.concat(s)}case"RaggedRange":{const{rtNestedSplits:r,rtDenseValues:s}=a.raggedRange(Wk("starts",e,t,n),Wk("limits",e,t,n),Wk("splits",e,t,n));return[r,s]}case"RaggedTensorToTensor":return[a.raggedTensorToTensor(Wk("shape",e,t,n),Wk("values",e,t,n),Wk("defaultValue",e,t,n),Wk("rowPartitionTensors",e,t,n),Wk("rowPartitionTypes",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}}(e,t,n)));case"reduction":return r((()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:I;switch(e.op){case"Max":{const r=Wk("axis",e,t,n),s=Wk("keepDims",e,t,n);return[a.max(Wk("x",e,t,n),r,s)]}case"Mean":{const r=Wk("axis",e,t,n),s=Wk("keepDims",e,t,n);return[a.mean(Wk("x",e,t,n),r,s)]}case"Min":{const r=Wk("axis",e,t,n),s=Wk("keepDims",e,t,n);return[a.min(Wk("x",e,t,n),r,s)]}case"Sum":{const r=Wk("axis",e,t,n),s=Wk("keepDims",e,t,n);return[a.sum(Wk("x",e,t,n),r,s)]}case"All":{const r=Wk("axis",e,t,n),s=Wk("keepDims",e,t,n);return[a.all(Wk("x",e,t,n),r,s)]}case"Any":{const r=Wk("axis",e,t,n),s=Wk("keepDims",e,t,n);return[a.any(Wk("x",e,t,n),r,s)]}case"ArgMax":{const r=Wk("axis",e,t,n);return[a.argMax(Wk("x",e,t,n),r)]}case"ArgMin":{const r=Wk("axis",e,t,n);return[a.argMin(Wk("x",e,t,n),r)]}case"Prod":{const r=Wk("axis",e,t,n),s=Wk("keepDims",e,t,n);return[a.prod(Wk("x",e,t,n),r,s)]}case"Cumprod":{const r=Wk("axis",e,t,n),s=Wk("exclusive",e,t,n),i=Wk("reverse",e,t,n);return[a.cumprod(Wk("x",e,t,n),r,s,i)]}case"Cumsum":{const r=Wk("axis",e,t,n),s=Wk("exclusive",e,t,n),i=Wk("reverse",e,t,n);return[a.cumsum(Wk("x",e,t,n),r,s,i)]}case"Bincount":const r=Wk("x",e,t,n),s=Wk("weights",e,t,n),i=Wk("size",e,t,n);return[a.bincount(r,s,i)];case"DenseBincount":{const r=Wk("x",e,t,n),s=Wk("weights",e,t,n),i=Wk("size",e,t,n),o=Wk("binaryOutput",e,t,n);return[a.denseBincount(r,s,i,o)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}}(e,t,n)));case"slice_join":return r((()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:I;switch(e.op){case"ConcatV2":case"Concat":{const r=Wk("n",e,t,n),s=Wk("axis",e,t,n);let i=Wk("tensors",e,t,n);return i=i.slice(0,r),[a.concat(i,s)]}case"Gather":{const r=Wk("x",e,t,n),s=Wk("indices",e,t,n);return[a.gather(r,a.cast(s,"int32"),0)]}case"GatherV2":{const r=Wk("axis",e,t,n),s=Wk("batchDims",e,t,n),i=Wk("x",e,t,n),o=Wk("indices",e,t,n);return[a.gather(i,a.cast(o,"int32"),r,s)]}case"Reverse":{const r=Wk("dims",e,t,n),s=[];for(let e=0;e<r.length;e++)r[e]&&s.push(e);const i=Wk("x",e,t,n);return[a.reverse(i,s)]}case"ReverseV2":{const r=Wk("axis",e,t,n),s=Wk("x",e,t,n);return[a.reverse(s,r)]}case"Slice":{const r=Wk("begin",e,t,n),s=Wk("size",e,t,n);return[a.slice(Wk("x",e,t,n),r,s)]}case"StridedSlice":{const r=Wk("begin",e,t,n),s=Wk("end",e,t,n),i=Wk("strides",e,t,n),o=Wk("beginMask",e,t,n),l=Wk("endMask",e,t,n),u=Wk("ellipsisMask",e,t,n),c=Wk("newAxisMask",e,t,n),p=Wk("shrinkAxisMask",e,t,n),d=Wk("x",e,t,n);return[a.stridedSlice(d,r,s,i,o,l,u,c,p)]}case"Pack":return wi((()=>{const r=Wk("axis",e,t,n),s=Wk("tensors",e,t,n),i=s[0].shape,o=a.squeeze(s[0]).shape,l=s.map((e=>{const t=Qe(e.shape,i);if(!t&&!Qe(a.squeeze(e).shape,o))throw new Error("the input tensors shape does not match");return t?e:a.reshape(e,i)}));return[a.stack(l,r)]}));case"Unpack":{const r=Wk("axis",e,t,n),s=Wk("tensor",e,t,n);return a.unstack(s,r)}case"Tile":{const r=Wk("reps",e,t,n);return[a.tile(Wk("x",e,t,n),r)]}case"Split":case"SplitV":{const r=Wk("axis",e,t,n),s=Wk("numOrSizeSplits",e,t,n),i=Wk("x",e,t,n);return a.split(i,s,r)}case"ScatterNd":{const r=Wk("indices",e,t,n),s=Wk("values",e,t,n),i=Wk("shape",e,t,n);return[a.scatterND(r,s,i)]}case"GatherNd":{const r=Wk("x",e,t,n),s=Wk("indices",e,t,n);return[a.gatherND(r,s)]}case"SparseToDense":{const r=Wk("sparseIndices",e,t,n),s=Wk("outputShape",e,t,n),i=Wk("sparseValues",e,t,n),o=Wk("defaultValue",e,t,n);return[a.sparseToDense(r,i,s,i.dtype===o.dtype?o:a.cast(o,i.dtype))]}case"TensorScatterUpdate":{const r=Wk("indices",e,t,n),s=Wk("values",e,t,n),i=Wk("tensor",e,t,n);return[a.tensorScatterUpdate(i,r,s)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}}(e,t,n)));case"sparse":return r((()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:I;switch(e.op){case"SparseFillEmptyRows":{const{outputIndices:r,outputValues:s,emptyRowIndicator:i,reverseIndexMap:o}=a.sparse.sparseFillEmptyRows(Wk("indices",e,t,n),Wk("values",e,t,n),Wk("denseShape",e,t,n),Wk("defaultValue",e,t,n));return[r,s,i,o]}case"SparseReshape":{const{outputIndices:r,outputShape:s}=a.sparse.sparseReshape(Wk("inputIndices",e,t,n),Wk("inputShape",e,t,n),Wk("newShape",e,t,n));return[r,s]}case"SparseSegmentMean":return[a.sparse.sparseSegmentMean(Wk("data",e,t,n),Wk("indices",e,t,n),Wk("segmentIds",e,t,n))];case"SparseSegmentSum":return[a.sparse.sparseSegmentSum(Wk("data",e,t,n),Wk("indices",e,t,n),Wk("segmentIds",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}}(e,t,n)));case"spectral":return r((()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:I;switch(e.op){case"FFT":return[a.fft(Wk("x",e,t,n))];case"IFFT":return[a.ifft(Wk("x",e,t,n))];case"RFFT":return[a.rfft(Wk("x",e,t,n))];case"IRFFT":return[a.irfft(Wk("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}}(e,t,n)));case"string":return r((()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:I;switch(e.op){case"StaticRegexReplace":return[a.string.staticRegexReplace(Wk("input",e,t,n),Wk("pattern",e,t,n),Wk("rewrite",e,t,n),Wk("replaceGlobal",e,t,n))];case"StringNGrams":{const{nGrams:r,nGramsSplits:s}=a.string.stringNGrams(Wk("data",e,t,n),Wk("dataSplits",e,t,n),Wk("separator",e,t,n),Wk("nGramWidths",e,t,n),Wk("leftPad",e,t,n),Wk("rightPad",e,t,n),Wk("padWidth",e,t,n),Wk("preserveShortSequences",e,t,n));return[r,s]}case"StringSplit":{const{indices:r,values:s,shape:i}=a.string.stringSplit(Wk("input",e,t,n),Wk("delimiter",e,t,n),Wk("skipEmpty",e,t,n));return[r,s,i]}case"StringToHashBucketFast":return[a.string.stringToHashBucketFast(Wk("input",e,t,n),Wk("numBuckets",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}}(e,t,n)));case"transformation":return r((()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:I;switch(e.op){case"Cast":return[a.cast(Wk("x",e,t,n),Wk("dtype",e,t,n))];case"ExpandDims":{const r=Wk("axis",e,t,n);return[a.expandDims(Wk("x",e,t,n),r)]}case"Squeeze":{const r=Wk("axis",e,t,n);return[a.squeeze(Wk("x",e,t,n),r)]}case"Reshape":return[a.reshape(Wk("x",e,t,n),Wk("shape",e,t,n))];case"EnsureShape":return[a.ensureShape(Wk("x",e,t,n),Wk("shape",e,t,n))];case"MirrorPad":return[a.mirrorPad(Wk("x",e,t,n),Wk("padding",e,t,n),Wk("mode",e,t,n))];case"PadV2":case"Pad":return[a.pad(Wk("x",e,t,n),Wk("padding",e,t,n),Wk("constantValue",e,t,n))];case"SpaceToBatchND":{const r=Wk("blockShape",e,t,n),s=Wk("paddings",e,t,n);return[a.spaceToBatchND(Wk("x",e,t,n),r,s)]}case"BatchToSpaceND":{const r=Wk("blockShape",e,t,n),s=Wk("crops",e,t,n);return[a.batchToSpaceND(Wk("x",e,t,n),r,s)]}case"DepthToSpace":{const r=Wk("blockSize",e,t,n),s=Wk("dataFormat",e,t,n).toUpperCase();return[a.depthToSpace(Wk("x",e,t,n),r,s)]}case"BroadcastTo":return[a.broadcastTo(Wk("x",e,t,n),Wk("shape",e,t,n))];case"BroadcastArgs":return[a.broadcastArgs(Wk("s0",e,t,n),Wk("s1",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}}(e,t,n)));case"hash_table":return(async(e,t,n,a)=>{switch(e.op){case"HashTable":case"HashTableV2":{const r=a.getHashTableHandleByName(e.name);if(null!=r)return[r];{const r=Wk("keyDType",e,t,n),s=Wk("valueDType",e,t,n),i=new PN(r,s);return a.addHashTable(e.name,i),[i.handle]}}case"InitializeTable":case"InitializeTableV2":case"LookupTableImport":case"LookupTableImportV2":{const r=Wk("tableHandle",e,t,n,a),s=Wk("keys",e,t,n),i=Wk("values",e,t,n),o=a.getHashTableById(r.id);return[await o.import(s,i)]}case"LookupTableFind":case"LookupTableFindV2":{const r=Wk("tableHandle",e,t,n,a),s=Wk("keys",e,t,n),i=Wk("defaultValue",e,t,n),o=a.getHashTableById(r.id);return[await o.find(s,i)]}case"LookupTableSize":case"LookupTableSizeV2":{const r=Wk("tableHandle",e,t,n,a);return[a.getHashTableById(r.id).tensorSize()]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n,a);case"custom":const s=Bk(e.op);if(s&&s.customExecutor)return s.customExecutor(new $N(e,t,n));throw TypeError(`Custom op ${e.op} is not registered.`);default:throw TypeError(`Unknown op '${e.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(e,t,n);return Nt(s)?s.then((e=>[].concat(e))):[].concat(s)}class WN{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{},r=arguments.length>4?arguments[4]:void 0;this.weightMap=e,this.tensorArrayMap=t,this.tensorListMap=n,this.functionMap=a,this.parseNodeNameCache=r,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(e,t){return{id:e,frameName:t,iterationId:0}}set currentContext(e){this.contexts!==e&&(this.contexts=e,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){const e=[];for(let t=0;t<this.contexts.length-1;t++){const n=this.contexts.slice(0,this.contexts.length-t);e.push(this.contextIdforContexts(n))}e.push(""),this._currentContextIds=e}contextIdforContexts(e){return e?e.map((e=>0===e.id&&0===e.iterationId?"":`${e.frameName}-${e.iterationId}`)).join("/"):""}enterFrame(e){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,e)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(!(this.contexts&&this.contexts.length>1))throw new Error("Cannot exit frame, the context is empty");this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift()}nextIteration(){if(!(this.contexts&&this.contexts.length>0))throw new Error("Cannot increase frame iteration, the context is empty");{this.contexts=this.contexts.slice(),this.lastId++;const e=Object.assign({},this.contexts[this.contexts.length-1]);e.iterationId+=1,e.id=this.lastId,this.contexts.splice(-1,1,e),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}}getWeight(e){return this.weightMap[e]}addTensorArray(e){this.tensorArrayMap[e.id]=e}getTensorArray(e){return this.tensorArrayMap[e]}addTensorList(e){this.tensorListMap[e.id]=e}getTensorList(e){return this.tensorListMap[e]}dispose(e){for(const t in this.tensorArrayMap)this.tensorArrayMap[t].clearAndClose(e);for(const t in this.tensorListMap)this.tensorListMap[t].clearAndClose(e)}}function VN(e,t,n,a){const r=new Set,s=[];let i=null,o=null;const l=new Set,u=new Set(Object.keys(e).map((e=>Hk(e)[0])));a=a||[];const c=new Set(a.map((e=>Hk(e.name)[0]))),p=[...t];for(;p.length>0;){const e=p.pop();(KN(e)||XN(e)||YN(e))&&null==i&&(i=e,o=i.children.map((e=>e.name)).filter((e=>r.has(e)))),r.add(e.name),null==n[e.name]&&(u.has(e.name)||c.has(e.name)||(0!==e.inputs.length?e.inputs.forEach((e=>{l.has(e.name)||(l.add(e.name),p.push(e))})):s.push(e.name)))}return{inputs:e,outputs:t,usedNodes:r,missingInputs:s,dynamicNode:i,syncInputs:o}}function UN(e,t){const{usedNodes:n,inputs:a}=t,r=Object.keys(a).map((e=>Hk(e)[0])).map((t=>e.nodes[t])),s=e.initNodes||[],i=e=>n.has("string"===typeof e?e:e.name);function o(e){return[...new Map(e.map((e=>[e.name,e]))).values()]}const l=o([...r,...e.weights,...s]).filter(i),u=o([...l,...Object.values(e.nodes)]).filter(i),c=new Map(u.map((e=>[e.name,e]))),p={};for(const m of u){p[m.name]=p[m.name]||0;for(const e of m.children)i(e)||(p[e.name]=Number.POSITIVE_INFINITY),p[e.name]=(p[e.name]||0)+1}const d=Object.entries(p).filter((e=>{let[,t]=e;return 0===t})).map((e=>{let[t]=e;return t})),h=[...d];for(;d.length>0;){const e=d.pop(),t=c.get(e);for(const n of t.children.filter(i))0===--p[n.name]&&(h.push(n.name),d.push(n.name))}const f=function(e,t){const n=new Map(e.map((e=>[e.name,e]))),a=t.map((e=>e.name)),r=new Set(a);for(;a.length>0;){const e=a.pop(),t=n.get(e);for(const s of t.children)n.has(s.name)&&!r.has(s.name)&&(r.add(s.name),a.push(s.name))}const s=e.filter((e=>r.has(e.name)));return s}(h.map((e=>c.get(e))),l);return function(e,t){const n=new Map(e.map(((e,t)=>[e.name,t]))),a=new Set(t.map((e=>e.name))),r=e=>a.has("string"===typeof e?e:e.name),s=new Set(e.map((e=>e.name))),i=e=>s.has("string"===typeof e?e:e.name);for(const o of e){for(const e of o.children.filter(i)){if(!n.has(e.name))throw new jN(`Child ${e.name} of node ${o.name} is unreachable.`);if(n.get(o.name)>n.get(e.name))throw new jN(`Node ${o.name} is scheduled to run after its child ${e.name}.`)}if(!r(o))for(const e of o.inputs){if(!n.has(e.name))throw new jN(`Input ${e.name} of node ${o.name} is unreachable.`);if(n.get(e.name)>n.get(o.name))throw new jN(`Node ${o.name} is scheduled to run before its input ${e.name}.`)}}}(f,l),f}class jN extends Error{constructor(e){super(`NodesExecutionOrderError: ${e}`)}}const GN=new Set(["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"]),HN=new Set(["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"]),qN=new Set(["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"]);function KN(e){return GN.has(e.op)}function XN(e){return HN.has(e.op)}function YN(e){return qN.has(e.op)}class QN{get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(e){const t=Object.keys(e).map((t=>e[t].map((e=>e.id))));this._weightIds=[].concat(...t),this._weightMap=e}set resourceManager(e){this._resourceManager=e}get inputs(){return this._inputs.map((e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0})))}get outputs(){return this._outputs.map((e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0})))}get inputNodes(){return this._inputs.map((e=>e.signatureKey||e.name))}get outputNodes(){return this._outputs.map((e=>{const t=e.signatureKey||e.name;return e.defaultOutput?`${t}:${e.defaultOutput}`:t}))}get functions(){return Object.keys(this._functions).reduce(((e,t)=>(e[t]=this._functions[t].signature,e)),{})}constructor(e,t){this.graph=e,this.parent=t,this.compiledMap=new Map,this.parseNodeNameCache=new Map,this._weightMap={},this.SEPARATOR=",",this._functions={},this._functionExecutorMap={},this.keepIntermediateTensors=!1,this._outputs=e.outputs,this._inputs=e.inputs,this._initNodes=e.initNodes,this._signature=e.signature,this._functions=e.functions,null!=e.functions&&Object.keys(e.functions).forEach((t=>{this._functionExecutorMap[t]=new QN(e.functions[t],this)}))}getCompilationKey(e,t){const n=e.map((e=>e.name)).sort(),a=t.map((e=>e.name)).sort();return n.join(this.SEPARATOR)+"--"+a.join(this.SEPARATOR)}compile(e,t){const n=VN(e,t,this.weightMap,this._initNodes),{missingInputs:a,dynamicNode:r,syncInputs:s}=n;if(null!=r)throw new Error(`This execution contains the node '${r.name}', which has the dynamic op '${r.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${s}]`);if(a.length>0){const n=t.map((e=>e.name)),r=Object.keys(e);throw new Error(`Cannot compute the outputs [${n}] from the provided inputs [${r}]. Missing the following inputs: [${a}]`)}const i=UN(this.graph,n),o=function(e){const t=new Map(e.map(((e,t)=>[e.name,t]))),n=Number.MAX_SAFE_INTEGER,a=e.map(((e,t)=>KN(e)?n:t)),r=e=>{const n=a[t.get(e.name)];return null==n?-1:n},s=e.map(((e,t)=>e.children.map(r).reduce(((e,t)=>Math.max(e,t)),a[t]))),i=new Map;for(let o=0;o<e.length;++o){const t=s[o];if(t===n)continue;const a=e[o],r=e[t];i.has(r.name)||i.set(r.name,[]),i.get(r.name).push(a)}return i}(i);return{orderedNodes:i,nodeLiveUntilMap:o}}cloneAndKeepTensor(e){if(null==e)return null;const t=e.clone();return Ni(t),t}cloneTensorList(e){if(!e)return null;const t=e.map((e=>this.cloneAndKeepTensor(e)));return t}cloneTensorMap(e){return Object.fromEntries(Object.entries(e).map((e=>{let[t,n]=e;return[t,this.cloneTensorList(n)]})))}execute(e,t){this.disposeIntermediateTensors(),e=this.mapInputs(e);const n=Object.keys(e).sort();this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t);const a=n.map((e=>this.graph.nodes[Hk(e)[0]])),r=t.map((e=>Hk(e)[0])),s=new Set(r);let i=r.map((e=>this.graph.nodes[e]));0===i.length&&(i=this._outputs);const o=this.getCompilationKey(a,i);let l=this.compiledMap.get(o);null==l&&(l=this.compile(e,i),this.compiledMap.set(o,l));try{this.keepIntermediateTensors=Ct().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(p){this.keepIntermediateTensors=!1,console.warn(p.message)}const u={},c={};return wi((()=>{const n=new WN(this.weightMap,u,c,this.functionExecutorMap,this.parseNodeNameCache),a=Object.assign({},this.weightMap);this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap)),Object.keys(e).forEach((t=>{const[r,s]=Hk(t,n),i=[];i[s]=e[t],a[r]=i,this.keepIntermediateTensors&&(this.clonedTensorsMap[r]=this.cloneTensorList(i))}));const r=this.getFrozenTensorIds(a),{orderedNodes:i,nodeLiveUntilMap:o}=l;for(const e of i){if(a[e.name])continue;const t=BN(e,a,n,this._resourceManager);if(Nt(t))throw new Error(`The execution of the op '${e.op}' returned a promise. Please use model.executeAsync() instead.`);a[e.name]=t,this.keepIntermediateTensors&&(this.clonedTensorsMap[e.name]=this.cloneTensorList(t)),this.checkTensorForDisposalWithNodeLiveUntilInfo(e,a,n,r,s,o.get(e.name))}return null==this.parent&&n.dispose(r),t.map((e=>Vk(e,a,n)))}))}getFrozenTensorIds(e){const t=[].concat.apply([],Object.keys(e).map((t=>e[t])).map((e=>e.map((e=>e.id)))));return new Set(t)}checkTensorForDisposal(e,t,n,a,r,s,i){if(!KN(t)&&!s.has(e)){for(const a of n[e])null!=a&&(i[a.id]=(i[a.id]||0)+t.children.length);for(const e of t.inputs){if(KN(e))continue;const t=Uk(e.name,n,a);if(null!=t)for(const e of t){if(!e||e.kept||r.has(e.id))continue;const t=i[e.id];1===t?(e.dispose(),delete i[e.id]):null!=t&&i[e.id]--}}}}checkTensorForDisposalWithNodeLiveUntilInfo(e,t,n,a,r,s){function i(e){return KN(e)||r.has(e.name)}if(!KN(e)&&null!=s)for(const o of s){if(i(o))continue;const e=Uk(o.name,t,n);for(const t of e)!t||t.kept||a.has(t.id)||t.dispose()}}async executeAsync(e,t){return this._executeAsync(e,t)}disposeIntermediateTensors(){this.clonedTensorsMap&&(Object.values(this.clonedTensorsMap).forEach((e=>{for(const t of e)t&&!t.isDisposed&&t.dispose()})),this.clonedTensorsMap=null)}getIntermediateTensors(){return this.clonedTensorsMap}async _executeAsync(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{},r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:{};this.disposeIntermediateTensors(),n||(e=this.mapInputs(e),this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t));try{this.keepIntermediateTensors=Ct().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(p){this.keepIntermediateTensors=!1,console.warn(p.message)}const s=new WN(this.weightMap,a,r,this.functionExecutorMap,this.parseNodeNameCache);this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap));const i=await this.executeWithControlFlow(e,s,t,n),o=t.map((e=>Vk(e,i,s))),l=o.map((e=>e.id)),u=Object.keys(e).map((t=>e[t].id)),c=new Set([...l,...u,...this.weightIds]);return Object.values(i).forEach((e=>{e.forEach((e=>{!e||e.isDisposed||c.has(e.id)||e.dispose()}))})),null==this.parent&&s.dispose(c),o}async executeFunctionAsync(e,t,n){const a=e.reduce(((e,t,n)=>(e[this.inputs[n].name]=t,e)),{});return this._executeAsync(a,this.outputNodes,!0,t,n)}async executeWithControlFlow(e,t,n,a){const r=Object.keys(e),s=r.map((e=>this.graph.nodes[Hk(e)[0]])),i=n.map((e=>Hk(e)[0])),o=new Set(i);let l=i.map((e=>this.graph.nodes[e]));0===l.length&&(l=this._outputs);const{usedNodes:u,missingInputs:c,dynamicNode:p,syncInputs:d}=VN(e,l,this.weightMap,this._initNodes),h=[...s,...this.graph.weights,...this._initNodes||[]].map((e=>({node:e,contexts:t.currentContext}))),f=Object.assign({},this.weightMap);Object.keys(e).forEach((t=>{const[n,a]=Hk(t),r=[];r[a]=e[t],f[n]=r}));const m={},g=this.getFrozenTensorIds(f),y={};for(;h.length>0;){const e=this.processStack(s,h,t,f,y,g,o,m,u);await Promise.all(e)}null!=p||a||console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");const b=l.filter((e=>!KN(e)&&!Vk(e.name,f,t))).map((e=>e.name));if(b.length>0){let e="";throw null!=p&&(e=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${d}]`),new Error(`Cannot compute the outputs [${b}] from the provided inputs [${r}]. Consider providing the following inputs: [${c}]. ${e}`)}return f}processStack(e,t,n,a,r,s,i,o,l){const u=[];for(;t.length>0;){const e=t.pop();n.currentContext=e.contexts;let c="";if("Enter"===e.node.op&&Wk("isConstant",e.node,a,n)&&([c]=jk(e.node.name,n)),null==a[e.node.name]){const p=BN(e.node,a,n,this._resourceManager);c||([c]=jk(e.node.name,n));const d=n.currentContext;Nt(p)?u.push(p.then((u=>(a[c]=u,this.keepIntermediateTensors&&(this.clonedTensorsMap[c]=this.cloneTensorList(u)),n.currentContext=d,this.checkTensorForDisposal(c,e.node,a,n,s,i,o),this.processChildNodes(e.node,t,n,a,r,l),u)))):(a[c]=p,this.keepIntermediateTensors&&(this.clonedTensorsMap[c]=this.cloneTensorList(p)),this.checkTensorForDisposal(c,e.node,a,n,s,i,o),this.processChildNodes(e.node,t,n,a,r,l))}else this.processChildNodes(e.node,t,n,a,r,l)}return u}processChildNodes(e,t,n,a,r,s){e.children.forEach((e=>{const[i]=jk(e.name,n);!r[i]&&s.has(e.name)&&("Merge"===e.op?e.inputNames.some((e=>!!Vk(e,a,n)))&&(r[i]=!0,t.push({contexts:n.currentContext,node:e})):e.inputNames.every((e=>!!Vk(e,a,n)))&&(r[i]=!0,t.push({contexts:n.currentContext,node:e})))}))}dispose(){Object.keys(this.weightMap).forEach((e=>this.weightMap[e].forEach((e=>e.dispose()))))}checkInputShapeAndType(e){Object.keys(e).forEach((t=>{const n=e[t],[a]=Hk(t),r=this.graph.nodes[a];if(r.attrParams.shape&&r.attrParams.shape.value){const e=r.attrParams.shape.value;qe(e.length===n.shape.length&&n.shape.every(((t,n)=>-1===e[n]||e[n]===t)),(()=>`The shape of dict['${r.name}'] provided in model.execute(dict) must be [${e}], but was [${n.shape}]`))}r.attrParams.dtype&&r.attrParams.dtype.value&&qe(n.dtype===r.attrParams.dtype.value,(()=>`The dtype of dict['${r.name}'] provided in model.execute(dict) must be ${r.attrParams.dtype.value}, but was ${n.dtype}`))}))}mapInputs(e){var t,n;const a={};for(const r in e){const s=null===(n=null===(t=this._signature)||void 0===t?void 0:t.inputs)||void 0===n?void 0:n[r];null!=s?a[s.name]=e[r]:a[r]=e[r]}return a}checkInputs(e){const t=Object.keys(e).filter((e=>{const[t]=Hk(e);return null==this.graph.nodes[t]}));if(t.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${t}] that are not part of graph`)}mapOutputs(e){return e.map((e=>{var t,n;const a=null===(n=null===(t=this._signature)||void 0===t?void 0:t.outputs)||void 0===n?void 0:n[e];return null!=a?a.name:e}),{})}checkOutputs(e){e.forEach((e=>{const[t]=Hk(e);if(!this.graph.nodes[t])throw new Error(`The output '${e}' is not found in the graph`)}))}}class ZN{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};this.hashTableNameToHandle=e,this.hashTableMap=t}addHashTable(e,t){this.hashTableNameToHandle[e]=t.handle,this.hashTableMap[t.id]=t}getHashTableHandleByName(e){return this.hashTableNameToHandle[e]}getHashTableById(e){return this.hashTableMap[e]}dispose(){for(const e in this.hashTableMap)this.hashTableMap[e].clearAndClose(),delete this.hashTableMap[e];for(const e in this.hashTableNameToHandle)this.hashTableNameToHandle[e].dispose(),delete this.hashTableNameToHandle[e]}}const JN="?tfjs-format=file",eS="model.json";class tS{get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}get modelStructuredOutputKeys(){return this.structuredOutputKeys}constructor(t){let n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:e;this.modelUrl=t,this.loadOptions=n,this.version="n/a",this.io=a,null==n&&(this.loadOptions={}),this.resourceManager=new ZN}findIOHandler(){const e=this.modelUrl;if(null!=e.load)this.handler=e;else if(null!=this.loadOptions.requestInit)this.handler=this.io.browserHTTPRequest(e,this.loadOptions);else{const t=this.io.getLoadHandlers(e,this.loadOptions);if(0===t.length)t.push(this.io.browserHTTPRequest(e,this.loadOptions));else if(t.length>1)throw new Error(`Found more than one (${t.length}) load handlers for URL '${[e]}'`);this.handler=t[0]}}load(){if(this.findIOHandler(),null==this.handler.load)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const e=this.handler.load();return Nt(e)?e.then((e=>null==e.getWeightStream?this.loadSync(e):this.loadStreaming(e))):this.loadSync(e)}loadSync(e){const t=this.io.decodeWeights(e.weightData,e.weightSpecs);return this.loadWithWeightMap(e,t)}async loadStreaming(e){if(null==e.getWeightStream)throw new Error("Model artifacts missing streamWeights function");const t=await Fi(e.getWeightStream(),e.weightSpecs);return this.loadWithWeightMap(e,t)}loadWithWeightMap(e,t){this.artifacts=e;const n=this.artifacts.modelTopology;let a=this.artifacts.signature;if(null!=this.artifacts.userDefinedMetadata){const e=this.artifacts.userDefinedMetadata;null!=e.signature&&(a=e.signature),null!=e.structuredOutputKeys&&(this.structuredOutputKeys=e.structuredOutputKeys)}if(this.signature=a,this.version=`${n.versions.producer}.${n.versions.minConsumer}`,this.executor=new QN(fN.Instance.transformGraph(n,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(t),this.executor.resourceManager=this.resourceManager,null!=e.modelInitializer&&null!=e.modelInitializer.node){const t=fN.Instance.transformGraph(e.modelInitializer);this.initializer=new QN(t),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializerSignature=e.initializerSignature}return!0}async save(e,t){if("string"===typeof e){const t=this.io.getSaveHandlers(e);if(0===t.length)throw new Error(`Cannot find any save handlers for URL '${e}'`);if(t.length>1)throw new Error(`Found more than one (${t.length}) save handlers for URL '${e}'`);e=t[0]}if(null==e.save)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return e.save(this.artifacts)}addStructuredOutputNames(e){if(this.structuredOutputKeys){const t={};return(e instanceof Ds?[e]:e).forEach(((e,n)=>t[this.structuredOutputKeys[n]]=e)),t}return e}predict(e,t){const n=this.execute(e,this.outputNodes);return this.addStructuredOutputNames(n)}async predictAsync(e,t){const n=await this.executeAsync(e,this.outputNodes);return this.addStructuredOutputNames(n)}normalizeInputs(e){var t;if(!(e instanceof Ds)&&!Array.isArray(e)){const n=null===(t=this.signature)||void 0===t?void 0:t.inputs;if(null!=n)for(const t in n){const a=n[t];null!=a.resourceId&&(e[t]=this.resourceIdToCapturedInput[a.resourceId])}return e}e=Array.isArray(e)?e:[e];const n=Object.keys(this.resourceIdToCapturedInput).length;if(e.length+n!==this.inputNodes.length)throw new Error(`Input tensor count mismatch, the graph model has ${this.inputNodes.length-n} non-resource placeholders, while there are ${e.length} input tensors provided.`);let a=0;return this.inputNodes.reduce(((t,n)=>{var r,s,i;const o=null===(i=null===(s=null===(r=this.signature)||void 0===r?void 0:r.inputs)||void 0===s?void 0:s[n])||void 0===i?void 0:i.resourceId;return t[n]=null!=o?this.resourceIdToCapturedInput[o]:e[a++],t}),{})}normalizeOutputs(e){return e=e||this.outputNodes,Array.isArray(e)?e:[e]}executeInitializerGraph(){return null==this.initializer?[]:null==this.initializerSignature?this.initializer.execute({},[]):this.initializer.execute({},Object.keys(this.initializerSignature.outputs))}async executeInitializerGraphAsync(){return null==this.initializer?[]:null==this.initializerSignature?this.initializer.executeAsync({},[]):this.initializer.executeAsync({},Object.keys(this.initializerSignature.outputs))}setResourceIdToCapturedInput(e){if(this.resourceIdToCapturedInput={},this.initializerSignature){const t=this.initializerSignature.outputs,n=Object.keys(t);for(let a=0;a<n.length;a++){const r=t[n[a]];this.resourceIdToCapturedInput[r.resourceId]=e[a]}}}execute(e,t){null==this.resourceIdToCapturedInput&&this.setResourceIdToCapturedInput(this.executeInitializerGraph()),e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const n=this.executor.execute(e,t);return n.length>1?n:n[0]}async executeAsync(e,t){null==this.resourceIdToCapturedInput&&this.setResourceIdToCapturedInput(await this.executeInitializerGraphAsync()),e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const n=await this.executor.executeAsync(e,t);return n.length>1?n:n[0]}getIntermediateTensors(){return this.executor.getIntermediateTensors()}disposeIntermediateTensors(){this.executor.disposeIntermediateTensors()}convertTensorMapToTensorsMap(e){return Object.keys(e).reduce(((t,n)=>(t[n]=[e[n]],t)),{})}dispose(){this.executor.dispose(),this.initializer&&(this.initializer.dispose(),this.resourceIdToCapturedInput&&ki(this.resourceIdToCapturedInput)),this.resourceManager.dispose()}}async function nS(t){let n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:e;if(null==t)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");null==n&&(n={}),n.fromTFHub&&"string"===typeof t&&(t=function(e){e.endsWith("/")||(e+="/");return`${e}${eS}${JN}`}(t));const r=new tS(t,n,a);return await r.load(),r}function aS(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:new Map,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:new Set;if(null==e)return null;if("function"===typeof Blob&&e instanceof Blob)return e.slice();if(a.has(e))throw new Error("Circular references are not supported.");if(n.has(e))return n.get(e);const r=t(e);if(r.recurse&&null!==r.value)throw new Error("A deep map function may not return both a value and recurse=true.");if(r.recurse){if(oS(e)){const r=Array.isArray(e)?[]:{};a.add(e);for(const s in e){const i=aS(e[s],t,n,a);r[s]=i}return a.delete(e),e.__proto__&&(r.__proto__=e.__proto__),r}throw new Error(`Can't recurse into non-iterable type: ${e}`)}return n.set(e,r.value),r.value}function rS(e){return sS(e,arguments.length>1&&void 0!==arguments[1]?arguments[1]:iS)}function sS(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:new Set;const a=e[0];if(n.has(a))throw new Error("Circular references are not supported.");const r=t(e);if(r.recurse&&null!==r.value)throw new Error("A deep zip function may not return both a value and recurse=true.");if(r.recurse){if(oS(a)){const r=Array.isArray(a)?[]:{};n.add(a);for(const s in a){const a=sS(e.map((e=>e[s])),t,n);r[s]=a}return n.delete(a),r}throw new Error(`Can't recurse into non-iterable type: ${a}`)}return r.value}function iS(e){return null===e?null:oS(e[0])?{value:null,recurse:!0}:{value:e,recurse:!1}}function oS(e){let t=!1;if(Ct().get("IS_BROWSER"))t=e instanceof TextDecoder;else{const{StringDecoder:a}=n(551);t=e instanceof a}return null!=e&&!ArrayBuffer.isView(e)&&(Array.isArray(e)||"object"===typeof e&&!(e instanceof Ds)&&!(e instanceof Promise)&&!t)}function lS(e){return function(e,t){return aS(e,t)}(e,uS)}function uS(e){return e instanceof Ds?{value:e.clone(),recurse:!1}:oS(e)?{value:null,recurse:!0}:{value:e,recurse:!1}}class cS{constructor(e){if(this.capacity=e,this.begin=0,this.end=0,null==e)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(e<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(e),this.doubledCapacity=2*e}wrap(e){for(;e<0;)e+=this.doubledCapacity;return e%this.doubledCapacity}get(e){if(e<0)throw new RangeError("Can't get item at a negative index.");return this.data[e%this.capacity]}set(e,t){if(e<0)throw new RangeError("Can't set item at a negative index.");this.data[e%this.capacity]=t}length(){let e=this.end-this.begin;return e<0&&(e=this.doubledCapacity+e),e}isFull(){return this.length()===this.capacity}isEmpty(){return 0===this.length()}push(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,e),this.end=this.wrap(this.end+1)}pushAll(e){for(const t of e)this.push(t)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);const e=this.get(this.end);return this.set(this.end,void 0),e}unshift(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,e)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const e=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),e}shuffleExcise(e){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const t=this.wrap(this.begin+e),n=this.get(t);return this.set(t,this.pop()),n}}class pS extends cS{constructor(){super(pS.INITIAL_CAPACITY)}isFull(){return!1}push(e){super.isFull()&&this.expand(),super.push(e)}unshift(e){super.isFull()&&this.expand(),super.unshift(e)}expand(){const e=2*this.capacity,t=new Array(e),n=this.length();for(let a=0;a<n;a++)t[a]=this.get(this.wrap(this.begin+a));this.data=t,this.capacity=e,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=n}}function dS(e){return new gS(e)}function hS(e,t){return new CS(e,t)}pS.INITIAL_CAPACITY=32;class fS{async toArray(){const e=[];let t=await this.next();for(;!t.done;)e.push(t.value),t=await this.next();return e}async toArrayForTest(){const e=this.prefetch(100),t=[];let n=await e.next();for(;!n.done;)t.push(n.value),n=await e.next();return t}async resolveFully(){let e=await this.next();for(;!e.done;)e=await this.next()}async resolveWhile(e){let t=await this.next(),n=e(t.value);for(;!t.done&&n;)t=await this.next(),n=e(t.value)}handleErrors(e){return new NS(this,e)}filter(e){return new wS(this,e)}map(e){return new kS(this,e)}mapAsync(e){return new SS(this,e)}serialMapAsync(e){return new SS(this,e).serial()}flatmap(e){return new TS(this,e)}async forEachAsync(e){return this.map(e).resolveFully()}async serialForEach(e){return this.serialMapAsync(e).resolveWhile((e=>!0===e))}rowMajorBatch(e){return new vS(this,e,!(arguments.length>1&&void 0!==arguments[1])||arguments[1])}columnMajorBatch(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:iS;return this.rowMajorBatch(e,t).map((e=>rS(e,n)))}concatenate(e,t){return new CS(new mS([this,e]),t)}take(e){return e<0||null==e?this:new xS(this,e)}skip(e){return e<0||null==e?this:new bS(this,e)}prefetch(e){return new $S(this,e)}shuffle(e,t){return new RS(this,e,t)}serial(){return new yS(this)}}class mS extends fS{constructor(e){super(),this.items=e,this.trav=0}summary(){return`Array of ${this.items.length} items`}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};const e=this.items[this.trav];return this.trav++,{value:lS(e),done:!1}}}class gS extends fS{constructor(e){super(),this.nextFn=e}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(e){throw e.message=`Error thrown while iterating through a dataset: ${e.message}`,e}}}class yS extends fS{constructor(e){super(),this.upstream=e,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Serial`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){return this.upstream.next()}}class bS extends fS{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Skip`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;this.count++<this.maxCount;){const e=await this.upstream.next();if(e.done)return e;ki(e.value)}return this.upstream.next()}}class xS extends fS{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0}summary(){return`${this.upstream.summary()} -> Take`}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}}class vS extends fS{constructor(e,t){let n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];super(),this.upstream=e,this.batchSize=t,this.enableSmallLastBatch=n,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> RowMajorBatch`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){const e=[];for(;e.length<this.batchSize;){const t=await this.upstream.next();if(t.done)return this.enableSmallLastBatch&&e.length>0?{value:e,done:!1}:{value:null,done:!0};e.push(t.value)}return{value:e,done:!1}}}class wS extends fS{constructor(e,t){super(),this.upstream=e,this.predicate=t,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Filter`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;){const e=await this.upstream.next();if(e.done||this.predicate(e.value))return e;ki(e.value)}}}class kS extends fS{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Map`}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const t=Xs(e.value),n=this.transform(e.value),a=Xs(n);for(const r of t)Ks(r,a)||r.dispose();return{value:n,done:!1}}}class NS extends fS{constructor(e,t){super(),this.upstream=e,this.handler=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> handleErrors`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;)try{return await this.upstream.next()}catch(e){if(!this.handler(e))return{value:null,done:!0}}}}class SS extends fS{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> AsyncMap`}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const t=Xs(e.value),n=await this.transform(e.value),a=Xs(n);for(const r of t)Ks(r,a)||r.dispose();return{value:n,done:!1}}}class IS extends fS{constructor(){super(),this.outputQueue=new pS,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;0===this.outputQueue.length();)if(!await this.pump())return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}}class TS extends IS{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Flatmap`}async pump(){const e=await this.upstream.next();if(e.done)return!1;const t=Xs(e.value),n=this.transform(e.value),a=Xs(n);this.outputQueue.pushAll(n);for(const r of t)Ks(r,a)||r.dispose();return!0}}class CS extends fS{constructor(e,t){super(),this.baseErrorHandler=t,this.lastRead=null,this.iterator=null,this.moreIterators=e}summary(){return"TODO: fill in upstream of chained summaries -> Chained"}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(e){if(await e,null==this.iterator){const e=await this.moreIterators.next();if(e.done)return{value:null,done:!0};this.iterator=e.value,null!=this.baseErrorHandler&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}const t=await this.iterator.next();return t.done?(this.iterator=null,this.readFromChain(e)):t}}var ES;!function(e){e[e.FAIL=0]="FAIL",e[e.SHORTEST=1]="SHORTEST",e[e.LONGEST=2]="LONGEST"}(ES||(ES={}));class $S extends fS{constructor(e,t){super(),this.upstream=e,this.bufferSize=t,this.buffer=new cS(t)}summary(){return`${this.upstream.summary()} -> Prefetch`}refill(){for(;!this.buffer.isFull();){const e=this.upstream.next();this.buffer.push(e)}}next(){return this.refill(),this.buffer.shift()}}class RS extends $S{constructor(e,t,n){super(e,t),this.upstream=e,this.windowSize=t,this.upstreamExhausted=!1,this.random=Vp.alea(n||ys().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}randomInt(e){return Math.floor(this.random()*e)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){const e=this.chooseIndex(),t=await this.buffer.shuffleExcise(e);if(!t.done)return this.refill(),t;this.upstreamExhausted=!0}return{value:null,done:!0}}}class AS{constructor(){this.size=null}batch(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];const n=this;let a;return qe(e>0,(()=>`batchSize needs to be positive, but it is\n      ${e}`)),a=this.size===1/0||null==this.size?this.size:t?Math.ceil(this.size/e):Math.floor(this.size/e),_S((async()=>(await n.iterator()).columnMajorBatch(e,t,FS)),a)}concatenate(e){const t=this;let n;return n=this.size===1/0||e.size===1/0?1/0:null!=this.size&&null!=e.size?this.size+e.size:null,_S((async()=>(await t.iterator()).concatenate(await e.iterator())),n)}filter(e){const t=this;let n;return n=this.size===1/0?1/0:null,_S((async()=>(await t.iterator()).filter((t=>wi((()=>e(t)))))),n)}async forEachAsync(e){return(await this.iterator()).forEachAsync(e)}map(e){const t=this;return _S((async()=>(await t.iterator()).map((t=>wi((()=>e(t)))))),this.size)}mapAsync(e){const t=this;return _S((async()=>(await t.iterator()).mapAsync(e)),this.size)}prefetch(e){if(null==e)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");const t=this;return _S((async()=>(await t.iterator()).prefetch(e)),this.size)}repeat(e){const t=this;let n;return n=null!=this.size&&e>0?this.size*e:0===e?0:null!=this.size&&(void 0===e||e<0)?1/0:null,_S((async()=>hS(dS((async()=>({value:await t.iterator(),done:!1}))).take(e))),n)}skip(e){const t=this;let n;return n=null!=this.size&&e>=0&&this.size>=e?this.size-e:null!=this.size&&(this.size<e||void 0===e||e<0)?0:null,_S((async()=>(await t.iterator()).skip(e)),n)}shuffle(e,t){let n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];if(null==e||e<0)throw null==this.size?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError(`\`Dataset.shuffle()\` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for \`tf.Tensor\`s), consider setting bufferSize to the dataset size (${this.size} elements)`);const a=this,r=Vp.alea(t||ys().toString());return _S((async()=>{let t=r.int32();return n&&(t+=r.int32()),(await a.iterator()).shuffle(e,t.toString())}),this.size)}take(e){const t=this;let n;return n=null!=this.size&&this.size>e?e:null!=this.size&&this.size<=e?this.size:null,_S((async()=>(await t.iterator()).take(e)),n)}async toArray(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}}function _S(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;return new class extends AS{constructor(){super(...arguments),this.size=t}async iterator(){return e()}}}function FS(e){if(null===e)return null;if(function(e){return null==e||null===(t=e)||"object"!==typeof t&&"function"!==typeof t||Array.isArray(e)||"object"===typeof e&&e instanceof Ds||vs(e);var t}(e[0])){return{value:function(e){if(0===e.length)throw new Error("Can't make a batch of zero elements.");return e[0]instanceof Ds?Cd(e):gi(e)}(e),recurse:!1}}return{value:null,recurse:!0}}AS.MAX_BUFFER_SIZE=1e4;Symbol("out"),Symbol("field"),Symbol("quote"),Symbol("quoteafterquote"),Symbol("quoteinquote");function DS(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&qe("complex64"!==e.dtype,(()=>`${t} does not support complex64 tensors in the CPU backend.`))}))}const OS=qd;class MS extends We{nextDataId(){return MS.nextDataId++}constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new Be(this,xi())}write(e,t,n){this.firstUse&&(this.firstUse=!1,Ct().get("IS_NODE")&&jr("\n============================\nHi, looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, visit https://github.com/tensorflow/tfjs-node for more details. \n============================"));const a={id:this.nextDataId()};return this.data.set(a,{values:e,dtype:n,refCount:1}),a}makeTensorInfo(e,t,n){let a;if("string"===t&&null!=n&&n.length>0&&ut(n[0])){const r=n.map((e=>bs(e)));a=this.write(r,e,t)}else a=this.write(n,e,t);return{dataId:a,shape:e,dtype:t}}refCount(e){if(this.data.has(e)){return this.data.get(e).refCount}return 0}incRef(e){this.data.get(e).refCount++}decRef(e){if(this.data.has(e)){this.data.get(e).refCount--}}move(e,t,n,a,r){this.data.set(e,{values:t,dtype:a,refCount:r})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){const{dtype:t,complexTensorInfos:n}=this.data.get(e);if("complex64"===t){return qf(this.readSync(n.real.dataId),this.readSync(n.imag.dataId))}return function(e,t){if(Array.isArray(e))return e;if("float32"===t)return e instanceof Float32Array?e:new Float32Array(e);if("int32"===t)return e instanceof Int32Array?e:new Int32Array(e);if("bool"===t||"string"===t)return Uint8Array.from(new Int32Array(e));throw new Error(`Unknown dtype ${t}`)}(this.data.get(e).values,t)}bufferSync(e){const t=this.readSync(e.dataId);if("string"===e.dtype)try{const n=t.map((e=>xs(e)));return $o(e.shape,e.dtype,n)}catch(n){throw new Error("Failed to decode encoded string bytes into utf-8")}return $o(e.shape,e.dtype,t)}makeOutput(e,t,n){return xi().makeTensorFromTensorInfo(this.makeTensorInfo(t,n,e),this)}disposeData(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(this.data.has(e)){if(this.data.get(e).refCount--,!t&&this.data.get(e).refCount>0)return!1;const{complexTensorInfos:n}=this.data.get(e);null!=n&&(this.disposeData(n.real.dataId,!0),this.disposeData(n.imag.dataId,!0)),this.data.delete(e)}return!0}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}async time(e){const t=ys();e();return{kernelMs:ys()-t}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){DS([e],"where");const t=this.readSync(e.dataId);return OS(e.shape,t)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}}MS.nextDataId=0;function LS(e){return(t,n,a)=>{const r=it(n,t.length);for(let s=0;s<t.length;++s)r[s]=e(t[s],a);return r}}function zS(e,t,n){return PS(e,LS(t),n)}function PS(e,t,n){return a=>{let{inputs:r,attrs:s,backend:i}=a;const{x:o}=r;DS(o,e);const l=i,u=l.data.get(o.dataId).values;let c;if("string"===o.dtype){if(!Array.isArray(u))throw new Error("String tensor's value was not an instance of Array");c=Cm(u)}else c=u;const p=n||o.dtype,d=t(c,p,s);return l.makeTensorInfo(o.shape,p,d)}}Si("cpu",(()=>new MS),1);const BS=zS(An,(e=>e>=0?e:Math.exp(e)-1)),WS={kernelName:An,backendName:"cpu",kernelFunc:BS};function VS(e){const{inputs:t,backend:n}=e,{x:a}=t;return n.incRef(a.dataId),{dataId:a.dataId,shape:a.shape,dtype:a.dtype}}const US={kernelName:Kn,backendName:"cpu",kernelFunc:VS};function jS(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{alpha:s}=a;DS([r],"leakyRelu");const i=Ye(r.shape),o=n.data.get(r.dataId).values,l=st("float32",i);for(let u=0;u<o.length;u++)l[u]=o[u]<0?s*o[u]:o[u];return n.makeTensorInfo(r.shape,"float32",l)}const GS={kernelName:ea,backendName:"cpu",kernelFunc:jS};function HS(e){return(t,n,a,r,s)=>{const i=al(t,n),o=i.length,l=ft(i),u=st(s,Ye(i)),c=t.length,p=n.length,d=ft(t),h=ft(n),f=tl(t,i),m=tl(n,i);if(f.length+m.length===0)for(let g=0;g<u.length;++g)u[g]=e(a[g%a.length],r[g%r.length]);else for(let g=0;g<u.length;++g){const t=kt(g,o,l),n=t.slice(-c);f.forEach((e=>n[e]=0));const s=wt(n,c,d),i=t.slice(-p);m.forEach((e=>i[e]=0));const y=wt(i,p,h);u[g]=e(a[s],r[y])}return[u,i]}}const qS=HS(((e,t)=>e<0?t*e:e));function KS(e){const{inputs:t,backend:n}=e,{x:a,alpha:r}=t;DS([a,r],"prelu");const s=n.data.get(a.dataId).values,i=n.data.get(r.dataId).values,[o,l]=qS(a.shape,r.shape,s,i,"float32");return n.makeTensorInfo(l,"float32",o)}const XS={kernelName:Oa,backendName:"cpu",kernelFunc:KS},YS=zS(Ua,(e=>Math.max(0,e))),QS={kernelName:Ua,backendName:"cpu",kernelFunc:YS},ZS=zS(Xa,(e=>Math.min(Math.max(0,e),6))),JS={kernelName:Xa,backendName:"cpu",kernelFunc:ZS},eI=LS((e=>1/(1+Math.exp(-e)))),tI=zS(lr,(e=>1/(1+Math.exp(-e)))),nI={kernelName:lr,backendName:"cpu",kernelFunc:tI};function aI(e,t,n,a,r){if("linear"===n)return VS({inputs:{x:t},backend:e});if("relu"===n)return YS({inputs:{x:t},backend:e});if("elu"===n)return BS({inputs:{x:t},backend:e});if("relu6"===n)return ZS({inputs:{x:t},backend:e});if("prelu"===n)return KS({inputs:{x:t,alpha:a},backend:e});if("leakyrelu"===n)return jS({inputs:{x:t},backend:e,attrs:{alpha:r}});if("sigmoid"===n)return tI({inputs:{x:t},backend:e});throw new Error(`Activation ${n} has not been implemented for the CPU backend.`)}function rI(e){const{inputs:t,backend:n}=e,{real:a,imag:r}=t,s=n.data.get(a.dataId).values,i=n.data.get(r.dataId).values,o=n.makeTensorInfo(a.shape,"complex64");return n.data.get(o.dataId).complexTensorInfos={real:n.makeTensorInfo(a.shape,"float32",s),imag:n.makeTensorInfo(r.shape,"float32",i)},o}const sI={kernelName:rn,backendName:"cpu",kernelFunc:rI};function iI(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"float32";if("complex64"===n){return rI({inputs:{real:iI(e,t,"float32"),imag:iI(e,t,"float32")},backend:e})}const a=bt(Ye(t),n);return e.makeTensorInfo(t,n,a)}function oI(e){const{inputs:t,backend:n}=e,{input:a}=t,r=n.data.get(a.dataId).complexTensorInfos.real,s=n.data.get(r.dataId).values;return n.makeTensorInfo(r.shape,r.dtype,s)}const lI={kernelName:Wa,backendName:"cpu",kernelFunc:oI};function uI(e,t,n,a){if("int32"===a){return[t,"int32",Int32Array.from(e)]}if("bool"===a){const a=gs([0],n),[r,s]=HS(((e,t)=>e!==t?1:0))(t,[],e,a,"bool");return[s,"bool",r]}throw new Error(`Error in Cast: failed to cast ${n} to ${a}`)}function cI(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{dtype:s}=a;if("complex64"===s){if("complex64"===r.dtype)return VS({inputs:{x:r},backend:n});const e=iI(n,r.shape,r.dtype),t=cI({inputs:{x:r},backend:n,attrs:{dtype:"float32"}}),a=rI({inputs:{real:t,imag:e},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),a}if("complex64"===r.dtype){const e=oI({inputs:{input:r},backend:n}),t=cI({inputs:{x:e},backend:n,attrs:{dtype:s}});return n.disposeIntermediateTensorInfo(e),t}if(!ot(r.dtype,s)){const e=VS({inputs:{x:r},backend:n});return{dataId:e.dataId,shape:e.shape,dtype:s}}const i=n.data.get(r.dataId).values,[o,l,u]=uI(i,r.shape,r.dtype,s);return n.makeTensorInfo(o,l,u)}const pI={kernelName:tn,backendName:"cpu",kernelFunc:cI};function dI(e,t,n,a){return null==n?n=>{let{inputs:r,backend:s}=n;const{a:i,b:o}=r,l=s;DS([i,o],e);const u=l.data.get(i.dataId).values,c=l.data.get(o.dataId).values,p="string"===i.dtype?Cm(u):u,d="string"===i.dtype?Cm(c):c,h=a||i.dtype,[f,m]=t(i.shape,o.shape,p,d,h);return l.makeTensorInfo(m,h,f)}:e=>{let{inputs:r,backend:s}=e;const{a:i,b:o}=r,l=s;if("complex64"===i.dtype||"complex64"===o.dtype){const e=cI({inputs:{x:i},backend:l,attrs:{dtype:"complex64"}}),t=l.data.get(e.dataId),a=t.complexTensorInfos.real,r=t.complexTensorInfos.imag,s=l.data.get(a.dataId).values,u=l.data.get(r.dataId).values,c=cI({inputs:{x:o},backend:l,attrs:{dtype:"complex64"}}),p=l.data.get(c.dataId),d=p.complexTensorInfos.real,h=p.complexTensorInfos.imag,f=l.data.get(d.dataId).values,m=l.data.get(h.dataId).values,[g,y,b]=n(i.shape,o.shape,s,u,f,m),x=l.makeTensorInfo(b,"float32",g),v=l.makeTensorInfo(b,"float32",y),w=rI({inputs:{real:x,imag:v},backend:l});return l.disposeIntermediateTensorInfo(e),l.disposeIntermediateTensorInfo(c),l.disposeIntermediateTensorInfo(x),l.disposeIntermediateTensorInfo(v),w}{const e=l.data.get(i.dataId).values,n=l.data.get(o.dataId).values,r=a||i.dtype,[s,u]=t(i.shape,o.shape,e,n,r);return l.makeTensorInfo(u,r,s)}}}function hI(e){return(t,n,a,r,s,i)=>{const o=al(t,n),l=Ye(o),u=o.length,c=ft(o),p=st("float32",l),d=st("float32",l),h=tl(t,o),f=tl(n,o),m=qf(a,r),g=qf(s,i),y=t.length,b=ft(t),x=n.length,v=ft(n);if(h.length+f.length===0)for(let w=0;w<p.length;w++){const t=w%m.length,n=w%g.length,a=e(m[2*t],m[2*t+1],g[2*n],g[2*n+1]);p[w]=a.real,d[w]=a.imag}else for(let w=0;w<p.length;w++){const t=kt(w,u,c),n=t.slice(-y);h.forEach((e=>n[e]=0));const a=wt(n,y,b),r=t.slice(-x);f.forEach((e=>r[e]=0));const s=wt(r,x,v),i=e(m[2*a],m[2*a+1],g[2*s],g[2*s+1]);p[w]=i.real,d[w]=i.imag}return[p,d,o]}}const fI=HS(((e,t)=>e+t)),mI=hI(((e,t,n,a)=>({real:e+n,imag:t+a}))),gI=dI(Ot,fI,mI),yI={kernelName:Ot,backendName:"cpu",kernelFunc:gI};function bI(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{shape:s}=a,i=Ye(r.shape),o=nt(s,i),l=Ye(o);qe(i===l,(()=>`The new shape (${o}) has ${l} elements and the old shape (${r.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`)),n.incRef(r.dataId);const u=n.data.get(r.dataId);if(null!=u.complexTensorInfos){const e=u.complexTensorInfos.real,t=u.complexTensorInfos.imag;e.shape=o,t.shape=o}return{dataId:r.dataId,shape:o,dtype:r.dtype}}const xI={kernelName:ja,backendName:"cpu",kernelFunc:bI};function vI(e){const{inputs:t,backend:n,attrs:a}=e,{a:r,b:s}=t,{transposeA:i,transposeB:o}=a;DS([r,s],"matMul");const l=r.shape.length,u=s.shape.length,c=i?r.shape[l-2]:r.shape[l-1],p=o?s.shape[u-1]:s.shape[u-2],d=i?r.shape[l-1]:r.shape[l-2],h=o?s.shape[u-2]:s.shape[u-1],f=r.shape.slice(0,-2),m=s.shape.slice(0,-2),g=Ye(f),y=Ye(m),b=al(r.shape.slice(0,-2),s.shape.slice(0,-2)).concat([d,h]);qe(c===p,(()=>`Error in matMul: inner shapes (${c}) and (${p}) of Tensors with shapes ${r.shape} and ${s.shape} and transposeA=${i} and transposeB=${o} must match.`));const x=o?[y,h,p]:[y,p,h],v=bI({inputs:{x:r},backend:n,attrs:{shape:i?[g,c,d]:[g,d,c]}}),w=bI({inputs:{x:s},backend:n,attrs:{shape:x}}),k=i?v.shape[1]:v.shape[2],N=i?v.shape[2]:v.shape[1],S=o?w.shape[1]:w.shape[2],I=Math.max(g,y),T=n.data.get(v.dataId).values,C=n.data.get(w.dataId).values,E=ft(v.shape),$=ft(w.shape),[R,A,_]=i?[E[0],1,E[1]]:[E[0],E[1],1],[F,D,O]=o?[1,$[1],$[0]]:[$[1],1,$[0]],M=N*S,L=$o([I,N,S],v.dtype),z=L.values,P=n.blockSize;for(let B=0;B<I;B++){const e=B%g,t=B%y;for(let n=0;n<N;n+=P){const a=Math.min(n+P,N);for(let r=0;r<S;r+=P){const s=Math.min(r+P,S);for(let i=0;i<k;i+=P){const o=Math.min(i+P,k);for(let l=n;l<a;l++)for(let n=r;n<s;n++){let a=0;for(let r=i;r<o;r++){a+=T[e*R+l*A+r*_]*C[r*F+n*D+t*O]}z[B*M+(l*S+n)]+=a}}}}}return n.disposeIntermediateTensorInfo(v),n.disposeIntermediateTensorInfo(w),n.makeTensorInfo(b,L.dtype,L.values)}const wI={kernelName:Yt,backendName:"cpu",kernelFunc:vI};const kI={kernelName:Wr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{a:r,b:s,bias:i,preluActivationWeights:o}=t,{transposeA:l,transposeB:u,activation:c,leakyreluAlpha:p}=a;let d,h,f;const m=[];d=vI({inputs:{a:r,b:s},attrs:{transposeA:l,transposeB:u},backend:n}),i&&(h=gI({inputs:{a:d,b:i},backend:n}),m.push(d),d=h),c&&(f=aI(n,d,c,o,p),m.push(d),d=f);for(const g of m)n.disposeIntermediateTensorInfo(g);return d}};function NI(e){const t=new Float32Array(e.length);for(let n=0;n<e.length;++n)t[n]=Math.abs(e[n]);return t}const SI={kernelName:_t,backendName:"cpu",kernelFunc:e=>{const{x:t}=e.inputs,n=e.backend;DS(t,"abs");let a=new Float32Array(Ye(t.shape));return a=NI(n.data.get(t.dataId).values),n.makeOutput(a,t.shape,t.dtype)}},II=zS(Ft,(e=>Math.acos(e))),TI={kernelName:Ft,backendName:"cpu",kernelFunc:II},CI=zS(Dt,(e=>Math.acosh(e))),EI={kernelName:Dt,backendName:"cpu",kernelFunc:CI};const $I={kernelName:Mt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,a=t;DS(t,"addN");const r=a.map((e=>n.data.get(e.dataId).values)),s=$o(a[0].shape,a[0].dtype),i=s.values;for(let o=0;o<a.length;o++){const e=r[o];for(let t=0;t<i.length;t++)i[t]+=e[t]}return n.makeTensorInfo(s.shape,s.dtype,s.values)}};function RI(e,t,n,a,r){const s=t.length,i=Ye(t),o=ft(t),l=ft(r),u=st(n,Ye(r));for(let c=0;c<i;++c){const t=kt(c,s,o),n=new Array(t.length);for(let e=0;e<n.length;e++)n[e]=t[a[e]];u[wt(n,s,l)]=e[c]}return u}function AI(e){const{inputs:t,attrs:n,backend:a}=e,{x:r}=t,{perm:s}=n;DS(r,"transpose");const i=r.shape.length,o=new Array(i);for(let u=0;u<o.length;u++)o[u]=r.shape[s[u]];const l=RI(a.data.get(r.dataId).values,r.shape,r.dtype,s,o);return{dataId:a.write(l,o,r.dtype),shape:o,dtype:r.dtype}}const _I={kernelName:Fr,backendName:"cpu",kernelFunc:AI};const FI={kernelName:Lt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,keepDims:i}=a;DS(r,"all");const o=at(s,r.shape);let l=o;const u=Ic(l,r.shape.length);let c=r;null!=u&&(c=AI({inputs:{x:r},backend:n,attrs:{perm:u}}),l=Cc(l.length,r.shape.length)),Sc("all",l,c.shape.length);const[p,d]=kc(c.shape,l),h=Ye(d),f=bt(Ye(p),c.dtype),m=n.data.get(c.dataId).values;for(let y=0;y<f.length;++y){const e=y*h;let t=m[e];for(let n=0;n<h;++n){const a=m[e+n];t=t&&a}f[y]=t}null!=u&&n.disposeIntermediateTensorInfo(c);const g=n.makeTensorInfo(p,c.dtype,f);if(i){const e=bI({inputs:{x:g},backend:n,attrs:{shape:Nc(p,o)}});return n.disposeIntermediateTensorInfo(g),e}return g}};const DI={kernelName:zt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,keepDims:i}=a;DS(r,"any");const o=at(s,r.shape);let l=o;const u=Ic(l,r.shape.length);let c=r;null!=u&&(c=AI({inputs:{x:r},backend:n,attrs:{perm:u}}),l=Cc(l.length,r.shape.length)),Sc("any",l,c.shape.length);const[p,d]=kc(c.shape,l),h=Ye(d),f=bt(Ye(p),c.dtype),m=n.data.get(c.dataId).values;for(let y=0;y<f.length;++y){const e=y*h;let t=m[e];for(let n=0;n<h;++n){const a=m[e+n];t=t||a}f[y]=t}null!=u&&n.disposeIntermediateTensorInfo(c);const g=n.makeTensorInfo(p,c.dtype,f);if(i){const e=bI({inputs:{x:g},backend:n,attrs:{shape:Nc(p,o)}});return n.disposeIntermediateTensorInfo(g),e}return g}};const OI={kernelName:Pt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s}=a;DS(r,"argMax");let i=at(s,r.shape);const o=Ic(i,r.shape.length);let l=r;const u=[];null!=o&&(l=AI({inputs:{x:r},backend:n,attrs:{perm:o}}),u.push(l),i=Cc(i.length,l.shape.length)),i=[i[0]],Sc("argMax",i,l.shape.length);const[c,p]=kc(l.shape,i),d=bt(Ye(c),"int32"),h=Ye(p),f=n.data.get(l.dataId).values;for(let m=0;m<d.length;++m){const e=m*h;let t=f[e],n=0;for(let a=0;a<h;++a){const r=f[e+a];r>t&&(t=r,n=a)}d[m]=n}return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(c,"int32",d)}};const MI={kernelName:Bt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s}=a;DS(r,"argMin");let i=at(s,r.shape);const o=Ic(i,r.shape.length);let l=r;const u=[];null!=o&&(l=AI({inputs:{x:r},backend:n,attrs:{perm:o}}),u.push(l),i=Cc(i.length,l.shape.length)),i=[i[0]],Sc("argMin",i,l.shape.length);const[c,p]=kc(l.shape,i),d=bt(Ye(c),"int32"),h=Ye(p),f=n.data.get(l.dataId).values;for(let m=0;m<d.length;++m){const e=m*h;let t=f[e],n=0;for(let a=0;a<h;++a){const r=f[e+a];r<t&&(t=r,n=a)}d[m]=n}return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(c,"int32",d)}},LI=zS(Wt,(e=>Math.asin(e))),zI={kernelName:Wt,backendName:"cpu",kernelFunc:LI},PI=zS(Vt,(e=>Math.asinh(e))),BI={kernelName:Vt,backendName:"cpu",kernelFunc:PI},WI=zS(Ut,(e=>Math.atan(e))),VI={kernelName:Ut,backendName:"cpu",kernelFunc:WI},UI=HS(((e,t)=>Math.atan2(e,t))),jI=dI(Gt,UI),GI={kernelName:Gt,backendName:"cpu",kernelFunc:jI},HI=zS(jt,(e=>Math.atanh(e))),qI={kernelName:jt,backendName:"cpu",kernelFunc:HI};function KI(e,t,n,a,r,s){const i=r.strideHeight,o=r.strideWidth,l=r.dilationHeight,u=r.dilationWidth,c=r.effectiveFilterHeight,p=r.effectiveFilterWidth,d=r.padInfo.top,h=r.padInfo.left,f="max"===s?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,m=$o(r.outShape,n),g=m.values,y=r.outShape[1]*r.outShape[2]*r.outShape[3],b=r.outShape[2]*r.outShape[3],x=r.outShape[3];for(let v=0;v<r.batchSize;++v){const t=v*y,n=v*a[0];for(let m=0;m<r.inChannels;++m)for(let y=0;y<r.outHeight;++y){const v=y*i-d,w=Math.max(0,v),k=Math.min(r.inHeight,c+v),N=t+y*b;for(let t=0;t<r.outWidth;++t){const i=t*o-h,c=Math.max(0,i),d=Math.min(r.inWidth,p+i);let y=f,b=0,v=0;for(let t=w;t<k;t+=l){const r=n+t*a[1];for(let t=c;t<d;t+=u){const n=e[r+t*a[2]+m];"max"===s&&n>y?y=n:"avg"===s&&(b+=n,v++)}if(isNaN(y))break}g[N+t*x+m]="avg"===s?b/v:y}}}return m}function XI(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]&&arguments[4],s=arguments.length>5&&void 0!==arguments[5]&&arguments[5];const i=$o(a.outShape,"int32"),o=a.strideHeight,l=a.strideWidth,u=a.dilationHeight,c=a.dilationWidth,p=a.effectiveFilterHeight,d=a.effectiveFilterWidth,h=a.padInfo.top,f=a.padInfo.left,m=$o(t,n,e);for(let g=0;g<a.batchSize;++g)for(let e=0;e<a.inChannels;++e)for(let t=0;t<a.outHeight;++t){const n=t*o-h;let y=n;for(;y<0;)y+=u;const b=Math.min(a.inHeight,p+n);for(let o=0;o<a.outWidth;++o){const p=o*l-f;let h=p;for(;h<0;)h+=c;const x=Math.min(a.inWidth,d+p);let v=Number.NEGATIVE_INFINITY,w=-1;for(let t=y;t<b;t+=u){const i=t-n;for(let n=h;n<x;n+=c){const o=n-p,l=m.get(g,t,n,e);l>v&&(v=l,w=r?s?((g*a.inHeight+t)*a.inWidth+n)*a.inChannels+e:(t*a.inWidth+n)*a.inChannels+e:i*d+o)}}i.set(w,g,t,o,e)}}return i}function YI(e,t,n,a,r,s){const i=r.strideDepth,o=r.strideHeight,l=r.strideWidth,u=r.dilationDepth,c=r.dilationHeight,p=r.dilationWidth,d=r.effectiveFilterDepth,h=r.effectiveFilterHeight,f=r.effectiveFilterWidth,m=r.padInfo.front,g=r.padInfo.top,y=r.padInfo.left,b="max"===s?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,x=$o(r.outShape,n),v=x.values,w=r.outShape[1]*r.outShape[2]*r.outShape[3]*r.outShape[4],k=r.outShape[2]*r.outShape[3]*r.outShape[4],N=r.outShape[3]*r.outShape[4],S=r.outShape[4];for(let I=0;I<r.batchSize;++I){const t=I*w,n=I*a[0];for(let x=0;x<r.inChannels;++x)for(let w=0;w<r.outDepth;++w){const I=w*i-m;let T=I;for(;T<0;)T+=u;const C=Math.min(r.inDepth,d+I),E=t+w*k;for(let t=0;t<r.outHeight;++t){const i=t*o-g;let d=i;for(;d<0;)d+=c;const m=Math.min(r.inHeight,h+i),w=E+t*N;for(let t=0;t<r.outWidth;++t){const i=t*l-y;let o=i;for(;o<0;)o+=p;const h=Math.min(r.inWidth,f+i),g=w+t*S;let k=b,N=0,I=0;for(let t=T;t<C;t+=u){const r=n+t*a[1];for(let t=d;t<m;t+=c){const n=r+t*a[2];for(let t=o;t<h;t+=p){const r=e[n+t*a[3]+x];if("max"===s&&r>k?k=r:"avg"===s&&(N+=r,I++),isNaN(k))break}if(isNaN(k))break}if(isNaN(k))break}v[g+x]="avg"===s?N/Math.max(I,1):k}}}}return x}const QI={kernelName:Ht,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t;DS(r,"avgPool");const{filterSize:s,strides:i,pad:o,dimRoundingMode:l}=a;qe(ku(i,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const u=du(r.shape,s,i,1,o,l);let c;if(1===u.filterWidth&&1===u.filterHeight&&Qe(u.inShape,u.outShape))c=VS({inputs:{x:r},backend:n});else{const e=n.data.get(r.dataId).values,t=ft(r.shape),a=KI(e,r.shape,r.dtype,t,u,"avg");c=n.makeTensorInfo(u.outShape,r.dtype,a.values)}return c}};const ZI={kernelName:Kt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:l,dataFormat:u}=a;DS(r,"avgPool3d");const c=hu(r.shape,s,i,1,o,l,u),p=YI(n.data.get(r.dataId).values,r.shape,r.dtype,ft(r.shape),c,"avg");return n.makeTensorInfo(p.shape,"float32",p.values)}};const JI={kernelName:Xt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,input:s}=t,{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=a;DS([r,s],"avgPool3DGrad");const c=hu(s.shape,i,o,1,l,u),p=c.strideDepth,d=c.strideHeight,h=c.strideWidth,f=c.filterDepth,m=c.filterHeight,g=c.filterWidth,y=c.dilationDepth,b=c.dilationHeight,x=c.dilationWidth,v=c.effectiveFilterDepth,w=c.effectiveFilterHeight,k=c.effectiveFilterWidth,N=v-1-c.padInfo.front,S=k-1-c.padInfo.left,I=w-1-c.padInfo.top,T=$o(s.shape,"float32"),C=1/(f*m*g),E=n.bufferSync(r);for(let $=0;$<c.batchSize;++$)for(let e=0;e<c.inChannels;++e)for(let t=0;t<c.inDepth;++t)for(let n=0;n<c.inHeight;++n)for(let a=0;a<c.inWidth;++a){const r=t-N,s=n-I,i=a-S;let o=0;for(let t=0;t<v;t+=y){const n=(r+t)/p;if(!(n<0||n>=c.outDepth||Math.floor(n)!==n))for(let t=0;t<w;t+=b){const a=(s+t)/d;if(!(a<0||a>=c.outHeight||Math.floor(a)!==a))for(let t=0;t<k;t+=x){const r=(i+t)/h;if(r<0||r>=c.outWidth||Math.floor(r)!==r)continue;o+=E.get($,n,a,r,e)}}}T.set(o*C,$,t,n,a,e)}return n.makeTensorInfo(T.shape,T.dtype,T.values)}};const eT={kernelName:qt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,input:s}=t,i=s;DS([r,s],"avgPoolGrad");const{filterSize:o,strides:l,pad:u}=a,c=du(i.shape,o,l,1,u),p=c.strideHeight,d=c.strideWidth,h=c.filterHeight,f=c.filterWidth,m=c.dilationHeight,g=c.dilationWidth,y=c.effectiveFilterHeight,b=c.effectiveFilterWidth,x=b-1-c.padInfo.left,v=y-1-c.padInfo.top,w=$o(i.shape,"float32"),k=1/(h*f),N=n.data.get(r.dataId).values,S=$o(r.shape,"float32",N);for(let I=0;I<c.batchSize;++I)for(let e=0;e<c.inChannels;++e)for(let t=0;t<c.inHeight;++t)for(let n=0;n<c.inWidth;++n){const a=t-v,r=n-x;let s=0;for(let t=0;t<y;t+=m){const n=(a+t)/p;if(!(n<0||n>=c.outHeight||Math.floor(n)!==n))for(let t=0;t<b;t+=g){const a=(r+t)/d;if(a<0||a>=c.outWidth||Math.floor(a)!==a)continue;s+=S.get(I,n,a,e)}}w.set(s*k,I,t,n,e)}return n.makeTensorInfo(w.shape,w.dtype,w.values)}};const tT={kernelName:Un,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,scale:s,offset:i,mean:o,variance:l}=t;qe(o.shape.length===l.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),qe(null==i||o.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),qe(null==s||o.shape.length===s.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks.")),DS([r,o,l,s,i],"batchNorm");let{varianceEpsilon:u}=a;null==u&&(u=.001);const c=n.data.get(r.dataId).values,p=n.data.get(o.dataId).values,d=n.data.get(l.dataId).values,h=s?n.data.get(s.dataId).values:new Float32Array([1]),f=i?n.data.get(i.dataId).values:new Float32Array([0]),m=new Float32Array(c.length),g=f.length,y=h.length,b=d.length,x=p.length;let v=0,w=0,k=0,N=0;for(let S=0;S<c.length;++S)m[S]=f[v++]+(c[S]-p[w++])*h[k++]/Math.sqrt(d[N++]+u),v>=g&&(v=0),w>=x&&(w=0),k>=y&&(k=0),N>=b&&(N=0);return n.makeTensorInfo(r.shape,r.dtype,m)}};function nT(e,t,n,a,r){const s=Kl(a,t,n),i=Ye(n),o=ft(a);if(s){const n=Xl(t,o);return"string"===r?e.slice(n,n+i):e.subarray(n,n+i)}const l=$o(a,r,"string"===r?Cm(e):e),u=$o(n,r);for(let c=0;c<u.size;++c){const e=u.indexToLoc(c),n=e.map(((e,n)=>e+t[n]));u.set(l.get(...n),...e)}return"string"===r?Em(u.values):u.values}function aT(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{begin:s,size:i}=a;DS(r,"slice");const[o,l]=Yl(r,s,i);Ml(r,o,l);const u=nT(n.data.get(r.dataId).values,o,l,r.shape,r.dtype);return n.makeTensorInfo(l,r.dtype,u)}const rT={kernelName:rr,backendName:"cpu",kernelFunc:aT};const sT={kernelName:Qt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{blockShape:s,crops:i}=a;DS([r],"batchToSpaceND");const o=s.reduce(((e,t)=>e*t)),l=Ff(r.shape,s,o),u=Df(l.length,s.length),c=Of(r.shape,s,o),p=Mf(i,s.length),d=Lf(c,i,s.length),h=bI({inputs:{x:r},backend:n,attrs:{shape:l}}),f=AI({inputs:{x:h},backend:n,attrs:{perm:u}}),m=bI({inputs:{x:f},backend:n,attrs:{shape:c}}),g=aT({inputs:{x:m},backend:n,attrs:{begin:p,size:d}});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}};function iT(e,t,n,a,r){const s=Ye(a),i=bt(r,n);for(let o=0;o<e.length;o++){const n=e[o];if(n<0)throw new Error("Input x must be non-negative!");n>=r||(i[n]+=s>0?t[o]:1)}return i}function oT(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const r=e.shape[0],s=e.shape[1],i=$o([r,n],t.dtype);for(let o=0;o<r;o++)for(let r=0;r<s;r++){const s=e.get(o,r);if(s<0)throw new Error("Input x must be non-negative!");s>=n||(a?i.set(1,o,s):t.size>0?i.set(i.get(o,s)+t.get(o,r),o,s):i.set(i.get(o,s)+1,o,s))}return i}const lT={kernelName:Zt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,weights:s}=t,{size:i}=a,o=iT(n.data.get(r.dataId).values,n.data.get(s.dataId).values,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,o)}},uT=HS(((e,t)=>e&t)),cT=dI(Jt,uT),pT={kernelName:Jt,backendName:"cpu",kernelFunc:cT};const dT={kernelName:en,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{s0:a,s1:r}=t,s=n.data.get(a.dataId).values,i=n.data.get(r.dataId).values,o=al(Array.from(s),Array.from(i));return n.makeTensorInfo([o.length],"int32",Int32Array.from(o))}},hT=LS((e=>Math.ceil(e))),fT=PS(nn,hT),mT={kernelName:nn,backendName:"cpu",kernelFunc:fT},gT=zS(an,((e,t)=>{const n=t;return e>n.clipValueMax?n.clipValueMax:e<n.clipValueMin?n.clipValueMin:e})),yT={kernelName:an,backendName:"cpu",kernelFunc:gT},bT={kernelName:sn,backendName:"cpu",kernelFunc:e=>{const{x:t}=e.inputs,n=e.backend,a=new Float32Array(Ye(t.shape)),r=n.data.get(t.dataId),s=r.complexTensorInfos.real,i=r.complexTensorInfos.imag,o=n.data.get(s.dataId).values,l=n.data.get(i.dataId).values;for(let u=0;u<o.length;u++){const e=o[u],t=l[u];a[u]=Math.hypot(e,t)}return n.makeOutput(a,t.shape,"float32")}};function xT(e,t,n,a){const r=it(n,Ye(t));if(a&&"string"!==n){let t=0;e.forEach((e=>{const n=Ye(e.shape);r.set(e.vals,t),t+=n}))}else{let a=0;e.forEach((e=>{const s="string"===n?Cm(e.vals):e.vals;let i=0;for(let n=0;n<e.shape[0];++n){const o=n*t[1]+a;for(let t=0;t<e.shape[1];++t)r[o+t]=s[i++]}a+=e.shape[1]}))}return r}function vT(e){const{inputs:t,backend:n}=e,{input:a}=t,r=n.data.get(a.dataId).complexTensorInfos.imag,s=n.data.get(r.dataId).values;return n.makeTensorInfo(r.shape,r.dtype,s)}const wT={kernelName:Yn,backendName:"cpu",kernelFunc:vT};function kT(e){const{inputs:t,backend:n,attrs:a}=e,{axis:r}=a,s=at(r,t[0].shape)[0];Nf(t.map((e=>e.shape)),s);let i=Sf(t.map((e=>e.shape)),s);if(0===Ye(i))return n.makeTensorInfo(i,t[0].dtype,[]);const o=t.filter((e=>Ye(e.shape)>0));if(1===o.length)return VS({inputs:{x:o[0]},backend:n});if("complex64"===o[0].dtype){const e=o.map((e=>oI({inputs:{input:e},backend:n}))),t=o.map((e=>vT({inputs:{input:e},backend:n}))),a=kT({inputs:e,backend:n,attrs:{axis:s}}),r=kT({inputs:t,backend:n,attrs:{axis:s}}),i=rI({inputs:{real:a,imag:r},backend:n});return e.forEach((e=>n.disposeIntermediateTensorInfo(e))),t.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(r),i}const l=o.map((e=>{const t=Ye(e.shape.slice(s));return bI({inputs:{x:e},backend:n,attrs:{shape:[-1,t]}})})),u=l.map((e=>({vals:n.data.get(e.dataId).values,shape:e.shape})));i=Sf(l.map((e=>e.shape)),1);const c=1===l[0].shape[0],p=xT(u,i,t[0].dtype,c),d=Sf(o.map((e=>e.shape)),s),h=n.makeTensorInfo(d,t[0].dtype,p);return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),h}const NT={kernelName:on,backendName:"cpu",kernelFunc:kT};function ST(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,filter:s}=t,{strides:i,pad:o,dataFormat:l,dilations:u,dimRoundingMode:c}=a;DS([r,s],"conv2d");const p=Su(l),d=fu(r.shape,s.shape,i,u,o,c,!1,p),h=d.filterHeight,f=d.filterWidth,m=d.dilationHeight,g=d.dilationWidth,y=d.padInfo.left,b=d.padInfo.top,x="channelsLast"===d.dataFormat,v=new Rs(d.outShape,r.dtype),w=ft(r.shape),k=ft(s.shape),N=w[0],S=x?w[1]:w[2],I=x?w[2]:1,T=x?1:w[1],C=v.strides[0],E=x?v.strides[1]:v.strides[2],$=x?v.strides[2]:1,R=x?1:v.strides[1],A=n.data.get(r.dataId).values,_=n.data.get(s.dataId).values,F=v.values;for(let D=0;D<d.batchSize;++D){const e=D*N,t=D*C;for(let n=0;n<d.outHeight;++n){const a=t+n*E,r=n*d.strideHeight-b;for(let t=0;t<h;++t){const n=r+t*m;if(n<0||n>=d.inHeight)continue;const s=t*k[0],i=e+n*S;for(let e=0;e<d.outWidth;++e){const t=a+e*$,n=e*d.strideWidth-y;for(let e=0;e<f;++e){const a=n+e*g;if(a<0||a>=d.inWidth)continue;const r=i+a*I;let o=s+e*k[1];for(let e=0;e<d.inChannels;++e){const n=A[r+e*T];for(let e=0;e<d.outChannels;++e)F[t+e*R]+=n*_[o+e];o+=d.outChannels}}}}}}return n.makeTensorInfo(v.shape,v.dtype,F)}const IT={kernelName:ln,backendName:"cpu",kernelFunc:ST};const TT={kernelName:un,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,dy:s}=t,{strides:i,pad:o,dataFormat:l,dimRoundingMode:u,filterShape:c}=a;DS([r,s],"conv2dBackpropFilter");const p=Su(l),d=fu(r.shape,c,i,1,o,u,!1,p),{strideHeight:h,strideWidth:f,filterHeight:m,filterWidth:g}=d,y="channelsLast"===d.dataFormat,b=new Rs(d.filterShape,"float32"),x=d.padInfo.left,v=d.padInfo.top,w=n.data.get(r.dataId).values,k=n.data.get(s.dataId).values,N=new Rs(r.shape,r.dtype,w),S=new Rs(s.shape,s.dtype,k);for(let I=0;I<m;++I){const e=Math.max(0,Math.ceil((v-I)/h)),t=Math.min(d.outHeight,(d.inHeight+v-I)/h);for(let n=0;n<g;++n){const a=Math.max(0,Math.ceil((x-n)/f)),r=Math.min(d.outWidth,(d.inWidth+x-n)/f);for(let s=0;s<d.inChannels;++s)for(let i=0;i<d.outChannels;++i){let o=0;for(let l=0;l<d.batchSize;++l)for(let u=e;u<t;++u){const e=I+u*h-v;for(let t=a;t<r;++t){const a=n+t*f-x;o+=y?N.get(l,e,a,s)*S.get(l,u,t,i):N.get(l,s,e,a)*S.get(l,i,u,t)}}b.set(o,I,n,s,i)}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}};const CT={kernelName:cn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,filter:s}=t,{inputShape:i,strides:o,pad:l,dataFormat:u,dimRoundingMode:c}=a;DS([r,s],"conv2dBackpropInput");const p=ft(s.shape),d=ft(r.shape);let h=Su(u);const f=fu(i,s.shape,o,1,l,c,!1,h),m=new Rs(f.inShape,"float32"),g=m.values,y=n.data.get(r.dataId).values,b=n.data.get(s.dataId).values,[x,v,w]=p,{batchSize:k,filterHeight:N,filterWidth:S,inChannels:I,inHeight:T,inWidth:C,outChannels:E,outHeight:$,outWidth:R,strideHeight:A,strideWidth:_}=f;h=f.dataFormat;const F=N-1-f.padInfo.top,D=S-1-f.padInfo.left,O="channelsLast"===h,M=m.strides[0],L=O?m.strides[1]:m.strides[2],z=O?m.strides[2]:1,P=O?1:m.strides[1],B=d[0],W=O?d[1]:d[2],V=O?d[2]:1,U=O?1:d[1];for(let j=0;j<k;++j)for(let e=0;e<I;++e)for(let t=0;t<T;++t){const n=t-F,a=Math.max(0,Math.ceil(n/A)),r=Math.min($,(N+n)/A);for(let s=0;s<C;++s){const i=s-D,o=Math.max(0,Math.ceil(i/_)),l=Math.min(R,(S+i)/_);let u=0;for(let t=a;t<r;++t){const a=t*A-n;for(let n=o;n<l;++n){const r=B*j+W*t+V*n,s=x*(N-1-a)+v*(S-1-(n*_-i))+w*e;for(let e=0;e<E;++e){u+=y[r+U*e]*b[s+e]}}}g[M*j+L*t+z*s+P*e]=u}}return n.makeTensorInfo(m.shape,m.dtype,m.values)}};const ET={kernelName:pn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,filter:s}=t,{strides:i,pad:o,dilations:l}=a;DS([r,s],"conv3d");const u=mu(r.shape,s.shape,i,l,o),{filterDepth:c,filterHeight:p,filterWidth:d,dilationDepth:h,dilationHeight:f,dilationWidth:m,padInfo:g}=u,y=g.front,b=g.left,x=g.top,v=new Rs(u.outShape,r.dtype),w=n.data.get(r.dataId).values,k=n.data.get(s.dataId).values,N=v.values,S=ft(r.shape),I=ft(s.shape);for(let T=0;T<u.batchSize;++T){const e=T*S[0],t=T*v.strides[0];for(let n=0;n<u.outDepth;++n){const a=t+n*v.strides[1],r=n*u.strideDepth-y;for(let t=0;t<c;++t){const n=r+t*h;if(n<0||n>=u.inDepth)continue;const s=t*I[0],i=e+n*S[1];for(let e=0;e<u.outHeight;++e){const t=a+e*v.strides[2],n=e*u.strideHeight-x;for(let e=0;e<p;++e){const a=n+e*f;if(a<0||a>=u.inHeight)continue;const r=s+e*I[1],o=i+a*S[2];for(let e=0;e<u.outWidth;++e){const n=t+e*u.outChannels,a=e*u.strideWidth-b;for(let e=0;e<d;++e){const t=a+e*m;if(t<0||t>=u.inWidth)continue;const s=r+e*I[2],i=o+t*u.inChannels;let l=s;for(let e=0;e<u.inChannels;++e){const t=w[i+e];for(let e=0;e<u.outChannels;++e)N[n+e]+=t*k[l+e];l+=u.outChannels}}}}}}}}return n.makeTensorInfo(v.shape,v.dtype,v.values)}};const $T={kernelName:dn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,dy:s}=t,{strides:i,pad:o,filterShape:l}=a;DS([r,s],"conv3dBackpropFilterV2");const u=ft(r.shape),c=ft(s.shape),p=mu(r.shape,l,i,1,o),d=p.strideDepth,h=p.strideHeight,f=p.strideWidth,m=p.filterDepth,g=p.filterHeight,y=p.filterWidth,b=new Rs(p.filterShape,"float32"),x=b.values,[v,w,k,N]=b.strides,S=n.data.get(s.dataId).values,[I,T,C,E]=c,$=n.data.get(r.dataId).values,[R,A,_,F]=u,D=p.padInfo.front,O=p.padInfo.left,M=p.padInfo.top;for(let L=0;L<m;++L){const e=Math.max(0,Math.ceil((D-L)/d)),t=Math.min(p.outDepth,(p.inDepth+D-L)/d),n=L*v;for(let a=0;a<g;++a){const r=Math.max(0,Math.ceil((M-a)/h)),s=Math.min(p.outHeight,(p.inHeight+M-a)/h),i=a*w+n;for(let n=0;n<y;++n){const o=Math.max(0,Math.ceil((O-n)/f)),l=Math.min(p.outWidth,(p.inWidth+O-n)/f),u=n*k+i;for(let i=0;i<p.inChannels;++i){const c=i*N+u;for(let u=0;u<p.outChannels;++u){let m=0;for(let c=0;c<p.batchSize;++c){const p=c*R,g=c*I;for(let c=e;c<t;++c){const e=(L+c*d-D)*A+p,t=c*T+g;for(let c=r;c<s;++c){const r=(a+c*h-M)*_+e,s=c*C+t;for(let e=o;e<l;++e){const t=e*E+s;m+=$[(n+e*f-O)*F+r+i]*S[t+u]}}}}x[c+u]=m}}}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}};const RT={kernelName:hn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,filter:s}=t,{pad:i,strides:o,inputShape:l}=a;DS([r],"conv3dBackpropInputV2");const u=ft(r.shape),c=ft(s.shape),p=mu(l,s.shape,o,1,i),d=new Rs(p.inShape,"float32"),h=d.values,[f,m,g,y]=d.strides,b=n.data.get(r.dataId).values,[x,v,w,k]=u,N=n.data.get(s.dataId).values,[S,I,T,C]=c,{batchSize:E,filterDepth:$,filterHeight:R,filterWidth:A,inChannels:_,inDepth:F,inHeight:D,inWidth:O,outChannels:M,outDepth:L,outHeight:z,outWidth:P,strideDepth:B,strideHeight:W,strideWidth:V}=p,U=$-1-p.padInfo.front,j=R-1-p.padInfo.top,G=A-1-p.padInfo.left;for(let H=0;H<E;++H)for(let e=0;e<_;++e)for(let t=0;t<F;++t){const n=t-U,a=Math.max(0,Math.ceil(n/B)),r=Math.min(L,($+n)/B);for(let s=0;s<D;++s){const i=s-j,o=Math.max(0,Math.ceil(i/W)),l=Math.min(z,(R+i)/W);for(let u=0;u<O;++u){const c=u-G,p=Math.max(0,Math.ceil(c/V)),d=Math.min(P,(A+c)/V);let E=0;for(let t=a;t<r;++t){const a=t*B-n;for(let n=o;n<l;++n){const r=n*W-i;for(let s=p;s<d;++s){const i=x*H+v*t+w*n+k*s,o=S*($-1-a)+I*(R-1-r)+T*(A-1-(s*V-c))+C*e;for(let e=0;e<M;++e){E+=b[i+e]*N[o+e]}}}}h[f*H+m*t+g*s+y*u+e]=E}}}return n.makeTensorInfo(d.shape,d.dtype,d.values)}},AT=zS(fn,(e=>Math.cos(e))),_T={kernelName:fn,backendName:"cpu",kernelFunc:AT},FT=zS(mn,(e=>Math.cosh(e))),DT={kernelName:mn,backendName:"cpu",kernelFunc:FT};const OT={kernelName:bn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{image:r,boxes:s,boxInd:i}=t,{cropSize:o,method:l,extrapolationValue:u}=a,[c,p,d,h]=r.shape,f=s.shape[0],[m,g]=o,y=$o([f,m,g,h],"float32"),b=n.data.get(s.dataId).values,x=n.data.get(i.dataId).values,v=n.data.get(r.dataId).values,w=ft(r.shape),k=ft(y.shape);for(let N=0;N<f;N++){const e=4*N,t=b[e],n=b[e+1],a=b[e+2],r=b[e+3],s=x[N];if(s>=c)continue;const i=m>1?(a-t)*(p-1)/(m-1):0,o=g>1?(r-n)*(d-1)/(g-1):0;for(let c=0;c<m;c++){const e=m>1?t*(p-1)+c*i:.5*(t+a)*(p-1);if(e<0||e>p-1)for(let t=0;t<g;t++)for(let e=0;e<h;e++){const n=e+t*k[2]+c*k[1]+N*k[0];y.values[n]=u}else if("bilinear"===l){const t=Math.floor(e),a=Math.ceil(e),i=e-t;for(let e=0;e<g;e++){const l=g>1?n*(d-1)+e*o:.5*(n+r)*(d-1);if(l<0||l>d-1){for(let t=0;t<h;t++){const n=t+e*k[2]+c*k[1]+N*k[0];y.values[n]=u}continue}const p=Math.floor(l),f=Math.ceil(l),m=l-p;for(let n=0;n<h;n++){let r=n+p*w[2]+t*w[1]+s*w[0];const o=v[r];r=n+f*w[2]+t*w[1]+s*w[0];const l=v[r];r=n+p*w[2]+a*w[1]+s*w[0];const u=v[r];r=n+f*w[2]+a*w[1]+s*w[0];const d=o+(l-o)*m,h=u+(v[r]-u)*m;r=n+e*k[2]+c*k[1]+N*k[0],y.values[r]=d+(h-d)*i}}}else for(let t=0;t<g;++t){const a=g>1?n*(d-1)+t*o:.5*(n+r)*(d-1);if(a<0||a>d-1){for(let e=0;e<h;e++){const n=e+t*k[2]+c*k[1]+N*k[0];y.values[n]=u}continue}const i=Math.round(a),l=Math.round(e);for(let e=0;e<h;e++){const n=e+i*w[2]+l*w[1]+s*w[0],a=e+t*k[2]+c*k[1]+N*k[0];y.values[a]=v[n]}}}}return n.makeTensorInfo(y.shape,y.dtype,y.values)}};const MT={kernelName:gn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,exclusive:i,reverse:o}=a;DS(r,"cumprod");const l=Ic([s],r.shape.length);let u=r;null!=l&&(u=AI({inputs:{x:r},backend:n,attrs:{perm:l}}));const c=Cc(1,r.shape.length)[0];if(c!==u.shape.length-1)throw new Error(`backend.cumprod in CPU expects an inner-most axis=${u.shape.length-1} but got axis=${c}`);const p=Us(u.dtype,"int32"),d=yt(Ye(u.shape),p),h=n.data.get(u.dataId).values,f=u.shape[u.shape.length-1],m=o?(e,t)=>e+f-t-1:(e,t)=>e+t;for(let y=0;y<h.length;y+=f)for(let e=0;e<f;e++){const t=m(y,e);if(0===e)d[t]=i?1:h[t];else{const n=m(y,e-1);d[t]=i?h[n]*d[n]:h[t]*d[n]}}const g=n.makeTensorInfo(u.shape,p,d);if(null!=l){const e=AI({inputs:{x:g},backend:n,attrs:{perm:Tc(l)}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(u),e}return g}};const LT={kernelName:yn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,exclusive:i,reverse:o}=a;DS(r,"cumsum");const l=Ic([s],r.shape.length);let u=r;null!=l&&(u=AI({inputs:{x:r},backend:n,attrs:{perm:l}}));const c=Cc(1,r.shape.length)[0];if(c!==u.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${u.shape.length-1} but got axis=${c}`);const p=Us(u.dtype,"int32"),d=bt(Ye(u.shape),p),h=n.data.get(u.dataId).values,f=u.shape[u.shape.length-1],m=o?(e,t)=>e+f-t-1:(e,t)=>e+t;for(let y=0;y<h.length;y+=f)for(let e=0;e<f;e++){const t=m(y,e);if(0===e)d[t]=i?0:h[t];else{const n=m(y,e-1);d[t]=i?h[n]+d[n]:h[t]+d[n]}}const g=n.makeTensorInfo(u.shape,p,d);if(null!=l){const e=AI({inputs:{x:g},backend:n,attrs:{perm:Tc(l)}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(u),e}return g}};const zT={kernelName:xn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,weights:s}=t,{size:i,binaryOutput:o}=a;if(1===r.shape.length){const e=iT(n.data.get(r.dataId).values,n.data.get(s.dataId).values,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,e)}if(2===r.shape.length){const e=oT(n.bufferSync(r),n.bufferSync(s),i,o);return n.makeTensorInfo(e.shape,s.dtype,e.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${r.shape.length}.`)}};const PT={kernelName:vn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{blockSize:s,dataFormat:i}=a;qe("NHWC"===i,(()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${i}`));const o=r.shape[0],l=r.shape[1],u=r.shape[2],c=r.shape[3],p=l*s,d=u*s,h=c/(s*s),f=n.data.get(r.dataId).values,m=new Float32Array(o*p*d*h);let g=0;for(let y=0;y<o;++y)for(let e=0;e<p;++e){const t=Math.floor(e/s),n=e%s;for(let e=0;e<d;++e){const a=Math.floor(e/s),r=(n*s+e%s)*h;for(let e=0;e<h;++e){const n=e+r+c*(a+u*(t+l*y));m[g++]=f[n]}}}return n.makeTensorInfo([o,p,d,h],r.dtype,m)}};function BT(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,filter:s}=t,{strides:i,pad:o,dilations:l,dimRoundingMode:u}=a;DS([r,s],"depthwiseConv2DNative");const c=ft(r.shape),p=ft(s.shape);let d=l;null==d&&(d=[1,1]),qe(ku(i,d),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${d}'`));const h=fu(r.shape,s.shape,i,d,o,u,!0),{filterHeight:f,filterWidth:m,dilationHeight:g,dilationWidth:y,padInfo:b}=h,x=b.left,v=b.top,w=h.outChannels/h.inChannels,k=new Rs(h.outShape,r.dtype),N=n.data.get(r.dataId).values,S=n.data.get(s.dataId).values,I=k.values;for(let T=0;T<h.batchSize;++T){const e=T*c[0],t=T*k.strides[0];for(let n=0;n<h.outHeight;++n){const a=t+n*k.strides[1],r=n*h.strideHeight-v;for(let t=0;t<f;++t){const n=r+t*g;if(n<0||n>=h.inHeight)continue;const s=t*p[0],i=e+n*c[1];for(let e=0;e<h.outWidth;++e){const t=a+e*k.strides[2],n=e*h.strideWidth-x;for(let e=0;e<m;++e){const a=n+e*y;if(a<0||a>=h.inWidth)continue;const r=s+e*p[1],o=i+a*h.inChannels;let l=t,u=r;for(let e=0;e<h.inChannels;++e){const t=N[o+e];for(let e=0;e<w;++e)I[l+e]+=t*S[u+e];l+=w,u+=w}}}}}}return n.makeTensorInfo(k.shape,k.dtype,k.values)}const WT={kernelName:wn,backendName:"cpu",kernelFunc:BT};const VT={kernelName:kn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,dy:s}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,filterShape:c}=a;DS([r,s],"depthwiseConv2dNativeBackpropFilter");const p=fu(r.shape,c,i,o,l,u,!0),{strideHeight:d,strideWidth:h,filterHeight:f,filterWidth:m}=p,g=new Rs(p.filterShape,"float32"),y=p.padInfo.left,b=p.padInfo.top,x=p.outChannels/p.inChannels,v=n.data.get(r.dataId).values,w=new Rs(r.shape,r.dtype,v),k=n.data.get(s.dataId).values,N=new Rs(s.shape,s.dtype,k);for(let S=0;S<f;++S){const e=Math.max(0,Math.ceil((b-S)/d)),t=Math.min(p.outHeight,(p.inHeight+b-S)/d);for(let n=0;n<m;++n){const a=Math.max(0,Math.ceil((y-n)/h)),r=Math.min(p.outWidth,(p.inWidth+y-n)/h);for(let s=0;s<p.outChannels;++s){const i=Math.trunc(s/x),o=s%x;let l=0;for(let u=0;u<p.batchSize;++u)for(let o=e;o<t;++o){const e=S+o*d-b;for(let t=a;t<r;++t){const a=n+t*h-y;l+=w.get(u,e,a,i)*N.get(u,o,t,s)}}g.set(l,S,n,i,o)}}}return n.makeTensorInfo(g.shape,g.dtype,g.values)}};const UT={kernelName:Nn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,filter:s}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,inputShape:c}=a;DS([r,s],"depthwiseConv2DNativeBackpropInput");const p=ft(r.shape),d=ft(s.shape),h=fu(c,s.shape,i,o,l,u,!0),f=new Rs(h.inShape,"float32"),m=f.values,[g,y,b]=f.strides,x=n.data.get(r.dataId).values,[v,w,k]=p,N=n.data.get(s.dataId).values,[S,I,T]=d,{batchSize:C,filterHeight:E,filterWidth:$,inChannels:R,inHeight:A,inWidth:_,outChannels:F,outHeight:D,outWidth:O,strideHeight:M,strideWidth:L}=h,z=E-1-h.padInfo.top,P=$-1-h.padInfo.left,B=F/R;for(let W=0;W<C;++W)for(let e=0;e<R;++e)for(let t=0;t<A;++t){const n=t-z,a=Math.max(0,Math.ceil(n/M)),r=Math.min(D,(E+n)/M);for(let s=0;s<_;++s){const i=s-P,o=Math.max(0,Math.ceil(i/L)),l=Math.min(O,($+i)/L);let u=0;for(let t=a;t<r;++t){const a=t*M-n;for(let n=o;n<l;++n){const r=v*W+w*t+k*n,s=S*(E-1-a)+I*($-1-(n*L-i))+T*e;for(let t=0;t<B;++t){u+=x[r+(e*B+t)]*N[s+t]}}}m[g*W+y*t+b*s+e]=u}}return n.makeTensorInfo(f.shape,f.dtype,f.values)}};const jT={kernelName:Sn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:a}=t,r=Ye(a.shape),s=n.data.get(a.dataId).values,i=$o([r,r],a.dtype),o=i.values;for(let u=0;u<s.length;u++)o[u*r+u]=s[u];const l=[...a.shape,...a.shape];return n.makeTensorInfo(l,i.dtype,i.values)}},GT={kernelName:In,backendName:"cpu",kernelFunc:e=>{let{inputs:t,backend:n,attrs:a}=e;const{x:r,filter:s}=t,{strides:i,pad:o,dilations:l}=a,u=n,c=u.data.get(r.dataId).values,p=r.shape.length,d=u.data.get(s.dataId).values,h=s.shape.length,{batchSize:f,inHeight:m,inWidth:g,inChannels:y,outHeight:b,outWidth:x,padInfo:v,strideHeight:w,strideWidth:k,filterHeight:N,filterWidth:S,dilationHeight:I,dilationWidth:T,outShape:C}=pu(r.shape,s.shape,i,o,"NHWC",l),E=Ye(C),$=C.length,R=it(r.dtype,E);for(let A=0;A<f;++A)for(let e=0;e<b;++e){const t=e*w-v.top;for(let n=0;n<x;++n){const a=n*k-v.left;for(let i=0;i<y;++i){let o=Number.MIN_SAFE_INTEGER;for(let e=0;e<N;++e){const n=t+e*I;if(n>=0&&n<m)for(let t=0;t<S;++t){const l=a+t*T;if(l>=0&&l<g){const a=wt([A,n,l,i],p,ft(r.shape)),u=wt([e,t,i],h,ft(s.shape)),f=c[a]+d[u];f>o&&(o=f)}}}R[wt([A,e,n,i],$,ft(C))]=o}}}return{dataId:u.write(gs(R,r.dtype),C,r.dtype),shape:C,dtype:r.dtype}}},HT={kernelName:Cn,backendName:"cpu",kernelFunc:e=>{let{inputs:t,backend:n,attrs:a}=e;const{x:r,filter:s,dy:i}=t,{strides:o,pad:l,dilations:u}=a,c=n,p=gt(r.shape,c.data.get(r.dataId).values),d=gt(s.shape,c.data.get(s.dataId).values),{batchSize:h,inHeight:f,inWidth:m,inChannels:g,outHeight:y,outWidth:b,padInfo:x,strideHeight:v,strideWidth:w,filterHeight:k,filterWidth:N,dilationHeight:S,dilationWidth:I,outShape:T}=pu(r.shape,s.shape,o,l,"NHWC",u);qe(i.rank===T.length,(()=>`Error in ${Cn}, dy must have the same rank as output ${T.length}, but got ${i.rank}`));const C=gt(T,c.data.get(i.dataId).values),E=xt(s.shape,s.dtype);for(let $=0;$<h;++$)for(let e=0;e<y;++e){const t=e*v-x.top;for(let n=0;n<b;++n){const a=n*w-x.left;for(let r=0;r<g;++r){let s=Number.MIN_SAFE_INTEGER,i=0,o=0;for(let e=0;e<k;++e){const n=t+e*S;if(n>=0&&n<f)for(let t=0;t<N;++t){const l=a+t*I;if(l>=0&&l<m){const a=p[$][n][l][r]+d[e][t][r];a>s&&(s=a,i=e,o=t)}}}E[i][o][r]+=C[$][e][n][r]}}}return{dataId:c.write(gs(E,r.dtype),s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}},qT={kernelName:Tn,backendName:"cpu",kernelFunc:e=>{let{inputs:t,backend:n,attrs:a}=e;const{x:r,filter:s,dy:i}=t,{strides:o,pad:l,dilations:u}=a,c=n,p=gt(r.shape,c.data.get(r.dataId).values),d=gt(s.shape,c.data.get(s.dataId).values),{batchSize:h,inHeight:f,inWidth:m,inChannels:g,outHeight:y,outWidth:b,padInfo:x,strideHeight:v,strideWidth:w,filterHeight:k,filterWidth:N,dilationHeight:S,dilationWidth:I,outShape:T}=pu(r.shape,s.shape,o,l,"NHWC",u);qe(i.rank===T.length,(()=>`Error in ${Tn}, dy must have the same rank as output ${T.length}, but got ${i.rank}`));const C=gt(T,c.data.get(i.dataId).values),E=xt(r.shape,r.dtype);for(let $=0;$<h;++$)for(let e=0;e<y;++e){const t=e*v-x.top;for(let n=0;n<b;++n){const a=n*w-x.left;for(let r=0;r<g;++r){let s=Number.MIN_SAFE_INTEGER,i=t<0?0:t,o=a<0?0:a;for(let e=0;e<k;++e){const n=t+e*S;if(n>=0&&n<f)for(let t=0;t<N;++t){const l=a+t*I;if(l>=0&&l<m){const a=p[$][n][l][r]+d[e][t][r];a>s&&(s=a,i=n,o=l)}}}E[$][i][o][r]+=C[$][e][n][r]}}}return{dataId:c.write(gs(E,r.dtype),r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}};const KT={kernelName:En,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{image:r}=t,{canvas:s,options:i}=a,{contextOptions:o,imageOptions:l}=i||{},u=(null===l||void 0===l?void 0:l.alpha)||1,c=(null===o||void 0===o?void 0:o.contextType)||"2d";if("2d"!==c)throw new Error(`Context type ${o.contextType} is not supported by the CPU backend.`);const p=s.getContext(c,(null===o||void 0===o?void 0:o.contextAttributes)||{});if(null==p)throw new Error(`Could not get the context with ${c} type.`);const[d,h]=r.shape.slice(0,2),f=2===r.shape.length?1:r.shape[2],m=n.data.get(r.dataId).values,g="float32"===r.dtype?255:1,y=new Uint8ClampedArray(h*d*4);for(let x=0;x<d*h;++x){const e=[0,0,0,255*u];for(let n=0;n<f;n++){const t=m[x*f+n];if("float32"===r.dtype){if(t<0||t>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${t}.`)}else if("int32"===r.dtype&&(t<0||t>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${t}.`);1===f?(e[0]=t*g,e[1]=t*g,e[2]=t*g):e[n]=t*g}const t=4*x;y[t+0]=Math.round(e[0]),y[t+1]=Math.round(e[1]),y[t+2]=Math.round(e[2]),y[t+3]=Math.round(e[3])}s.width=h,s.height=d;const b=new ImageData(y,h,d);return p.putImageData(b,0,0),r}},XT=HS(((e,t)=>e*t)),YT=hI(((e,t,n,a)=>({real:e*n-t*a,imag:e*a+t*n}))),QT=dI(Sa,XT,YT),ZT={kernelName:Sa,backendName:"cpu",kernelFunc:QT};function JT(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,keepDims:i}=a;let o;DS(r,"sum"),o="bool"===r.dtype?cI({inputs:{x:r},backend:n,attrs:{dtype:"int32"}}):VS({inputs:{x:r},backend:n});const l=o.shape.length,u=at(s,o.shape),c=Ic(u,l);let p=u,d=o;null!=c&&(d=AI({inputs:{x:o},backend:n,attrs:{perm:c}}),p=Cc(p.length,l)),Sc("sum",p,d.shape.length);const[h,f]=kc(d.shape,p);let m=iI(n,h,Us(d.dtype,"int32"));const g=Ye(f),y=n.data.get(m.dataId).values,b=n.data.get(d.dataId).values;for(let x=0;x<y.length;++x){const e=x*g;let t=0;for(let n=0;n<g;++n)t+=b[e+n];y[x]=t}if(i){const e=m;m=bI({inputs:{x:m},backend:n,attrs:{shape:Nc(m.shape,u)}}),n.disposeIntermediateTensorInfo(e)}return n.disposeIntermediateTensorInfo(o),null!=c&&n.disposeIntermediateTensorInfo(d),m}const eC={kernelName:pr,backendName:"cpu",kernelFunc:JT};const tC={kernelName:Rn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{equation:r}=a,s=t,{allDims:i,summedDims:o,idDims:l}=sm(r,s.length);om(i.length,l,s);const{path:u,steps:c}=lm(o,l),p=c.length;let d=null,h=i.length;const f=[];for(let m=0;m<p;++m){for(const e of c[m]){const{permutationIndices:t,expandDims:a}=im(h,l[e]);let r;um(t)?r=s[e]:(r=AI({inputs:{x:s[e]},backend:n,attrs:{perm:t}}),f.push(r));const i=r.shape.slice();for(let e=0;e<a.length;++e)i.splice(a[e],0,1);Qe(r.shape,i)||(r=bI({inputs:{x:r},backend:n,attrs:{shape:i}}),f.push(r)),null===d?d=r:(d=QT({inputs:{a:r,b:d},backend:n}),f.push(d))}m<p-1&&(u[m]>=0&&(d=JT({inputs:{x:d},backend:n,attrs:{axis:u[m]-(i.length-h),keepDims:!1}}),f.push(d)),h--)}for(const m of f)m!==d&&n.disposeIntermediateTensorInfo(m);return d}};const nC={kernelName:_n,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{dy:a,y:r}=t;DS([a,r],"eluGrad");const s=new Float32Array(Ye(r.shape)),i=n.data.get(r.dataId).values,o=n.data.get(a.dataId).values;for(let l=0;l<i.length;++l){const e=i[l];s[l]=e>=0?o[l]:o[l]*(e+1)}return n.makeTensorInfo(r.shape,"float32",s)}},aC=HS(((e,t)=>e===t?1:0)),rC=dI(Dn,aC,null,"bool"),sC={kernelName:Dn,backendName:"cpu",kernelFunc:rC},iC=Wf,oC=Vf,lC=Uf,uC=jf,cC=Gf,pC=Hf,dC=zS(Fn,(e=>{const t=Math.sign(e),n=Math.abs(e),a=1/(1+iC*n);return t*(1-((((pC*a+cC)*a+uC)*a+lC)*a+oC)*a*Math.exp(-n*n))})),hC={kernelName:Fn,backendName:"cpu",kernelFunc:dC},fC=LS((e=>Math.exp(e))),mC=PS(On,fC,"float32"),gC={kernelName:On,backendName:"cpu",kernelFunc:mC};function yC(e){const{inputs:t,backend:n,attrs:a}=e,{input:r}=t,{dim:s}=a,i=r.shape.length,o=r.shape.slice();let l=s;return s<0&&(qe(-(i+1)<=s,(()=>`Axis must be in the interval [${-(i+1)}, ${i}]`)),l=i+s+1),o.splice(l,0,1),bI({inputs:{x:r},backend:n,attrs:{shape:o}})}const bC={kernelName:Mn,backendName:"cpu",kernelFunc:yC},xC=LS((e=>Math.expm1(e))),vC=PS(Ln,xC),wC={kernelName:Ln,backendName:"cpu",kernelFunc:vC},kC=HS(((e,t)=>e/t)),NC=dI($n,kC),SC={kernelName:$n,backendName:"cpu",kernelFunc:NC},IC=HS(((e,t)=>e-t)),TC=hI(((e,t,n,a)=>({real:e-n,imag:t-a}))),CC=dI(Cr,IC,TC),EC={kernelName:Cr,backendName:"cpu",kernelFunc:CC};function $C(e,t,n){const a=e.shape,r=a[0],s=a[1],i=n.data.get(e.dataId),o=i.complexTensorInfos.real,l=i.complexTensorInfos.imag,u=[r,s],c=Ye(u),p=st("float32",c),d=st("float32",c);for(let g=0;g<r;g++){const e=aT({inputs:{x:o},backend:n,attrs:{begin:[g,0],size:[1,s]}}),a=aT({inputs:{x:l},backend:n,attrs:{begin:[g,0],size:[1,s]}}),r=rI({inputs:{real:e,imag:a},backend:n}),{real:i,imag:u}=RC(r,t,n),c=qf(i,u);for(let t=0;t<s;t++){const e=Qf(c,t);p[g*s+t]=e.real,d[g*s+t]=e.imag}n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(r)}const h=n.makeTensorInfo(u,"float32",p),f=n.makeTensorInfo(u,"float32",d),m=rI({inputs:{real:h,imag:f},backend:n});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(f),m}function RC(e,t,n){const a=Ye(e.shape),r=n.data.get(e.dataId),s=n.data.get(r.complexTensorInfos.real.dataId).values,i=n.data.get(r.complexTensorInfos.imag.dataId).values;if(0===((o=a)&o-1)){const r=AC(s,i,a,t,n),o=[e.shape[0],e.shape[1]];if(t){const e=n.makeTensorInfo(o,"float32",r.real),t=n.makeTensorInfo(o,"float32",r.imag),s=n.makeTensorInfo([],"float32",ms(a,"float32")),i=VS({inputs:{x:s},backend:n}),l=SC.kernelFunc({inputs:{a:e,b:s},backend:n}),u=SC.kernelFunc({inputs:{a:t,b:i},backend:n}),c=n.data.get(l.dataId).values,p=n.data.get(u.dataId).values;return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(u),{real:c,imag:p}}return r}{const e=function(e,t,n){const a=new Float32Array(2*t);for(let r=0;r<t;r++){let s=0,i=0;for(let a=0;a<t;a++){const o=em(r*a,t,n),l=Qf(e,a);s+=l.real*o.real-l.imag*o.imag,i+=l.real*o.imag+l.imag*o.real}n&&(s/=t,i/=t),Zf(a,s,i,r)}return a}(qf(s,i),a,t);return Kf(e)}var o}function AC(e,t,n,a,r){if(1===n)return{real:e,imag:t};const s=qf(e,t),i=n/2,o=Xf(s),l=o.real,u=o.imag,c=[l.length],p=r.makeTensorInfo(c,"float32",l),d=r.makeTensorInfo(c,"float32",u),h=rI({inputs:{real:p,imag:d},backend:r}),f=Yf(s),m=f.real,g=f.imag,y=[m.length],b=r.makeTensorInfo(y,"float32",m),x=r.makeTensorInfo(y,"float32",g),v=rI({inputs:{real:b,imag:x},backend:r}),w=AC(l,u,i,a,r),k=w.real,N=w.imag,S=[k.length],I=r.makeTensorInfo(S,"float32",k),T=r.makeTensorInfo(S,"float32",N),C=rI({inputs:{real:I,imag:T},backend:r}),E=AC(m,g,i,a,r),$=E.real,R=E.imag,A=[$.length],_=r.makeTensorInfo(A,"float32",$),F=r.makeTensorInfo(A,"float32",R),D=rI({inputs:{real:_,imag:F},backend:r}),O=Jf(n,a),M=[O.real.length],L=r.makeTensorInfo(M,"float32",O.real),z=r.makeTensorInfo(M,"float32",O.imag),P=rI({inputs:{real:L,imag:z},backend:r}),B=QT({inputs:{a:P,b:D},backend:r}),W=gI({inputs:{a:C,b:B},backend:r}),V=CC({inputs:{a:C,b:B},backend:r}),U=oI({inputs:{input:W},backend:r}),j=oI({inputs:{input:V},backend:r}),G=vT({inputs:{input:W},backend:r}),H=vT({inputs:{input:V},backend:r}),q=kT({inputs:[U,j],backend:r,attrs:{axis:0}}),K=kT({inputs:[G,H],backend:r,attrs:{axis:0}}),X=r.data.get(q.dataId).values,Y=r.data.get(K.dataId).values;return r.disposeIntermediateTensorInfo(p),r.disposeIntermediateTensorInfo(d),r.disposeIntermediateTensorInfo(h),r.disposeIntermediateTensorInfo(b),r.disposeIntermediateTensorInfo(x),r.disposeIntermediateTensorInfo(v),r.disposeIntermediateTensorInfo(I),r.disposeIntermediateTensorInfo(T),r.disposeIntermediateTensorInfo(C),r.disposeIntermediateTensorInfo(_),r.disposeIntermediateTensorInfo(F),r.disposeIntermediateTensorInfo(D),r.disposeIntermediateTensorInfo(L),r.disposeIntermediateTensorInfo(z),r.disposeIntermediateTensorInfo(P),r.disposeIntermediateTensorInfo(B),r.disposeIntermediateTensorInfo(W),r.disposeIntermediateTensorInfo(V),r.disposeIntermediateTensorInfo(U),r.disposeIntermediateTensorInfo(G),r.disposeIntermediateTensorInfo(j),r.disposeIntermediateTensorInfo(H),r.disposeIntermediateTensorInfo(q),r.disposeIntermediateTensorInfo(K),{real:X,imag:Y}}const _C={kernelName:zn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:a}=t,r=Ye(a.shape),s=a.shape[a.shape.length-1],i=bI({inputs:{x:a},backend:n,attrs:{shape:[r/s,s]}}),o=$C(i,!1,n),l=bI({inputs:{x:o},backend:n,attrs:{shape:a.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),l}};function FC(e){const{backend:t,attrs:n}=e,{shape:a,value:r,dtype:s}=n,i=s||pt(r),o=it(i,Ye(a));return function(e,t){e.fill(t)}(o,r),t.makeTensorInfo(a,i,o)}const DC={kernelName:Pn,backendName:"cpu",kernelFunc:FC};const OC={kernelName:Bn,backendName:"cpu",kernelFunc:e=>{let{inputs:t,attrs:n,backend:a}=e;const{image:r}=t,s=a,i=st(r.dtype,Ye(r.shape)),[o,l,u,c]=r.shape,p=s.data.get(r.dataId).values;for(let d=0;d<o;d++){const e=d*u*l*c;for(let t=0;t<l;t++){const n=t*(u*c);for(let t=0;t<u;t++){const a=t*c;for(let r=0;r<c;r++){const s=Math.round(u-t-1),o=e+n+a+r;let l=p[o];if(s>=0&&s<u){l=p[e+n+s*c+r]}i[o]=l}}}}return{dataId:s.write(i,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},MC=LS((e=>Math.floor(e))),LC=PS(Wn,MC),zC={kernelName:Wn,backendName:"cpu",kernelFunc:LC},PC=HS(((e,t)=>Math.floor(e/t))),BC=dI(Vn,PC,null,"int32"),WC={kernelName:Vn,backendName:"cpu",kernelFunc:BC};const VC={kernelName:Vr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,filter:s,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dataFormat:c,dilations:p,dimRoundingMode:d,activation:h,leakyreluAlpha:f}=a;let m=ST({inputs:{x:r,filter:s},backend:n,attrs:{strides:l,pad:u,dataFormat:c,dilations:p,dimRoundingMode:d}});if(i){const e=m;if("NCHW"===c&&1===i.shape.length&&1!==i.shape[0]){const e=bI({inputs:{x:i},backend:n,attrs:{shape:[i.shape[0],1,1]}});m=gI({inputs:{a:m,b:e},backend:n}),n.disposeIntermediateTensorInfo(e)}else m=gI({inputs:{a:m,b:i},backend:n});n.disposeIntermediateTensorInfo(e)}if(h){const e=m;if("NCHW"===c&&"prelu"===h&&1===o.shape.length&&1!==o.shape[0]){const e=bI({inputs:{x:o},backend:n,attrs:{shape:[o.shape[0],1,1]}});m=aI(n,m,h,e,f),n.disposeIntermediateTensorInfo(e)}else m=aI(n,m,h,o,f);n.disposeIntermediateTensorInfo(e)}return m}};const UC={kernelName:Ur,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,filter:s,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dataFormat:c,dilations:p,dimRoundingMode:d,activation:h,leakyreluAlpha:f}=a;let m=BT({inputs:{x:r,filter:s},backend:n,attrs:{strides:l,pad:u,dataFormat:c,dilations:p,dimRoundingMode:d}});if(i){const e=m;m=gI({inputs:{a:m,b:i},backend:n}),n.disposeIntermediateTensorInfo(e)}if(h){const e=m;m=aI(n,m,h,o,f),n.disposeIntermediateTensorInfo(e)}return m}};function jC(e,t,n,a,r,s,i,o,l){const u=$o([a,s],n);for(let c=0;c<a;c++){const n=[];let a=0;for(let t=0;t<r;t++){const s=e[c*r+t];a+=s*i[t],n.push(s)}if(a<0||a>=l/s)throw new Error(`Invalid indices: ${n} does not index into ${o}`);for(let e=0;e<s;e++)u.values[c*s+e]=t.get(...t.indexToLoc(a*s+e))}return u}const GC={kernelName:Gn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:a,indices:r}=t,s=Ye(a.shape),i=r.shape,o=i[i.length-1],[l,u,c,p]=zf(a,r);if(0===u)return n.makeTensorInfo(l,a.dtype,[]);const d=jC(n.data.get(r.dataId).values,n.bufferSync(a),a.dtype,u,o,c,p,a.shape,s);return n.makeTensorInfo(l,a.dtype,d.values)}};function HC(e,t,n){const a=$o(n,e.dtype);for(let r=0;r<a.size;++r){const n=a.indexToLoc(r).slice(),s=n[0],i=n[2],o=t.locToIndex([s,i]);n[2]=t.values[o];const l=e.locToIndex(n);0<=l&&l<e.values.length&&(a.values[r]=e.values[l])}return a}const qC={kernelName:jn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,indices:s}=t,{axis:i,batchDims:o}=a;DS([r,s],"gatherV2");const l=at(i,r.shape)[0],u=n.data.get(s.dataId).values,c=r.shape[l];for(let x=0;x<u.length;++x){const e=u[x];qe(e<=c-1&&e>=0,(()=>`GatherV2: the index value ${e} is not in [0, ${c-1}]`))}let p=o;null==o&&(p=0);const d=Ye(s.shape),h=Tm(r,s,l,p),f=bI({inputs:{x:r},backend:n,attrs:{shape:[h.batchSize,h.outerSize,h.dimSize,h.sliceSize]}}),m=bI({inputs:{x:s},backend:n,attrs:{shape:[h.batchSize,d/h.batchSize]}}),g=[h.batchSize,h.outerSize,d/h.batchSize,h.sliceSize],y=n.bufferSync(m),b=HC(n.bufferSync(f),y,g);return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.makeTensorInfo(h.outputShape,b.dtype,b.values)}},KC=HS(((e,t)=>e>t?1:0)),XC=dI(Hn,KC,null,"bool"),YC={kernelName:Hn,backendName:"cpu",kernelFunc:XC},QC=HS(((e,t)=>e>=t?1:0)),ZC=dI(qn,QC,null,"bool"),JC={kernelName:qn,backendName:"cpu",kernelFunc:ZC};const eE={kernelName:Xn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:a}=t,r=Ye(a.shape),s=a.shape[a.shape.length-1],i=bI({inputs:{x:a},backend:n,attrs:{shape:[r/s,s]}}),o=$C(i,!0,n),l=bI({inputs:{x:o},backend:n,attrs:{shape:a.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),l}},tE=zS(Qn,(e=>Number.isFinite(e)?1:0),"bool"),nE={kernelName:Qn,backendName:"cpu",kernelFunc:tE},aE=zS(Zn,(e=>Math.abs(e)===1/0?1:0),"bool"),rE={kernelName:Zn,backendName:"cpu",kernelFunc:aE},sE=zS(Jn,(e=>Number.isNaN(e)?1:0),"bool"),iE={kernelName:Jn,backendName:"cpu",kernelFunc:sE},oE=HS(((e,t)=>e<t?1:0)),lE=dI(ta,oE,null,"bool"),uE={kernelName:ta,backendName:"cpu",kernelFunc:lE},cE=HS(((e,t)=>e<=t?1:0)),pE=dI(na,cE,null,"bool"),dE={kernelName:na,backendName:"cpu",kernelFunc:pE};function hE(e,t,n){const a=(t-e)/(n-1),r=bt(n,"float32");r[0]=e;for(let s=1;s<r.length;s++)r[s]=r[s-1]+a;return r}const fE={kernelName:aa,backendName:"cpu",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:a,stop:r,num:s}=n,i=hE(a,r,s);return t.makeTensorInfo([i.length],"float32",i)}},mE=LS((e=>Math.log(e))),gE=PS(ra,mE),yE={kernelName:ra,backendName:"cpu",kernelFunc:gE},bE=zS(sa,(e=>Math.log1p(e))),xE={kernelName:sa,backendName:"cpu",kernelFunc:bE},vE=HS(((e,t)=>e&&t)),wE=dI(ia,vE,null,"bool"),kE={kernelName:ia,backendName:"cpu",kernelFunc:wE},NE=zS(oa,(e=>e?0:1),"bool"),SE={kernelName:oa,backendName:"cpu",kernelFunc:NE},IE=HS(((e,t)=>e||t)),TE=dI(la,IE,null,"bool"),CE={kernelName:la,backendName:"cpu",kernelFunc:TE};const EE={kernelName:ua,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{depthRadius:s,bias:i,alpha:o,beta:l}=a;DS(r,"LRN");const u=r.shape[3],c=u-1,p=n.data.get(r.dataId).values,d=Ye(r.shape),h=new Float32Array(d);function f(e){const t=e%u;let n=e-t+Math.max(0,t-s);const a=e-t+Math.min(t+s,c);let r=0;for(;n<=a;n++){const e=p[n];r+=e*e}return r}for(let m=0;m<d;m++){const e=f(m),t=p[m]*Math.pow(i+o*e,-l);h[m]=t}return n.makeTensorInfo(r.shape,r.dtype,h)}};const $E={kernelName:ca,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,y:s,dy:i}=t,{depthRadius:o,bias:l,alpha:u,beta:c}=a;DS(i,"LRNGrad");const p=Ye(i.shape),d=i.shape[3],h=n.data.get(i.dataId).values,f=n.data.get(r.dataId).values,m=n.data.get(s.dataId).values,g=new Float32Array(p),y=p;for(let b=0;b<y;b++){const e=b%d,t=b-e+Math.max(0,e-o),n=b-e+Math.min(d,e+o+1);let a=0;for(let r=t;r<n;r++)a+=Math.pow(f[r],2);a=u*a+l;for(let r=t;r<n;r++){let e=-2*u*c*f[r]*m[b]/a;b===r&&(e+=Math.pow(a,-c)),e*=h[b],g[r]+=e}}return n.makeTensorInfo(i.shape,r.dtype,g)}};function RE(e,t,n,a){const r=st(a,Ye(n));for(let s=0;s<r.length;++s){const n=s*t;let a=e[n];for(let r=0;r<t;++r){const t=e[n+r];(Number.isNaN(t)||t>a)&&(a=t)}r[s]=a}return r}function AE(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{reductionIndices:s,keepDims:i}=a,o=n;let l=r.shape;const u=l.length,c=at(s,l);let p=c;const d=Ic(p,u);let h=o.data.get(r.dataId).values;if(null!=d){const e=new Array(u);for(let t=0;t<e.length;t++)e[t]=l[d[t]];h=RI(h,l,r.dtype,d,e),p=Cc(p.length,u),l=e}DS(r,"max"),Sc("max",p,u);const[f,m]=kc(l,p),g=RE(h,Ye(m),f,r.dtype),y=o.write(g,f,r.dtype);let b=f;if(i){b=Nc(f,c)}return{dataId:y,shape:b,dtype:r.dtype}}const _E={kernelName:pa,backendName:"cpu",kernelFunc:AE},FE=HS(((e,t)=>Math.max(e,t))),DE=dI(da,FE),OE={kernelName:da,backendName:"cpu",kernelFunc:DE};const ME={kernelName:ha,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t;DS(r,"maxPool");const{filterSize:s,strides:i,pad:o,dimRoundingMode:l}=a;qe(ku(i,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const u=du(r.shape,s,i,1,o,l);let c;if(1===u.filterWidth&&1===u.filterHeight&&Qe(u.inShape,u.outShape))c=VS({inputs:{x:r},backend:n});else{const e=n.data.get(r.dataId).values,t=ft(r.shape),a=KI(e,r.shape,r.dtype,t,u,"max");c=n.makeTensorInfo(u.outShape,r.dtype,a.values)}return c}};const LE={kernelName:ma,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:l,dataFormat:u}=a;DS(r,"maxPool3d");const c=hu(r.shape,s,i,1,o,l,u),p=YI(n.data.get(r.dataId).values,r.shape,r.dtype,ft(r.shape),c,"max");return n.makeTensorInfo(p.shape,"float32",p.values)}};const zE={kernelName:ga,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,input:s}=t,{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=a;DS([r,s],"maxPool3DGrad");const c=hu(s.shape,i,o,1,l,u),p=function(e,t){const n=$o(t.outShape,"int32"),a=t.strideDepth,r=t.strideHeight,s=t.strideWidth,i=t.dilationDepth,o=t.dilationHeight,l=t.dilationWidth,u=t.effectiveFilterDepth,c=t.effectiveFilterHeight,p=t.effectiveFilterWidth,d=t.padInfo.front,h=t.padInfo.top,f=t.padInfo.left;for(let m=0;m<t.batchSize;++m)for(let g=0;g<t.inChannels;++g)for(let y=0;y<t.outDepth;++y){const b=y*a-d;let x=b;for(;x<0;)x+=i;const v=Math.min(t.inDepth,u+b);for(let a=0;a<t.outHeight;++a){const u=a*r-h;let d=u;for(;d<0;)d+=o;const w=Math.min(t.inHeight,c+u);for(let r=0;r<t.outWidth;++r){const h=r*s-f;let k=h;for(;k<0;)k+=l;const N=Math.min(t.inWidth,p+h);let S=Number.NEGATIVE_INFINITY,I=-1;for(let t=x;t<v;t+=i){const n=t-b;for(let a=d;a<w;a+=o){const r=a-u;for(let s=k;s<N;s+=l){const i=s-h,o=e.get(m,t,a,s,g);o>=S&&(S=o,I=n*c*p+r*c+i)}}}n.set(I,m,y,a,r,g)}}}return n}(n.bufferSync(s),c),d=c.strideDepth,h=c.strideHeight,f=c.strideWidth,m=c.dilationDepth,g=c.dilationHeight,y=c.dilationWidth,b=c.effectiveFilterDepth,x=c.effectiveFilterHeight,v=c.effectiveFilterWidth,w=b-1-c.padInfo.front,k=v-1-c.padInfo.left,N=x-1-c.padInfo.top,S=$o(s.shape,"float32"),I=n.bufferSync(r);for(let T=0;T<c.batchSize;++T)for(let e=0;e<c.inChannels;++e)for(let t=0;t<c.inDepth;++t)for(let n=0;n<c.inHeight;++n)for(let a=0;a<c.inWidth;++a){const r=t-w,s=n-N,i=a-k;let o=0;for(let t=0;t<b;t+=m){const n=(r+t)/d;if(!(n<0||n>=c.outDepth||Math.floor(n)!==n))for(let a=0;a<x;a+=g){const r=(s+a)/h;if(!(r<0||r>=c.outHeight||Math.floor(r)!==r))for(let s=0;s<v;s+=y){const l=(i+s)/f;if(l<0||l>=c.outWidth||Math.floor(l)!==l)continue;const u=b*x*v-1-p.get(T,n,r,l,e)===t*x*v+a*v+s?1:0;if(0===u)continue;o+=I.get(T,n,r,l,e)*u}}}S.set(o,T,t,n,a,e)}return n.makeTensorInfo(S.shape,S.dtype,S.values)}};const PE={kernelName:fa,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,input:s,output:i}=t,o=s;DS([s,i],"maxPoolGrad");const{filterSize:l,strides:u,pad:c,dimRoundingMode:p}=a,d=du(o.shape,l,u,1,c,p),h=n.data.get(o.dataId).values,f=$o(d.outShape,o.dtype,XI(h,o.shape,o.dtype,d).values),m=d.strideHeight,g=d.strideWidth,y=d.dilationHeight,b=d.dilationWidth,x=d.effectiveFilterHeight,v=d.effectiveFilterWidth,w=v-1-d.padInfo.left,k=x-1-d.padInfo.top,N=$o(o.shape,"float32"),S=n.data.get(r.dataId).values,I=$o(r.shape,"float32",S);for(let T=0;T<d.batchSize;++T)for(let e=0;e<d.inChannels;++e)for(let t=0;t<d.inHeight;++t)for(let n=0;n<d.inWidth;++n){const a=t-k,r=n-w;let s=0;for(let t=0;t<x;t+=y){const n=(a+t)/m;if(!(n<0||n>=d.outHeight||Math.floor(n)!==n))for(let a=0;a<v;a+=b){const i=(r+a)/g;if(i<0||i>=d.outWidth||Math.floor(i)!==i)continue;const o=x*v-1-f.get(T,n,i,e)===t*v+a?1:0;if(0===o)continue;s+=I.get(T,n,i,e)*o}}N.set(s,T,t,n,e)}return n.makeTensorInfo(N.shape,N.dtype,N.values)}};const BE={kernelName:ya,backendName:"cpu",kernelFunc:e=>{let{inputs:t,attrs:n,backend:a}=e;const{x:r}=t,{filterSize:s,strides:i,pad:o,includeBatchInIndex:l}=n,u=a;DS(r,"MaxPoolWithArgmax");const c=u.data.get(r.dataId).values,p=du(r.shape,s,i,[1,1],o),[d,h]=function(e,t,n,a,r){const s=KI(e,0,n,ft(t),r,"max"),i=XI(e,t,n,r,!0,a);return[s.values,i.values]}(c,r.shape,r.dtype,l,p),f=u.write(d,p.outShape,r.dtype),m=u.write(h,p.outShape,r.dtype);return[{dataId:f,shape:p.outShape,dtype:r.dtype},{dataId:m,shape:p.outShape,dtype:"int32"}]}};const WE={kernelName:ba,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,keepDims:i}=a,o=at(s,r.shape),l=Ye(kc(r.shape,o)[1]),u=[],c=n.makeTensorInfo([],"float32",new Float32Array([l]));u.push(c);const p=cI({inputs:{x:r},backend:n,attrs:{dtype:"float32"}});u.push(p);const d=NC({inputs:{a:p,b:c},backend:n});u.push(d);const h=JT({inputs:{x:d},backend:n,attrs:{axis:s,keepDims:i}});return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),h}};const VE={kernelName:xa,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,keepDims:i}=a;DS(r,"min");const o=at(s,r.shape);let l=o;const u=Ic(l,r.shape.length);let c=r;null!=u&&(c=AI({inputs:{x:r},backend:n,attrs:{perm:u}}),l=Cc(l.length,r.shape.length)),Sc("min",l,c.shape.length);const[p,d]=kc(c.shape,l),h=Ye(d),f=bt(Ye(p),c.dtype),m=n.data.get(c.dataId).values;for(let y=0;y<f.length;++y){const e=y*h;let t=m[e];for(let n=0;n<h;++n){const a=m[e+n];(Number.isNaN(a)||a<t)&&(t=a)}f[y]=t}null!=u&&n.disposeIntermediateTensorInfo(c);const g=n.makeTensorInfo(p,c.dtype,f);if(i){const e=bI({inputs:{x:g},backend:n,attrs:{shape:Nc(p,o)}});return n.disposeIntermediateTensorInfo(g),e}return g}},UE=HS(((e,t)=>Math.min(e,t))),jE=dI(va,UE),GE={kernelName:va,backendName:"cpu",kernelFunc:jE};const HE={kernelName:wa,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{paddings:s,mode:i}=a;DS(r,"mirrorPad");const o=s.map(((e,t)=>e[0]+r.shape[t]+e[1])),l=s.map((e=>e[0])),u=s.map(((e,t)=>e[0]+r.shape[t])),c="reflect"===i?0:1,p=n.data.get(r.dataId).values,d=r.shape.length,h=ft(r.shape),f=Ye(o),m=o.length,g=ft(o),y=st(r.dtype,f);for(let b=0;b<f;b++){let e=kt(b,m,g);for(let n=0;n<m;n++)e[n]<l[n]?e[n]=2*l[n]-e[n]-c:e[n]>=u[n]&&(e[n]=2*(u[n]-1)-e[n]+c);e=e.map(((e,t)=>e-l[t]));const t=wt(e,d,h);y[b]=p[t]}return{dataId:n.write(y,o,r.dtype),shape:o,dtype:r.dtype}}},qE=HS(((e,t)=>{const n=e%t;return e<0&&t<0||e>=0&&t>=0?n:(n+t)%t})),KE=dI(ka,qE),XE={kernelName:ka,backendName:"cpu",kernelFunc:KE};function YE(e){const{inputs:t,backend:n,attrs:a}=e,{logits:r}=t,{dim:s}=a,i=r.shape.length;let o=s;if(-1===o&&(o=i-1),o!==i-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${i} and dim was ${o}`);const l=at([o],r.shape),u=AE({inputs:{x:r},backend:n,attrs:{reductionIndices:l,keepDims:!1}}),c=Nc(u.shape,l),p=bI({inputs:{x:u},backend:n,attrs:{shape:c}}),d=CC({inputs:{a:r,b:p},backend:n}),h=mC({inputs:{x:d},backend:n}),f=JT({inputs:{x:h},backend:n,attrs:{axis:l,keepDims:!1}}),m=bI({inputs:{x:f},backend:n,attrs:{shape:c}}),g=NC({inputs:{a:h,b:m},backend:n});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}const QE={kernelName:fr,backendName:"cpu",kernelFunc:YE};const ZE={kernelName:Na,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{logits:r}=t,{numSamples:s,seed:i,normalized:o}=a;DS(r,"multinomial");const l=o?r:YE({inputs:{logits:r},backend:n,attrs:{dim:-1}}),u=l.shape[0],c=l.shape[1],p=n.data.get(l.dataId).values,d=[u,s],h=bt(Ye(d),"int32");for(let f=0;f<u;++f){const e=f*c,t=new Float32Array(c-1);t[0]=p[e];for(let r=1;r<t.length;++r)t[r]=t[r-1]+p[e+r];const n=Vp.alea(i.toString()),a=f*s;for(let r=0;r<s;++r){const e=n();h[a+r]=t.length;for(let n=0;n<t.length;n++)if(e<t[n]){h[a+r]=n;break}}}return o||n.disposeIntermediateTensorInfo(l),n.makeTensorInfo(d,"int32",h)}};function JE(e,t,n){const a=ms(-1,n);return XT([],t,a,e,n)}const e$={kernelName:Ia,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:a}=t;DS(a,"neg");const r=n.data.get(a.dataId).values,[s,i]=JE(r,a.shape,a.dtype);return n.makeTensorInfo(i,a.dtype,s)}},t$=Eh;const n$={kernelName:Ca,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{boxes:r,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l}=a;DS(r,"NonMaxSuppression");const u=n.data.get(r.dataId).values,c=n.data.get(s.dataId).values,{selectedIndices:p}=t$(u,c,i,o,l);return n.makeTensorInfo([p.length],"int32",new Int32Array(p))}},a$=$h;const r$={kernelName:Ea,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{boxes:r,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,padToMaxOutputSize:u}=a;DS(r,"NonMaxSuppressionPadded");const c=n.data.get(r.dataId).values,p=n.data.get(s.dataId).values,{selectedIndices:d,validOutputs:h}=a$(c,p,i,o,l,u);return[n.makeTensorInfo([d.length],"int32",new Int32Array(d)),n.makeTensorInfo([],"int32",new Int32Array([h]))]}},s$=Rh;const i$={kernelName:$a,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{boxes:r,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,softNmsSigma:u}=a;DS(r,"NonMaxSuppressionWithScore");const c=n.data.get(r.dataId).values,p=n.data.get(s.dataId).values,d=i,h=o,f=l,m=u,{selectedIndices:g,selectedScores:y}=s$(c,p,d,h,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}},o$=HS(((e,t)=>e!==t?1:0)),l$=dI(Ta,o$,null,"bool"),u$={kernelName:Ta,backendName:"cpu",kernelFunc:l$};const c$={kernelName:Aa,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{indices:r}=t,{dtype:s,depth:i,onValue:o,offValue:l}=a;DS(r,"oneHot");const u=Ye(r.shape),c=new Float32Array(u*i);c.fill(l);const p=n.data.get(r.dataId).values;for(let d=0;d<u;++d)p[d]>=0&&p[d]<i&&(c[d*i+p[d]]=o);return n.makeTensorInfo([...r.shape,i],s,c)}};function p$(e){const{inputs:t,backend:n}=e,{x:a}=t;if("string"===a.dtype)throw new Error("zerosLike is not supported for string tensors");if("complex64"===a.dtype){const e=oI({inputs:{input:a},backend:n}),t=p$({inputs:{x:e},backend:n}),r=vT({inputs:{input:a},backend:n}),s=p$({inputs:{x:r},backend:n}),i=rI({inputs:{real:t,imag:s},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(s),i}return FC({backend:n,attrs:{shape:a.shape,value:0,dtype:a.dtype}})}const d$={kernelName:Lr,backendName:"cpu",kernelFunc:p$};const h$={kernelName:Ra,backendName:"cpu",kernelFunc:function e(t){const{inputs:n,backend:a}=t,{x:r}=n;if("string"===r.dtype)throw new Error("onesLike is not supported for string tensors");if("complex64"===r.dtype){const t=oI({inputs:{input:r},backend:a}),n=e({inputs:{x:t},backend:a}),s=vT({inputs:{input:r},backend:a}),i=p$({inputs:{x:s},backend:a}),o=rI({inputs:{real:n,imag:i},backend:a});return a.disposeIntermediateTensorInfo(t),a.disposeIntermediateTensorInfo(n),a.disposeIntermediateTensorInfo(s),a.disposeIntermediateTensorInfo(i),o}return FC({backend:a,attrs:{shape:r.shape,value:1,dtype:r.dtype}})}};function f$(e){const{inputs:t,backend:n,attrs:a}=e,{axis:r}=a;if(1===t.length)return yC({inputs:{input:t[0]},backend:n,attrs:{dim:r}});const s=t[0].shape,i=t[0].dtype;t.forEach((e=>{Ke(s,e.shape,"All tensors passed to stack must have matching shapes"),qe(i===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const o=[],l=kT({inputs:t.map((e=>{const t=yC({inputs:{input:e},backend:n,attrs:{dim:r}});return o.push(t),t})),backend:n,attrs:{axis:r}});return o.forEach((e=>n.disposeIntermediateTensorInfo(e))),l}const m$={kernelName:_a,backendName:"cpu",kernelFunc:f$};const g$={kernelName:Fa,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{paddings:s,constantValue:i}=a;DS(r,"pad");const o=s.map(((e,t)=>e[0]+r.shape[t]+e[1])),l=s.map((e=>e[0])),u=n.data.get(r.dataId).values,c=Ye(r.shape),p=r.shape.length,d=ft(r.shape),h=Ye(o),f=o.length,m=ft(o),g=st(r.dtype,h);0!==i&&g.fill(i);for(let y=0;y<c;y++){g[wt(kt(y,p,d).map(((e,t)=>e+l[t])),f,m)]=u[y]}return{dataId:n.write(g,o,r.dtype),shape:o,dtype:r.dtype}}},y$=HS(((e,t)=>Math.pow(e,t))),b$=dI(Da,y$),x$={kernelName:Da,backendName:"cpu",kernelFunc:b$};function v$(e,t,n,a){const[r,s]=kc(e,a),i=Us(t,"int32"),o=bt(Ye(r),i),l=Ye(s);for(let u=0;u<o.length;++u){const e=u*l;let t=1;for(let a=0;a<l;++a)t*=n[e+a];o[u]=t}return{outVals:o,outShape:r,outDtype:i}}const w$={kernelName:Ma,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,keepDims:i}=a;DS(r,"prod");const o=r.shape.length,l=at(s,r.shape),u=Ic(l,o);let c=l,p=r;const d=[];null!=u&&(p=AI({inputs:{x:r},backend:n,attrs:{perm:u}}),d.push(p),c=Cc(c.length,o));const h=n.data.get(p.dataId).values,{outVals:f,outShape:m,outDtype:g}=v$(p.shape,p.dtype,h,c);let y=m;return i&&(y=Nc(m,l)),d.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(y,g,f)}};function k$(e,t,n,a){const r=[];let s=0;const i=t.length-1+n.length,o=new Array(i).fill(null).map((()=>[0]));!function(e,t){for(let n=0;n<e.length;++n){const a=e[n],r=n===e.length-1?t:e[n+1].length;if(0===a.length)throw new Error("Ragged splits may not be empty");if(a[0]<0)throw new Error("Ragged splits must be non-negative");if(a[a.length-1]>r)throw new Error("Ragged splits must not point past values");for(let e=1;e<a.length;++e)if(a[e-1]>a[e])throw new Error("Ragged splits must be sorted in ascending order")}}(n,a);let l=1;for(let u=0;u<t.length-1;++u){l*=t[u];const e=t[u+1];for(let t=1;t<l+1;++t)o[u].push(t*e)}for(let u=0;u<e.length;++u){let a=e[u],i=e[u]+1;for(let e=0;e<n.length;++e){const r=n[e],s=e+t.length-1;if(s>=0){const e=o[s],t=e[e.length-1]-r[a];for(let n=a;n<i;++n)o[s].push(r[n+1]+t)}a=r[a],i=r[i]}i!==a&&(r.push([a,i]),s+=i-a)}return{outSplits:o,valueSlices:r,numValues:s}}function N$(e,t){const n=e.slice(0,t);for(;n.length<t;)n.push(1);for(let a=t;a<e.length;a++)n[t-1]*=e[a];return n}function S$(e,t,n,a,r){const s=t.slice();s[0]=r;const i=it(n,Ye(s)),o=e.length;return function(e,t,n,a,r,s){const i=N$(t,2)[1],o=N$(s,2)[1];let l=0;for(const u of n)for(let t=u[0];t<u[1];++t){for(let n=0;n<a;++n)r[l*o+n]=e[t*i+n];++l}}(e,t,a,0===o?0:o/t[0],i,s),[i,s]}function I$(e,t,n,a,r,s,i,o){if(0===e.length)throw new Error("paramsNestedSplits must be non empty");if(0===t[0].length)throw new Error("Split tensors must not be scalars");if(function(e,t,n){e.forEach(((e,a)=>{if(e<0||e>=n){const r=kt(a,t.length,ft(t)).join(",");throw new Error(`indices[${r}] = ${e} is not in [0, ${n})`)}}))}(s,i,t[0][0]-1),0===a.length)throw new Error("params.rank must be nonzero");const l=a[0],{outSplits:u,valueSlices:c,numValues:p}=k$(s,i,e,l),d=function(e){const t=[];for(let n=0;n<e.length;++n){const a=it("int32",e[n].length);t.push(a),e[n].forEach(((e,t)=>a[t]=e))}return t}(u),h=S$(n,a,r,c,p);return[d,h[0],h[1]]}const T$={kernelName:La,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{paramsNestedSplits:r,paramsDenseValues:s,indices:i}=t,{outputRaggedRank:o}=a,l=r.map((e=>n.data.get(e.dataId).values)),u=r.map((e=>e.shape)),c=n.data.get(s.dataId).values,p=n.data.get(i.dataId).values,[d,h,f]=I$(l,u,c,s.shape,s.dtype,p,i.shape),m=d.map((e=>n.makeTensorInfo([e.length],"int32",e))),g=n.makeTensorInfo(f,s.dtype,h);return m.concat([g])}},C$=2147483647;function E$(e,t,n,a,r,s,i){if(t.length>1)throw new Error("starts must be a scalar or vector");if(r.length>1)throw new Error("limits must be a scalar or vector");if(i.length>1)throw new Error("deltas must be a scalar or vector");const o=0===t.length,l=0===r.length,u=0===i.length,c=[];o||c.push(t[0]),l||c.push(r[0]),u||c.push(i[0]);for(let m=1;m<c.length;++m)if(c[m]!==c[m-1])throw new Error("starts, limits, and deltas must have the same shape");const p=0===c.length?1:c[0],d=it("int32",p+1);d[0]=0;for(let m=0;m<p;++m){const t=o?e[0]:e[m],n=l?a[0]:a[m],r=u?s[0]:s[m];if(0===r)throw new Error("Requires delta != 0");let i;if(r>0&&n<t||r<0&&n>t)i=0;else if(i=Math.ceil(Math.abs((n-t)/r)),i>C$)throw new Error(`Requires ((limit - start) / delta) <= ${C$}`);d[m+1]=d[m]+i}const h=it(n,d[p]);let f=0;for(let m=0;m<p;++m){const t=d[m+1]-d[m];let n=o?e[0]:e[m];const a=u?s[0]:s[m];for(let e=0;e<t;++e)h[f++]=n,n+=a}return[d,h]}const $$={kernelName:za,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{starts:a,limits:r,deltas:s}=t,i=n.data.get(a.dataId).values,o=n.data.get(r.dataId).values,l=n.data.get(s.dataId).values,[u,c]=E$(i,a.shape,a.dtype,o,r.shape,l,s.shape);return[n.makeTensorInfo([u.length],"int32",u),n.makeTensorInfo([c.length],a.dtype,c)]}};var R$=If;class A${constructor(e,t,n,a,r,s,i,o,l,u){this.shape=e,this.shapeShape=t,this.values=n,this.valuesShape=a,this.valuesDType=r,this.defaultValue=s,this.defaultValueShape=i,this.rowPartitionValues=o,this.rowPartitionValuesShapes=l,this.rowPartitionTypes=Cf(u),this.raggedRank=Ef(this.rowPartitionTypes)}getRowPartitionTypeByDimension(e){return this.rowPartitionTypes[0]===R$.FIRST_DIM_SIZE?this.rowPartitionTypes[e+1]:this.rowPartitionTypes[e]}getRowPartitionTensor(e){return this.rowPartitionTypes[0]===R$.FIRST_DIM_SIZE?this.rowPartitionValues[e+1]:this.rowPartitionValues[e]}getMaxWidth(e){const t=this.getRowPartitionTensor(e-1);switch(this.getRowPartitionTypeByDimension(e-1)){case R$.VALUE_ROWIDS:return A$.getMaxWidthValueRowID(t);case R$.ROW_SPLITS:return A$.getMaxWidthRowSplit(t);default:throw new Error(`Cannot handle partition type ${R$[this.getRowPartitionTypeByDimension(e-1)]}`)}}static getMaxWidthRowSplit(e){const t=e.length;if(0===t||1===t)return 0;let n=0;for(let a=0;a<t-1;++a){const t=e[a+1]-e[a];t>n&&(n=t)}return n}static getMaxWidthValueRowID(e){const t=e.length;if(0===t)return 0;let n=0,a=e[0],r=0;for(let s=1;s<t;++s){const t=e[s];t!==a&&(a=t,r=Math.max(s-n,r),n=s)}return Math.max(t-n,r)}tensorShapeFromTensor(e,t){let n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];if(0===t.length){if(-1===e[0])return[];throw new Error("The only valid scalar shape tensor is the fully unknown shape specified as -1.")}return F$(e,n)}calculateOutputSize(e){const t=this.valuesShape;$f(this.defaultValueShape,t);const n=this.tensorShapeFromTensor(this.shape,this.shapeShape),a=Tf(this.raggedRank,n,t);a[0]<0&&(a[0]=e);for(let r=1;r<=this.raggedRank;++r)a[r]<0&&(a[r]=this.getMaxWidth(r));return a}calculateFirstParentOutputIndex(e,t,n){const a=Math.min(e,n),r=[];let s=0;for(let i=0;i<a;++i,s+=t)r.push(s);for(let i=a;i<e;++i)r.push(-1);return qe(r.length===e,(()=>"Final length of result must be equal to firstDimension.")),r}calculateOutputIndexRowSplit(e,t,n,a){const r=e.length,s=[];for(let i=0;i<r-1;++i){const r=e[i+1]-e[i];let o=Math.min(a,r),l=t[i];-1===l&&(o=0);for(let e=0;e<o;++e)s.push(l),l+=n;for(let e=0;e<r-o;++e)s.push(-1)}if(r>0&&s.length!==e[r-1])throw new Error("Invalid row split size.");return s}calculateOutputIndexValueRowID(e,t,n,a){const r=e.length,s=[];if(0===r)return[];let i=0,o=e[0];if(o>=t.length)throw new Error(`Got currentValueRowId=${o}, which is not less than ${t.length}`);let l=t[o];s.push(l);for(let u=1;u<r;++u){const r=e[u];if(r===o)l>=0&&(++i,i<a?l+=n:l=-1);else{if(i=0,o=r,r>=t.length)throw new Error(`Got nextValueRowId=${r} which is not less than ${t.length}`);l=t[r]}s.push(l)}if(s.length!==e.length)throw new Error("Invalid row ids.");return s}calculateOutputIndex(e,t,n,a){const r=this.getRowPartitionTensor(e),s=this.getRowPartitionTypeByDimension(e);switch(s){case R$.VALUE_ROWIDS:return this.calculateOutputIndexValueRowID(r,t,n,a);case R$.ROW_SPLITS:if(r.length-1>t.length)throw new Error(`Row partition size is greater than output size: ${r.length-1} > ${t.length}`);return this.calculateOutputIndexRowSplit(r,t,n,a);default:throw new Error(`Unsupported partition type: ${R$[s]}`)}}getFirstDimensionSize(){const e=this.rowPartitionValues[0];if(0===this.rowPartitionTypes.length)throw new Error("No row_partition_types given.");const t=this.rowPartitionTypes[0];switch(t){case R$.FIRST_DIM_SIZE:return e[0];case R$.VALUE_ROWIDS:throw new Error("Cannot handle VALUE_ROWIDS in first dimension.");case R$.ROW_SPLITS:return this.rowPartitionValuesShapes[0][0]-1;default:throw new Error(`Cannot handle type ${R$[t]}`)}}compute(){if(this.rowPartitionValues[0].length<=0)throw new Error("Invalid first partition input. Tensor requires at least one element.");const e=this.getFirstDimensionSize(),t=this.calculateOutputSize(e),n=new Array(this.raggedRank+1);n[n.length-1]=1;for(let s=n.length-2;s>=0;--s)n[s]=n[s+1]*t[s+1];const a=F$(t,!1),r=it(this.valuesDType,Ye(a));if(n[0]*t[0]>0){let s=this.calculateFirstParentOutputIndex(e,n[0],t[0]);for(let e=1;e<=this.raggedRank;++e){s=this.calculateOutputIndex(e-1,s,n[e],t[e])}this.setOutput(this.raggedRank,s,r,a)}return[a,r]}setOutput(e,t,n,a){if(0===n.length)return;const r=this.values,s=n;let i=a.slice();i=i.slice(e+1);const o=Ye(i),l=t.length;let u=this.defaultValue;if(u.length!==o&&1!==u.length){const e=this.defaultValueShape;wi((()=>{const t=Tu(u,e),n=Uu(t,i);u=n.dataSync()}))}let c=0,p=0,d=0;for(let h=0;h<=l;++h){let e=h<l?t[h]:-1;if(e!==d){if(p<d){const e=r.subarray(c*o);_$(s.subarray(p*o),e,(d-p)*o)}if(h>=l){const t=n.length;e=Math.floor(t/o)}if(e>d)if(1===this.defaultValue.length)s.subarray(d*o,e*o).fill(this.defaultValue[0]),d=e;else for(;e>d;){_$(s.slice(d*o),u,o),++d}e<0?(c=h+1,p=d):(c=h,p=d,d=p+1)}else++d}}}function _$(e,t,n){for(let a=0;a<n;a++)e[a]=t[a]}function F$(e,t){const n=[];for(let a of e){if(a<0){if(!t)throw new Error(`Dimension ${a} must be >= 0`);if(a<-1)throw new Error(`Dimension ${a} must be >= -1`);a=-1}n.push(a)}return n}function D$(e,t,n,a,r,s,i,o,l,u){return new A$(e,t,n,a,r,s,i,o,l,u).compute()}const O$={kernelName:Pa,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{shape:r,values:s,defaultValue:i,rowPartitionTensors:o}=t,{rowPartitionTypes:l}=a,u=n.data.get(r.dataId).values,c=n.data.get(s.dataId).values,p=n.data.get(i.dataId).values,d=o.map((e=>n.data.get(e.dataId).values)),h=o.map((e=>e.shape)),[f,m]=D$(u,r.shape,c,s.shape,s.dtype,p,i.shape,d,h,l);return n.makeTensorInfo(f,s.dtype,m)}};function M$(e,t,n,a){if(e===t||e<t&&n<0||t<e&&n>1)return bt(0,a);const r=bt(Math.abs(Math.ceil((t-e)/n)),a);t<e&&1===n&&(n=-1),r[0]=e;for(let s=1;s<r.length;s++)r[s]=r[s-1]+n;return r}const L$={kernelName:Ba,backendName:"cpu",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:a,stop:r,dtype:s,step:i}=n,o=M$(a,r,i,s);return t.makeTensorInfo([o.length],s,o)}},z$=zS(Va,(e=>1/e)),P$={kernelName:Va,backendName:"cpu",kernelFunc:z$};const B$={kernelName:qa,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{images:r}=t,{alignCorners:s,halfPixelCenters:i,size:o}=a;DS(r,"resizeBilinear");const l=ft(r.shape),[u,c]=o,[p,d,h,f]=r.shape,m=n.data.get(r.dataId).values,g=new Float32Array(Ye([p,u,c,f])),y=[s&&u>1?d-1:d,s&&c>1?h-1:h],b=[s&&u>1?u-1:u,s&&c>1?c-1:c];let x=0;const v=y[0]/b[0],w=y[1]/b[1];for(let k=0;k<p;k++)for(let e=0;e<u;e++){let t;t=i?v*(e+.5)-.5:v*e;const n=Math.max(0,Math.floor(t)),a=t-n,r=Math.min(d-1,Math.ceil(t)),s=k*l[0]+n*l[1],o=k*l[0]+r*l[1];for(let e=0;e<c;e++){let t;t=i?w*(e+.5)-.5:w*e;const n=Math.max(0,Math.floor(t)),r=t-n,u=Math.min(h-1,Math.ceil(t)),c=s+n*l[2],p=o+n*l[2],d=s+u*l[2],y=o+u*l[2];for(let e=0;e<f;e++){const t=m[c+e],n=m[p+e],s=t+(m[d+e]-t)*r,i=s+(n+(m[y+e]-n)*r-s)*a;g[x++]=i}}}return n.makeTensorInfo([p,u,c,f],"float32",g)}};const W$={kernelName:Ka,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{images:r,dy:s}=t,{alignCorners:i}=a;DS([s,r],"resizeBilinearGrad");const o=ft(r.shape),[l,u,c,p]=r.shape,[,d,h]=s.shape,f=new Float32Array(l*u*c*p),m=[i&&d>1?u-1:u,i&&h>1?c-1:c],g=[i&&d>1?d-1:d,i&&h>1?h-1:h],y=m[0]/g[0],b=m[1]/g[1],x=n.data.get(s.dataId).values;let v=0;for(let w=0;w<l;w++){const e=w*o[0];for(let t=0;t<d;t++){const n=t*y,a=Math.floor(n),r=Math.min(Math.ceil(n),u-1),s=e+a*o[1],i=e+r*o[1],l=n-a,d=1-l;for(let e=0;e<h;e++){const t=e*b,n=Math.floor(t),a=Math.min(Math.ceil(t),c-1),r=t-n,u=1-r,h=s+n*o[2],m=s+a*o[2],g=i+n*o[2],y=i+a*o[2],w=d*u,k=d*r,N=l*u,S=l*r;for(let e=0;e<p;e++){const t=x[v++];f[h+e]+=t*w,f[m+e]+=t*k,f[g+e]+=t*N,f[y+e]+=t*S}}}}return n.makeTensorInfo([l,c,u,p],"float32",f)}};const V$={kernelName:Ga,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{images:r}=t,{alignCorners:s,halfPixelCenters:i,size:o}=a;DS(r,"resizeNearestNeighbor");const l=ft(r.shape),[u,c]=o,[p,d,h,f]=r.shape,m=n.data.get(r.dataId).values,g=new Float32Array(p*u*c*f),y=[s&&u>1?d-1:d,s&&c>1?h-1:h],b=[s&&u>1?u-1:u,s&&c>1?c-1:c],x=y[0]/b[0],v=y[1]/b[1];let w=0;for(let k=0;k<p;k++){const e=k*l[0];for(let t=0;t<u;t++){const n=i?x*(t+.5):x*t;let a=Math.min(d-1,s?Math.round(n):Math.floor(n));i&&(a=Math.max(0,a));const r=e+a*l[1];for(let e=0;e<c;e++){const t=i?v*(e+.5):v*e;let n=Math.min(h-1,s?Math.round(t):Math.floor(t));i&&(n=Math.max(0,n));const a=r+n*l[2];for(let e=0;e<f;e++){const t=m[a+e];g[w++]=t}}}}return n.makeTensorInfo([p,u,c,f],r.dtype,g)}};const U$={kernelName:Ha,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{images:r,dy:s}=t,{alignCorners:i}=a;DS([s,r],"resizeNearestNeighborGrad");const o=ft(r.shape),l=ft(s.shape),[u,c,p,d]=r.shape,[,h,f]=s.shape,m=new Float32Array(u*c*p*d),g=n.data.get(s.dataId).values,y=[i&&h>1?c-1:c,i&&f>1?p-1:p],b=[i&&h>1?h-1:h,i&&f>1?f-1:f],x=y[0]/b[0],v=y[1]/b[1],w=1/x,k=1/v,N=2*Math.ceil(w)+2,S=2*Math.ceil(k)+2;for(let I=0;I<u;I++){const e=I*o[0];for(let t=0;t<c;t++){const n=e+t*o[1],a=Math.floor(t*w),r=Math.floor(a-N/2);for(let s=0;s<p;s++){const a=n+s*o[2],u=Math.floor(s*k),y=Math.floor(u-S/2);for(let n=0;n<d;n++){let o=0;for(let a=0;a<N;a++){const u=a+r;if(u<0||u>=h)continue;const d=e+u*l[1],m=u*x;if(t===Math.min(c-1,i?Math.round(m):Math.floor(m)))for(let e=0;e<S;e++){const t=e+y;if(t<0||t>=f)continue;const a=d+t*l[2],r=t*v;s===Math.min(p-1,i?Math.round(r):Math.floor(r))&&(o+=g[a+n])}}m[a+n]=o}}}}return n.makeTensorInfo(r.shape,r.dtype,m)}};const j$={kernelName:Ya,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{dims:s}=a;DS(r,"reverse");const i=r.shape.length,o=at(s,r.shape);if(0===i)return VS({inputs:{x:r},backend:n});const l=new Rs(r.shape,r.dtype),u=n.bufferSync(r);for(let c=0;c<l.size;c++){const e=l.indexToLoc(c),t=e.slice();o.forEach((e=>t[e]=r.shape[e]-1-t[e])),l.set(u.get(...t),...e)}return n.makeTensorInfo(l.shape,l.dtype,l.values)}},G$={kernelName:Br,backendName:"cpu",kernelFunc:e=>{let{inputs:t,attrs:n,backend:a}=e;const{image:r}=t,{radians:s,fillValue:i,center:o}=n,l=a,u=st(r.dtype,Ye(r.shape)),[c,p,d,h]=r.shape,[f,m]=_f(o,p,d),g=Math.sin(s),y=Math.cos(s),b=l.data.get(r.dataId).values;for(let x=0;x<c;x++){const e=x*d*p*h;for(let t=0;t<p;t++){const n=t*(d*h);for(let a=0;a<d;a++){const r=a*h;for(let s=0;s<h;s++){const o=[c,t,a,s],l=o[2],x=o[1];let v=(l-f)*y-(x-m)*g,w=(l-f)*g+(x-m)*y;v=Math.round(v+f),w=Math.round(w+m);let k=i;if("number"!==typeof i&&(k=3===s?255:i[s]),v>=0&&v<d&&w>=0&&w<p){k=b[e+w*(d*h)+v*h+s]}u[e+n+r+s]=k}}}}return{dataId:l.write(u,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},H$=zS(Qa,(e=>{const t=Math.floor(e);return e-t<.5?Math.floor(e):e-t>.5?Math.ceil(e):t%2===0?t:t+1})),q$={kernelName:Qa,backendName:"cpu",kernelFunc:H$},K$=LS((e=>1/Math.sqrt(e))),X$=PS(Za,K$),Y$={kernelName:Za,backendName:"cpu",kernelFunc:X$};function Q$(e,t,n,a,r,s,i,o,l,u){const c=[a/r,r],p=e.values,d=t.values;if(0===a)return $o(n,t.dtype);const h=l instanceof Rs?l:$o(c,t.dtype);"string"===typeof l||"number"===typeof l?h.values.fill(l):"boolean"===typeof l&&h.values.fill(+l);for(let f=0;f<s;f++){const e=[];let s=0;for(let t=0;t<i;t++){const n=p[f*i+t];e.push(n),s+=n*o[t]}if(s<0||s>=a/r)throw new Error(`Invalid indices: ${e} does not index into ${n}`);for(let n=0;n<r;n++)u?h.values[s*r+n]+=d[f*r+n]:h.values[s*r+n]=0===t.rank?d[0]:d[f*r+n]}return h}const Z$={kernelName:Ja,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{indices:r,updates:s}=t,{shape:i}=a,{sliceRank:o,numUpdates:l,sliceSize:u,strides:c,outputSize:p}=zd(0,r,i),d=Q$(n.bufferSync(r),n.bufferSync(s),i,p,u,l,o,c,0,!0);return n.makeTensorInfo(i,d.dtype,d.values)}};function J$(e,t){let n=0,a=e.length,r=0;for(;n<a;)r=Math.floor((n+a)/2),e[r]<t?n=r+1:a=r;return a}function eR(e,t){let n=0,a=e.length,r=0;for(;n<a;)r=Math.floor((n+a)/2),e[r]<=t?n=r+1:a=r;return a}const tR={kernelName:tr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{sortedSequence:r,values:s}=t,{side:i}=a,o=function(e,t,n,a,r,s){const i=it("int32",n*r);for(let o=0;o<n;++o){const n=e.slice(o*a,(o+1)*a),l=o*r;for(let e=0;e<r;++e)i[l+e]="left"===s?J$(n,t[e+l]):eR(n,t[e+l])}return i}(n.data.get(r.dataId).values,n.data.get(s.dataId).values,r.shape[0],r.shape[1],s.shape[1],i);return n.makeTensorInfo(s.shape,"int32",o)}};const nR={kernelName:nr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:a,t:r,e:s}=t;DS([a,r,s],"select");const i=a.shape.length,o=n.data.get(a.dataId).values,l=n.data.get(r.dataId).values,u=n.data.get(s.dataId).values,c=Us(r.dtype,s.dtype),p=bt(Ye(r.shape),c);let d=0;const h=0===i||i>1||1===r.shape.length?1:Ye(r.shape.slice(1));for(let f=0;f<o.length;f++)for(let e=0;e<h;e++)1===o[f]?p[d++]=l[f]:p[d++]=u[f];return n.makeTensorInfo(r.shape,c,p)}},aR=Pf,rR=Bf,sR=zS(ar,(e=>e>=0?rR*e:aR*(Math.exp(e)-1))),iR={kernelName:ar,backendName:"cpu",kernelFunc:sR},oR=zS(or,(e=>e<0?-1:e>0?1:0)),lR={kernelName:or,backendName:"cpu",kernelFunc:oR},uR=zS(sr,(e=>Math.sin(e))),cR={kernelName:sr,backendName:"cpu",kernelFunc:uR},pR=zS(ir,(e=>Math.sinh(e))),dR={kernelName:ir,backendName:"cpu",kernelFunc:pR},hR=Math.log(1.1920928955078125e-7)+2,fR=zS(ur,(e=>{const t=e>-hR,n=e<hR,a=Math.exp(e);let r;return r=n?a:t?e:Math.log(1+a),r})),mR={kernelName:ur,backendName:"cpu",kernelFunc:fR};const gR={kernelName:dr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{blockShape:s,paddings:i}=a;DS([r],"spaceToBatchND");const o=Ye(s),l=[[0,0]];l.push(...i);for(let g=1+s.length;g<r.shape.length;++g)l.push([0,0]);const u=g$.kernelFunc({inputs:{x:r},backend:n,attrs:{paddings:l,constantValue:0}}),c=Ff(u.shape,s,o,!1),p=Df(c.length,s.length,!1),d=Of(u.shape,s,o,!1),h=bI({inputs:{x:u},backend:n,attrs:{shape:c}}),f=AI({inputs:{x:h},backend:n,attrs:{perm:p}}),m=bI({inputs:{x:f},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(f),m}};function yR(e,t,n,a,r,s,i){const o=t[0],l=s[0],u=new Array(l),c=new Array(o),p=t[1];if(0===l){if(0!==o)throw new Error(dm(o));return[it(n,0),[0,p],it(r,0),u,c]}let d=!0,h=0;const f=new Array(l).fill(0);for(let g=0;g<o;++g){const t=e[g*p];if(t<0)throw new Error(hm(g,t));if(t>=l)throw new Error(fm(g,t,l));++f[t],d=d&&t>=h,h=t}let m=!0;for(let g=0;g<l;++g){const e=0===f[g];u[g]=e,m=m&&!e,f[g]=Math.max(f[g],1),g>0&&(f[g]+=f[g-1])}if(m&&d){const t=e,n=a;for(let e=0;e<o;++e)c[e]=e;return[t,[o,p],n,u,c]}{const t=f[l-1],s=it(n,t*p),d=it(r,t),h=new Array(l).fill(0);for(let n=0;n<o;++n){const t=e[n*p],r=h[t],i=(0===t?0:f[t-1])+r;h[t]++;for(let a=0;a<p;++a)s[i*p+a]=e[n*p+a];d[i]=a[n],c[n]=i}for(let e=0;e<l;++e){if(0===h[e]){const t=0===e?0:f[e-1];s[t*p+0]=e;for(let e=1;e<p;++e)s[t*p+e]=0;d[t]=i}}return[s,[t,p],d,u,c]}}const bR={kernelName:mr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{indices:a,values:r,denseShape:s,defaultValue:i}=t;if(1!==s.shape.length)throw new Error(`Dense shape must be a vector, saw:\n        ${s.shape}`);if(2!==a.shape.length)throw new Error(`Indices must be a matrix, saw:\n        ${a.shape}`);if(1!==r.shape.length)throw new Error(`Values must be a vector, saw:\n        ${r.shape}`);if(0!==i.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${i.shape}`);const o=n.data.get(a.dataId).values,l=n.data.get(r.dataId).values,u=n.data.get(s.dataId).values,c=n.data.get(i.dataId).values[0],[p,d,h,f,m]=yR(o,a.shape,a.dtype,l,r.dtype,u,c);return[n.makeTensorInfo(d,a.dtype,p),n.makeTensorInfo([d[0]],r.dtype,h),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map((e=>Number(e))))),n.makeTensorInfo([m.length],a.dtype,new Int32Array(m))]}};function xR(e,t,n,a,r){const s=Ye(a),i=t[0],o=r.length,l=[];let u=1,c=-1;for(let m=0;m<o;++m){const e=r[m];if(-1===e){if(-1!==c)throw new Error(mm(c,m));c=m,l.push(1)}else{if(e<0)throw new Error(gm(m,e));u*=e,l.push(e)}}if(-1!==c){if(u<=0)throw new Error("reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero");const e=Math.trunc(s/u);if(u*e!==s)throw new Error(bm(a,l));l[c]=e}if(Ye(l)!==s)throw new Error(xm(a,l));const p=a.length,d=[];if(p>0){d[p-1]=1;for(let e=p-2;e>=0;--e)d[e]=d[e+1]*a[e+1]}const h=[];if(o>0){h[o-1]=1;for(let e=o-2;e>=0;--e)h[e]=h[e+1]*l[e+1]}const f=it(n,i*o);for(let m=0;m<i;++m){let t=0;for(let n=0;n<p;++n)t+=e[m*p+n]*d[n];for(let e=0;e<o;++e)f[m*o+e]=Math.trunc(t/h[e]),t%=h[e]}return[f,[i,o],l]}const vR={kernelName:gr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{inputIndices:a,inputShape:r,newShape:s}=t;if(2!==a.shape.length)throw new Error(`Input indices should be a matrix but received shape\n        ${a.shape}`);if(1!==r.shape.length)throw new Error(`Input shape should be a vector but received shape\n        ${r.shape}`);if(1!==s.shape.length)throw new Error(`Target shape should be a vector but received shape ${s.shape}`);const i=Array.from(n.data.get(r.dataId).values),o=n.data.get(a.dataId).values,l=Array.from(n.data.get(s.dataId).values),[u,c,p]=xR(o,a.shape,a.dtype,i,l);return[n.makeTensorInfo(c,a.dtype,u),n.makeTensorInfo([p.length],s.dtype,new Int32Array(p))]}};function wR(e,t,n,a,r){let s=arguments.length>5&&void 0!==arguments[5]&&arguments[5],i=arguments.length>6&&void 0!==arguments[6]?arguments[6]:0;const o=a.length,l=[t[0],e.length/t[0]],u=l[1],c=o>0?r[o-1]+1:0;if(c<0)throw new Error("segment ids must be >= 0");const p=t.slice();p[0]=c;const d=it(n,p.reduce(((e,t)=>e*t),1));if(0===o)return c>0&&d.fill(i),[d,p];if(c<=0)throw new Error("segment ids must be >= 0");let h=0,f=1,m=0,g=r[h];for(;;){let t=0;if(f<o){if(t=r[f],g===t){++f;continue}if(g>=t)throw new Error("segment ids are not increasing")}if(g<0||g>=c)throw new Error(km(g,c));g>m&&d.fill(i,m*u,g*u);for(let n=h;n<f;++n){const t=a[n];if(t<0||t>=l[0])throw new Error(Nm(n,a[n],l[0]));for(let n=0;n<u;n++)d[g*u+n]+=e[t*u+n]}if(s)for(let e=0;e<u;e++)d[g*u+e]/=f-h;if(h=f,++f,m=g+1,g=t,f>o)break}return m<c&&d.fill(i,m*u,c*u),[d,p]}const kR={kernelName:yr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:a,indices:r,segmentIds:s}=t;if(a.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.shape.length)throw new Error(`Indices should be a vector but received shape\n          ${r.shape}`);if(1!==s.shape.length)throw new Error(`Segment ids should be a vector but received shape\n          ${s.shape}`);if(r.shape[0]!==s.shape[0])throw new Error("segmentIds and indices should have same size.");const i=n.data.get(a.dataId).values,o=n.data.get(r.dataId).values,l=n.data.get(s.dataId).values,[u,c]=wR(i,a.shape,a.dtype,o,l,!0);return n.makeTensorInfo(c,a.dtype,u)}};const NR={kernelName:br,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:a,indices:r,segmentIds:s}=t;if(a.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.shape.length)throw new Error(`Indices should be a vector but received shape\n         ${r.shape}`);if(1!==s.shape.length)throw new Error(`Segment ids should be a vector but received shape\n         ${s.shape}`);if(r.shape[0]!==s.shape[0])throw new Error("segmentIds and indices should have same size.");const i=n.data.get(a.dataId).values,o=n.data.get(r.dataId).values,l=n.data.get(s.dataId).values,[u,c]=wR(i,a.shape,a.dtype,o,l);return n.makeTensorInfo(c,a.dtype,u)}};const SR={kernelName:xr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{sparseIndices:r,sparseValues:s,defaultValue:i}=t,{outputShape:o}=a,{sliceRank:l,numUpdates:u,sliceSize:c,strides:p,outputSize:d}=zd(0,r,o),h=!1,f=n.bufferSync(r);let m;switch(s.dtype){case"bool":m=Q$(f,n.bufferSync(s),o,d,c,u,l,p,Boolean(n.data.get(i.dataId).values[0]),h);break;case"float32":m=Q$(f,n.bufferSync(s),o,d,c,u,l,p,n.data.get(i.dataId).values[0],h);break;case"int32":m=Q$(f,n.bufferSync(s),o,d,c,u,l,p,n.data.get(i.dataId).values[0],h);break;case"string":m=Q$(f,n.bufferSync(s),o,d,c,u,l,p,xs(n.data.get(i.dataId).values[0]),h);break;default:throw new Error(`Unsupported type ${s.dtype}`)}return n.makeTensorInfo(o,m.dtype,m.values)}};const IR={kernelName:hr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{numOrSizeSplits:s,axis:i}=a,o=at(i,r.shape)[0],l=pm(r,s,o),u=new Array(r.shape.length).fill(0),c=r.shape.slice();return l.map((e=>{const t=[...c];t[o]=e;const a=aT({inputs:{x:r},backend:n,attrs:{begin:u,size:t}});return u[o]+=e,a}))}},TR=LS((e=>Math.sqrt(e))),CR=zS(cr,(e=>Math.sqrt(e))),ER={kernelName:cr,backendName:"cpu",kernelFunc:CR},$R={kernelName:wr,backendName:"cpu",kernelFunc:e=>{let{inputs:t,backend:n}=e;const{x:a}=t,r=n;DS(a,"square");const s=r.data.get(a.dataId).values,i=new Float32Array(s.length);for(let o=0;o<s.length;++o){const e=s[o];i[o]=e*e}return{dataId:r.write(i,a.shape,a.dtype),shape:a.shape,dtype:a.dtype}}},RR=HS(((e,t)=>{const n=e-t;return n*n})),AR=dI(vr,RR),_R={kernelName:vr,backendName:"cpu",kernelFunc:AR},FR=LS(((e,t)=>{const{pattern:n,replaceGlobal:a,rewrite:r}=t;return e.replace(new RegExp(n,a?"g":""),r)})),DR=PS(kr,FR),OR={kernelName:kr,backendName:"cpu",kernelFunc:DR},MR=zS(zr,((e,t)=>{const n=t;return isNaN(e)?NaN:e>0?1:n.alpha})),LR={kernelName:zr,backendName:"cpu",kernelFunc:MR};function zR(e,t,n,a){const r=$o(e,t.dtype);for(let s=0;s<r.size;s++){const e=r.indexToLoc(s),i=new Array(e.length);for(let t=0;t<i.length;t++)i[t]=e[t]*n[t]+a[t];r.set(t.get(...i),...e)}return r}const PR={kernelName:Nr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{begin:s,end:i,strides:o,beginMask:l,endMask:u,ellipsisMask:c,newAxisMask:p,shrinkAxisMask:d}=a;DS(r,"stridedSlice");const{finalShapeSparse:h,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:y,begin:b,end:x,strides:v}=Ql(r.shape,s,i,o,l,u,c,p,d);let w;if(m)w=bI({inputs:{x:r},backend:n,attrs:{shape:f}});else if(g||y){qe(r.shape.length>=1,(()=>`Input must have rank at least 1, got: ${r.shape.length}`));const e=zl(b,x,v),t=aT({inputs:{x:r},backend:n,attrs:{begin:b,size:e}});w=bI({inputs:{x:t},backend:n,attrs:{shape:f}}),n.disposeIntermediateTensorInfo(t)}else{const e=zR(h,n.bufferSync(r),v,b);w=n.makeTensorInfo(f,e.dtype,e.values)}return w}};class BR{constructor(e,t,n,a,r,s){this.separator=bs(e),this.nGramWidths=t,this.leftPad=bs(n),this.rightPad=bs(a),this.padWidth=r,this.preserveShort=s}getPadWidth(e){return Math.min(this.padWidth<0?e-1:this.padWidth,e-1)}getNumNGrams(e,t){const n=this.getPadWidth(t);return Math.max(0,e+2*n-t+1)}createNGrams(e,t,n,a,r,s){for(let i=0;i<r;++i){const o=this.getPadWidth(s),l=Math.max(0,o-i),u=Math.max(0,o-(r-(i+1))),c=s-(l+u),p=t+(l>0?0:i-o);let d=0;d+=l*this.leftPad.length;for(let t=0;t<c;++t)d+=e[p+t].length;d+=u*this.rightPad.length;d+=(l+u+c-1)*this.separator.length,n[a+i]=new Uint8Array(d);const h=n[a+i];let f=0;const m=e=>e.forEach((e=>h[f++]=e));for(let e=0;e<l;++e)m(this.leftPad),m(this.separator);for(let t=0;t<c-1;++t)m(e[p+t]),m(this.separator);if(c>0){m(e[p+c-1]);for(let e=0;e<u;++e)m(this.separator),m(this.rightPad)}else{for(let e=0;e<u-1;++e)m(this.rightPad),m(this.separator);m(this.rightPad)}}}compute(e,t){const n=e.length,a=t.length;if(a>0){let e=t[0];if(0!==e)throw new Error(`First split value must be 0, got ${e}`);for(let r=1;r<a;++r){let a=t[r]>=e;if(a=a&&t[r]<=n,!a)throw new Error(`Invalid split value ${t[r]}, must be in [${e}, ${n}]`);e=t[r]}if(e!==n)throw new Error(`Last split value must be data size. Expected ${n}, got ${e}`)}const r=a-1,s=it("int32",a);if(0===n||0===a){const e=new Array(n);for(let t=0;t<=r;++t)s[t]=0;return[e,s]}s[0]=0;for(let o=1;o<=r;++o){const e=t[o]-t[o-1];let n=0;this.nGramWidths.forEach((t=>{n+=this.getNumNGrams(e,t)})),this.preserveShort&&e>0&&0===n&&(n=1),s[o]=s[o-1]+n}const i=new Array(s[r]);for(let o=0;o<r;++o){const n=t[o];let a=s[o];if(this.nGramWidths.forEach((r=>{const s=t[o+1]-t[o],l=this.getNumNGrams(s,r);this.createNGrams(e,n,i,a,l,r),a+=l})),this.preserveShort&&a===s[o]){const r=t[o+1]-t[o];if(0===r)continue;const s=r+2*this.padWidth,l=1;this.createNGrams(e,n,i,a,l,s)}}return[i,s]}}function WR(e,t,n,a,r,s,i,o){return new BR(n,a,r,s,i,o).compute(e,t)}const VR={kernelName:Sr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{separator:r,nGramWidths:s,leftPad:i,rightPad:o,padWidth:l,preserveShortSequences:u}=a,{data:c,dataSplits:p}=t,d=n.data.get(c.dataId).values,h=n.data.get(p.dataId).values,[f,m]=WR(d,h,r,s,i,o,l,u);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(p.shape,"int32",m)]}};function UR(e,t,n,a){if(!e.length)return;if(0===t.length){for(let t=0;t<e.length;++t)a.push(e.subarray(t,t+1));return}if(1===t.length){const r=t[0];let s=e.indexOf(r);for(;-1!==s;){const t=e.subarray(0,s);n&&0===t.length||a.push(t),s=(e=e.subarray(s+1)).indexOf(r)}return void(n&&0===e.length||a.push(e))}let r=0;for(let s=0;s<e.length+1;s++)if(s===e.length||-1!==t.indexOf(e[s])){const t=e.subarray(r,s);n&&0===t.length||a.push(t),r=s+1}}function jR(e,t,n){const a=e.length,r=[];let s=0,i=0;const o=new Array(a);for(let d=0;d<a;++d){const a=r.length;UR(e[d],t,n,r);const l=r.length-a;o[d]=l,s+=l,i=Math.max(i,l)}const l=it("int32",2*s),u=new Array(s),c=[a,i];let p=0;for(let d=0;d<a;++d)for(let e=0;e<o[d];++e)l[2*p]=d,l[2*p+1]=e,u[p]=r[p],++p;return[l,u,c]}const GR={kernelName:Ir,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{skipEmpty:r}=a,{input:s,delimiter:i}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(1!==s.shape.length)throw new Error(`Input must be a vector, got shape: ${s.shape}`);if(0!==i.shape.length)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);const o=n.data.get(s.dataId).values,l=n.data.get(i.dataId).values[0],[u,c,p]=jR(o,l,r),d=c.length;return[n.makeTensorInfo([d,2],"int32",u),n.makeTensorInfo([d],"string",c),n.makeTensorInfo([2],"int32",new Int32Array(p))]}};function HR(e,t){const n=it("int32",e.length);for(let a=0;a<e.length;++a)n[a]=fs(e[a]).modulo(t).getLowBitsUnsigned();return n}const qR={kernelName:Tr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{numBuckets:r}=a,{input:s}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(r<=0)throw new Error("Number of buckets must be at least 1");const i=HR(n.data.get(s.dataId).values,r);return n.makeTensorInfo(s.shape,"int32",i)}},KR=zS(Er,(e=>Math.tan(e))),XR={kernelName:Er,backendName:"cpu",kernelFunc:KR},YR=zS($r,(e=>Math.tanh(e)));const QR={kernelName:er,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{tensor:a,indices:r,updates:s}=t,{sliceRank:i,numUpdates:o,sliceSize:l,strides:u,outputSize:c}=zd(0,r,a.shape),p=n.bufferSync(r),d=n.bufferSync(s),h=n.bufferSync(a),f=Q$(p,d,a.shape,c,l,o,i,u,h,!1);return n.makeTensorInfo(a.shape,f.dtype,f.values)}};function ZR(e,t){const n=new Array(e.rank);for(let r=0;r<n.length;r++)n[r]=e.shape[r]*t[r];const a=$o(n,e.dtype);for(let r=0;r<a.values.length;++r){const t=a.indexToLoc(r),n=new Array(e.rank);for(let a=0;a<n.length;a++)n[a]=t[a]%e.shape[a];const s=e.locToIndex(n);a.values[r]=e.values[s]}return a}const JR={kernelName:Rr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{reps:s}=a;DS(r,"tile");const i=ZR(n.bufferSync(r),s);return n.makeTensorInfo(i.shape,i.dtype,i.values)}},eA=(e,t)=>{const n=t.value-e.value;return 0===n?e.index-t.index:n};function tA(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:e.length-1;for(;a>n;){if(a-n>600){const r=a-n+1,s=t-n+1,i=Math.log(r),o=.5*Math.exp(2*i/3),l=.5*Math.sqrt(i*o*(r-o)/r)*Math.sign(s-r/2);tA(e,t,Math.max(n,Math.floor(t-s*o/r+l)),Math.min(a,Math.floor(t+(r-s)*o/r+l)))}const r=e[t];let s=n,i=a;for(He(e,n,t),eA(e[a],r)>0&&He(e,n,a);s<i;){for(He(e,s,i),s++,i--;eA(e[s],r)<0;)s+=1;for(;eA(e[i],r)>0;)i-=1}0===eA(e[n],r)?He(e,n,i):(i+=1,He(e,i,a)),i<=t&&(n=i+1),t<=i&&(a=i-1)}}function nA(e,t,n,a,r){const s=t[t.length-1],[i,o]=[e.length/s,s],l=st(n,i*a),u=st("int32",i*a);for(let p=0;p<i;p++){const t=p*o,n=e.subarray(t,t+o);let s=new Array(n.length);n.forEach(((e,t)=>s[t]={value:e,index:t})),a<s.length&&(tA(s,a),s=s.slice(0,a)),r&&s.sort(eA);const i=p*a,c=l.subarray(i,i+a),d=u.subarray(i,i+a);for(let e=0;e<a;e++)c[e]=s[e].value,d[e]=s[e].index}const c=t.slice();return c[c.length-1]=a,[$o(c,n,l),$o(c,"int32",u)]}const aA={kernelName:Ar,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{k:s,sorted:i}=a;DS(r,"topk");const o=n.data.get(r.dataId).values,[l,u]=nA(o,r.shape,r.dtype,s,i);return[n.makeTensorInfo(l.shape,l.dtype,l.values),n.makeTensorInfo(u.shape,u.dtype,u.values)]}};const rA={kernelName:_r,backendName:"cpu",kernelFunc:function(e){const{inputs:t,attrs:n,backend:a}=e,{image:r,transforms:s}=t,{interpolation:i,fillMode:o,fillValue:l,outputShape:u}=n,[c,p,d,h]=r.shape,[f,m]=null!=u?u:[p,d],g=[c,f,m,h],y=ft(r.shape),b=y[0],x=y[1],v=y[2],w=ft(g),k=w[0],N=w[1],S=w[2],I=st(r.dtype,Ye(g));I.fill(l);const T=a.data.get(r.dataId).values,C=a.data.get(s.dataId).values;for(let E=0;E<c;++E){const e=1===s.shape[0]?C:C.subarray(8*E,8*E+8);for(let t=0;t<f;++t)for(let n=0;n<m;++n)for(let a=0;a<h;++a){let r;const s=e[6]*n+e[7]*t+1;if(0===s)continue;const u=(e[0]*n+e[1]*t+e[2])/s,c=(e[3]*n+e[4]*t+e[5])/s,h=sA(u,d,o),f=sA(c,p,o);switch(i){case"nearest":r=oA(T,p,d,b,x,v,E,f,h,a,l);break;case"bilinear":r=lA(T,p,d,b,x,v,E,f,h,a,l);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${i}`)}I[E*k+t*N+n*S+a]=r}return a.makeTensorInfo(g,r.dtype,I)}return{dataId:a.write(I,g,r.dtype),shape:r.shape,dtype:r.dtype}}};function sA(e,t,n){switch(n){case"reflect":return function(e,t){let n=e;if(n<0)if(t<=1)n=0;else{const e=2*t;n<e&&(n=e*Math.trunc(-n/e)+n),n=n<-t?n+e:-n-1}else if(n>t-1)if(t<=1)n=0;else{const e=2*t;n-=e*Math.trunc(n/e),n>=t&&(n=e-n-1)}return je(0,n,t-1)}(e,t);case"wrap":return function(e,t){let n=e;if(n<0)if(t<=1)n=0;else{const e=t-1;n+=t*(Math.trunc(-n/e)+1)}else if(n>t-1)if(t<=1)n=0;else{const e=t-1;n-=t*Math.trunc(n/e)}return je(0,n,t-1)}(e,t);case"nearest":return function(e,t){return je(0,e,t-1)}(e,t);default:return function(e){return e}(e)}}function iA(e,t,n,a,r,s,i,o,l,u,c){return 0<=o&&o<t&&0<=l&&l<n?e[i*a+o*r+l*s+u]:c}function oA(e,t,n,a,r,s,i,o,l,u,c){return iA(e,t,n,a,r,s,i,Math.round(o),Math.round(l),u,c)}function lA(e,t,n,a,r,s,i,o,l,u,c){const p=Math.floor(o),d=Math.floor(l),h=p+1,f=d+1;return(h-o)*((f-l)*iA(e,t,n,a,r,s,i,p,d,u,c)+(l-d)*iA(e,t,n,a,r,s,i,p,f,u,c))+(o-p)*((f-l)*iA(e,t,n,a,r,s,i,h,d,u,c)+(l-d)*iA(e,t,n,a,r,s,i,h,f,u,c))}function uA(e,t,n,a){const r=at(t,n)[0],s=[1,n[0],1];for(let f=0;f<r;f++)s[0]*=n[f];s[1]=n[r];for(let f=r+1;f<n.length;f++)s[2]*=n[f];const i=new Map,o=new Int32Array(n[r]),l=new Rs(s,a,e),u=[],c=1===s[0]&&1===s[2];for(let f=0;f<n[r];f++){let t;if(c)t=e[f].toString();else{const e=[];for(let t=0;t<s[0];t++)for(let n=0;n<s[2];n++)e.push(l.get(t,f,n));t=e.join(",")}const n=i.get(t);if(null!=n)o[f]=n;else{const e=i.size;i.set(t,e),o[f]=e,u.push(f)}}const p=s.slice();p[1]=i.size;const d=new Rs(p,a);u.forEach(((e,t)=>{for(let n=0;n<s[0];n++)for(let a=0;a<s[2];a++)d.set(l.get(n,e,a),n,t,a)}));const h=n.slice();return h[r]=p[1],{outputValues:d.values,outputShape:h,indices:o}}const cA={kernelName:Dr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,attrs:n,backend:a}=e,{axis:r}=n,{x:s}=t;DS(s,"unique");const i=a.data.get(s.dataId).values,{outputValues:o,outputShape:l,indices:u}=uA(i,r,s.shape,s.dtype);return[a.makeTensorInfo(l,s.dtype,o),a.makeTensorInfo([u.length],"int32",u)]}};const pA={kernelName:Or,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{value:r}=t;let{axis:s}=a;s<0&&(s+=r.shape.length);const i=r.shape.length,o=r.shape[s],l=new Array(i-1);let u=0;for(let h=0;h<i;h++)h!==s&&(l[u++]=r.shape[h]);const c=new Array(i).fill(0),p=r.shape.slice();p[s]=1;const d=new Array(o);for(let h=0;h<d.length;h++){c[s]=h;const e=aT({inputs:{x:r},backend:n,attrs:{begin:c,size:p}});d[h]=bI({inputs:{x:e},backend:n,attrs:{shape:l}}),n.disposeIntermediateTensorInfo(e)}return d}};const dA={kernelName:Mr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,segmentIds:s}=t,{numSegments:i}=a;DS(r,"unsortedSegmentSum");const o=[],l=[],u=r.shape.length-s.shape.length;let c=s;for(let d=0;d<u;++d){const e=yC({inputs:{input:c},backend:n,attrs:{dim:d+1}});c=e,l.push(e)}for(let d=0;d<i;++d){const e=ms(d,"int32"),t=n.makeTensorInfo([],"int32",e),a=rC({inputs:{a:t,b:c},backend:n}),s=cI({inputs:{x:a},backend:n,attrs:{dtype:"float32"}}),i=QT({inputs:{a:s,b:r},backend:n}),u=JT({inputs:{x:i},backend:n,attrs:{axis:0,keepDims:!1}});o.push(u),l.push(t),l.push(a),l.push(s),l.push(i),l.push(u)}const p=f$({inputs:o,backend:n,attrs:{axis:0}});return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),p}},hA=[kI,SI,TI,EI,yI,$I,FI,DI,OI,MI,zI,BI,VI,GI,qI,QI,ZI,JI,eT,wI,tT,sT,lT,pT,dT,pI,mT,yT,sI,bT,NT,IT,TT,CT,ET,$T,RT,_T,DT,OT,MT,LT,zT,PT,WT,VT,UT,jT,GT,HT,qT,KT,tC,WS,nC,sC,hC,gC,bC,wC,_C,DC,OC,zC,WC,VC,UC,GC,qC,YC,JC,US,eE,wT,nE,rE,iE,GS,uE,dE,fE,yE,xE,kE,SE,CE,EE,$E,_E,OE,ME,LE,zE,PE,BE,WE,VE,GE,HE,XE,ZE,ZT,e$,n$,r$,i$,u$,c$,h$,m$,g$,x$,XS,w$,T$,$$,O$,L$,lI,SC,P$,QS,JS,xI,B$,W$,V$,U$,j$,G$,q$,Y$,Z$,tR,nR,iR,nI,lR,cR,dR,rT,QE,mR,gR,bR,vR,kR,NR,SR,IR,ER,$R,_R,OR,LR,PR,VR,GR,qR,EC,eC,XR,{kernelName:$r,backendName:"cpu",kernelFunc:YR},QR,JR,aA,rA,_I,cA,pA,dA,d$];for(const n of hA)Qr(n);const fA={},mA={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function gA(e,t){if(!(e in fA)||null!=t){const n=function(e,t){if(1!==e&&2!==e)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const n=null==t?function(e){if(Ct().getBool("IS_SAFARI")||"undefined"===typeof OffscreenCanvas||2!==e){if("undefined"!==typeof document)return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}return new OffscreenCanvas(300,150)}(e):t;n.addEventListener("webglcontextlost",(t=>{t.preventDefault(),delete fA[e]}),!1),Ct().getBool("SOFTWARE_WEBGL_ENABLED")&&(mA.failIfMajorPerformanceCaveat=!1);if(1===e)return n.getContext("webgl",mA)||n.getContext("experimental-webgl",mA);return n.getContext("webgl2",mA)}(e,t);if(null===n)return console.log("Could not get context for WebGL version",e),null;fA[e]=n}const n=fA[e];return null==n||n.isContextLost()?(delete fA[e],gA(e)):(n.disable(n.DEPTH_TEST),n.disable(n.STENCIL_TEST),n.disable(n.BLEND),n.disable(n.DITHER),n.disable(n.POLYGON_OFFSET_FILL),n.disable(n.SAMPLE_COVERAGE),n.enable(n.SCISSOR_TEST),n.enable(n.CULL_FACE),n.cullFace(n.BACK),fA[e])}var yA,bA,xA;function vA(e,t){return[t,e]}function wA(e){const t=Ye(e);return Je(Math.ceil(t/4))}function kA(e,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(e/2))]}function NA(e,t){const n=e;let a,r,s,i,o,l,u,c,p,d;return 2===Ct().getNumber("WEBGL_VERSION")?(a=n.R32F,r=n.R16F,s=n.RGBA16F,i=n.RGBA32F,o=n.RED,u=4,c=1,p=n.HALF_FLOAT,d=n.FLOAT,l=n.RGBA8):(a=e.RGBA,r=e.RGBA,s=e.RGBA,i=n.RGBA,o=e.RGBA,u=4,c=4,p=null!=t?t.HALF_FLOAT_OES:null,d=e.FLOAT,l=e.RGBA),{internalFormatFloat:a,internalFormatHalfFloat:r,internalFormatPackedHalfFloat:s,internalFormatPackedFloat:i,textureFormatFloat:o,downloadTextureFormat:l,downloadUnpackNumChannels:u,defaultNumChannels:c,textureTypeHalfFloat:p,textureTypeFloat:d}}function SA(e,t){const n=t();return Ct().getBool("DEBUG")&&function(e){const t=e.getError();if(t!==e.NO_ERROR)throw new Error("WebGL Error: "+function(e,t){switch(t){case e.NO_ERROR:return"NO_ERROR";case e.INVALID_ENUM:return"INVALID_ENUM";case e.INVALID_VALUE:return"INVALID_VALUE";case e.INVALID_OPERATION:return"INVALID_OPERATION";case e.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case e.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case e.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${t}`}}(e,t))}(e),n}!function(e){e[e.DENSE=0]="DENSE",e[e.SHARED_BATCH=1]="SHARED_BATCH"}(yA||(yA={})),function(e){e[e.RENDER=0]="RENDER",e[e.UPLOAD=1]="UPLOAD",e[e.PIXELS=2]="PIXELS",e[e.DOWNLOAD=3]="DOWNLOAD"}(bA||(bA={})),function(e){e[e.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",e[e.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",e[e.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",e[e.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",e[e.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"}(xA||(xA={}));function IA(e){return!!(Ct().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||0===e||5.96e-8<Math.abs(e)&&Math.abs(e)<65504)}function TA(e,t){return OA(e,(()=>e.getExtension(t)),'Extension "'+t+'" not supported on this browser.')}const CA=/ERROR: [0-9]+:([0-9]+):/g;function EA(e,t){const n=CA.exec(t);if(null==n)return console.log(`Couldn't parse line number in error: ${t}`),void console.log(e);const a=+n[1],r=e.split("\n"),s=r.length.toString().length+2,i=r.map(((e,t)=>et((t+1).toString(),s)+e));let o=0;for(let p=0;p<i.length;p++)o=Math.max(i[p].length,o);const l=i.slice(0,a-1),u=i.slice(a-1,a),c=i.slice(a);console.log(l.join("\n")),console.log(t.split("\n")[0]),console.log(`%c ${et(u[0],o)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(c.join("\n"))}function $A(e,t){if(SA(e,(()=>e.validateProgram(t))),!1===e.getProgramParameter(t,e.VALIDATE_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Shader program validation failed.")}function RA(e,t,n,a,r,s,i){const o=e.getAttribLocation(t,n);return-1!==o&&(SA(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,a))),SA(e,(()=>e.vertexAttribPointer(o,r,e.FLOAT,!1,s,i))),SA(e,(()=>e.enableVertexAttribArray(o))),!0)}function AA(e,t,n,a){SA(e,(()=>function(e,t,n){MA(e,n),SA(e,(()=>e.activeTexture(e.TEXTURE0+n))),SA(e,(()=>e.bindTexture(e.TEXTURE_2D,t)))}(e,t,a))),SA(e,(()=>e.uniform1i(n,a)))}function _A(e,t,n){SA(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,n))),SA(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,t,0)))}function FA(e,t){SA(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,t))),SA(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,null,0)))}function DA(e){const t=e.checkFramebufferStatus(e.FRAMEBUFFER);if(t!==e.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+function(e,t){switch(t){case e.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case e.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${t}`}}(e,t))}function OA(e,t,n){const a=SA(e,(()=>t()));if(null==a)throw new Error(n);return a}function MA(e,t){const n=e.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,a=t+e.TEXTURE0;if(a<e.TEXTURE0||a>n){throw new Error(`textureUnit must be in ${`[gl.TEXTURE0, gl.TEXTURE${n}]`}.`)}}function LA(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:2;return Ye(e.slice(0,e.length-t))}function zA(e){if(0===e.length)throw Error("Cannot get rows and columns of an empty shape array.");return[e.length>1?e[e.length-2]:1,e[e.length-1]]}function PA(e){let t=[1,1,1];return 0===e.length||1===e.length&&1===e[0]||(t=[LA(e),...zA(e)]),t}function BA(e){return e%2===0}function WA(e,t){if(Qe(e=e.slice(-2),t=t.slice(-2)))return!0;if(!e.length||!t.length)return!0;if(0===e[0]||0===e[1]||0===t[0]||0===t[1])return!0;if(e.length!==t.length){const n=e[e.length-1],a=t[t.length-1];if(n===a)return!0;if(BA(n)&&BA(a)&&(1===e[0]||1===t[0]))return!0}return e[1]===t[1]&&BA(e[0])&&BA(t[0])}let VA,UA;function jA(e,t){return null!=e.getExtension(t)}function GA(e){try{if(null!=gA(e))return!0}catch(t){return console.log("Error when getting WebGL context: ",t),!1}return!1}function HA(e){if(0===e)return!1;const t=gA(e);if(1!==e){if(jA(t,"EXT_color_buffer_float"))return qA(t);const e="EXT_color_buffer_half_float";if(jA(t,e)){const n=t.getExtension(e);return function(e,t){const n=NA(e,t),a=e.createTexture();e.bindTexture(e.TEXTURE_2D,a);const r=1,s=1;e.texImage2D(e.TEXTURE_2D,0,n.internalFormatHalfFloat,r,s,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);const i=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,i),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,a,0);const o=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(a),e.deleteFramebuffer(i),o}(t,n)}return!1}if(!jA(t,"OES_texture_float"))return!1;if(!jA(t,"WEBGL_color_buffer_float"))return!1;return qA(t)}function qA(e){const t=NA(e),n=e.createTexture();e.bindTexture(e.TEXTURE_2D,n);e.texImage2D(e.TEXTURE_2D,0,t.internalFormatFloat,1,1,0,t.textureFormatFloat,t.textureTypeFloat,null);const a=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,a),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0);const r=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(n),e.deleteFramebuffer(a),r}function KA(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&qe("complex64"!==e.dtype,(()=>`${t} does not support complex64 tensors in the WebGL backend.`))}))}const XA=Ct();function YA(){let e,t,n,a,r,s,i,o,l,u;return 2===Ct().getNumber("WEBGL_VERSION")?(e="#version 300 es",t="in",n="out",a="in",r="texture",s="outputColor",i="out vec4 outputColor;",o=Ct().getBool("WEBGL2_ISNAN_CUSTOM")?"\n      bool isnan_custom(float val) {\n        uint floatToUint = floatBitsToUint(val);\n        return (floatToUint & 0x7fffffffu) > 0x7f800000u;\n      }\n\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan_custom(val.x),\n          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));\n      }\n\n      #define isnan(value) isnan_custom(value)\n    ":"",l="",u="\n      #define round(value) newRound(value)\n      int newRound(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 newRound(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "):(e="",t="attribute",n="varying",a="varying",r="texture2D",s="gl_FragColor",i="",o="\n      #define isnan(value) isnan_custom(value)\n      bool isnan_custom(float val) {\n        return (val > 0. || val < 1. || val == 0.) ? false : true;\n      }\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));\n      }\n    ",l="\n      uniform float INFINITY;\n\n      bool isinf(float val) {\n        return abs(val) == INFINITY;\n      }\n      bvec4 isinf(vec4 val) {\n        return equal(abs(val), vec4(INFINITY));\n      }\n    ",u="\n      int round(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 round(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "),{version:e,attribute:t,varyingVs:n,varyingFs:a,texture2D:r,output:s,defineOutput:i,defineSpecialNaN:o,defineSpecialInf:l,defineRound:u}}function QA(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"index";const a=ft(t);return a.map(((t,r)=>`${`int ${e[r]} = ${n} / ${t}`}; ${r===a.length-1?`int ${e[r+1]} = ${n} - ${e[r]} * ${t}`:`index -= ${e[r]} * ${t}`};`)).join("")}function ZA(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"index";const a=ft(t);return a.map(((t,r)=>`${`int ${e[r]} = ${n} / outShapeStrides[${r}]`}; ${r===a.length-1?`int ${e[r+1]} = ${n} - ${e[r]} * outShapeStrides[${r}]`:`index -= ${e[r]} * outShapeStrides[${r}]`};`)).join("")}function JA(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"index";const a=function(e,t){const n=e.length,a=e.map((e=>`${t}[${e}]`)),r=new Array(n-1);r[n-2]=a[n-1];for(let s=n-3;s>=0;--s)r[s]=`(${r[s+1]} * ${a[s+1]})`;return r}(e.map(((e,t)=>t)),t);return a.map(((t,r)=>`${`int ${e[r]} = ${n} / ${a[r]}`}; ${r===a.length-1?`int ${e[r+1]} = ${n} - ${e[r]} * ${a[r]}`:`index -= ${e[r]} * ${a[r]}`};`)).join("")}function e_(e){const t=ft(e).map((e=>e.toString()));return`\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * ${t[0]} + coords.y * ${t[1]} + coords.z;\n  }\n`}XA.registerFlag("HAS_WEBGL",(()=>XA.getNumber("WEBGL_VERSION")>0)),XA.registerFlag("WEBGL_VERSION",(()=>GA(2)?2:GA(1)?1:0)),XA.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",(()=>!1)),XA.registerFlag("WEBGL_BUFFER_SUPPORTED",(()=>2===XA.get("WEBGL_VERSION"))),XA.registerFlag("WEBGL_CPU_FORWARD",(()=>!0)),XA.registerFlag("WEBGL_FORCE_F16_TEXTURES",(()=>!1)),XA.registerFlag("WEBGL_PACK",(()=>XA.getBool("HAS_WEBGL"))),XA.registerFlag("WEBGL_PACK_NORMALIZATION",(()=>XA.getBool("WEBGL_PACK"))),XA.registerFlag("WEBGL_PACK_CLIP",(()=>XA.getBool("WEBGL_PACK"))),XA.registerFlag("WEBGL_PACK_DEPTHWISECONV",(()=>XA.getBool("WEBGL_PACK"))),XA.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",(()=>XA.getBool("WEBGL_PACK"))),XA.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",(()=>XA.getBool("WEBGL_PACK"))),XA.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",(()=>XA.getBool("WEBGL_PACK"))),XA.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",(()=>XA.getBool("WEBGL_PACK"))),XA.registerFlag("WEBGL_PACK_REDUCE",(()=>XA.getBool("WEBGL_PACK"))),XA.registerFlag("WEBGL_LAZILY_UNPACK",(()=>XA.getBool("WEBGL_PACK"))),XA.registerFlag("WEBGL_CONV_IM2COL",(()=>XA.getBool("WEBGL_PACK"))),XA.registerFlag("WEBGL_PACK_CONV2DTRANSPOSE",(()=>XA.getBool("WEBGL_PACK"))),XA.registerFlag("WEBGL_MAX_TEXTURE_SIZE",(()=>function(e){if(null==VA){const t=gA(e);VA=t.getParameter(t.MAX_TEXTURE_SIZE)}return VA}(XA.getNumber("WEBGL_VERSION")))),XA.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",(()=>function(e){if(null==UA){const t=gA(e);UA=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,UA)}(XA.getNumber("WEBGL_VERSION")))),XA.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",(()=>{const e=XA.getNumber("WEBGL_VERSION");return 0===e?0:function(e){if(0===e)return 0;let t;const n=gA(e);return t=jA(n,"EXT_disjoint_timer_query_webgl2")&&2===e?2:jA(n,"EXT_disjoint_timer_query")?1:0,t}(e)})),XA.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",(()=>XA.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!ri())),XA.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",(()=>function(e){if(0===e)return!1;const t=gA(e);if(1===e){if(!jA(t,"OES_texture_float"))return!1}else if(!jA(t,"EXT_color_buffer_float"))return!1;return qA(t)}(XA.getNumber("WEBGL_VERSION")))),XA.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",(()=>!XA.getBool("WEBGL_FORCE_F16_TEXTURES")&&XA.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))),XA.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",(()=>HA(XA.getNumber("WEBGL_VERSION")))),XA.registerFlag("WEBGL_FENCE_API_ENABLED",(()=>{return 2===(e=XA.getNumber("WEBGL_VERSION"))&&null!=gA(e).fenceSync;var e})),XA.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",(()=>XA.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0)),XA.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",(()=>-1),(e=>{if("number"!==typeof e)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be a number but got ${e}.`);if(e<0&&-1!==e)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${e}.`)})),XA.registerFlag("WEBGL_FLUSH_THRESHOLD",(()=>ri()?1:-1),(e=>{if("number"!==typeof e)throw new Error(`WEBGL_FLUSH_THRESHOLD must be a number but got ${e}.`);if(e<0&&-1!==e)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${e}.`)})),XA.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",(()=>128)),XA.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",(()=>!1)),XA.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",(()=>1e5)),XA.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",(()=>128)),XA.registerFlag("WEBGL_EXP_CONV",(()=>!1)),XA.registerFlag("SOFTWARE_WEBGL_ENABLED",(()=>XA.getBool("IS_TEST"))),XA.registerFlag("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE",(()=>1/0)),XA.registerFlag("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE",(()=>!1)),XA.registerFlag("WEBGL2_ISNAN_CUSTOM",(()=>!1)),XA.registerFlag("ENGINE_COMPILE_ONLY",(()=>!1));const t_="\n  const float FLOAT_MAX = 1.70141184e38;\n  const float FLOAT_MIN = 1.17549435e-38;\n\n  lowp vec4 encode_float(highp float v) {\n    if (isnan(v)) {\n      return vec4(255, 255, 255, 255);\n    }\n\n    highp float av = abs(v);\n\n    if(av < FLOAT_MIN) {\n      return vec4(0.0, 0.0, 0.0, 0.0);\n    } else if(v > FLOAT_MAX) {\n      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n    } else if(v < -FLOAT_MAX) {\n      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n    }\n\n    highp vec4 c = vec4(0,0,0,0);\n\n    highp float e = floor(log2(av));\n    highp float m = exp2(fract(log2(av))) - 1.0;\n\n    c[2] = floor(128.0 * m);\n    m -= c[2] / 128.0;\n    c[1] = floor(32768.0 * m);\n    m -= c[1] / 32768.0;\n    c[0] = floor(8388608.0 * m);\n\n    highp float ebias = e + 127.0;\n    c[3] = floor(ebias / 2.0);\n    ebias -= c[3] * 2.0;\n    c[2] += floor(ebias) * 128.0;\n\n    c[3] += 128.0 * step(0.0, -v);\n\n    return c / 255.0;\n  }\n",{getBroadcastDims:n_}=s;function a_(e,t,n){const a=[];if(e.forEach((e=>{const t=Ye(e.shapeInfo.logicalShape);if(e.shapeInfo.isUniform?a.push(`uniform float ${e.name}${t>1?`[${t}]`:""};`):(a.push(`uniform sampler2D ${e.name};`),a.push(`uniform int offset${e.name};`)),n.enableShapeUniforms){const{uniformShape:t}=f_(n.packedInputs,e.shapeInfo.logicalShape,e.shapeInfo.texShape);switch(t.length){case 1:a.push(`uniform int ${e.name}Shape;`);break;case 2:a.push(`uniform ivec2 ${e.name}Shape;`);break;case 3:a.push(`uniform ivec3 ${e.name}Shape;`);break;case 4:a.push(`uniform ivec4 ${e.name}Shape;`)}a.push(`uniform ivec2 ${e.name}TexShape;`)}})),n.enableShapeUniforms){switch(t.logicalShape.length){case 1:a.push("uniform int outShape;");break;case 2:a.push("uniform ivec2 outShape;"),a.push("uniform int outShapeStrides;");break;case 3:a.push("uniform ivec3 outShape;"),a.push("uniform ivec2 outShapeStrides;");break;case 4:a.push("uniform ivec4 outShape;"),a.push("uniform ivec3 outShapeStrides;")}a.push("uniform ivec2 outTexShape;")}n.customUniforms&&n.customUniforms.forEach((e=>{a.push(`uniform ${e.type} ${e.name}${e.arrayIndex?`[${e.arrayIndex}]`:""};`)}));const r=a.join("\n"),s=e.map((e=>function(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],a=arguments.length>3?arguments[3]:void 0,r="";r+=n?s_(e,a):r_(e,a);const s=e.shapeInfo.logicalShape,i=t.logicalShape;s.length<=i.length&&(r+=n?function(e,t){const n=e.name,a=n.charAt(0).toUpperCase()+n.slice(1),r="get"+a+"AtOutCoords",s=e.shapeInfo.logicalShape.length,i=t.logicalShape.length,o=n_(e.shapeInfo.logicalShape,t.logicalShape),l=h_(i),u=i-s;let c;const p=["x","y","z","w","u","v"];c=0===s?"":i<2&&o.length>=1?"coords = 0;":o.map((e=>`coords.${p[e+u]} = 0;`)).join("\n");let d="";d=i<2&&s>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>`coords.${p[t+u]}`)).join(", ");let h="return outputValue;";const f=1===Ye(e.shapeInfo.logicalShape),m=Ye(t.logicalShape),g=1===m;if(1!==s||f||g){if(f&&!g)h=1===i?"\n        return vec4(outputValue.x, outputValue.x, 0., 0.);\n      ":"\n        return vec4(outputValue.x);\n      ";else if(o.length){const e=s-2,t=s-1;o.indexOf(e)>-1&&o.indexOf(t)>-1?h="return vec4(outputValue.x);":o.indexOf(e)>-1?h="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":o.indexOf(t)>-1&&(h="return vec4(outputValue.xx, outputValue.zz);")}}else h="\n      return vec4(outputValue.xy, outputValue.xy);\n    ";return`\n    vec4 ${r}() {\n      ${l} coords = getOutputCoords();\n      ${c}\n      vec4 outputValue = get${a}(${d});\n      ${h}\n    }\n  `}(e,t):function(e,t){const n=e.name,a=n.charAt(0).toUpperCase()+n.slice(1),r="get"+a+"AtOutCoords",s=t.texShape,i=e.shapeInfo.texShape,o=e.shapeInfo.logicalShape.length,l=t.logicalShape.length;if(!e.shapeInfo.isUniform&&o===l&&null==e.shapeInfo.flatOffset&&Qe(i,s))return`\n      float ${r}() {\n        return sampleTexture(${n}, resultUV);\n      }\n    `;const u=h_(l),c=n_(e.shapeInfo.logicalShape,t.logicalShape),p=l-o;let d;const h=["x","y","z","w","u","v"];d=0===o?"":l<2&&c.length>=1?"coords = 0;":c.map((e=>`coords.${h[e+p]} = 0;`)).join("\n");let f="";f=l<2&&o>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>`coords.${h[t+p]}`)).join(", ");return`\n    float ${r}() {\n      ${u} coords = getOutputCoords();\n      ${d}\n      return get${a}(${f});\n    }\n  `}(e,t));return r}(e,t,n.packedInputs,n.enableShapeUniforms))).join("\n"),i=t.texShape,o=YA(),l=function(e){return`\n    float sampleTexture(sampler2D textureSampler, vec2 uv) {\n      return ${e.texture2D}(textureSampler, uv).r;\n    }\n  `}(o);let u,c,p=function(e){const t=`${e.version}\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    ${e.varyingFs} vec2 resultUV;\n    ${e.defineOutput}\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    uniform float NAN;\n    ${e.defineSpecialNaN}\n    ${e.defineSpecialInf}\n    ${e.defineRound}\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    int idiv(int a, int b, float sign) {\n      int res = a / b;\n      int mod = imod(a, b);\n      if (sign < 0. && mod != 0) {\n        res -= 1;\n      }\n      return res;\n    }\n\n    //Based on the work of Dave Hoskins\n    //https://www.shadertoy.com/view/4djSRW\n    #define HASHSCALE1 443.8975\n    float random(float seed){\n      vec2 p = resultUV * seed;\n      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\n      p3 += dot(p3, p3.yzx + 19.19);\n      return fract((p3.x + p3.y) * p3.z);\n    }\n\n    ${i_}\n    ${o_}\n    ${l_}\n  `;return t}(o);t.isPacked?(u=function(e,t,n){switch(e.length){case 0:return c_();case 1:return function(e,t,n){const a=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(1===a[0])return n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ${a[1]}.0);\n      }\n    `;if(1===a[1])return n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ${a[0]}.0);\n      }\n    `;if(n)return"\n    int getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);\n    }\n  ";return`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${a[0]}, ${a[1]}));\n      return 2 * (resTexRC.x * ${a[1]} + resTexRC.y);\n    }\n  `}(0,t,n);case 2:return function(e,t,n){const a=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(Qe(e,t))return n?"\n      ivec2 getOutputCoords() {\n        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return 2 * ivec2(resultUV.yx * vec2(${a[0]}, ${a[1]}));\n      }\n    `;const r=Math.ceil(e[1]/2);if(n)return"\n    ivec2 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec2(r, c);\n    }\n  ";return`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${a[0]}, ${a[1]}));\n\n      int index = resTexRC.x * ${a[1]} + resTexRC.y;\n      int r = 2 * (index / ${r});\n      int c = imod(index, ${r}) * 2;\n\n      return ivec2(r, c);\n    }\n  `}(e,t,n);case 3:return function(e,t,n){if(n)return"\n    ivec3 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec3(b, r, c);\n    }\n  ";const a=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],r=Math.ceil(e[2]/2),s=r*Math.ceil(e[1]/2);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${a[0]}, ${a[1]}));\n      int index = resTexRC.x * ${a[1]} + resTexRC.y;\n\n      int b = index / ${s};\n      index -= b * ${s};\n\n      int r = 2 * (index / ${r});\n      int c = imod(index, ${r}) * 2;\n\n      return ivec3(b, r, c);\n    }\n  `}(e,t,n);default:return function(e,t,n){if(n)return"\n    ivec4 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatchN = texelsInBatch * outShape[1];\n\n      int b2 = index / texelsInBatchN;\n      index -= b2 * texelsInBatchN;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec4(b2, b, r, c);\n    }\n  ";const a=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],r=Math.ceil(e[e.length-1]/2),s=r*Math.ceil(e[e.length-2]/2);let i=s,o="",l="b, r, c";for(let u=2;u<e.length-1;u++)i*=e[e.length-u-1],o=`\n      int b${u} = index / ${i};\n      index -= b${u} * ${i};\n    `+o,l=`b${u}, `+l;return`\n    ivec${e.length} getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${a[0]}, ${a[1]}));\n      int index = resTexRC.x * ${a[1]} + resTexRC.y;\n\n      ${o}\n\n      int b = index / ${s};\n      index -= b * ${s};\n\n      int r = 2 * (index / ${r});\n      int c = imod(index, ${r}) * 2;\n\n      return ivec${e.length}(${l});\n    }\n  `}(e,t,n)}}(t.logicalShape,i,n.enableShapeUniforms),c=function(e){return`\n    void setOutput(vec4 val) {\n      ${e.output} = val;\n    }\n  `}(o)):(u=function(e,t,n){switch(e.length){case 0:return c_();case 1:return function(e,t,n){if(1===t[0])return n?"\n      int getOutputCoords() {\n        return int(resultUV.x * float(outTexShape[1]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.x * ${t[1]}.0);\n      }\n    `;if(1===t[1])return n?"\n      int getOutputCoords() {\n        return int(resultUV.y * float(outTexShape[0]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.y * ${t[0]}.0);\n      }\n    `;if(n)return"\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      return resTexRC.x * outTexShape[1] + resTexRC.y;\n    }\n  ";return`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      return resTexRC.x * ${t[1]} + resTexRC.y;\n    }\n  `}(0,t,n);case 2:return function(e,t,n){if(Qe(e,t))return n?"\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(${t[0]}, ${t[1]}));\n      }\n    `;if(1===e[1])return n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    `;if(1===e[0])return n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(0, index);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(0, index);\n      }\n    `;if(n)return"\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      int r = index / outShape[1];\n      int c = index - r * outShape[1];\n      return ivec2(r, c);\n    }\n  ";return`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      int r = index / ${e[1]};\n      int c = index - r * ${e[1]};\n      return ivec2(r, c);\n    }\n  `}(e,t,n);case 3:return function(e,t,n){if(n){return`\n  ivec3 getOutputCoords() {\n    ivec2 resTexRC = ivec2(resultUV.yx *\n                           vec2(outTexShape[0], outTexShape[1]));\n    int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n    ${ZA(["r","c","d"],e)}\n    return ivec3(r, c, d);\n  }\n`}const a=QA(["r","c","d"],e);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${a}\n      return ivec3(r, c, d);\n    }\n  `}(e,t,n);case 4:return function(e,t,n){if(n){return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      ${ZA(["r","c","d","d2"],e)}\n      return ivec4(r, c, d, d2);\n    }\n  `}const a=QA(["r","c","d","d2"],e);return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${a}\n      return ivec4(r, c, d, d2);\n    }\n  `}(e,t,n);case 5:return function(e,t){const n=QA(["r","c","d","d2","d3"],e);return`\n    ivec5 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${t[0]},\n                             ${t[1]}));\n\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec5 outShape = ivec5(r, c, d, d2, d3);\n      return outShape;\n    }\n  `}(e,t);case 6:return function(e,t){const n=QA(["r","c","d","d2","d3","d4"],e);return`\n    ivec6 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec6 result = ivec6(r, c, d, d2, d3, d4);\n      return result;\n    }\n  `}(e,t);default:throw new Error(`${e.length}-D output sampling is not yet supported`)}}(t.logicalShape,i,n.enableShapeUniforms),c=function(e){return`\n    void setOutput(float val) {\n      ${e.output} = vec4(val, 0, 0, 0);\n    }\n  `}(o)),n.packedInputs&&(p+=u_);return[p,l,c,r,u,s,n.userCode].join("\n")}function r_(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];const n=e.shapeInfo.logicalShape;switch(n.length){case 0:return function(e,t){const n=e.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`float ${a}() {return ${n};}`;const[r,s]=e.shapeInfo.texShape;if(1===r&&1===s)return`\n      float ${a}() {\n        return sampleTexture(${n}, halfCR);\n      }\n    `;const i=p_(n);if(t)return`\n    float ${a}() {\n      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], ${i});\n      return sampleTexture(${n}, uv);\n    }\n  `;const[o,l]=e.shapeInfo.texShape;return`\n    float ${a}() {\n      vec2 uv = uvFromFlat(${o}, ${l}, ${i});\n      return sampleTexture(${n}, uv);\n    }\n  `}(e,t);case 1:return function(e,t){const n=e.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`\n      float ${a}(int index) {\n        ${d_(e)}\n      }\n    `;const r=e.shapeInfo.texShape,s=r[0],i=r[1];if(1===i&&1===s)return`\n      float ${a}(int index) {\n        return sampleTexture(${n}, halfCR);\n      }\n    `;const o=p_(n);if(1===i)return t?`\n      float ${a}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / float(${n}TexShape[0]));\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n      float ${a}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / ${s}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(1===s)return t?`\n      float ${a}(int index) {\n        vec2 uv = vec2((float(index + ${o}) + 0.5) / float(${n}TexShape[1]), 0.5);\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n      float ${a}(int index) {\n        vec2 uv = vec2((float(index + ${o}) + 0.5) / ${i}.0, 0.5);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(t)return`\n    float ${a}(int index) {\n      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index + ${o});\n      return sampleTexture(${n}, uv);\n    }\n  `;return`\n    float ${a}(int index) {\n      vec2 uv = uvFromFlat(${s}, ${i}, index + ${o});\n      return sampleTexture(${n}, uv);\n    }\n  `}(e,t);case 2:return function(e,t){const n=e.shapeInfo.logicalShape,a=e.name,r="get"+a.charAt(0).toUpperCase()+a.slice(1),s=e.shapeInfo.texShape;if(null!=s&&Qe(n,s)){if(t)return`\n      float ${r}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${a}TexShape[1], ${a}TexShape[0]);\n        return sampleTexture(${a}, uv);\n      }\n    `;const e=s[0];return`\n    float ${r}(int row, int col) {\n      vec2 uv = (vec2(col, row) + halfCR) / vec2(${s[1]}.0, ${e}.0);\n      return sampleTexture(${a}, uv);\n    }\n  `}const{newShape:i,keptDims:o}=rt(n),l=i;if(l.length<n.length){const n=["row","col"];return`\n      ${r_(m_(e,l),t)}\n      float ${r}(int row, int col) {\n        return ${r}(${g_(n,o)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col) {\n        int index = round(dot(vec2(row, col), vec2(${n[1]}, 1)));\n        ${d_(e)}\n      }\n    `;const u=s[0],c=s[1],p=p_(a);if(1===c)return t?`\n      float ${r}(int row, int col) {\n        float index = dot(vec3(row, col, ${p}), vec3(${a}Shape[1], 1, 1));\n        vec2 uv = vec2(0.5, (index + 0.5) / float(${a}TexShape[0]));\n        return sampleTexture(${a}, uv);\n      }\n    `:`\n    float ${r}(int row, int col) {\n      float index = dot(vec3(row, col, ${p}), vec3(${n[1]}, 1, 1));\n      vec2 uv = vec2(0.5, (index + 0.5) / ${u}.0);\n      return sampleTexture(${a}, uv);\n    }\n  `;if(1===u)return t?`\n      float ${r}(int row, int col) {\n        float index = dot(vec3(row, col, ${p}), vec3(${a}Shape[1], 1, 1));\n        vec2 uv = vec2((index + 0.5) / float(${a}TexShape[1]), 0.5);\n        return sampleTexture(${a}, uv);\n      }\n    `:`\n    float ${r}(int row, int col) {\n      float index = dot(vec3(row, col, ${p}), vec3(${n[1]}, 1, 1));\n      vec2 uv = vec2((index + 0.5) / ${c}.0, 0.5);\n      return sampleTexture(${a}, uv);\n    }\n  `;if(t)return`\n      float ${r}(int row, int col) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${a}Shape[1] + col + ${p};\n        vec2 uv = uvFromFlat(${a}TexShape[0], ${a}TexShape[1], index);\n        return sampleTexture(${a}, uv);\n      }\n    `;return`\n  float ${r}(int row, int col) {\n    // Explicitly use integer operations as dot() only works on floats.\n    int index = row * ${n[1]} + col + ${p};\n    vec2 uv = uvFromFlat(${u}, ${c}, index);\n    return sampleTexture(${a}, uv);\n  }\n`}(e,t);case 3:return function(e,t){const n=e.shapeInfo.logicalShape,a=e.name,r="get"+a.charAt(0).toUpperCase()+a.slice(1),s=n[1]*n[2],i=n[2],{newShape:o,keptDims:l}=rt(n),u=o;if(u.length<n.length){const n=["row","col","depth"];return`\n        ${r_(m_(e,u),t)}\n        float ${r}(int row, int col, int depth) {\n          return ${r}(${g_(n,l)});\n        }\n      `}if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth) {\n        int index = round(dot(vec3(row, col, depth),\n                          vec3(${s}, ${i}, 1)));\n        ${d_(e)}\n      }\n    `;const c=e.shapeInfo.texShape,p=c[0],d=c[1],h=e.shapeInfo.flatOffset;if(d===s&&null==h)return t?`\n      float ${r}(int row, int col, int depth) {\n        int stride1 = ${a}Shape[2];\n        float texR = float(row);\n        float texC = dot(vec2(col, depth), vec2(stride1, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${a}TexShape[1], ${a}TexShape[0]);\n        return sampleTexture(${a}, uv);\n      }\n    `:`\n        float ${r}(int row, int col, int depth) {\n          float texR = float(row);\n          float texC = dot(vec2(col, depth), vec2(${i}, 1));\n          vec2 uv = (vec2(texC, texR) + halfCR) /\n                     vec2(${d}.0, ${p}.0);\n          return sampleTexture(${a}, uv);\n        }\n      `;if(d===i&&null==h)return t?`\n      float ${r}(int row, int col, int depth) {\n        float texR = dot(vec2(row, col), vec2(${a}Shape[1], 1));\n        float texC = float(depth);\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${a}TexShape[1], ${a}TexShape[0]);\n        return sampleTexture(${a}, uv);\n      }\n    `:`\n    float ${r}(int row, int col, int depth) {\n      float texR = dot(vec2(row, col), vec2(${n[1]}, 1));\n      float texC = float(depth);\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${d}.0, ${p}.0);\n      return sampleTexture(${a}, uv);\n    }\n  `;const f=p_(a);if(t)return`\n    float ${r}(int row, int col, int depth) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int stride0 = ${a}Shape[1] * ${a}Shape[2];\n      int stride1 = ${a}Shape[2];\n      int index = row * stride0 + col * stride1 + depth + ${f};\n      vec2 uv = uvFromFlat(${a}TexShape[0], ${a}TexShape[1], index);\n      return sampleTexture(${a}, uv);\n    }\n    `;return`\n      float ${r}(int row, int col, int depth) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${s} + col * ${i} + depth + ${f};\n        vec2 uv = uvFromFlat(${p}, ${d}, index);\n        return sampleTexture(${a}, uv);\n      }\n  `}(e,t);case 4:return function(e,t){const n=e.shapeInfo.logicalShape,a=e.name,r="get"+a.charAt(0).toUpperCase()+a.slice(1),s=n[3],i=n[2]*s,o=n[1]*i,{newShape:l,keptDims:u}=rt(n);if(l.length<n.length){const n=["row","col","depth","depth2"];return`\n      ${r_(m_(e,l),t)}\n      float ${r}(int row, int col, int depth, int depth2) {\n        return ${r}(${g_(n,u)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth, int depth2) {\n        int index = round(dot(vec4(row, col, depth, depth2),\n                          vec4(${o}, ${i}, ${s}, 1)));\n        ${d_(e)}\n      }\n    `;const c=e.shapeInfo.flatOffset,p=e.shapeInfo.texShape,d=p[0],h=p[1],f=`int stride2 = ${a}Shape[3];`,m=`int stride1 = ${a}Shape[2] * stride2;`,g=`int stride0 = ${a}Shape[1] * stride1;`;if(h===o&&null==c)return t?`\n      float ${r}(int row, int col, int depth, int depth2) {\n        ${f}\n        ${m}\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(stride1, stride2, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${a}TexShape[1], ${a}TexShape[0]);\n        return sampleTexture(${a}, uv);\n      }\n    `:`\n      float ${r}(int row, int col, int depth, int depth2) {\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(${i}, ${s}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${h}.0, ${d}.0);\n        return sampleTexture(${a}, uv);\n      }\n    `;if(h===s&&null==c)return t?`\n      float ${r}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${a}Shape[1] * ${a}Shape[2], ${a}Shape[2], 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${a}TexShape[1], ${a}TexShape[0]);\n        return sampleTexture(${a}, uv);\n      }\n    `:`\n      float ${r}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${n[1]*n[2]}, ${n[2]}, 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${h}.0, ${d}.0);\n        return sampleTexture(${a}, uv);\n      }\n    `;const y=p_(a);if(t)return`\n    float ${r}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      ${f}\n      ${m}\n      ${g}\n      int index = row * stride0 + col * stride1 +\n          depth * stride2 + depth2;\n      vec2 uv = uvFromFlat(${a}TexShape[0], ${a}TexShape[1], index + ${y});\n      return sampleTexture(${a}, uv);\n    }\n  `;return`\n    float ${r}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${o} + col * ${i} +\n          depth * ${s} + depth2;\n      vec2 uv = uvFromFlat(${d}, ${h}, index + ${y});\n      return sampleTexture(${a}, uv);\n    }\n  `}(e,t);case 5:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1),r=t[4],s=t[3]*r,i=t[2]*s,o=t[1]*i,{newShape:l,keptDims:u}=rt(t);if(l.length<t.length){const t=["row","col","depth","depth2","depth3"];return`\n      ${r_(m_(e,l))}\n      float ${a}(int row, int col, int depth, int depth2, int depth3) {\n        return ${a}(${g_(t,u)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${a}(int row, int col, int depth, int depth2, int depth3) {\n        float index = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${o}, ${i}, ${s}, ${r})) +\n          depth3;\n        ${d_(e)}\n      }\n    `;const c=e.shapeInfo.flatOffset,p=e.shapeInfo.texShape,d=p[0],h=p[1];if(h===o&&null==c)return`\n      float ${a}(int row, int col, int depth, int depth2, int depth3) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n                         vec4(${i}, ${s}, ${r}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${h}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(h===r&&null==c)return`\n      float ${a}(int row, int col, int depth, int depth2, int depth3) {\n        float texR = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]},\n               ${t[2]*t[3]}, ${t[3]}, 1));\n        int texC = depth3;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${h}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;const f=p_(n);return`\n    float ${a}(int row, int col, int depth, int depth2, int depth3) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${o} + col * ${i} + depth * ${s} +\n          depth2 * ${r} + depth3 + ${f};\n      vec2 uv = uvFromFlat(${d}, ${h}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);case 6:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:r,keptDims:s}=rt(t);if(r.length<t.length){const t=["row","col","depth","depth2","depth3","depth4"];return`\n      ${r_(m_(e,r))}\n      float ${a}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        return ${a}(${g_(t,s)});\n      }\n    `}const i=t[5],o=t[4]*i,l=t[3]*o,u=t[2]*l,c=t[1]*u;if(e.shapeInfo.isUniform)return`\n      float ${a}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n        int index = round(dot(\n          vec4(row, col, depth, depth2),\n          vec4(${c}, ${u}, ${l}, ${o})) +\n          dot(\n            vec2(depth3, depth4),\n            vec2(${i}, 1)));\n        ${d_(e)}\n      }\n    `;const p=e.shapeInfo.flatOffset,d=e.shapeInfo.texShape,h=d[0],f=d[1];if(f===c&&null==p)return`\n      float ${a}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n          vec4(${u}, ${l}, ${o}, ${i})) +\n               float(depth4);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${f}.0, ${h}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(f===i&&null==p)return`\n      float ${a}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        float texR = dot(vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]*t[4]},\n               ${t[2]*t[3]*t[4]},\n               ${t[3]*t[4]},\n               ${t[4]})) + float(depth3);\n        int texC = depth4;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${f}.0, ${h}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;const m=p_(n);return`\n    float ${a}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${c} + col * ${u} + depth * ${l} +\n          depth2 * ${o} + depth3 * ${i} + depth4 + ${m};\n      vec2 uv = uvFromFlat(${h}, ${f}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);default:throw new Error(`${n.length}-D input sampling is not yet supported`)}}function s_(e,t){switch(e.shapeInfo.logicalShape.length){case 0:return function(e){const t=e.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1),a=YA();return`\n    vec4 ${n}() {\n      return ${a.texture2D}(${t}, halfCR);\n    }\n  `}(e);case 1:return function(e,t){const n=e.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1),r=e.shapeInfo.texShape,s=YA();if(t)return`\n    vec4 ${a}(int index) {\n      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));\n      vec2 uv = packedUVfrom1D(\n        packedTexShape[0], packedTexShape[1], index);\n      return ${s.texture2D}(${n}, uv);\n    }\n  `;const i=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)];return`\n    vec4 ${a}(int index) {\n      vec2 uv = packedUVfrom1D(\n        ${i[0]}, ${i[1]}, index);\n      return ${s.texture2D}(${n}, uv);\n    }\n  `}(e,t);case 2:return function(e,t){const n=e.shapeInfo.logicalShape,a=e.name,r="get"+a.charAt(0).toUpperCase()+a.slice(1),s=e.shapeInfo.texShape,i=s[0],o=s[1],l=YA();if(null!=s&&Qe(n,s))return t?`\n      vec4 ${r}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${a}TexShape[1], ${a}TexShape[0]);\n\n        return ${l.texture2D}(${a}, uv);\n      }\n    `:`\n      vec4 ${r}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${o}.0, ${i}.0);\n\n        return ${l.texture2D}(${a}, uv);\n      }\n    `;if(t)return`\n    vec4 ${r}(int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${a}TexShape[0]) / 2.0), ceil(float(${a}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${a}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);\n      return ${l.texture2D}(${a}, uv);\n    }\n  `;const u=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)],c=Math.ceil(n[1]/2);return`\n    vec4 ${r}(int row, int col) {\n      vec2 uv = packedUVfrom2D(${c}, ${u[0]}, ${u[1]}, row, col);\n      return ${l.texture2D}(${a}, uv);\n    }\n  `}(e,t);case 3:return function(e,t){const n=e.shapeInfo.logicalShape,a=e.name,r="get"+a.charAt(0).toUpperCase()+a.slice(1),s=e.shapeInfo.texShape,i=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];if(1===n[0]){const a=[1,2],s=["b","row","col"];return`\n        ${s_(m_(e,n.slice(1)),t)}\n        vec4 ${r}(int b, int row, int col) {\n          return ${r}(${g_(s,a)});\n        }\n      `}const o=YA();if(t)return`\n    vec4 ${r}(int b, int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${a}TexShape[0]) / 2.0), ceil(float(${a}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${a}Shape[2]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${a}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom3D(\n        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);\n      return ${o.texture2D}(${a}, uv);\n    }\n  `;const l=i[0],u=i[1],c=Math.ceil(n[2]/2),p=c*Math.ceil(n[1]/2);return`\n    vec4 ${r}(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        ${l}, ${u}, ${p}, ${c}, b, row, col);\n      return ${o.texture2D}(${a}, uv);\n    }\n  `}(e,t);default:return function(e,t){const n=e.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1),r=YA();if(t)return`\n    vec4 ${a}(int b2, int b, int row, int col) {\n      int valuesPerRow = int(ceil(float(${n}Shape[3]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${n}Shape[2]) / 2.0));\n      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);\n      texelsInBatch *= ${n}Shape[1];\n      index = b2 * texelsInBatch + index;\n      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));\n      int texR = index / packedTexShape[1];\n      int texC = index - texR * packedTexShape[1];\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${r.texture2D}(${n}, uv);\n    }\n  `;const s=e.shapeInfo.logicalShape,i=s.length,o=e.shapeInfo.texShape,l=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)],u=l[0],c=l[1],p=Math.ceil(s[i-1]/2);let d=p*Math.ceil(s[i-2]/2),h="int b, int row, int col",f=`b * ${d} + (row / 2) * ${p} + (col / 2)`;for(let m=2;m<i-1;m++)h=`int b${m}, `+h,d*=s[i-m-1],f=`b${m} * ${d} + `+f;return`\n    vec4 ${a}(${h}) {\n      int index = ${f};\n      int texR = index / ${c};\n      int texC = index - texR * ${c};\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${c}, ${u});\n      return ${r.texture2D}(${n}, uv);\n    }\n  `}(e,t)}}const i_="\nvec2 uvFromFlat(int texNumR, int texNumC, int index) {\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\nvec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n  int texelIndex = index / 2;\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",o_="\nvec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,\n  int texNumC, int row, int col) {\n  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",l_="\nvec2 packedUVfrom3D(int texNumR, int texNumC,\n    int texelsInBatch, int texelsInLogicalRow, int b,\n    int row, int col) {\n  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",u_="\n  float getChannel(vec4 frag, vec2 innerDims) {\n    vec2 modCoord = mod(innerDims, 2.);\n    return modCoord.x == 0. ?\n      (modCoord.y == 0. ? frag.r : frag.g) :\n      (modCoord.y == 0. ? frag.b : frag.a);\n  }\n  float getChannel(vec4 frag, int dim) {\n    float modCoord = mod(float(dim), 2.);\n    return modCoord == 0. ? frag.r : frag.g;\n  }\n";function c_(){return"\n    int getOutputCoords() {\n      return 0;\n    }\n  "}function p_(e){return`offset${e}`}function d_(e){const t=e.name,n=Ye(e.shapeInfo.logicalShape);return n<2?`return ${t};`:`\n    for (int i = 0; i < ${n}; i++) {\n      if (i == index) {\n        return ${t}[i];\n      }\n    }\n  `}function h_(e){if(e<=1)return"int";if(2===e)return"ivec2";if(3===e)return"ivec3";if(4===e)return"ivec4";if(5===e)return"ivec5";if(6===e)return"ivec6";throw Error(`GPU for rank ${e} is not yet supported`)}function f_(e,t,n){const{newShape:a,keptDims:r}=rt(t),s=t.length,i=e&&3===s&&1===t[0],o=i?t.slice(1):a,l=!e&&s>1&&!Qe(t,n)&&a.length<s||i;return{useSqueezeShape:l,uniformShape:l?o:t,keptDims:r}}function m_(e,t){const n=JSON.parse(JSON.stringify(e));return n.shapeInfo.logicalShape=t,n}function g_(e,t){return t.map((t=>e[t])).join(", ")}function y_(e,t,n,a){const r=n.map(((e,n)=>{const a={logicalShape:e.shape,texShape:e.isUniform?null:e.texData.texShape,isUniform:e.isUniform,isPacked:!e.isUniform&&e.texData.isPacked,flatOffset:null};return null!=e.texData&&null!=e.texData.slice&&e.texData.slice.flatOffset>0&&(a.flatOffset=e.texData.slice.flatOffset),{name:t.variableNames[n],shapeInfo:a}})),s=r.map((e=>e.shapeInfo)),i={logicalShape:a.shape,texShape:a.texData.texShape,isUniform:!1,isPacked:a.texData.isPacked,flatOffset:null},o=a_(r,i,t),l=function(e,t){const n=OA(e,(()=>e.createShader(e.FRAGMENT_SHADER)),"Unable to create fragment WebGLShader.");if(SA(e,(()=>e.shaderSource(n,t))),SA(e,(()=>e.compileShader(n))),Ct().get("ENGINE_COMPILE_ONLY"))return n;if(!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw EA(t,e.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}(e.gl,o),u=e.createProgram(l);return Ct().get("ENGINE_COMPILE_ONLY")?{program:t,fragmentShader:l,source:o,webGLProgram:u,inShapeInfos:s,outShapeInfo:i,variablesLocations:null,customUniformLocations:null,infLoc:null,nanLoc:null,outShapeLocation:null,outShapeStridesLocation:null,outTexShapeLocation:null}:(e.buildVao(u),Object.assign({program:t,fragmentShader:l,source:o,webGLProgram:u,inShapeInfos:s,outShapeInfo:i},b_(e,t,u)))}function b_(e,t,n){const a=[],r=[];let s,i,o,l=null,u=null;u=e.getUniformLocation(n,"NAN",!1),1===Ct().getNumber("WEBGL_VERSION")&&(l=e.getUniformLocation(n,"INFINITY",!1));const c=!1;for(const p of t.variableNames){const r={name:p,uniform:e.getUniformLocation(n,p,c),offset:e.getUniformLocation(n,`offset${p}`,c)};t.enableShapeUniforms&&(r.shape=e.getUniformLocation(n,`${p}Shape`,c),r.texShape=e.getUniformLocation(n,`${p}TexShape`,c)),a.push(r)}if(t.enableShapeUniforms&&(s=e.getUniformLocation(n,"outShape",c),o=e.getUniformLocation(n,"outShapeStrides",c),i=e.getUniformLocation(n,"outTexShape",c)),t.customUniforms)for(const p of t.customUniforms)r.push(e.getUniformLocation(n,p.name,c));return{variablesLocations:a,customUniformLocations:r,infLoc:l,nanLoc:u,outShapeLocation:s,outShapeStridesLocation:o,outTexShapeLocation:i}}function x_(e,t){if(e.length!==t.length)throw Error(`Binary was compiled with ${e.length} inputs, but was executed with ${t.length} inputs`);e.forEach(((e,n)=>{const a=e.logicalShape,r=t[n],s=r.shape;if(!Qe(a,s))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${a} and ${s} must match`);if(e.isUniform&&r.isUniform)return;const i=e.texShape,o=r.isUniform?null:r.texData.texShape;if(!Qe(i,o))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${i} and ${o} must match`)}))}function v_(e){return Ct().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&e<=4}class w_{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=yA.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=YA();this.outputShape=e,this.enableShapeUniforms=v_(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?ZA(["r","c","d"],e):QA(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getA(rc.x, rc.y, rc.z);\n        }\n\n        ${t.output} = result;\n      }\n    `}}class k_{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=yA.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=YA();this.outputShape=e,this.enableShapeUniforms=v_(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?ZA(["r","c","d"],e):QA(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));\n        }\n\n        ${t.output} = result;\n      }\n    `}}class N_{constructor(e){this.variableNames=["A"],this.outTexUsage=bA.DOWNLOAD;const t=YA();this.outputShape=e,this.userCode=`\n      ${t_}\n\n      void main() {\n        float x = getAAtOutCoords();\n        ${t.output} = encode_float(x);\n      }\n    `}}class S_{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=bA.DOWNLOAD;const t=YA();this.outputShape=e,this.userCode=`\n      ${t_}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));\n        ${t.output} = encode_float(x);\n      }\n    `}}const I_={R:0,G:1,B:2,A:3};class T_{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"RGBA";this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];const a=YA();this.outputShape=e,this.enableShapeUniforms=v_(this.outputShape.length);let r="result";t&&(r="floor(result * 255. + 0.5)");let s="";for(let i=0;i<n.length;i++){const e=n[i];s+=`\n          if(offset == ${i}) {\n            result = values[${I_[e]}];\n          }`}this.userCode=`\n      ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":e_(e)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int flatIndex = getFlatIndex(coords);\n        float result = 0.;\n        int offset = imod(flatIndex, ${n.length});\n\n        flatIndex = idiv(flatIndex, ${n.length}, 1.);\n\n        int r = flatIndex / texShape[1];\n        if (r < texShape[0]) {\n          int c = imod(flatIndex, texShape[1]);\n          vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n          vec4 values = ${a.texture2D}(A, uv);\n          ${s}\n        }\n        ${a.output} = vec4(${r}, 0., 0., 0.);\n      }\n    `}}class C_{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];const n=YA();this.outputShape=e,this.enableShapeUniforms=v_(this.outputShape.length);let a="",r="result";t&&(r="floor(result * 255. + 0.5)");for(let s=0;s<=1;s++)for(let t=0;t<=1;t++){const r=2*s+t;a+=`\n          localCoords = coords;\n          if(localCoords[2] + ${t} < ${this.enableShapeUniforms?"outShape[2]":`${e[2]}`}) {\n          localCoords[2] += ${t};\n          if (localCoords[1] + ${s} < ${this.enableShapeUniforms?"outShape[1]":`${e[1]}`}) {\n            localCoords[1] += ${s};\n\n            flatIndex = getFlatIndex(localCoords);\n            offset = imod(flatIndex, 4);\n\n            flatIndex = idiv(flatIndex, 4, 1.);\n\n            int r = flatIndex / texShape[1];\n            int c = imod(flatIndex, texShape[1]);\n            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n            values = ${n.texture2D}(A, uv);\n\n            if (offset == 0) {\n              result[${r}] = values[0];\n            } else if (offset == 1) {\n              result[${r}] = values[1];\n            } else if (offset == 2) {\n              result[${r}] = values[2];\n            } else {\n              result[${r}] = values[3];\n            }\n          }\n        }\n        `}this.userCode=`\n        ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":e_(e)}\n\n        void main() {\n          ivec3 coords = getOutputCoords();\n\n          vec4 result = vec4(0.);\n          int flatIndex, r, c, offset;\n          ivec3 localCoords;\n          vec2 uv;\n          vec4 values;\n\n          ${a}\n\n          ${n.output} = ${r};\n        }\n    `}}function E_(e){const t=YA();return function(e,t){const n=OA(e,(()=>e.createShader(e.VERTEX_SHADER)),"Unable to create vertex WebGLShader.");if(SA(e,(()=>e.shaderSource(n,t))),SA(e,(()=>e.compileShader(n))),!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw console.log(e.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}(e,`${t.version}\n    precision highp float;\n    ${t.attribute} vec3 clipSpacePos;\n    ${t.attribute} vec2 uv;\n    ${t.varyingVs} vec2 resultUV;\n\n    void main() {\n      gl_Position = vec4(clipSpacePos, 1);\n      resultUV = uv;\n    }`)}function $_(e){return function(e,t){const n=OA(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return SA(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),SA(e,(()=>e.bufferData(e.ARRAY_BUFFER,t,e.STATIC_DRAW))),n}(e,new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]))}function R_(e){return function(e,t){const n=OA(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return SA(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,n))),SA(e,(()=>e.bufferData(e.ELEMENT_ARRAY_BUFFER,t,e.STATIC_DRAW))),n}(e,new Uint16Array([0,1,2,2,1,3]))}function A_(e,t,n,a,r,s){!function(e,t){const n=Ct().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e<=0||t<=0)throw new Error(`Requested texture size [${e}x${t}] is invalid.`);if(e>n||t>n)throw new Error(`Requested texture size [${e}x${t}] greater than WebGL maximum on this browser / GPU [${n}x${n}].`)}(t,n);const i=function(e){return OA(e,(()=>e.createTexture()),"Unable to create WebGLTexture.")}(e),o=e.TEXTURE_2D;return SA(e,(()=>e.bindTexture(o,i))),SA(e,(()=>e.texParameteri(o,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE))),SA(e,(()=>e.texParameteri(o,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE))),SA(e,(()=>e.texParameteri(o,e.TEXTURE_MIN_FILTER,e.NEAREST))),SA(e,(()=>e.texParameteri(o,e.TEXTURE_MAG_FILTER,e.NEAREST))),1===Ct().getNumber("WEBGL_VERSION")?SA(e,(()=>e.texImage2D(o,0,a,t,n,0,r,s,null))):SA(e,(()=>e.texStorage2D(o,1,a,t,n))),SA(e,(()=>e.bindTexture(e.TEXTURE_2D,null))),{texture:i,texShape:[n,t]}}function __(e){return e.internalFormatFloat}function F_(e){return e.internalFormatHalfFloat}function D_(e){return e.downloadTextureFormat}function O_(e){return e.internalFormatPackedFloat}function M_(e){return e.internalFormatPackedHalfFloat}function L_(e,t,n,a,r,s,i,o){const l=e,u=new Float32Array(function(e,t){const[n,a]=kA(e,t);return n*a*4}(s,i));return l.bindBuffer(l.PIXEL_PACK_BUFFER,t),l.getBufferSubData(l.PIXEL_PACK_BUFFER,0,u),l.bindBuffer(l.PIXEL_PACK_BUFFER,null),u}class z_{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.itemsToPoll=[];const t=Ct().getNumber("WEBGL_VERSION");if(null!=e?(this.gl=e,function(e,t){fA[e]=t}(t,e)):this.gl=gA(t),e=this.gl,2===Ct().getNumber("WEBGL_VERSION")){const t=e;this.createVertexArray=()=>SA(t,(()=>t.createVertexArray())),this.bindVertexArray=e=>SA(t,(()=>t.bindVertexArray(e))),this.deleteVertexArray=e=>SA(t,(()=>t.deleteVertexArray(e))),this.getVertexArray=()=>SA(t,(()=>t.getParameter(t.VERTEX_ARRAY_BINDING)))}else if(null!=e){const t=e.getExtension("OES_vertex_array_object");if(null==t)throw new Error("All WebGL1 implementations are expected to offer OES_vertex_array_object.");this.createVertexArray=()=>SA(e,(()=>t.createVertexArrayOES())),this.bindVertexArray=n=>SA(e,(()=>t.bindVertexArrayOES(n))),this.deleteVertexArray=n=>SA(e,(()=>t.deleteVertexArrayOES(n))),this.getVertexArray=()=>SA(e,(()=>e.getParameter(t.VERTEX_ARRAY_BINDING_OES)))}let n="WEBGL_color_buffer_float";const a="EXT_color_buffer_half_float";if(this.parallelCompilationExtension=this.gl.getExtension("KHR_parallel_shader_compile"),1===Ct().getNumber("WEBGL_VERSION")){const e="OES_texture_float",t="OES_texture_half_float";if(this.textureFloatExtension=TA(this.gl,e),jA(this.gl,t))this.textureHalfFloatExtension=TA(this.gl,t);else if(Ct().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),jA(this.gl,a))this.colorBufferHalfFloatExtension=TA(this.gl,a);else if(Ct().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",jA(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else{if(!jA(this.gl,a))throw new Error("GL context does not support color renderable floats");this.colorBufferHalfFloatExtension=this.gl.getExtension(a)}this.vertexBuffer=$_(this.gl),this.indexBuffer=R_(this.gl),this.framebuffer=function(e){return OA(e,(()=>e.createFramebuffer()),"Unable to create WebGLFramebuffer.")}(this.gl),this.textureConfig=NA(this.gl,this.textureHalfFloatExtension)}get debug(){return Ct().getBool("DEBUG")}dispose(){if(this.disposed)return;null!=this.program&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),null!=this.outputTexture&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const e=this.gl;SA(e,(()=>e.finish())),SA(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,null))),SA(e,(()=>e.deleteFramebuffer(this.framebuffer))),SA(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,null))),SA(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null))),SA(e,(()=>e.deleteBuffer(this.indexBuffer))),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,a){const[r,s]=vA(t,n);return A_(e,r,s,__(a),a.textureFormatFloat,e.FLOAT)}(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,a){const[r,s]=vA(t,n);return A_(e,r,s,F_(a),a.textureFormatFloat,a.textureTypeHalfFloat)}(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,a){const[r,s]=vA(t,n);return A_(e,r,s,D_(a),e.RGBA,e.UNSIGNED_BYTE)}(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),function(e,t,n){SA(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),n.data instanceof Uint8Array?2===Ct().getNumber("WEBGL_VERSION")?SA(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n.width,n.height,e.RGBA,e.UNSIGNED_BYTE,n.data))):SA(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,n.width,n.height,0,e.RGBA,e.UNSIGNED_BYTE,n.data))):2===Ct().getNumber("WEBGL_VERSION")?SA(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,e.RGBA,e.UNSIGNED_BYTE,n))):SA(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,n))),SA(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,n,a){this.throwIfDisposed(),function(e,t,n,a,r,s){let i,o,l;SA(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),r instanceof Uint8Array?(i=new Uint8Array(n*a*4),o=e.UNSIGNED_BYTE,l=e.RGBA):(i=new Float32Array(n*a*4),o=e.FLOAT,l=s.internalFormatPackedFloat),i.set(r),2===Ct().getNumber("WEBGL_VERSION")?SA(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n,a,e.RGBA,o,i))):SA(e,(()=>e.texImage2D(e.TEXTURE_2D,0,l,n,a,0,e.RGBA,o,i))),SA(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}(this.gl,e,t,n,a,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,a){const[r,s]=kA(t,n);return A_(e,r,s,M_(a),e.RGBA,a.textureTypeHalfFloat)}(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,a){const[r,s]=kA(t,n);return A_(e,r,s,O_(a),e.RGBA,e.FLOAT)}(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(FA(this.gl,this.framebuffer),this.outputTexture=null),SA(this.gl,(()=>this.gl.deleteTexture(e)))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>function(e,t,n,a){const[r,s]=vA(t,n),i=new Uint8Array(t*n*4);return SA(e,(()=>e.readPixels(0,0,r,s,a.downloadTextureFormat,e.UNSIGNED_BYTE,i))),new Float32Array(i.buffer)}(this.gl,t,n,this.textureConfig)))}downloadPackedMatrixFromBuffer(e,t,n,a,r,s){return L_(this.gl,e,0,0,0,r,s,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return function(e,t,n){const a=e,r=new Float32Array(n);return a.bindBuffer(a.PIXEL_PACK_BUFFER,t),a.getBufferSubData(a.PIXEL_PACK_BUFFER,0,r),a.bindBuffer(a.PIXEL_PACK_BUFFER,null),r}(this.gl,e,t)}createBufferFromTexture(e,t,n){this.bindTextureToFrameBuffer(e);const a=function(e,t,n){const a=e.createBuffer();SA(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,a)));const r=16*t*n;return SA(e,(()=>e.bufferData(e.PIXEL_PACK_BUFFER,r,e.STREAM_READ))),SA(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,0))),SA(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,null))),a}(this.gl,t,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),a}createAndWaitForFence(){const e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,n;if(Ct().getBool("WEBGL_FENCE_API_ENABLED")){const a=e,r=a.fenceSync(a.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),n=()=>{const e=a.clientWaitSync(r,0,0);return e===a.ALREADY_SIGNALED||e===a.CONDITION_SATISFIED},t=r}else Ct().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(t,Ct().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:t,isFencePassed:n}}downloadMatrixFromPackedTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>function(e,t,n){const a=new Float32Array(t*n*4);return SA(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,a))),a}(this.gl,t,n)))}createProgram(e){this.throwIfDisposed();const t=this.gl;null==this.vertexShader&&(this.vertexShader=E_(t));const n=function(e){return OA(e,(()=>e.createProgram()),"Unable to create WebGLProgram.")}(t);SA(t,(()=>t.attachShader(n,this.vertexShader))),SA(t,(()=>t.attachShader(n,e))),function(e,t){if(SA(e,(()=>e.linkProgram(t))),!Ct().get("ENGINE_COMPILE_ONLY")&&!1===e.getProgramParameter(t,e.LINK_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Failed to link vertex and fragment shaders.")}(t,n);const a=Object.assign(n,{vao:this.createVertexArray()});return this.debug&&$A(t,a),a}buildVao(e){this.setProgram(e),this.bindVertexArray(e.vao);const t=this.gl;SA(t,(()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,this.indexBuffer))),function(e,t,n){SA(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),RA(e,t,"clipSpacePos",n,3,20,0)&&RA(e,t,"uv",n,2,20,12)}(t,e,this.vertexBuffer)}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),null!=e&&(SA(this.gl,(()=>this.gl.deleteProgram(e))),this.deleteVertexArray(e.vao))}setProgram(e){this.throwIfDisposed(),this.program=e,null!=this.program&&this.debug&&$A(this.gl,this.program),SA(this.gl,(()=>this.gl.useProgram(e)))}getUniformLocation(e,t){let n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];return this.throwIfDisposed(),n?function(e,t,n){return OA(e,(()=>e.getUniformLocation(t,n)),'uniform "'+n+'" not present in program.')}(this.gl,e,t):function(e,t,n){return e.getUniformLocation(t,n)}(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),SA(this.gl,(()=>this.gl.getAttribLocation(e,t)))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,n){this.throwIfDisposed(),this.throwIfNoProgram(),AA(this.gl,e,t,n)}setOutputMatrixTexture(e,t,n){this.setOutputMatrixTextureDriver(e,n,t)}setOutputPackedMatrixTexture(e,t,n){this.throwIfDisposed();const[a,r]=kA(t,n);this.setOutputMatrixTextureDriver(e,a,r)}setOutputMatrixWriteRegion(e,t,n,a){this.setOutputMatrixWriteRegionDriver(n,e,a,t)}setOutputPackedMatrixWriteRegion(e,t,n,a){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){null!=this.program&&$A(this.gl,this.program),DA(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const e=this.gl;if(this.debug){const e=this.getVertexArray();console.assert(e===this.program.vao,"VAO changed between setProgram and executeProgram!"),this.debugValidate()}SA(e,(()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0)))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),SA(this.gl,(()=>this.gl.finish()))}getQueryTimerExtension(){return null==this.disjointQueryTimerExtension&&(this.disjointQueryTimerExtension=TA(this.gl,2===Ct().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(2===Ct().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2(),n=e.createQuery();return e.beginQuery(t.TIME_ELAPSED_EXT,n),n}const e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(2===Ct().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2();return void e.endQuery(t.TIME_ELAPSED_EXT)}const e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await tt((()=>this.disposed||this.isQueryAvailable(e,Ct().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")))),this.getQueryTime(e,Ct().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(0===t)return null;if(2===t){const t=this.gl;return t.getQueryParameter(e,t.QUERY_RESULT)/1e6}{const t=this.getQueryTimerExtensionWebGL1();return t.getQueryObjectEXT(e,t.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(0===t)return!0;if(2===t){const t=this.gl,n=this.getQueryTimerExtensionWebGL2(),a=t.getQueryParameter(e,t.QUERY_RESULT_AVAILABLE);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),a&&!this.disjoint}{const t=this.getQueryTimerExtensionWebGL1(),n=t.getQueryObjectEXT(e,t.QUERY_RESULT_AVAILABLE_EXT);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(t.GPU_DISJOINT_EXT)),n&&!this.disjoint}}pollFence(e){return new Promise((t=>{this.addItemToPoll((()=>e.isFencePassed()),(()=>t()))}))}pollItems(){const e=function(e){let t=0;for(;t<e.length;++t){if(!e[t]())break}return t-1}(this.itemsToPoll.map((e=>e.isDoneFn)));for(let t=0;t<=e;++t){const{resolveFn:e}=this.itemsToPoll[t];e()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){if(this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),this.itemsToPoll.length>1)return;let n;"setTimeoutCustom"in Ct().platform&&(n=Ct().platform.setTimeoutCustom.bind(Ct().platform)),tt((()=>(this.pollItems(),0===this.itemsToPoll.length)),(()=>0),null,n)}bindTextureToFrameBuffer(e){this.throwIfDisposed(),_A(this.gl,e,this.framebuffer),this.debug&&DA(this.gl)}unbindTextureToFrameBuffer(){null!=this.outputTexture?(_A(this.gl,this.outputTexture,this.framebuffer),this.debug&&DA(this.gl)):FA(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);const n=t();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(e,t,n){this.throwIfDisposed();const a=this.gl;_A(a,e,this.framebuffer),this.debug&&DA(a),this.outputTexture=e,SA(a,(()=>a.viewport(0,0,t,n))),SA(a,(()=>a.scissor(0,0,t,n)))}setOutputMatrixWriteRegionDriver(e,t,n,a){this.throwIfDisposed(),SA(this.gl,(()=>this.gl.scissor(e,t,n,a)))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(null==this.program)throw new Error("No GPU program is currently set.")}}const{mx:P_,XI:B_,Nk:W_,f6:V_,ct:U_,YG:j_,hH:G_,z3:H_,sG:q_,uM:K_,vS:X_,qB:Y_,GG:Q_,rq:Z_,lg:J_,WR:eF,cu:tF,GE:nF,px:aF,jC:rF,He:sF,hE:iF,BF:oF,Dk:lF,cl:uF,_B:cF,ub:pF,_f:dF,Ku:hF,qy:fF,Zy:mF,bu:gF,zv:yF,dH:bF,HS:xF,yH:vF,l3:wF,z9:kF,x6:NF,_m:SF,eW:IF,GK:TF,SP:CF,yr:EF,dl:$F,Dw:RF,xT:AF,_X:_F,wz:FF}=T;function DF(e,t){return["x","y","z","w","u","v"].slice(0,t).map((t=>`${e}.${t}`))}function OF(e,t){return 1===t?[e]:DF(e,t)}class MF{constructor(e){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.enableShapeUniforms=v_(this.outputShape.length),0===this.rank)this.userCode="\n        void main() {\n          setOutput(vec4(getA(), 0., 0., 0.));\n        }\n      ";else{const e=OF("rc",this.rank),t=h_(this.rank),n=this.getOutOfBoundsCondition(e),a=this.getSetup(e),r=this.getOutput(e);this.userCode=`\n        void main() {\n          ${t} rc = getOutputCoords();\n\n          if(${n}) {\n            setOutput(vec4(0));\n          } else {\n            ${a}\n\n            setOutput(vec4(${r}));\n          }\n        }\n      `}}getSourceCoordsArr(e){const t=[];for(let n=0;n<=1;n++)for(let a=0;a<=1;a++){let r=`${0===n?"r":"rp1"}, ${0===a?"c":"cp1"}`;for(let t=2;t<this.rank;t++)r=`${e[e.length-1-t]},`+r;t.push(r)}return t}getOutOfBoundsCondition(e){if(1===this.rank)return`rc > ${this.enableShapeUniforms?"outShape":this.outputShape[0]}`;let t="";for(let n=this.rank-2;n<this.rank;n++)t+=`${e[n]} >= ${this.enableShapeUniforms?`outShape[${n}]`:this.outputShape[n]}`,n<this.rank-1&&(t+="||");return t}getSetup(e){if(1===this.rank)return"";const t=e.slice(-2),n=this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1],a=this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2];return`\n      int r = ${t[0]};\n      int c = ${t[1]};\n      int rp1 = r + 1;\n      int cp1 = c + 1;\n\n      bool cEdge = cp1 >= ${n};\n      bool rEdge = rp1 >= ${a};\n    `}getOutput(e){const t=this.getSourceCoordsArr(e);if(1===this.rank){return`getA(rc), (rc + 1 >= ${this.enableShapeUniforms?"outShape":this.outputShape[0]} ? 0. : getA(rc + 1)), 0, 0`}return`getA(${t[0]}),\n            cEdge ? 0. : getA(${t[1]}),\n            rEdge ? 0. : getA(${t[2]}),\n            rEdge || cEdge ? 0. : getA(${t[3]})`}}class LF{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=e,this.enableShapeUniforms=v_(this.outputShape.length);let n="";for(let s=0;s<4;s++){let e="thisRC = rc;";s%2===1&&(e+="thisRC.z += 1;"),s>1&&(e+="thisRC.y += 1;"),n+=`\n        ${e}\n        ${s>0?"if(thisRC.y < rows && thisRC.z < cols){":""}\n          int flatIndex = getFlatIndex(thisRC);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);\n          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[${s}] =\n            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);\n        ${s>0?"}":""}\n      `}var a,r;this.userCode=`\n      ${a=t,r=this.enableShapeUniforms,`\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ${r?JA(["r","c","d"],"inputShape"):QA(["r","c","d"],a)}\n      return ivec3(r, c, d);\n    }\n  `}\n      ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":e_(e)}\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.);\n\n        ivec3 thisRC;\n        int rows = ${this.enableShapeUniforms?"outShape[1]":e[1]};\n        int cols = ${this.enableShapeUniforms?"outShape[2]":e[2]};\n\n        ${n}\n\n        setOutput(result);\n      }\n    `}}class zF{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.usedTextures={},this.logEnabled=!1}acquireTexture(e,t,n){const a=BF(t,n),r=WF(e,a,n);r in this.freeTextures||(this.freeTextures[r]=[]),r in this.usedTextures||(this.usedTextures[r]=[]);const s=PF(e,a,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[r].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=s,this.log();const e=this.freeTextures[r].pop();return this.usedTextures[r].push(e),e}let i;return a===xA.PACKED_2X2_FLOAT32?i=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):a===xA.PACKED_2X2_FLOAT16?i=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):a===xA.UNPACKED_FLOAT32?i=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):a===xA.UNPACKED_FLOAT16?i=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):a===xA.PACKED_4X1_UNSIGNED_BYTE&&(i=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[r].push(i),this.numUsedTextures++,this._numBytesAllocated+=s,this.log(),i}releaseTexture(e,t,n,a){if(null==this.freeTextures)return;const r=BF(n,a),s=WF(t,r,a);s in this.freeTextures||(this.freeTextures[s]=[]);const i=PF(t,r,this.gpgpu.gl,this.gpgpu.textureConfig,a),o=Ct().getNumber("WEBGL_DELETE_TEXTURE_THRESHOLD");-1!==o&&this._numBytesAllocated>o?(this.gpgpu.deleteMatrixTexture(e.texture),this._numBytesAllocated-=i):(this.freeTextures[s].push(e),this.numFreeTextures++,this._numBytesFree+=i),this.numUsedTextures--;const l=this.usedTextures[s],u=l&&l.indexOf(e);if(null==u||u<0)throw new Error("Cannot release a texture that was never provided by this texture manager");l[u]=l[l.length-1],l.pop(),this.log()}log(){if(!this.logEnabled)return;const e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${e})`);const t=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*t)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(null!=this.freeTextures){for(const e in this.freeTextures)this.freeTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e.texture)}));for(const e in this.usedTextures)this.usedTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e.texture)}));this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function PF(e,t,n,a,r){const s=function(e,t){switch(e){case xA.PACKED_2X2_FLOAT32:return O_(t);case xA.PACKED_2X2_FLOAT16:return M_(t);case xA.UNPACKED_FLOAT32:return __(t);case xA.UNPACKED_FLOAT16:return F_(t);case xA.PACKED_4X1_UNSIGNED_BYTE:return D_(t);default:throw new Error(`Unknown physical texture type ${e}`)}}(t,a);let i;if(r){const[t,n]=kA(e[0],e[1]);i=t*n}else{const[t,n]=vA(e[0],e[1]);i=t*n}const o=function(e,t){const n=e;if(t===n.R32F)return 4;if(t===n.R16F)return 2;if(t===n.RGBA32F)return 16;if(t===e.RGBA)return 16;if(t===n.RGBA16F)return 8;if(t===n.RGBA8)return 4;throw new Error(`Unknown internal format ${t}`)}(n,s);return i*o}function BF(e,t){if(e===bA.UPLOAD)return xA.PACKED_2X2_FLOAT32;if(e===bA.RENDER||null==e)return function(e){return Ct().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?e?xA.PACKED_2X2_FLOAT32:xA.UNPACKED_FLOAT32:e?xA.PACKED_2X2_FLOAT16:xA.UNPACKED_FLOAT16}(t);if(e===bA.DOWNLOAD||e===bA.PIXELS)return xA.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${e}`)}function WF(e,t,n){return`${e[0]}_${e[1]}_${t}_${n}`}class VF{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.enableShapeUniforms=v_(this.outputShape.length),this.userCode=`\n      float unaryOperation(float x) {\n        ${t}\n      }\n\n      void main() {\n        float x = getAAtOutCoords();\n        float y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}const UF="if (isnan(x)) return x;",jF="return abs(x);";const GF=UF+"\n  return (x < 0.0) ? 0.0 : x;\n",HF=UF+"\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",qF="return x;";class KF{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.enableShapeUniforms=v_(this.outputShape.length),this.userCode=`\n      vec4 unaryOperation(vec4 x) {\n        ${t}\n      }\n\n      void main() {\n        vec4 x = getAAtOutCoords();\n        vec4 y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}class XF{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e,this.enableShapeUniforms=v_(this.outputShape.length);const t=e.length,n=OF("rc",t),a=h_(t),r=function(e,t){if(1===e)return"rc";let n="";for(let a=0;a<e;a++)n+=t[a],a<e-1&&(n+=",");return n}(t,n),s=n.slice(-2),i=t<=1?"rc":`vec2(${s.join(",")})`;this.userCode=`\n      void main() {\n        ${a} rc = getOutputCoords();\n        vec4 packedInput = getA(${r});\n\n        setOutput(getChannel(packedInput, ${i}));\n      }\n    `}}const YF=qd,QF={};const ZF=Ct().getNumber("CPU_HANDOFF_SIZE_THRESHOLD");class JF extends We{nextDataId(){return JF.nextDataId++}constructor(e){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!Ct().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let t;if(null!=e){if(e instanceof z_)t=e;else{const n=gA(Ct().getNumber("WEBGL_VERSION"),e);t=new z_(n)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{const e=gA(Ct().getNumber("WEBGL_VERSION"));t=new z_(e),this.binaryCache=((n=Ct().getNumber("WEBGL_VERSION"))in QF||(QF[n]={}),QF[n]),this.gpgpuCreatedLocally=!0}var n;this.gpgpu=t,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new zF(this.gpgpu),this.numMBBeforeWarning=null==Ct().global.screen?1024:Ct().global.screen.height*Ct().global.screen.width*window.devicePixelRatio*600/1024/1024,this.texData=new Be(this,xi())}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}writeTexture(e,t,n,a,r,s){const i=this.makeTensorInfo(t,n),o=this.texData.get(i.dataId);o.isPacked=!1,o.texture={texture:e,texShape:[a,r]},o.texShape=[a,r];const l=PA(t),u=new T_(l,!1,s),c=this.runWebGLProgram(u,[i],n,[[a,r]]);return c.shape=t,o.texture=null,this.disposeIntermediateTensorInfo(i),c.dataId}write(e,t,n){if((Ct().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||Ct().getBool("DEBUG"))&&this.checkNumericalProblems(e),"complex64"===n&&null!=e)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const a={id:this.nextDataId()};return this.texData.set(a,{shape:t,dtype:n,values:e,usage:bA.UPLOAD,refCount:1}),a}refCount(e){if(this.texData.has(e)){return this.texData.get(e).refCount}return 0}incRef(e){this.texData.get(e).refCount++}decRef(e){if(this.texData.has(e)){this.texData.get(e).refCount--}}move(e,t,n,a,r){if(Ct().getBool("DEBUG")&&this.checkNumericalProblems(t),"complex64"===a)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:n,dtype:a,values:t,usage:bA.UPLOAD,refCount:r})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){const t=this.texData.get(e),{values:n,dtype:a,complexTensorInfos:r,slice:s,shape:i,isPacked:o}=t;if(null!=s){let t;t=o?new KF(i,qF):new VF(i,qF);const n=this.runWebGLProgram(t,[{dataId:e,shape:i,dtype:a}],a),r=this.readSync(n.dataId);return this.disposeIntermediateTensorInfo(n),r}if(null!=n)return this.convertAndCacheOnCPU(e);if("string"===a)return n;const l=null!=this.activeTimers;let u,c;if(l&&(u=ys()),"complex64"===a){c=qf(this.readSync(r.real.dataId),this.readSync(r.imag.dataId))}else c=this.getValuesFromTexture(e);return l&&(this.downloadWaitMs+=ys()-u),this.convertAndCacheOnCPU(e,c)}async read(e){if(this.pendingRead.has(e)){const t=this.pendingRead.get(e);return new Promise((e=>t.push(e)))}const t=this.texData.get(e),{values:n,shape:a,slice:r,dtype:s,complexTensorInfos:i,isPacked:o}=t;if(null!=r){let t;t=o?new KF(a,qF):new VF(a,qF);const n=this.runWebGLProgram(t,[{dataId:e,shape:a,dtype:s}],s),r=this.read(n.dataId);return this.disposeIntermediateTensorInfo(n),r}if(null!=n)return this.convertAndCacheOnCPU(e);if(Ct().getBool("DEBUG")&&!Ct().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&2===Ct().getNumber("WEBGL_VERSION"))throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let l,u,c=null;if("complex64"!==s&&Ct().get("WEBGL_BUFFER_SUPPORTED")){l=this.decode(e);const t=this.texData.get(l.dataId);c=this.gpgpu.createBufferFromTexture(t.texture.texture,...wA(a))}if(this.pendingRead.set(e,[]),"complex64"!==s&&await this.gpgpu.createAndWaitForFence(),"complex64"===s){const e=await Promise.all([this.read(i.real.dataId),this.read(i.imag.dataId)]);u=qf(e[0],e[1])}else if(null==c)u=this.getValuesFromTexture(e);else{const e=Ye(a);u=this.gpgpu.downloadFloat32MatrixFromBuffer(c,e)}if(null!=l&&this.disposeIntermediateTensorInfo(l),null!=c){const e=this.gpgpu.gl;SA(e,(()=>e.deleteBuffer(c)))}const p=this.convertAndCacheOnCPU(e,u),d=this.pendingRead.get(e);return this.pendingRead.delete(e),d.forEach((e=>e(p))),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&xi().removeDataId(e,this),this.pendingDeletes--),p}readToGPU(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const n=this.texData.get(e),{values:a,shape:r,slice:s,dtype:i,isPacked:o,texture:l}=n;if("complex64"===i)throw new Error("Does not support reading texture for complex64 dtype.");if(null!=s){let n;n=o?new KF(r,qF):new VF(r,qF);const a=this.runWebGLProgram(n,[{dataId:e,shape:r,dtype:i}],i),s=this.readToGPU(a,t);return this.disposeIntermediateTensorInfo(a),s}if(null==l)throw null!=a?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");const u=this.decode(e,t.customTexShape),c=xi().makeTensorFromTensorInfo(u),p=this.texData.get(u.dataId);return Object.assign({tensorRef:c},p.texture)}bufferSync(e){const t=this.readSync(e.dataId);if("string"===e.dtype)try{const n=t.map((e=>xs(e)));return $o(e.shape,e.dtype,n)}catch(n){throw new Error("Failed to decode encoded string bytes into utf-8")}return $o(e.shape,e.dtype,t)}checkNumericalProblems(e){if(null!=e)for(let t=0;t<e.length;t++){const n=e[t];if(!IA(n)){if(Ct().getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))throw Error(`The value ${n} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`);throw Error(`The value ${n} cannot be represented on this device.`)}}}getValuesFromTexture(e){const{shape:t,dtype:n,isPacked:a}=this.texData.get(e),r=Ye(t);if(Ct().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const n=this.decode(e),a=this.texData.get(n.dataId),s=this.gpgpu.downloadMatrixFromPackedTexture(a.texture.texture,...wA(t)).subarray(0,r);return this.disposeIntermediateTensorInfo(n),s}const s=Ct().getBool("WEBGL_PACK")&&!0===a,i=s?PA(t):t,o=s?new S_(i):new N_(i),l=this.runWebGLProgram(o,[{shape:i,dtype:n,dataId:e}],"float32"),u=this.texData.get(l.dataId),c=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(u.texture.texture,u.texShape[0],u.texShape[1]).subarray(0,r);return this.disposeIntermediateTensorInfo(l),c}timerAvailable(){return Ct().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(e){const t=this.activeTimers,n=[];let a=!1;null==this.programTimersStack?(this.programTimersStack=n,a=!0):this.activeTimers.push(n),this.activeTimers=n,e();const r=ws(this.activeTimers.map((e=>e.query))).filter((e=>null!=e)),s=ws(this.activeTimers.map((e=>e.name))).filter((e=>null!=e));this.activeTimers=t,a&&(this.programTimersStack=null);const i={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return(async()=>{if(Ct().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const e=await Promise.all(r);i.kernelMs=function(e){let t=0;for(let n=0;n<e.length;n++)t+=e[n];return t}(e),i.getExtraProfileInfo=()=>e.map(((e,t)=>({name:s[t],ms:e}))).map((e=>`${e.name}: ${e.ms}`)).join(", ")}else i.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,i})()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return Ct().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:ys(),endMs:null}}endTimer(e){return Ct().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=ys(),e)}async getQueryTime(e){if(Ct().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);const t=e;return t.endMs-t.startMs}disposeData(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(t?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!t&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);const{complexTensorInfos:n}=this.texData.get(e);return null!=n&&(this.disposeData(n.real.dataId,t),this.disposeData(n.imag.dataId,t)),this.texData.delete(e),!0}releaseGPUData(e){const{texture:t,dtype:n,texShape:a,usage:r,isPacked:s,slice:i}=this.texData.get(e),o=i&&i.origDataId||e,l=this.dataRefCount.get(o);l>1?this.dataRefCount.set(o,l-1):(this.dataRefCount.delete(o),null!=t&&(this.numBytesInGPU-=this.computeBytes(a,n),this.textureManager.releaseTexture(t,a,r,s)));const u=this.texData.get(e);u.texture=null,u.texShape=null,u.isPacked=!1,u.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture.texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:ZF;return Ct().getBool("WEBGL_CPU_FORWARD")&&e.every((e=>null==this.texData.get(e.dataId).texture&&Ye(e.shape)<t))}getGPGPUContext(){return this.gpgpu}where(e){jr("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const t=e.dataSync();return YF(e.shape,t)}packedUnaryOp(e,t,n){const a=new KF(e.shape,t),r=this.compileAndRun(a,[e],n);return xi().makeTensorFromTensorInfo(r)}abs(e){if(this.shouldExecuteOnCPU([e])&&"complex64"!==e.dtype){const t=bF(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,t)}if(Ct().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,jF,e.dtype);const t=new VF(e.shape,jF),n=this.compileAndRun(t,[e]);return xi().makeTensorFromTensorInfo(n)}makeTensorInfo(e,t,n){let a;if("string"===t&&null!=n&&n.length>0&&ut(n[0])){const r=n.map((e=>bs(e)));a=this.write(r,e,t)}else a=this.write(n,e,t);return this.texData.get(a).usage=null,{dataId:a,shape:e,dtype:t}}makeOutput(e,t,n){return xi().makeTensorFromTensorInfo(this.makeTensorInfo(e,t,n),this)}unpackTensor(e){const t=new XF(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){const t=new MF(e.shape);return this.runWebGLProgram(t,[e],e.dtype,null,!0)}packedReshape(e,t){const n=[LA(e.shape),...zA(e.shape)],a={dtype:e.dtype,shape:n,dataId:e.dataId},r=[LA(t),...zA(t)],s=new LF(r,n),i=[n],o=this.runWebGLProgram(s,[a],e.dtype,i,!0);return{dataId:o.dataId,shape:t,dtype:o.dtype}}decode(e,t){const n=this.texData.get(e),{isPacked:a,shape:r,dtype:s}=n;if(null!=t){qe(Ye(r)<=t[0]*t[1]*4,(()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data."))}const i=PA(r);let o;o=a?new k_(i):new w_(i);const l=[null!=t?t:wA(i)];return{dtype:s,shape:r,dataId:this.runWebGLProgram(o,[{shape:i,dtype:s,dataId:e}],s,l,!0,t).dataId}}runWebGLProgram(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]&&arguments[4],s=arguments.length>5?arguments[5]:void 0;const i=this.makeTensorInfo(e.outputShape,n),o=this.texData.get(i.dataId);if(e.packedOutput&&(o.isPacked=!0),e.outPackingScheme===yA.DENSE){const t=null!=s?s:wA(e.outputShape);o.texShape=t.map((e=>2*e))}if(null!=e.outTexUsage&&(o.usage=e.outTexUsage),0===Ye(i.shape))return o.values=st(i.dtype,0),i;const l=[],u=t.map((t=>{if("complex64"===t.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let n=this.texData.get(t.dataId);if(null==n.texture){if(!e.packedInputs&&Ye(t.shape)<=Ct().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:t.shape,texData:null,isUniform:!0,uniformValues:n.values};e.packedInputs&&(n.isPacked=!0,n.shape=t.shape)}if(this.uploadToGPU(t.dataId),!!n.isPacked!==!!e.packedInputs)t=n.isPacked?this.unpackTensor(t):this.packTensor(t),l.push(t),n=this.texData.get(t.dataId);else if(n.isPacked&&!WA(n.shape,t.shape)){const e=t,a=t.shape;t.shape=n.shape,t=this.packedReshape(t,a),l.push(t),n=this.texData.get(t.dataId),e.shape=a}return{shape:t.shape,texData:n,isUniform:!1}}));this.uploadToGPU(i.dataId);const c={shape:i.shape,texData:o,isUniform:!1},p=function(e,t,n){let a="";t.concat(n).forEach((t=>{const r=null!=t.texData&&null!=t.texData.slice&&t.texData.slice.flatOffset>0;if(e.enableShapeUniforms&&!t.isUniform){const s=t.texData.texShape,{useSqueezeShape:i,uniformShape:o,keptDims:l}=f_(e.packedInputs,t.shape,s);let u="",c="",p="";if(1===o.length&&e.packedInputs){const e=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];u=`${e[0]>1}_${e[1]>1}`}else if(2!==o.length||e.packedInputs){if(o.length>2&&!e.packedInputs){const e=ft(o);p=`${e[0]===s[1]}_${e[e.length-1]===s[1]}`}}else c=`${o[0]>1}_${o[1]>1}`;const d=t.shape.length,h=2===o.length&&Qe(t.shape,s),f=1===Ye(t.shape),m=tl(t.shape,n.shape),g=!e.packedInputs&&d===n.shape.length&&Qe(s,n.texData.texShape),y=e.packedInputs||o.length>2?"":`${s[0]>1}_${s[1]>1}`;a+=`${d}_${g}_${i?l:""}_${o.length}_${f}_${m}_${h}_${u}_${c}_${p}_${y}_${r}`}else{const e=t.isUniform?"uniform":t.texData.texShape;a+=`${t.shape}_${e}_${r}`}}));const r=e.userCode;let s=e.constructor.name;return s+="_"+a+"_"+r+`${Ct().getNumber("WEBGL_VERSION")}`,s}(e,u,c),d=this.getAndSaveBinary(p,(()=>y_(this.gpgpu,e,u,c))),h=null!=this.activeTimers;let f;h&&(f=this.startTimer()),Ct().get("ENGINE_COMPILE_ONLY")||function(e,t,n,a,r){t.program.enableShapeUniforms||(x_(t.inShapeInfos,n),x_([t.outShapeInfo],[a]));const s=a.texData.texture,i=a.texData.texShape;a.texData.isPacked?e.setOutputPackedMatrixTexture(s.texture,i[0],i[1]):e.setOutputMatrixTexture(s.texture,i[0],i[1]),e.setProgram(t.webGLProgram),e.bindVertexArray(t.webGLProgram.vao),1===Ct().getNumber("WEBGL_VERSION")&&null!==t.infLoc&&e.gl.uniform1f(t.infLoc,1/0),null!==t.nanLoc&&e.gl.uniform1f(t.nanLoc,NaN);for(let l=0;l<n.length;++l){const a=n[l],{uniform:r,offset:s,shape:i,texShape:o}=t.variablesLocations[l];if(i){const{uniformShape:n}=f_(t.program.packedInputs,a.shape,a.texData.texShape);switch(n.length){case 1:e.gl.uniform1iv(i,new Int32Array(n));break;case 2:e.gl.uniform2iv(i,new Int32Array(n));break;case 3:e.gl.uniform3iv(i,new Int32Array(n));break;case 4:e.gl.uniform4iv(i,new Int32Array(n))}}if(o&&e.gl.uniform2i(o,a.texData.texShape[0],a.texData.texShape[1]),null!=r)if(a.isUniform)if(Ye(a.shape)<2)e.gl.uniform1f(r,a.uniformValues[0]);else{let t=a.uniformValues;t instanceof Float32Array||(t=new Float32Array(t)),e.gl.uniform1fv(r,t)}else null!=a.texData.slice&&null!=s&&e.gl.uniform1i(s,a.texData.slice.flatOffset),e.setInputMatrixTexture(a.texData.texture.texture,r,l)}const o=t.outShapeLocation;if(o)switch(a.shape.length){case 1:e.gl.uniform1iv(o,new Int32Array(a.shape));break;case 2:e.gl.uniform2iv(o,new Int32Array(a.shape));break;case 3:e.gl.uniform3iv(o,new Int32Array(a.shape));break;case 4:e.gl.uniform4iv(o,new Int32Array(a.shape))}if(t.outShapeStridesLocation){const n=ft(a.shape);switch(a.shape.length){case 2:e.gl.uniform1iv(t.outShapeStridesLocation,new Int32Array(n));break;case 3:e.gl.uniform2iv(t.outShapeStridesLocation,new Int32Array(n));break;case 4:e.gl.uniform3iv(t.outShapeStridesLocation,new Int32Array(n))}}if(t.outTexShapeLocation&&e.gl.uniform2i(t.outTexShapeLocation,a.texData.texShape[0],a.texData.texShape[1]),t.program.customUniforms&&r)for(let l=0;l<t.program.customUniforms.length;++l){const n=t.program.customUniforms[l],a=t.customUniformLocations[l],s=r[l];if("float"===n.type)e.gl.uniform1fv(a,s);else if("vec2"===n.type)e.gl.uniform2fv(a,s);else if("vec3"===n.type)e.gl.uniform3fv(a,s);else if("vec4"===n.type)e.gl.uniform4fv(a,s);else if("int"===n.type)e.gl.uniform1iv(a,s);else if("ivec2"===n.type)e.gl.uniform2iv(a,s);else if("ivec3"===n.type)e.gl.uniform3iv(a,s);else{if("ivec4"!==n.type)throw Error(`uniform type ${n.type} is not supported yet.`);e.gl.uniform4iv(a,s)}}e.executeProgram()}(this.gpgpu,d,u,c,a),l.forEach((e=>this.disposeIntermediateTensorInfo(e))),h&&(f=this.endTimer(f),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(f)}));const m=Ct().getNumber("WEBGL_FLUSH_THRESHOLD");if(m>0){const e=ys();e-this.lastGlFlushTime>m&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=e)}if(!Ct().getBool("WEBGL_LAZILY_UNPACK")&&o.isPacked&&!1===r){const e=this.unpackTensor(i);return this.disposeIntermediateTensorInfo(i),e}return i}compileAndRun(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]&&arguments[4];n=n||t[0].dtype;return this.runWebGLProgram(e,t,n,a,r)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){if(!this.disposed){if(!Ct().getBool("IS_TEST")){Object.keys(this.binaryCache).forEach((e=>{this.gpgpu.deleteProgram(this.binaryCache[e].webGLProgram),delete this.binaryCache[e]}))}this.textureManager.dispose(),null!=this.canvas&&"undefined"!==typeof HTMLCanvasElement&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0}}floatPrecision(){return null==this.floatPrecisionValue&&(this.floatPrecisionValue=wi((()=>{if(!Ct().get("WEBGL_RENDER_FLOAT32_ENABLED")){const e=Ct().getBool("DEBUG");Ct().set("DEBUG",!1);const t=this.abs(Wo(1e-8)).dataSync()[0];if(Ct().set("DEBUG",e),t>0)return 32}return 16}))),this.floatPrecisionValue}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}uploadToGPU(e){const t=this.texData.get(e),{shape:n,dtype:a,values:r,texture:s,usage:i,isPacked:o}=t;if(null!=s)return;const l=null!=this.activeTimers;let u;l&&(u=ys());let c=t.texShape;if(null==c&&(c=function(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=Ct().getNumber("WEBGL_MAX_TEXTURE_SIZE"),a=Ct().getNumber("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE");if(a===1/0&&Ct().getBool("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE")&&(a=n/2),t&&(n*=2,a*=2,1===(e=e.map(((t,n)=>n>=e.length-2?Ge(e[n]):e[n]))).length&&(e=[2,e[0]])),2!==e.length){const t=rt(e);e=t.newShape}let r=Ye(e),s=null;e.length<=1&&r<=n?s=[1,r]:2===e.length&&e[0]<=n&&e[1]<=n?s=e:3===e.length&&e[0]*e[1]<=n&&e[2]<=n?s=[e[0]*e[1],e[2]]:3===e.length&&e[0]<=n&&e[1]*e[2]<=n?s=[e[0],e[1]*e[2]]:4===e.length&&e[0]*e[1]*e[2]<=n&&e[3]<=n?s=[e[0]*e[1]*e[2],e[3]]:4===e.length&&e[0]<=n&&e[1]*e[2]*e[3]<=n&&(s=[e[0],e[1]*e[2]*e[3]]);const i=null!=s&&Math.max(...s)>a&&Math.min(...s)<=(t?2:1)&&Math.min(...s)>0;if(null==s||i)if(t){const t=LA(e);let n=2,a=2;e.length&&([n,a]=zA(e)),r=t*(n/2)*(a/2),s=Je(r).map((e=>2*e))}else s=Je(r);return s}(n,o),t.texShape=c),null!=r){const e=PA(n);let s,i=c[1],p=c[0];const d=r instanceof Uint8Array||r instanceof Uint8ClampedArray;!o&&d||([i,p]=kA(c[0],c[1])),s=o?new C_(e,d):new T_(e,d);const h=d?[p,i]:c,f=this.makeTensorInfo(h,a),m=this.texData.get(f.dataId);m.usage=d?bA.PIXELS:bA.UPLOAD,m.texShape=h,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(f.dataId),i,p,r);const g=[[p,i]],y=!0,b=this.runWebGLProgram(s,[f],a,g,y),x=this.texData.get(b.dataId);t.texShape=x.texShape,t.isPacked=x.isPacked,t.usage=x.usage,Ct().get("ENGINE_COMPILE_ONLY")?this.disposeData(b.dataId):(t.texture=x.texture,t.values=null,this.texData.delete(b.dataId)),this.disposeIntermediateTensorInfo(f),l&&(this.uploadWaitMs+=ys()-u)}else{const e=this.acquireTexture(c,i,a,o);t.texture=e}}convertAndCacheOnCPU(e,t){const n=this.texData.get(e),{dtype:a}=n;return null!=t&&(n.values=function(e,t){if("float32"===t||"complex64"===t)return e;if("int32"===t||"bool"===t){const n="int32"===t?new Int32Array(e.length):new Uint8Array(e.length);for(let t=0;t<n.length;++t)n[t]=Math.round(e[t]);return n}throw new Error(`Unknown dtype ${t}`)}(t,a)),n.values}acquireTexture(e,t,n,a){if(this.numBytesInGPU+=this.computeBytes(e,n),!this.warnedAboutMemory&&this.numBytesInGPU>1024*this.numMBBeforeWarning*1024){const e=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${e} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,t,a)}computeBytes(e,t){return e[0]*e[1]*lt(t)}checkCompileCompletion(){for(const[,e]of Object.entries(this.binaryCache))this.checkCompletion_(e)}async checkCompileCompletionAsync(){const e=[];if(this.gpgpu.parallelCompilationExtension){for(const[,t]of Object.entries(this.binaryCache))e.push(this.checkCompletionAsync_(t));return Promise.all(e)}for(const[,t]of Object.entries(this.binaryCache)){const n=new Promise((e=>{try{this.checkCompletion_(t),e(!0)}catch(n){throw n}}));e.push(n)}return Promise.all(e)}async checkCompletionAsync_(e){return this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.parallelCompilationExtension.COMPLETION_STATUS_KHR)?this.checkCompletion_(e):(await kf(),this.checkCompletionAsync_(e))}checkCompletion_(e){if(!1===this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.gl.LINK_STATUS)){if(console.log(this.gpgpu.gl.getProgramInfoLog(e.webGLProgram)),!1===this.gpgpu.gl.getShaderParameter(e.fragmentShader,this.gpgpu.gl.COMPILE_STATUS))throw EA(e.source,this.gpgpu.gl.getShaderInfoLog(e.fragmentShader)),new Error("Failed to compile fragment shader.");throw new Error("Failed to link vertex and fragment shaders.")}return!0}getUniformLocations(){for(const e of Object.values(this.binaryCache)){this.gpgpu.buildVao(e.webGLProgram);const{variablesLocations:t,customUniformLocations:n,infLoc:a,nanLoc:r,outShapeLocation:s,outShapeStridesLocation:i,outTexShapeLocation:o}=b_(this.gpgpu,e.program,e.webGLProgram);e.variablesLocations=t,e.customUniformLocations=n,e.infLoc=a,e.nanLoc=r,e.outShapeLocation=s,e.outShapeStridesLocation=i,e.outTexShapeLocation=o}}createTensorFromGPUData(e,t,n){e.channels=e.channels||"RGBA";const{texture:a,height:r,width:s,channels:i}=e,o=xi().backend;if(!o.gpgpu.gl.isTexture(a))throw new Error("The texture is invalid. Also, please make sure the texture and the TFJS WebGL backend are using the same canvas. If you want to use your own custom canvas, you have to create and use the custom TFJS WebGL backend created from the canvas through 'new tf.MathBackendWebGL(customCanvas)'.");const l=o.writeTexture(a,t,n,r,s,i);return xi().makeTensorFromDataId(l,t,n,o)}}JF.nextDataId=0;si()&&Si("webgl",(()=>new JF),2);const eD="\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n";class tD{constructor(e,t,n){this.variableNames=["A","B"],this.outputShape=al(t,n),this.enableShapeUniforms=v_(this.outputShape.length),this.userCode=`\n      float binaryOperation(float a, float b) {\n        ${e}\n      }\n\n      void main() {\n        float a = getAAtOutCoords();\n        float b = getBAtOutCoords();\n        setOutput(binaryOperation(a, b));\n      }\n    `}}const nD="\n  result.r = isNaN.r ? NAN : result.r;\n  result.g = isNaN.g ? NAN : result.g;\n  result.b = isNaN.b ? NAN : result.b;\n  result.a = isNaN.a ? NAN : result.a;\n";class aD{constructor(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=al(t,n);const r=this.outputShape.length;this.enableShapeUniforms=v_(r);let s="";if(a)if(0===r||1===Ye(this.outputShape))s="\n          result.y = 0.;\n          result.z = 0.;\n          result.w = 0.;\n        ";else{if(s=`\n          ${h_(r)} coords = getOutputCoords();\n        `,1===r)this.enableShapeUniforms?s+="\n            result.y = (coords + 1) >= outShape ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          ":s+=`\n            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          `;else{const e=OF("coords",r);this.enableShapeUniforms?s+=`\n            bool nextRowOutOfBounds =\n              (${e[r-2]} + 1) >= outShape[${r} - 2];\n            bool nextColOutOfBounds =\n              (${e[r-1]} + 1) >= outShape[${r} - 1];\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `:s+=`\n            bool nextRowOutOfBounds =\n              (${e[r-2]} + 1) >= ${this.outputShape[r-2]};\n            bool nextColOutOfBounds =\n              (${e[r-1]} + 1) >= ${this.outputShape[r-1]};\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `}}this.userCode=`\n      vec4 binaryOperation(vec4 a, vec4 b) {\n        ${e}\n      }\n\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n\n        vec4 result = binaryOperation(a, b);\n        ${s}\n\n        setOutput(result);\n      }\n    `}}function rD(e){const{inputs:t,backend:n}=e,{x:a}=t;return n.incRef(a.dataId),{dataId:a.dataId,shape:a.shape,dtype:a.dtype}}const sD={kernelName:Kn,backendName:"webgl",kernelFunc:rD};function iD(e){const{inputs:t,backend:n}=e,{real:a,imag:r}=t,s=n.makeTensorInfo(a.shape,"complex64"),i=n.texData.get(s.dataId),o=rD({inputs:{x:a},backend:n}),l=rD({inputs:{x:r},backend:n});return i.complexTensorInfos={real:o,imag:l},s}const oD={kernelName:rn,backendName:"webgl",kernelFunc:iD},lD="return (a < 0.) ? b * a : a;",uD="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n";const cD={kernelName:ea,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{alpha:s}=a,i=n.makeTensorInfo([],"float32",ms(s,"float32")),o=Ct().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new aD(uD,r.shape,i.shape):new tD(lD,r.shape,i.shape),l=n.runWebGLProgram(o,[r,i],"float32");return n.disposeIntermediateTensorInfo(i),l}},pD="return (a < 0.) ? b * a : a;",dD="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n";const hD={kernelName:Oa,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:a,alpha:r}=t,s=Ct().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new aD(dD,a.shape,r.shape):new tD(pD,a.shape,r.shape);return n.runWebGLProgram(s,[a,r],"float32")}},fD="if (isnan(x)) return x;";function mD(e){let{opSnippet:t,packedOpSnippet:n,cpuKernelImpl:a,dtype:r}=e;return e=>{let{inputs:s,backend:i}=e;const{x:o}=s,l=i,u=r||o.dtype;if(l.shouldExecuteOnCPU([o])&&null!=a){const e=l.texData.get(o.dataId),t=a(e.values,u);return l.makeTensorInfo(o.shape,u,t)}let c;return c=Ct().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&null!=n?new KF(o.shape,n):new VF(o.shape,t),l.runWebGLProgram(c,[o],u)}}function gD(e){let{opSnippet:t,packedOpSnippet:n,checkOutOfBounds:a=!1,supportsComplex:r=!1,cpuKernelImpl:s,dtype:i}=e;return e=>{let{inputs:o,backend:l}=e;const{a:u,b:c}=o,p=l;if(r&&"complex64"===u.dtype){const e=p.texData.get(u.dataId),n=p.texData.get(c.dataId),[a,r]=[[e.complexTensorInfos.real,n.complexTensorInfos.real],[e.complexTensorInfos.imag,n.complexTensorInfos.imag]].map((e=>{const[n,a]=e,r={dataId:n.dataId,dtype:n.dtype,shape:u.shape},s={dataId:a.dataId,dtype:a.dtype,shape:c.shape},i=new tD(t,u.shape,c.shape);return p.runWebGLProgram(i,[r,s],Us(n.dtype,a.dtype))})),s=iD({inputs:{real:a,imag:r},backend:p});return p.disposeIntermediateTensorInfo(a),p.disposeIntermediateTensorInfo(r),s}const d=i||Us(u.dtype,c.dtype);if(("string"===u.dtype||"string"===c.dtype||p.shouldExecuteOnCPU([u,c]))&&null!=s){const e=p.texData.get(u.dataId).values,t=p.texData.get(c.dataId).values,n="string"===u.dtype?Cm(e):e,a="string"===u.dtype?Cm(t):t,[r,i]=s(u.shape,c.shape,n,a,d),o=p.makeTensorInfo(i,d);return p.texData.get(o.dataId).values=r,o}let h;return h=Ct().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&null!=n?new aD(n,u.shape,c.shape,a):new tD(t,u.shape,c.shape),p.runWebGLProgram(h,[u,c],d)}}function yD(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if("linear"===e)return"return x;";if("relu"===e)return t?"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":GF;if("elu"===e)return t?"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n":"return (x >= 0.0) ? x : (exp(x) - 1.0);";if("relu6"===e)return t?"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":HF;if("prelu"===e)return t?dD:pD;if("leakyrelu"===e)return t?uD:lD;if("sigmoid"===e)return"return 1.0 / (1.0 + exp(-1.0 * x));";throw new Error(`Activation ${e} has not been implemented for the WebGL backend.`)}class bD{constructor(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r=arguments.length>4&&void 0!==arguments[4]&&arguments[4],s=arguments.length>5&&void 0!==arguments[5]&&arguments[5],i=arguments.length>6&&void 0!==arguments[6]?arguments[6]:null,o=arguments.length>7&&void 0!==arguments[7]&&arguments[7],l=arguments.length>8&&void 0!==arguments[8]&&arguments[8];this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n,this.enableShapeUniforms=v_(this.outputShape.length);const u=a?e[1]:e[2],c=Math.ceil(u/2),p=a?"i * 2, rc.y":"rc.y, i * 2",d=r?"rc.z, i * 2":"i * 2, rc.z",h=a?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],f=r?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let m="",g="";i&&(m=o?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${i}\n        }`:l?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${i}\n        }`:`vec4 activation(vec4 x) {\n          ${i}\n        }`,g="result = activation(result);");const y=s?"result += getBiasAtOutCoords();":"";s&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),l&&this.variableNames.push("leakyreluAlpha");let b="rc.x",x="rc.x";e[0]<t[0]?b=`imod(rc.x, ${e[0]})`:t[0]<e[0]&&(x=`imod(rc.x, ${t[0]})`),this.userCode=`\n      ${m}\n      // Don't use uniform for sharedDimensionPacked for performance.\n      const float sharedDimension = ${c}.0;\n\n      vec4 dot2x2ARowBCol(ivec3 rc) {\n        vec4 result = vec4(0);\n        int batchA = ${b};\n        int batchB = ${x};\n        for (int i = 0; i < ${c}; i++) {\n          vec4 a = getMatrixA(batchA, ${p});\n          vec4 b = getMatrixB(batchB, ${d});\n\n          // These swizzled products need to be separately added.\n          // See: https://github.com/tensorflow/tfjs/issues/1735\n          result += (${h[0]} * ${f[0]});\n          result += (${h[1]} * ${f[1]});\n        }\n        return result;\n      }\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n        vec4 result = dot2x2ARowBCol(rc);\n\n        ${y}\n\n        ${g}\n\n        setOutput(result);\n      }\n    `}}const xD="return areal * breal - aimag * bimag;",vD="return areal * bimag + aimag * breal;";class wD{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=al(t,n),this.userCode=`\n      float binaryOpComplex(\n          float areal, float aimag, float breal, float bimag) {\n        ${e}\n      }\n\n      void main() {\n        float areal = getARealAtOutCoords();\n        float aimag = getAImagAtOutCoords();\n        float breal = getBRealAtOutCoords();\n        float bimag = getBImagAtOutCoords();\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\n      }\n    `}}const kD="return a * b;";function ND(e){const{inputs:t,backend:n}=e,{a:a,b:r}=t,s=Us(a.dtype,r.dtype);if("complex64"===a.dtype){const e=n.texData.get(a.dataId),t=n.texData.get(r.dataId),s=new wD(xD,a.shape,r.shape),i=new wD(vD,a.shape,r.shape),o=[{dataId:e.complexTensorInfos.real.dataId,dtype:e.complexTensorInfos.real.dtype,shape:a.shape},{dataId:e.complexTensorInfos.imag.dataId,dtype:e.complexTensorInfos.imag.dtype,shape:a.shape},{dataId:t.complexTensorInfos.real.dataId,dtype:t.complexTensorInfos.real.dtype,shape:r.shape},{dataId:t.complexTensorInfos.imag.dataId,dtype:t.complexTensorInfos.imag.dtype,shape:r.shape}],l=n.runWebGLProgram(s,o,"float32"),u=n.runWebGLProgram(i,o,"float32"),c=iD({inputs:{real:l,imag:u},backend:n});return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(u),c}if(n.shouldExecuteOnCPU([a,r])){const e=n.texData.get(a.dataId),t=n.texData.get(r.dataId),[i,o]=oF(a.shape,r.shape,e.values,t.values,s),l=n.makeTensorInfo(o,s);return n.texData.get(l.dataId).values=i,l}let i;return i=Ct().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new aD(kD,a.shape,r.shape):new tD(kD,a.shape,r.shape),n.runWebGLProgram(i,[a,r],s)}const SD={kernelName:Sa,backendName:"webgl",kernelFunc:ND};function ID(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{shape:s}=a,i=n,o=Ye(r.shape),l=nt(s,o),u=Ye(l);qe(o===u,(()=>`The new shape (${l}) has ${u} elements and the old shape (${r.shape}) has ${o} elements. The new shape and old shape must have the same number of elements.`));const c=i.texData.get(r.dataId);return!c.isPacked||WA(r.shape,l)||null!==c.texture&&WA(c.shape,l)?(i.incRef(r.dataId),{dataId:r.dataId,shape:l,dtype:r.dtype}):function(e,t,n){const a=[LA(e.shape),...zA(e.shape)],r={dtype:e.dtype,shape:a,dataId:e.dataId},s=[LA(t),...zA(t)],i=new LF(s,a),o=[a],l=n.runWebGLProgram(i,[r],e.dtype,o,!0);return{dataId:l.dataId,shape:t,dtype:l.dtype}}(r,l,i)}const TD={kernelName:ja,backendName:"webgl",kernelFunc:ID};class CD{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:a,inSize:r,outSize:s}=e;this.outputShape=[a,s];const i=4*Math.floor(n/4),o=n%4;let l="sumValue += dot(values, ones);";if(null!=t){const e=1/t;l=`sumValue += dot(values * ${Ze(e)?e.toPrecision(2):e}, ones);`}let u="";r%n>0&&(u=`\n        if (inIdx < 0 || inIdx >= ${r}) {\n          return 0.0;\n        }\n      `),this.userCode=`\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${u}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${i}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${l}\n        }\n\n        int inIdx = inOffset + ${i};\n        if (${1===o}) {\n          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);\n\n          ${l}\n        } else if (${2===o}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1), 0.0, 0.0);\n\n          ${l}\n        } else if (${3===o}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2), 0.0);\n\n          ${l}\n        }\n        setOutput(sumValue);\n      }\n    `}}class ED{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:a,inSize:r,outSize:s}=e;this.outputShape=[a,s];let i="0.0",o="";"prod"===t?i="1.0":"min"===t?(i="1.0 / 1e-20",o="min"):"max"===t&&(i="-1.0 / 1e-20",o="max");let l=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"sum"===t?l="sumValue":"prod"===t?l="prodValue":"all"===t?l="allValue":"any"===t&&(l="anyValue");const u=4*Math.floor(n/4),c=n%4;let p=`\n      if (${"sum"===t}) {\n        sumValue += dot(values, ones);\n      } else if (${"prod"===t}) {\n        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);\n        prodValue *= tmp[0] * tmp[1];\n      } else {\n        minMaxValue = ${o}(values, minMaxValue);\n        if (${"min"===t} || ${"max"===t}) {\n          minMaxValue = ${o}(values, minMaxValue);\n          bvec4 isNaN = isnan(values);\n          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {\n            minMaxValue = vec4(NAN);\n          }\n        }\n      }\n    `,d="vec4";"all"===t?(i="1.0",p="\n        bool reducedAllValue = all(values);\n        float floatedReducedAllValue = float(reducedAllValue);\n        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);\n      ",d="bvec4"):"any"===t&&(i="0.0",p="\n        bool reducedAnyValue = any(values);\n        float floatedReducedAnyValue = float(reducedAnyValue);\n        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);\n      ",d="bvec4");let h="";r%n>0&&(h=`\n        if (inIdx < 0 || inIdx >= ${r}) {\n          return initializationValue;\n        }\n      `),this.userCode=`\n      const float initializationValue = ${i};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${h}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        vec4 minMaxValue = vec4(${i});\n        float prodValue = 1.0;\n        float sumValue = 0.0;\n        float allValue = 1.0;\n        float anyValue = 0.0;\n\n        for (int i = 0; i < ${u}; i += 4) {\n          int inIdx = inOffset + i;\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${p}\n        }\n\n        int inIdx = inOffset + ${u};\n        if (${1===c}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          ${p}\n        } else if (${2===c}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          ${p}\n        } else if (${3===c}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          ${p}\n        }\n        setOutput(${l});\n      }\n    `}}function $D(e,t,n,a){const r=function(e){const t=[];for(;0===t.length||1!==t[t.length-1].outSize;){const n=t.length?t[t.length-1].outSize:e[1],a=Af(n);t.push({inSize:n,windowSize:a,outSize:Math.ceil(n/a)})}return t}(e.shape);let s=e;for(let i=0;i<r.length;i++){const{inSize:o,windowSize:l,outSize:u}=r[i];let c,p;c="mean"===n?0===i?new CD({windowSize:l,inSize:o,batchSize:e.shape[0],outSize:u},o):new CD({windowSize:l,inSize:o,batchSize:e.shape[0],outSize:u}):new ED({windowSize:l,inSize:o,batchSize:e.shape[0],outSize:u},n),p=s,s=a.runWebGLProgram(c,[s],t),p.dataId!==e.dataId&&a.disposeIntermediateTensorInfo(p)}return s}class RD{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let s=0;s<n.length;s++)n[s]=e[t[s]];this.outputShape=n,this.rank=n.length;const a=h_(this.rank),r=function(e){const t=e.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],a=new Array(t);for(let r=0;r<e.length;r++)a[e[r]]=n[r];return a.join()}(t);this.userCode=`\n    void main() {\n      ${a} resRC = getOutputCoords();\n      setOutput(getA(${r}));\n    }\n    `}}class AD{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const n=new Array(e.length);for(let u=0;u<n.length;u++)n[u]=e[t[u]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const a=h_(this.rank),r=DF("rc",this.rank),s=new Array(this.rank);for(let u=0;u<t.length;u++)s[t[u]]=r[u];const i=`vec2(${s.slice(-2).join()})`,o=`++${r[this.rank-1]} < ${n[this.rank-1]}`,l=`getChannel(getA(${s.join()}), ${i})`;this.userCode=`\n    void main() {\n      ${a} rc = getOutputCoords();\n      vec4 result = vec4(0.);\n      result[0] = ${l};\n      if(${o}) {\n        result[1] = ${l};\n      }\n      --${r[this.rank-1]};\n      if(++${r[this.rank-2]} < ${n[this.rank-2]}) {\n        result[2] = ${l};\n        if(${o}) {\n          result[3] = ${l};\n        }\n      }\n      setOutput(result);\n    }\n    `}}function _D(e,t,n){const a=Ct().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new AD(e.shape,t):new RD(e.shape,t);return n.runWebGLProgram(a,[e],e.dtype)}function FD(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,keepDims:i}=a;return function(e,t,n,a){const r=t,s=e.shape.length,i=at(r,e.shape);let o=i;const l=Ic(o,s),u=null!=l;let c=e;u&&(c=_D(e,l,a),o=Cc(o.length,s)),Sc("sum",o,s);const[p,d]=kc(c.shape,o);let h=p;n&&(h=Nc(p,i));const f=Ye(d),m=ID({inputs:{x:c},attrs:{shape:[Ye(e.shape)/f,f]},backend:a}),g=$D(m,js(e.dtype),"sum",a),y=ID({inputs:{x:g},attrs:{shape:h},backend:a});return a.disposeIntermediateTensorInfo(m),a.disposeIntermediateTensorInfo(g),u&&a.disposeIntermediateTensorInfo(c),y}(r,s,i,n)}const DD={kernelName:pr,backendName:"webgl",kernelFunc:FD};function OD(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{perm:s}=a,i=n,o=r.shape.length,l=new Array(o);for(let c=0;c<l.length;c++)l[c]=r.shape[s[c]];let u;if(i.shouldExecuteOnCPU([r])){const e=i.texData.get(r.dataId).values,t=_F(e,r.shape,r.dtype,s,l);u=i.makeTensorInfo(l,r.dtype);i.texData.get(u.dataId).values=t}else u=_D(r,s,i);return u}const MD={kernelName:Fr,backendName:"webgl",kernelFunc:OD};function LD(e){let{a:t,b:n,transposeA:a,transposeB:r,backend:s,bias:i=null,preluActivationWeights:o=null,leakyreluAlpha:l=0,activation:u=null}=e;const c=t.shape.length,p=n.shape.length,d=a?t.shape[c-2]:t.shape[c-1],h=r?n.shape[p-1]:n.shape[p-2],f=a?t.shape[c-1]:t.shape[c-2],m=r?n.shape[p-2]:n.shape[p-1],g=t.shape.slice(0,-2),y=n.shape.slice(0,-2),b=Ye(g),x=Ye(y),v=al(t.shape.slice(0,-2),n.shape.slice(0,-2)).concat([f,m]);qe(d===h,(()=>`Error in matMul: inner shapes (${d}) and (${h}) of Tensors with shapes ${t.shape} and ${n.shape} and transposeA=${a} and transposeB=${r} must match.`));const w=a?[b,d,f]:[b,f,d],k=r?[x,m,h]:[x,h,m],N=ID({inputs:{x:t},backend:s,attrs:{shape:w}}),S=ID({inputs:{x:n},backend:s,attrs:{shape:k}}),I=[N,S],T=Math.max(b,x),C=a?N.shape[1]:N.shape[2],E=null!=i,$=null!=o,R="leakyrelu"===u,A=null!=u?yD(u,!0):null;let _;if((1===f||1===m)&&C>1e3&&!1===(E||$||R||null!=A)){let e=N,t=S;a&&(e=OD({inputs:{x:N},backend:s,attrs:{perm:[0,2,1]}}),I.push(e)),r&&(t=OD({inputs:{x:S},backend:s,attrs:{perm:[0,2,1]}}),I.push(t));const n=1===m;let i=e;1!==m&&(i=ID({inputs:{x:e},backend:s,attrs:{shape:[T,C,1]}}),I.push(i));const o=1===m?2:1;let l=t;n&&(l=ID({inputs:{x:t},backend:s,attrs:{shape:[T,1,C]}}),I.push(l));const u=ND({inputs:{a:i,b:l},backend:s});_=FD({inputs:{x:u},backend:s,attrs:{axis:o,keepDims:!0}}),I.push(u)}else{const e=Us(t.dtype,n.dtype),u=new bD(w,k,[T,f,m],a,r,E,A,$,R),c=[N,S];if(null!=i&&c.push(i),$&&c.push(o),R){const e=s.makeTensorInfo([],"float32",ms(l,"float32"));c.push(e),I.push(e)}_=s.runWebGLProgram(u,c,e)}const F=ID({inputs:{x:_},backend:s,attrs:{shape:v}});I.push(_);for(const D of I)s.disposeIntermediateTensorInfo(D);return F}const zD={kernelName:Wr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{a:r,b:s,bias:i,preluActivationWeights:o}=t,{transposeA:l,transposeB:u,activation:c,leakyreluAlpha:p}=a;return LD({a:r,b:s,transposeA:l,transposeB:u,backend:n,bias:i,preluActivationWeights:o,leakyreluAlpha:p,activation:c})}},PD="return abs(x);";const BD={kernelName:_t,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:a}=t;if(n.shouldExecuteOnCPU([a])&&"complex64"!==a.dtype){const e=n.texData.get(a.dataId),t=bF(e.values);return n.makeTensorInfo(a.shape,a.dtype,t)}let r;return r=Ct().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new KF(a.shape,PD):new VF(a.shape,PD),n.runWebGLProgram(r,[a],a.dtype)}},WD=mD({opSnippet:UF+"\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return acos(x);\n"}),VD={kernelName:Ft,backendName:"webgl",kernelFunc:WD},UD=mD({opSnippet:UF+"\n  if (x < 1.0) return NAN;\nreturn log(x + sqrt(x * x - 1.0));"}),jD={kernelName:Dt,backendName:"webgl",kernelFunc:UD},GD="return a + b;",HD=gD({opSnippet:GD,packedOpSnippet:GD,supportsComplex:!0,cpuKernelImpl:P_}),qD={kernelName:Ot,backendName:"webgl",kernelFunc:HD};class KD{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map(((e,t)=>`T${t}`));const n=[];this.variableNames.forEach((e=>{n.push(`float v${e} = get${e}AtOutCoords();`)}));const a=this.variableNames.map((e=>`v${e}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        float result = ${a};\n        setOutput(result);\n      }\n    `}}class XD{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map(((e,t)=>`T${t}`));const n=[];this.variableNames.forEach((e=>{n.push(`vec4 v${e} = get${e}AtOutCoords();`)}));const a=this.variableNames.map((e=>`v${e}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        vec4 result = ${a};\n        setOutput(result);\n      }\n    `}}const YD={kernelName:Mt,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:a}=t,r=n;if(1===r.length)return rD({inputs:{x:r[0]},backend:a});if(r.length>Ct().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){const t=Math.floor(r.length/2),n=e({inputs:r.slice(0,t),backend:a}),s=e({inputs:r.slice(t),backend:a});return e({inputs:[n,s],backend:a})}const s=r.map((e=>e.dtype)).reduce(((e,t)=>Us(e,t))),i=r.map((e=>e.shape)),o=Ct().getBool("WEBGL_PACK")?new XD(r[0].shape,i):new KD(r[0].shape,i);return a.runWebGLProgram(o,r,s)}};const QD={kernelName:Lt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,keepDims:i}=a,o=r.shape.length,l=at(s,r.shape);let u=l;const c=Ic(u,o);let p=r;null!=c&&(p=OD({inputs:{x:r},backend:n,attrs:{perm:c}}),u=Cc(u.length,o)),Sc("all",u,o);const[d,h]=kc(p.shape,u),f=ID({inputs:{x:p},backend:n,attrs:{shape:[-1,Ye(h)]}}),m=$D(f,f.dtype,"all",n);let g;if(i){g=ID({inputs:{x:m},backend:n,attrs:{shape:Nc(d,l)}})}else g=ID({inputs:{x:m},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=c&&n.disposeIntermediateTensorInfo(p),g}};const ZD={kernelName:zt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,keepDims:i}=a,o=r.shape.length,l=at(s,r.shape);let u=l;const c=Ic(u,o);let p=r;null!=c&&(p=OD({inputs:{x:r},backend:n,attrs:{perm:c}}),u=Cc(u.length,o)),Sc("any",u,o);const[d,h]=kc(p.shape,u),f=ID({inputs:{x:p},backend:n,attrs:{shape:[-1,Ye(h)]}}),m=$D(f,f.dtype,"any",n);let g;if(i){g=ID({inputs:{x:m},backend:n,attrs:{shape:Nc(d,l)}})}else g=ID({inputs:{x:m},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=c&&n.disposeIntermediateTensorInfo(p),g}};class JD{constructor(e,t,n){this.variableNames=["A"];const{windowSize:a,batchSize:r,outSize:s}=e;n||this.variableNames.push("bestIndicesA"),this.outputShape=[r,s];const i="max"===t?">":"<",o=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${a};\n\n        int bestIndex = inOffset;\n        float bestValue = getA(batch, bestIndex);\n\n        for (int i = 0; i < ${a}; i++) {\n          int inIdx = ${o};\n          float candidate = getA(batch, inIdx);\n          if (candidate ${i} bestValue) {\n            bestValue = candidate;\n            bestIndex = inIdx;\n          }\n        }\n        setOutput(float(bestIndex));\n      }\n    `}}class eO{constructor(e,t,n,a){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,qe(e.length>2,(()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`));const r=e[e.length-1],s=Math.ceil(r/t);this.outputShape=e.slice(0,-1),s>1&&this.outputShape.push(s),a||this.variableNames.push("bestIndicesA");const i=this.outputShape,o=i.length,l=h_(o),u=OF("coords",o);let c,p;if(1===s){p=o+1;const e=h_(p);c=`\n        ${e} sourceLocR = ${e}(${u.join()}, 0);\n        ++${u[o-1]};\n        ${e} sourceLocG = ${e}(${u.join()}, 0);\n        ++${u[o-2]};\n        ${e} sourceLocA = ${e}(${u.join()}, 0);\n        --${u[o-1]};\n        ${e} sourceLocB = ${e}(${u.join()}, 0);\n        --${u[o-2]};`}else p=o,c=`\n        ${l} sourceLocR = coords;\n        ++${u[o-1]};\n        ${l} sourceLocG = coords;\n        ++${u[o-2]};\n        ${l} sourceLocA = coords;\n        --${u[o-1]};\n        ${l} sourceLocB = coords;\n        --${u[o-2]};`;const d=["x","y","z","w","u","v"].slice(0,p),h="."+d[p-1],f=d.map((e=>"int "+e)),m=OF("sourceLocR",p-1).concat("inIdx.r"),g=OF("sourceLocG",p-1).concat("inIdx.g"),y=OF("sourceLocB",p-1).concat("inIdx.b"),b=OF("sourceLocA",p-1).concat("inIdx.a"),x="max"===n?"greaterThan":"lessThan",v=a?"":`\n          inIdx = round(vec4(getBestIndicesAChannel(${m.join()}),\n                             getBestIndicesAChannel(${g.join()}),\n                             getBestIndicesAChannel(${y.join()}),\n                             getBestIndicesAChannel(${b.join()})));`,w=`vec4(\n            getAChannel(${m.join()}),\n            hasNextCol ? getAChannel(${g.join()}) : 0.,\n            hasNextRow ? getAChannel(${y.join()}) : 0.,\n            hasNextRow && hasNextCol ? getAChannel(${b.join()}) : 0.)`,k=a?"":`\n      float getBestIndicesAChannel(${f.join()}) {\n        return getChannel(getBestIndicesA(${d.join()}),\n                                          vec2(${d.slice(-2).join()}));\n      }`;this.userCode=`\n      float getAChannel(${f.join()}) {\n        return getChannel(getA(${d.join()}),\n                               vec2(${d.slice(-2).join()}));\n      }\n      ${k}\n      void main() {\n        ${l} coords = getOutputCoords();\n        bool hasNextCol = ${u[o-1]} < ${i[o-1]-1};\n        bool hasNextRow = ${u[o-2]} < ${i[o-2]-1};\n        ${c}\n        ivec4 srcIdx = ivec4(sourceLocR${h}, sourceLocG${h},\n          sourceLocB${h}, sourceLocA${h}) * ${t};\n        ivec4 inIdx = srcIdx;\n        vec4 bestIndex = vec4(inIdx);\n        vec4 bestValue = ${w};\n\n        for (int i = 0; i < ${t}; i++) {\n          inIdx = srcIdx;\n          ${v}\n          vec4 candidate = ${w};\n          bvec4 nan = isnan(candidate);\n          bvec4 replace = bvec4(\n            vec4(${x}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));\n\n          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,\n                           replace.y  ? candidate.y : bestValue.y,\n                           replace.z  ? candidate.z : bestValue.z,\n                           replace.w  ? candidate.w : bestValue.w);\n          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));\n          srcIdx++;\n        }\n        setOutput(bestIndex);\n      }\n    `}}function tO(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,r=t.shape[0],s=t.shape[1];null!=a&&(r=a.shape[0],s=a.shape[1]);const i=Af(s),o={windowSize:i,inSize:s,batchSize:r,outSize:Math.ceil(s/i)},l=new JD(o,n,null==a),u=[t];null!=a&&u.push(a);const c=e.runWebGLProgram(l,u,"int32");if(1===c.shape[1])return c;const p=tO(e,t,n,c);return e.disposeIntermediateTensorInfo(c),p}function nO(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null;const r=null!=a?a.shape:t.shape,s=Af(r[r.length-1]),i=new eO(r,s,n,null==a),o=null==a?[t]:[t,a],l=e.runWebGLProgram(i,o,"int32");if(l.shape.length===t.shape.length){const a=nO(e,t,n,l);return e.disposeIntermediateTensorInfo(l),a}return l}function aO(e,t,n,a){const r=[n];if(Sc("arg"+a.charAt(0).toUpperCase()+a.slice(1),r,t.shape.length),!Ct().getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){const n=[],s=e.texData.get(t.dataId);let i=t;null!==s&&s.isPacked&&(i=e.unpackTensor(t),n.push(i));const[o,l]=kc(i.shape,r),u=Ye(l),c=ID({inputs:{x:i},backend:e,attrs:{shape:[-1,u]}});n.push(c);const p=tO(e,c,a);n.push(p);const d=ID({inputs:{x:p},backend:e,attrs:{shape:o}});return n.forEach((t=>e.disposeIntermediateTensorInfo(t))),d}return nO(e,t,a)}const rO={kernelName:Pt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s}=a;let i=at(s,r.shape);const o=Ic(i,r.shape.length);let l=r;const u=[];null!=o&&(l=OD({inputs:{x:r},backend:n,attrs:{perm:o}}),u.push(l),i=Cc(i.length,l.shape.length)),Sc("argMax",[i[0]],l.shape.length);const c=aO(n,l,i[0],"max");return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),c}};const sO={kernelName:Bt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s}=a;let i=at(s,r.shape);const o=Ic(i,r.shape.length);let l=r;const u=[];null!=o&&(l=OD({inputs:{x:r},backend:n,attrs:{perm:o}}),u.push(l),i=Cc(i.length,l.shape.length)),Sc("argMin",[i[0]],l.shape.length);const c=aO(n,l,i[0],"min");return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),c}},iO=mD({opSnippet:UF+"\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return asin(x);\n"}),oO={kernelName:Wt,backendName:"webgl",kernelFunc:iO},lO=mD({opSnippet:UF+"return log(x + sqrt(x * x + 1.0));"}),uO={kernelName:Vt,backendName:"webgl",kernelFunc:lO},cO=mD({opSnippet:UF+"\n  return atan(x);\n"}),pO={kernelName:Ut,backendName:"webgl",kernelFunc:cO},dO=gD({opSnippet:eD+"\n  return atan(a, b);\n",packedOpSnippet:"\n  vec4 result = atan(a, b);\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  "+nD+"\n  return result;\n"}),hO={kernelName:Gt,backendName:"webgl",kernelFunc:dO},fO=mD({opSnippet:UF+"\n  if ((x < -1.0) || (x > 1.0)) return NAN;\nreturn (log(1.0 + x) - log(1.0 - x)) / 2.0;"}),mO={kernelName:jt,backendName:"webgl",kernelFunc:fO};class gO{constructor(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r=arguments.length>4&&void 0!==arguments[4]&&arguments[4];if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const s=e.filterWidth,i=e.strideHeight,o=e.strideWidth,l=e.dilationHeight,u=e.dilationWidth,c=e.effectiveFilterHeight,p=e.effectiveFilterWidth,d=e.padInfo.top,h=e.padInfo.left;this.outputShape=e.outShape;const f="avg"===t,m=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,g=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`;let y="0.0";if(f||(y="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode=`\n        const ivec2 strides = ivec2(${i}, ${o});\n        const ivec2 pads = ivec2(${d}, ${h});\n\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int batch = coords[0];\n          int d = coords[3];\n\n          ivec2 xRCCorner = coords.yz * strides - pads;\n          int xRCorner = xRCCorner.x;\n          int xCCorner = xRCCorner.y;\n\n          // max/min x(?, ?, d) to get y(yR, yC, d).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n          float avgValue = 0.0;\n\n          for (int wR = 0; wR < ${c};\n              wR += ${l}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${p};\n                wC += ${u}) {\n              int xC = xCCorner + wC;\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float value = getX(batch, xR, xC, d);\n\n              // If a min / max value has already been found, use it. If not,\n              // use the current value.\n              float currMinMaxValue = mix(\n                  value, minMaxValue, minMaxValueFound);\n              if (value ${t} currMinMaxValue) {\n                minMaxValue = value;\n                minMaxValueFound = 1.0;\n                minMaxPosition = ${a?r?m:g:`wR * ${p} + wC`};\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let b=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(b="avgValue / max(count, 1.0)");const x=4*Math.floor(s/4),v=s%4,w=`\n      if (${f}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec2 strides = ivec2(${i}, ${o});\n      const ivec2 pads = ivec2(${d}, ${h});\n      const float initializationValue = ${y};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xR, int xC, int d) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xR, xC, d);\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d = coords[3];\n\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // max/min x(?, ?, d) to get y(yR, yC, d).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${y});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wR = 0; wR < ${c};\n            wR += ${l}) {\n          int xR = xRCorner + wR;\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${x}; wC += 4) {\n            int xC = xCCorner + wC * ${u};\n\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              getValue(batch, xR, xC + 2 * ${u}, d),\n              getValue(batch, xR, xC + 3 * ${u}, d)\n            );\n\n            ${w}\n          }\n\n          int xC = xCCorner + ${x};\n          if (${1===v}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              initializationValue,\n              initializationValue,\n              initializationValue\n            );\n\n            ${w}\n          } else if (${2===v}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              initializationValue,\n              initializationValue\n            );\n\n            ${w}\n          } else if (${3===v}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              getValue(batch, xR, xC + 2 * ${u}, d),\n              initializationValue\n            );\n\n            ${w}\n          }\n        }\n        setOutput(${b});\n      }\n    `}}class yO{constructor(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r=arguments.length>4&&void 0!==arguments[4]&&arguments[4];if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const s=e.filterWidth,i=e.strideDepth,o=e.strideHeight,l=e.strideWidth,u=e.dilationDepth,c=e.dilationHeight,p=e.dilationWidth,d=e.effectiveFilterDepth,h=e.effectiveFilterHeight,f=e.effectiveFilterWidth,m=e.padInfo.front,g=e.padInfo.top,y=e.padInfo.left;this.outputShape=e.outShape;const b="avg"===t;let x="0.0";if(b||(x="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode=`\n        const ivec3 strides =\n            ivec3(${i}, ${o}, ${l});\n        const ivec3 pads = ivec3(${m}, ${g}, ${y});\n\n        void main() {\n          ivec5 coords = getOutputCoords();\n          int batch = coords.x;\n          int ch = coords.u;\n\n          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n          int xDCorner = xCorner.x;\n          int xRCorner = xCorner.y;\n          int xCCorner = xCorner.z;\n\n          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n\n          for (int wD = 0; wD < ${d};\n              wD += ${u}) {\n            int xD = xDCorner + wD;\n\n            if (xD < 0 || xD >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int wR = 0; wR < ${h};\n                wR += ${c}) {\n              int xR = xRCorner + wR;\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int wC = 0; wC < ${f};\n                  wC += ${p}) {\n                int xC = xCCorner + wC;\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float value = getX(batch, xD, xR, xC, ch);\n\n                // If a min / max value has already been found, use it. If not,\n                // use the current value.\n                float currMinMaxValue = mix(\n                    value, minMaxValue, minMaxValueFound);\n                if (value ${t} currMinMaxValue) {\n                  minMaxValue = value;\n                  minMaxValueFound = 1.0;\n                  minMaxPosition = ${a?r?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${h} * ${f} +\n                      wR * ${f} + wC`};\n                }\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let v=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(v="avgValue / max(count, 1.0)");const w=4*Math.floor(s/4),k=s%4,N=`\n      if (${b}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec3 strides =\n        ivec3(${i}, ${o}, ${l});\n      const ivec3 pads = ivec3(${m}, ${g}, ${y});\n      const float initializationValue = ${x};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xD, int xR, int xC, int ch) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xD, xR, xC, ch);\n      }\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xDCorner = xCorner.x;\n        int xRCorner = xCorner.y;\n        int xCCorner = xCorner.z;\n\n        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${x});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wD = 0; wD < ${d};\n            wD += ${u}) {\n          int xD = xDCorner + wD;\n\n          if (xD < 0 || xD >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${h};\n            wR += ${c}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${w}; wC += 4) {\n              int xC = xCCorner + wC * ${p};\n\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${p}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${p}, ch),\n                getValue(batch, xD, xR, xC + 3 * ${p}, ch)\n              );\n\n              ${N}\n            }\n\n            int xC = xCCorner + ${w};\n            if (${1===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                initializationValue,\n                initializationValue,\n                initializationValue\n              );\n\n              ${N}\n            } else if (${2===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${p}, ch),\n                initializationValue,\n                initializationValue\n              );\n\n              ${N}\n            } else if (${3===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${p}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${p}, ch),\n                initializationValue\n              );\n\n              ${N}\n            }\n          }\n        }\n        setOutput(${v});\n      }\n    `}}const bO={kernelName:Ht,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t;KA(r,"avgPool");const{filterSize:s,strides:i,pad:o,dimRoundingMode:l}=a;qe(ku(i,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const u=du(r.shape,s,i,1,o,l);if(1===u.filterWidth&&1===u.filterHeight&&Qe(u.inShape,u.outShape))return rD({inputs:{x:r},backend:n});const c=new gO(u,"avg",!1);return n.runWebGLProgram(c,[r],"float32")}};const xO={kernelName:Kt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:l,dataFormat:u}=a,c=hu(r.shape,s,i,[1,1,1],o,l,u),p=new yO(c,"avg",!1);return n.runWebGLProgram(p,[r],"float32")}};class vO{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,a=e.strideHeight,r=e.strideWidth,s=e.dilationHeight,i=e.dilationWidth,o=e.effectiveFilterHeight,l=e.effectiveFilterWidth,u=o-1-e.padInfo.top,c=l-1-e.padInfo.left,p=1/(t*n);this.userCode=`\n      const ivec2 pads = ivec2(${u}, ${c});\n      const float avgMultiplier = float(${p});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${o};\n            wR += ${s}) {\n          float dyR = float(dyRCorner + wR) / ${a}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${l};\n            wC+= ${i}) {\n            float dyC = float(dyCCorner + wC) / ${r}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n\n            dotProd += dyValue * avgMultiplier;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class wO{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,a=e.filterWidth,r=e.strideDepth,s=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,l=e.dilationHeight,u=e.dilationWidth,c=e.effectiveFilterDepth,p=e.effectiveFilterHeight,d=e.effectiveFilterWidth,h=c-1-e.padInfo.front,f=p-1-e.padInfo.top,m=d-1-e.padInfo.left,g=1/(t*n*a);this.userCode=`\n      const ivec3 pads = ivec3(${h}, ${f}, ${m});\n      const float avgMultiplier = float(${g});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${c};\n            wD += ${o}) {\n          float dyD = float(dyDCorner + wD) / ${r}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${p};\n              wR += ${l}) {\n            float dyR = float(dyRCorner + wR) / ${s}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${d};\n                wC += ${u}) {\n              float dyC = float(dyCCorner + wC) / ${i}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n\n              dotProd += dyValue * avgMultiplier;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const kO={kernelName:Xt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,input:s}=t,i=s,{filterSize:o,strides:l,pad:u,dimRoundingMode:c}=a,p=hu(i.shape,o,l,[1,1,1],u,c),d=new wO(p);return n.runWebGLProgram(d,[r],i.dtype)}};const NO={kernelName:qt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,input:s}=t,i=s;KA([r,s],"avgPoolGrad");const{filterSize:o,strides:l,pad:u}=a,c=du(i.shape,o,l,1,u),p=new vO(c);return n.runWebGLProgram(p,[r],i.dtype)}};const SO={kernelName:Yt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{a:r,b:s}=t,{transposeA:i,transposeB:o}=a;return LD({a:r,b:s,transposeA:i,transposeB:o,backend:n})}};class IO{constructor(e,t,n,a,r,s){this.outputShape=[],this.variableNames=["x","mean","variance"],al(e,t),al(e,n);let i="0.0";null!=a&&(al(e,a),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let o="1.0";null!=r&&(al(e,r),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        float x = getXAtOutCoords();\n        float mean = getMeanAtOutCoords();\n        float variance = getVarianceAtOutCoords();\n        float offset = ${i};\n        float scale = ${o};\n        float inv = scale * inversesqrt(variance + float(${s}));\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\n      }\n    `}}class TO{constructor(e,t,n,a,r,s){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],al(e,t),al(e,n);let i="vec4(0.0)";null!=a&&(al(e,a),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let o="vec4(1.0)";null!=r&&(al(e,r),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        vec4 offset = ${i};\n        vec4 scale = ${o};\n\n        vec4 x = getXAtOutCoords();\n        vec4 mean = getMeanAtOutCoords();\n        vec4 variance = getVarianceAtOutCoords();\n\n        vec4 inv = scale * inversesqrt(variance + vec4(${s}));\n\n        setOutput((x - mean) * inv + offset);\n      }\n    `}}const CO={kernelName:Un,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:n,attrs:a}=e;const{x:r,mean:s,variance:i,offset:o,scale:l}=t;qe(s.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),qe(null==o||s.shape.length===o.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),qe(null==l||s.shape.length===l.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));let{varianceEpsilon:u}=a;null==u&&(u=.001);const c=[r,s,i];let p=null;null!=o&&(p=o.shape,c.push(o));let d=null;null!=l&&(d=l.shape,c.push(l));const h=Ct().getBool("WEBGL_PACK_NORMALIZATION")?new TO(r.shape,s.shape,i.shape,p,d,u):new IO(r.shape,s.shape,i.shape,p,d,u);return n.runWebGLProgram(h,c,c[0].dtype)}};class EO{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;const t=h_(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const n=function(e){if(1===e)return"sourceLoc";if(e<=6)return $O.slice(0,e).map((e=>"sourceLoc."+e)).join(",");throw Error(`Slicing for rank ${e} is not yet supported`)}(this.rank);let a;a=`\n        ${t} sourceLoc;\n        ${t} coords = getOutputCoords();\n        ${e.map(((e,t)=>`sourceLoc.${$O[t]} = start[${t}] + coords.${$O[t]};`)).join("\n")}\n      `,this.userCode=`\n      void main() {\n        ${a}\n        setOutput(getSource(${n}));\n      }\n    `}}const $O=["x","y","z","w","u","v"];class RO{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const t=h_(this.rank),n=OF("coords",this.rank),a=OF("sourceLoc",this.rank),r=1===this.rank?"sourceLoc":`vec2(${a.slice(-2).join()})`,s=`getChannel(getSource(${a.join()}), ${r})`,i=`\n      result.x = ${s};\n      if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n        ++${a[this.rank-1]};\n        result.y = ${s};\n        --${a[this.rank-1]};\n      }\n    `,o=1===this.rank?"":`\n      --${n[this.rank-1]};\n      if (++${n[this.rank-2]} < ${e[this.rank-2]}) {\n        ++${a[this.rank-2]};\n        result.z = ${s};\n        if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n          ++${a[this.rank-1]};\n          result.w = ${s};\n        }\n      }\n    `,l=this.rank<=4?`sourceLoc = coords +\n            ${t}(${e.map(((e,t)=>`start[${t}]`)).join()});`:e.map(((e,t)=>`${a[t]} = ${n[t]} + start[${t}];`)).join("\n");this.userCode=`\n      void main() {\n        ${t} coords = getOutputCoords();\n        ${t} sourceLoc;\n        ${l}\n        vec4 result = vec4(0.);\n        ${i}\n        ${o}\n        setOutput(result);\n      }\n    `}}function AO(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{begin:s,size:i}=a,[o,l]=Yl(r,s,i);if(Ml(r,o,l),0===Ye(l))return n.makeTensorInfo(l,r.dtype,[]);if(n.shouldExecuteOnCPU([r])||"string"===r.dtype){const e=n.texData.get(r.dataId),t=xF(e.values,o,l,r.shape,r.dtype);return n.makeTensorInfo(l,r.dtype,t)}const{isPacked:u}=n.texData.get(r.dataId),c=Kl(r.shape,o,l);if(u||!c){const e=Ct().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new RO(l):new EO(l),t=[o];return n.runWebGLProgram(e,[r],r.dtype,t)}return n.uploadToGPU(r.dataId),function(e,t,n,a){const r=a.texData.get(e.dataId),s=a.makeTensorInfo(n,e.dtype),i=a.texData.get(s.dataId);Object.assign(i,r),i.refCount=1,i.shape=n,i.dtype=e.dtype;let o=Xl(t,ft(e.shape));r.slice&&(o+=r.slice.flatOffset),i.slice={flatOffset:o,origDataId:r.slice&&r.slice.origDataId||e.dataId};const l=a.dataRefCount.get(i.slice.origDataId)||1;return a.dataRefCount.set(i.slice.origDataId,l+1),s}(r,o,l,n)}const _O={kernelName:rr,backendName:"webgl",kernelFunc:AO},FO={kernelName:Qt,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{blockShape:s,crops:i}=a;qe(r.shape.length<=4,(()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet"));const o=s.reduce(((e,t)=>e*t)),l=Ff(r.shape,s,o),u=Df(l.length,s.length),c=Of(r.shape,s,o),p=Mf(i,s.length),d=Lf(c,i,s.length),h=[],f=ID({inputs:{x:r},backend:n,attrs:{shape:l}}),m=OD({inputs:{x:f},backend:n,attrs:{perm:u}}),g=ID({inputs:{x:m},backend:n,attrs:{shape:c}}),y=AO({inputs:{x:g},backend:n,attrs:{begin:p,size:d}});return h.push(f),h.push(m),h.push(g),h.forEach((e=>n.disposeIntermediateTensorInfo(e))),y}};const DO={kernelName:Zt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,weights:s}=t,{size:i}=a,o=n.readSync(r.dataId),l=n.readSync(s.dataId),u=B_(o,l,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,u)}};const OO={kernelName:Jt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{a:a,b:r}=t,s=Ct().getBool("WEBGL_PACK_BINARY_OPERATIONS"),i=Ct().getNumber("WEBGL_VERSION");if(n.shouldExecuteOnCPU([a,r])||1===i){const e=n.texData.get(a.dataId).values,t=n.texData.get(r.dataId).values,[s,i]=V_(a.shape,r.shape,e,t,a.dtype),o=n.makeTensorInfo(i,a.dtype);return n.texData.get(o.dataId).values=s,o}let o;return o=s?new aD("\n  int r = int(a.r) & int(b.r);\n  int g = int(a.g) & int(b.g);\n  int rb = int(a.b) & int(b.b);\n  int ra = int(a.a) & int(b.a);\n  return vec4(r, g, rb, ra);\n",a.shape,r.shape,!1):new tD("\n  return float(int(a.r) & int(b.r));\n",a.shape,r.shape),n.runWebGLProgram(o,[a,r],a.dtype)}};const MO={kernelName:en,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{s0:a,s1:r}=t,s=n.readSync(a.dataId),i=n.readSync(r.dataId),o=al(Array.from(s),Array.from(i));return n.makeTensorInfo([o.length],"int32",Int32Array.from(o))}},LO=gD({opSnippet:"return float(a != b);",cpuKernelImpl:uF,dtype:"bool"}),zO={kernelName:Ta,backendName:"webgl",kernelFunc:LO};function PO(e){const{inputs:t,backend:n}=e,{input:a}=t;return rD({inputs:{x:n.texData.get(a.dataId).complexTensorInfos.real},backend:n})}const BO={kernelName:Wa,backendName:"webgl",kernelFunc:PO};const WO={kernelName:tn,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:a,attrs:r}=t,{x:s}=n,{dtype:i}=r;if("complex64"===i){if("complex64"===s.dtype)return rD({inputs:{x:s},backend:a});const t=gp(s.shape),n=e({inputs:{x:s},backend:a,attrs:{dtype:"float32"}}),r=iD({inputs:{real:n,imag:t},backend:a});return t.dispose(),a.disposeIntermediateTensorInfo(n),r}if("complex64"===s.dtype){const t=PO({inputs:{input:s},backend:a}),n=e({inputs:{x:t},backend:a,attrs:{dtype:i}});return a.disposeIntermediateTensorInfo(t),n}if(!ot(s.dtype,i)){const e=rD({inputs:{x:s},backend:a});return{dataId:e.dataId,shape:e.shape,dtype:i}}if(a.shouldExecuteOnCPU([s])){const e=a.texData.get(s.dataId).values,[t,n,r]=U_(e,s.shape,s.dtype,i);return a.makeTensorInfo(t,n,r)}if("int32"===i)return function(e,t){const n=new VF(e.shape,"return float(int(x));"),a=t.runWebGLProgram(n,[e],"int32");return{dataId:a.dataId,shape:a.shape,dtype:a.dtype}}(s,a);if("bool"===i){const e=a.makeTensorInfo([],"bool",st("bool",1)),t=LO({inputs:{a:s,b:e},backend:a});return a.disposeIntermediateTensorInfo(e),t}throw new Error(`Error in Cast: failed to cast ${s.dtype} to ${i}`)}},VO="return ceil(x);",UO=mD({opSnippet:VO,packedOpSnippet:VO,cpuKernelImpl:j_}),jO={kernelName:nn,backendName:"webgl",kernelFunc:UO};class GO{constructor(e){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n\n      void main() {\n        float value = getAAtOutCoords();\n        if (isnan(value)) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, minVal, maxVal));\n      }\n    "}}class HO{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n      void main() {\n        vec4 value = getAAtOutCoords();\n\n        if (any(isnan(value))) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));\n      }\n    "}}const qO={kernelName:an,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{clipValueMin:s,clipValueMax:i}=a;let o;o=Ct().getBool("WEBGL_PACK_CLIP")?new HO(r.shape):new GO(r.shape);const l=[[s],[i]];return n.runWebGLProgram(o,[r],r.dtype,l)}};class KO{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode="\n      void main() {\n        float re = abs(getRealAtOutCoords());\n        float im = abs(getImagAtOutCoords());\n        float mx = max(re, im);\n\n        // sadly the length function in glsl is not underflow-safe\n        // (at least not on Intel GPUs). So the safe solution is\n        // to ensure underflow-safety in all cases.\n        setOutput(\n          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))\n        );\n      }\n    "}}function XO(e,t){return{dataId:t.dataId,dtype:t.dtype,shape:e.shape}}const YO={kernelName:sn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:a}=t,r=n.texData.get(a.dataId),s=new KO(a.shape),i=[XO(a,r.complexTensorInfos.real),XO(a,r.complexTensorInfos.imag)];return n.runWebGLProgram(s,i,i[0].dtype)}};class QO{constructor(e){this.outputShape=[],this.outputShape=Sf(e,1),this.variableNames=e.map(((e,t)=>`T${t}`));const t=new Array(e.length-1);t[0]=e[0][1];for(let s=1;s<t.length;s++)t[s]=t[s-1]+e[s][1];const n=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let s=1;s<t.length;s++){const e=t[s-1];n.push(`else if (yC < ${t[s]}) setOutput(getT${s}(yR, yC-${e}));`)}const a=t.length,r=t[t.length-1];n.push(`else setOutput(getT${a}(yR, yC-${r}));`),this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int yR = coords.x;\n        int yC = coords.y;\n\n        ${n.join("\n        ")}\n      }\n    `}}class ZO{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=Sf(e,t);const n=this.outputShape,a=n.length,r=h_(a),s=OF("coords",a),i=["x","y","z","w","u","v"].slice(0,a);this.variableNames=e.map(((e,t)=>`T${t}`));const o=new Array(e.length-1);o[0]=e[0][t];for(let f=1;f<o.length;f++)o[f]=o[f-1]+e[f][t];const l=i[t],u=i.slice(-2),c=i.join();let p=`if (${l} < ${o[0]}) {\n        return getChannel(\n            getT0(${c}), vec2(${u.join()}));\n        }`;for(let f=1;f<o.length;f++){const e=o[f-1];p+=`\n        if (${l} < ${o[f]}  && ${l} >= ${o[f-1]}) {\n          return getChannel(\n            getT${f}(${JO(i,l,e)}),\n            vec2(${JO(u,l,e)}));\n        }`}const d=o.length,h=o[o.length-1];p+=`\n        return getChannel(\n          getT${d}(${JO(i,l,h)}),\n          vec2(${JO(u,l,h)}));`,this.userCode=`\n      float getValue(${i.map((e=>"int "+e))}) {\n        ${p}\n      }\n\n      void main() {\n        ${r} coords = getOutputCoords();\n        vec4 result = vec4(getValue(${s}), 0., 0., 0.);\n\n        ${s[a-1]} = ${s[a-1]} + 1;\n        if (${s[a-1]} < ${n[a-1]}) {\n          result.g = getValue(${s});\n        }\n\n        ${s[a-2]} = ${s[a-2]} + 1;\n        if (${s[a-2]} < ${n[a-2]}) {\n          result.a = getValue(${s});\n        }\n\n        ${s[a-1]} = ${s[a-1]} - 1;\n        if (${s[a-2]} < ${n[a-2]} &&\n            ${s[a-1]} < ${n[a-1]}) {\n          result.b = getValue(${s});\n        }\n        setOutput(result);\n      }\n    `}}function JO(e,t,n){const a=e.indexOf(t);return e.map(((e,t)=>t===a?`${e} - ${n}`:e)).join()}function eM(e){const{inputs:t,backend:n}=e,{input:a}=t;return rD({inputs:{x:n.texData.get(a.dataId).complexTensorInfos.imag},backend:n})}const tM={kernelName:Yn,backendName:"webgl",kernelFunc:eM};function nM(e,t,n){const a=e[0].dtype;if("complex64"===a){const a=e.map((e=>PO({inputs:{input:e},backend:n}))),r=e.map((e=>eM({inputs:{input:e},backend:n}))),s=nM(a,t,n),i=nM(r,t,n),o=iD({inputs:{real:s,imag:i},backend:n});return a.forEach((e=>n.disposeIntermediateTensorInfo(e))),r.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(i),o}let r=n.shouldExecuteOnCPU(e);if("string"===a&&(r=!0),r){const r=e.map((e=>{const a=Ye(e.shape.slice(t));return ID({inputs:{x:e},backend:n,attrs:{shape:[-1,a]}})})),s=r.map((e=>({vals:n.readSync(e.dataId),shape:e.shape}))),i=Sf(r.map((e=>e.shape)),1),o=1===r[0].shape[0],l=G_(s,i,a,o),u=Sf(e.map((e=>e.shape)),t),c=n.makeTensorInfo(u,a,l);return r.forEach((e=>n.disposeIntermediateTensorInfo(e))),c}const s=e.filter((e=>Ye(e.shape)>0)),i=Ct().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&s[0].shape.length>1;if(1===s.length){const t=i?new VF(e[0].shape,qF):new KF(e[0].shape,qF);return n.runWebGLProgram(t,e,a)}const o=Ct().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER");if(s.length>o){const e=[];for(let r=0;r<s.length;r+=o){const a=s.slice(r,r+o);e.push(nM(a,t,n))}const a=nM(e,t,n);for(const t of e)n.disposeIntermediateTensorInfo(t);return a}if(i){const e=new ZO(s.map((e=>e.shape)),t);return n.runWebGLProgram(e,s,a)}const{tensors2D:l,outShape:u}=function(e,t,n){const a=Sf(e.map((e=>e.shape)),t),r=e.map((e=>ID({inputs:{x:e},attrs:{shape:[-1,Ye(e.shape.slice(t))]},backend:n})));return{tensors2D:r,outShape:a}}(s,t,n),c=new QO(l.map((e=>e.shape))),p=n.runWebGLProgram(c,l,a);l.forEach((e=>n.disposeIntermediateTensorInfo(e)));const d=ID({inputs:{x:p},attrs:{shape:u},backend:n});return n.disposeIntermediateTensorInfo(p),d}function aM(e){const{inputs:t,backend:n,attrs:a}=e,{axis:r}=a,s=at(r,t[0].shape)[0];Nf(t.map((e=>e.shape)),s);const i=Sf(t.map((e=>e.shape)),s);if(0===Ye(i))return n.makeTensorInfo(i,t[0].dtype,[]);const o=t.filter((e=>Ye(e.shape)>0));return 1===o.length?rD({inputs:{x:o[0]},backend:n}):nM(o,s,n)}const rM={kernelName:on,backendName:"webgl",kernelFunc:aM};class sM{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r=arguments.length>4&&void 0!==arguments[4]&&arguments[4];this.variableNames=["x","W"],this.outputShape=e.outShape;const s=e.padInfo.top,i=e.padInfo.left,o=e.strideHeight,l=e.strideWidth,u=e.dilationHeight,c=e.dilationWidth,p=e.filterHeight,d=e.filterWidth,h=4*Math.floor(e.inChannels/4),f=e.inChannels%4,m="channelsLast"===e.dataFormat,g=m?1:2,y=m?2:3,b=m?3:1;let x="",v="";n&&(x=a?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:r?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,v="result = activation(result);");const w=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${x}\n\n      const ivec2 strides = ivec2(${o}, ${l});\n      const ivec2 pads = ivec2(${s}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d2 = coords[${b}];\n\n        ivec2 xRCCorner =\n            ivec2(coords[${g}], coords[${y}]) * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${p}; wR++) {\n          int xR = xRCorner + wR * ${u};\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${d}; wC++) {\n            int xC = xCCorner + wC * ${c};\n\n            if (xC < 0 || xC >= ${e.inWidth}) {\n              continue;\n            }\n\n            for (int d1 = 0; d1 < ${h}; d1 += 4) {\n              vec4 wValues = vec4(\n                getW(wR, wC, d1, d2),\n                getW(wR, wC, d1 + 1, d2),\n                getW(wR, wC, d1 + 2, d2),\n                getW(wR, wC, d1 + 3, d2)\n              );\n\n              if (${m}) {\n                vec4 xValues = vec4(\n                  getX(batch, xR, xC, d1),\n                  getX(batch, xR, xC, d1 + 1),\n                  getX(batch, xR, xC, d1 + 2),\n                  getX(batch, xR, xC, d1 + 3)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec4 xValues = vec4(\n                  getX(batch, d1, xR, xC),\n                  getX(batch, d1 + 1, xR, xC),\n                  getX(batch, d1 + 2, xR, xC),\n                  getX(batch, d1 + 3, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n\n            if (${1===f}) {\n\n              if (${m}) {\n                dotProd +=\n                    getX(batch, xR, xC, ${h}) *\n                    getW(wR, wC, ${h}, d2);\n              } else {\n                dotProd +=\n                    getX(batch, ${h}, xR, xC) *\n                    getW(wR, wC, ${h}, d2);\n              }\n\n            } else if (${2===f}) {\n              vec2 wValues = vec2(\n                getW(wR, wC, ${h}, d2),\n                getW(wR, wC, ${h} + 1, d2)\n              );\n\n              if (${m}) {\n                vec2 xValues = vec2(\n                  getX(batch, xR, xC, ${h}),\n                  getX(batch, xR, xC, ${h} + 1)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec2 xValues = vec2(\n                  getX(batch, ${h}, xR, xC),\n                  getX(batch, ${h} + 1, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            } else if (${3===f}) {\n              vec3 wValues = vec3(\n                getW(wR, wC, ${h}, d2),\n                getW(wR, wC, ${h} + 1, d2),\n                getW(wR, wC, ${h} + 2, d2)\n              );\n\n              if (${m}) {\n                vec3 xValues = vec3(\n                  getX(batch, xR, xC, ${h}),\n                  getX(batch, xR, xC, ${h} + 1),\n                  getX(batch, xR, xC, ${h} + 2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec3 xValues = vec3(\n                  getX(batch, ${h}, xR, xC),\n                  getX(batch, ${h} + 1, xR, xC),\n                  getX(batch, ${h} + 2, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            }\n          }\n        }\n\n        float result = dotProd;\n        ${w}\n        ${v}\n        setOutput(result);\n      }\n    `}}class iM{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const t=e.padInfo.front,n=e.padInfo.top,a=e.padInfo.left,r=e.strideDepth,s=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,l=e.dilationHeight,u=e.dilationWidth,c=e.filterDepth,p=e.filterHeight,d=e.filterWidth,h=4*Math.floor(e.inChannels/4),f=e.inChannels%4;this.userCode=`\n      const ivec3 strides = ivec3(${r}, ${s}, ${i});\n      const ivec3 pads = ivec3(${t}, ${n}, ${a});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d2 = coords.u;\n\n        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xFCorner = xFRCCorner.x;\n        int xRCorner = xFRCCorner.y;\n        int xCCorner = xFRCCorner.z;\n\n        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get\n        // y(yF, yR, yC, d2). ? = to be determined. : = across all\n        // values in that axis.\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${c}; wF++) {\n          int xF = xFCorner + wF * ${o};\n\n          if (xF < 0 || xF >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${p}; wR++) {\n            int xR = xRCorner + wR * ${l};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${d}; wC++) {\n              int xC = xCCorner + wC * ${u};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              for (int d1 = 0; d1 < ${h}; d1 += 4) {\n                vec4 xValues = vec4(\n                  getX(batch, xF, xR, xC, d1),\n                  getX(batch, xF, xR, xC, d1 + 1),\n                  getX(batch, xF, xR, xC, d1 + 2),\n                  getX(batch, xF, xR, xC, d1 + 3)\n                );\n                vec4 wValues = vec4(\n                  getW(wF, wR, wC, d1, d2),\n                  getW(wF, wR, wC, d1 + 1, d2),\n                  getW(wF, wR, wC, d1 + 2, d2),\n                  getW(wF, wR, wC, d1 + 3, d2)\n                );\n\n                dotProd += dot(xValues, wValues);\n              }\n\n              if (${1===f}) {\n                dotProd +=\n                  getX(batch, xF, xR, xC, ${h}) *\n                  getW(wF, wR, wC, ${h}, d2);\n              } else if (${2===f}) {\n                vec2 xValues = vec2(\n                  getX(batch, xF, xR, xC, ${h}),\n                  getX(batch, xF, xR, xC, ${h} + 1)\n                );\n                vec2 wValues = vec2(\n                  getW(wF, wR, wC, ${h}, d2),\n                  getW(wF, wR, wC, ${h} + 1, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else if (${3===f}) {\n                vec3 xValues = vec3(\n                  getX(batch, xF, xR, xC, ${h}),\n                  getX(batch, xF, xR, xC, ${h} + 1),\n                  getX(batch, xF, xR, xC, ${h} + 2)\n                );\n                vec3 wValues = vec3(\n                  getW(wF, wR, wC, ${h}, d2),\n                  getW(wF, wR, wC, ${h} + 1, d2),\n                  getW(wF, wR, wC, ${h} + 2, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class oM{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r=arguments.length>4&&void 0!==arguments[4]&&arguments[4];this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=v_(this.outputShape.length);const s=e.padInfo.left,i=e.strideWidth,o=e.dilationWidth,l=e.filterHeight,u=e.filterWidth,c=u;let p="\n       int xR; int xC; int xCOffset;\n       vec4 wTexel; vec4 previous; vec4 final;";for(let m=0;m<u;m++)p+=`\n           vec4 xTexelC${2*m};\n           int xTexelC${2*m}Ready;\n           vec4 xTexelC${2*m+1};\n           int xTexelC${2*m+1}Ready;\n           vec4 xC${m};`;p+=`\n     for (int r = 0; r < ${l}; r++) {\n      for (int d1 = 0; d1 < ${e.inChannels}; d1 += 2) {\n       `;for(let m=0;m<u;m++)p+=`\n           xTexelC${2*m} = vec4(0.0);\n           xTexelC${2*m}Ready = 0;\n           xTexelC${2*m+1} = vec4(0.0);\n           xTexelC${2*m+1}Ready = 0;\n           xC${m} = vec4(0.0);`;p+="\n         xR = xRCorner + r * dilations[0];\n         if (xR >=0 && xR < inDims[0]) {\n       ";for(let m=0;m<(c+1)/2;m++){const t=2*m;if(p+=`\n           xC = xCCorner + ${t*o};\n           `,1===i){if(t<u&&(s%2===1?(p+=`\n                 xCOffset = xC + 1;\n                 if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {\n                   xTexelC${t} = getX(batch, xR, xCOffset, d1);\n\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC${t}.zw = vec2(0.0);\n                   }\n                   xTexelC${t}Ready = 1;\n                 }\n               `,p+=1===o&&t>0?`\n                 xC${t} = vec4(xTexelC${t-2}.zw, xTexelC${t}.xy);\n                 `:`\n                   xCOffset = xC + 1 - 2;\n\n                   if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                     previous = getX(batch, xR, xCOffset, d1);\n\n                     // Need to manually clear unused channels in case\n                     // we're reading from recycled texture.\n                     if (xCOffset + 1 >= inDims[1]) {\n                       previous.zw = vec2(0.0);\n                     }\n\n                     xC${t} = vec4(previous.zw, xTexelC${t}.xy);\n                   } else {\n                     xC${t} = vec4(0.0, 0.0, xTexelC${t}.xy);\n                   }\n                   `):p+=`\n                 if (xC >= 0 && xC < inDims[1] && xTexelC${t}Ready == 0) {\n                   xTexelC${t} = getX(batch, xR, xC, d1);\n                   if (xC + 1 >= inDims[1]) {\n                     xTexelC${t}.zw = vec2(0.0);\n                   }\n                   xTexelC${t}Ready = 1;\n                 }\n\n                 xC${t} = xTexelC${t};\n                 `,t+1<u)){const e=s%2===0?Ge(o):o;o%2===0&&s%2===1||o%2!==0&&s%2!==1?(p+=`\n                   xCOffset = xC + imod(pads[1], 2) + ${e};\n\n                   if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                     xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n\n                     // Need to manually clear unused channels in case\n                     // we're reading from recycled texture.\n                     if (xCOffset + 1 >= inDims[1]) {\n                       xTexelC${t+1}.zw = vec2(0.0);\n                     }\n                     xTexelC${t+1}Ready = 1;\n                   }\n                   `,p+=o>1?`\n                     xCOffset -= 2;\n                     if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                      previous = getX(batch, xR, xCOffset, d1);\n                      xC${t+1} = vec4(previous.zw, xTexelC${t+1}.xy);\n                     } else {\n                      xC${t+1} = vec4(0.0, 0.0, xTexelC${t+1}.xy);\n                     }\n                     `:`\n                     xC${t+1} = vec4(xTexelC${t}.zw, xTexelC${t+1}.xy);\n                     `):p+=1===e?`\n                     xC${t+1} = xTexelC${t};\n                     `:`\n                     xCOffset = xC + ${e};\n\n                     if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                       xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n                       if (xCOffset + 1 >= inDims[1]) {\n                         xTexelC${t+1}.zw = vec2(0.0);\n                       }\n                       xTexelC${t+1}Ready = 1;\n                     }\n\n                     xC${t+1} = xTexelC${t+1};\n                     `}}else t<u&&(s%2===1?(p+=`\n                 xCOffset = xC + 1 - strides[1];\n                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {\n                   xTexelC${t} = getX(batch, xR, xCOffset, d1);\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC${t}.zw = vec2(0.0);\n                   }\n                   xTexelC${t}Ready = 1;\n                 }\n\n                 if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${t+1}Ready == 0) {\n                   xTexelC${t+1} = getX(batch, xR, xC + 1, d1);\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xC + 2 >= inDims[1]) {\n                     xTexelC${t+1}.zw = vec2(0.0);\n                   }\n                   xTexelC${t+1}Ready = 1;\n                 }\n\n                 xC${t} = vec4(xTexelC${t}.zw, xTexelC${t+1}.zw);\n               `,t+1<u&&(p+=`\n                   final = vec4(0.0);\n                   xCOffset = xC + 1 + strides[1];\n                   if(xCOffset >= 0 && xCOffset < inDims[1]) {\n                     final = getX(batch, xR, xCOffset, d1);\n                   }\n                   xC${t+1} = vec4(xTexelC${t+1}.xy, final.xy);\n                 `)):(p+=`\n                 if(xC >= 0 && xC < inDims[1] && xTexelC${t}Ready == 0) {\n                   xTexelC${t} = getX(batch, xR, xC, d1);\n                   if (xC + 1 >= inDims[1]) {\n                     xTexelC${t}.zw = vec2(0.0);\n                   }\n                   xTexelC${t}Ready = 1;\n                 }\n\n                 xCOffset = xC + strides[1];\n                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                   xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC${t+1}.zw = vec2(0.);\n                   }\n                   xTexelC${t+1}Ready = 1;\n                 }\n\n                 xC${t} = vec4(\n                   xTexelC${t}.xy, xTexelC${t+1}.xy);\n               `,t+1<u&&(p+=`\n                   xC${t+1} = vec4(xTexelC${t}.zw, xTexelC${t+1}.zw);\n                 `)));t<u&&(p+=`\n             wTexel = getW(r, ${t}, d1, d2);\n             dotProd += xC${t}.xxzz * vec4(wTexel.xy, wTexel.xy);\n             if(d1 + 1 < ${e.inChannels}) {\n               dotProd += xC${t}.yyww * vec4(wTexel.zw, wTexel.zw);\n             }\n           `,t+1<u&&(p+=`\n               wTexel = getW(r, ${t+1}, d1, d2);\n               dotProd += xC${t+1}.xxzz * vec4(wTexel.xy, wTexel.xy);\n               if(d1 + 1 < ${e.inChannels}) {\n                 dotProd += xC${t+1}.yyww * vec4(wTexel.zw, wTexel.zw);\n               }\n             `))}p+="\n     }\n   ",p+="\n     }\n   ",p+="\n     }\n   ";let d="",h="";n&&(d=a?`vec4 activation(vec4 a) {\n           vec4 b = getPreluActivationWeightsAtOutCoords();\n           ${n}\n         }`:r?`vec4 activation(vec4 a) {\n           vec4 b = getLeakyreluAlphaAtOutCoords();\n           ${n}\n         }`:`vec4 activation(vec4 x) {\n           ${n}\n         }`,h="result = activation(result);");const f=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n       ${d}\n\n       void main() {\n         ivec4 coords = getOutputCoords();\n         int batch = coords.x;\n         ivec2 xRCCorner = coords.yz * strides - pads;\n         int d2 = coords.w;\n         int xRCorner = xRCCorner.x;\n         int xCCorner = xRCCorner.y;\n\n         //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n         vec4 dotProd = vec4(0.000000000000001);\n\n         ${p}\n\n         vec4 result = dotProd - vec4(0.000000000000001);\n         ${f}\n         ${h}\n         setOutput(result);\n       }\n     `}}class lM{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec4"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=e,this.enableShapeUniforms=v_(this.outputShape.length);const{dataFormat:n}=t,a=YA(),r="channelsLast"===n,s=r?1:2,i=r?2:3,o=this.enableShapeUniforms?"if(blockIndex < outShape[2] && pos < outShape[1]) {":`if(blockIndex < ${e[2]} && pos < ${e[1]}) {`;let l="";for(let u=0;u<=1;u++)for(let e=0;e<=1;e++)l+=`\n          blockIndex = rc.z + ${e};\n          pos = rc.y + ${u};\n\n          ${o}\n            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];\n            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);\n\n            if(d0 < inputShape[${s}] && d0 >= 0) {\n              // Use custom imod instead mod. On Intel GPU, mod may generate\n              // unexpected value.\n              // https://github.com/tensorflow/tfjs/issues/5447\n              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];\n              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /\n                  inChannels);\n\n              if(d1 < inputShape[${i}] && d1 >= 0) {\n\n                ch = imod(pos, inChannels);\n\n                if (${r}) {\n                  innerDims = vec2(d1, ch);\n                  result[${2*u+e}] = getChannel(\n                    getA(rc.x, d0, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                } else {\n                  innerDims = vec2(d0, d1);\n                  result[${2*u+e}] = getChannel(\n                    getA(rc.x, ch, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                }\n              }\n            }\n          }\n        `;this.userCode=`\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0);\n\n        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n        vec2 innerDims;\n\n        ${l}\n\n        ${a.output} = result;\n      }\n    `}}function uM(e,t){const n=e.length;return n>=3?t?[...e.slice(0,-3),e[n-3]*e[n-2],e[n-1]]:[...e.slice(0,-3),e[n-3],e[n-2]*e[n-1]]:!t&&1===n&&e[0]>1?[e[0],1]:null}function cM(e){let{x:t,filter:n,convInfo:a,backend:r,bias:s=null,preluActivationWeights:i=null,leakyreluAlpha:o=0,activation:l=null}=e;const u=t.shape,c=r.texData.get(t.dataId),p=a.inChannels,d=u[0]*u[1]*u[2],h=a.outChannels,f="channelsLast"===a.dataFormat,m=!1;let g;const y=[];if(null!=i){const e=uM(i.shape,f);null!=e&&(i=ID({inputs:{x:i},backend:r,attrs:{shape:e}}),y.push(i))}if(null!=s){const e=uM(s.shape,f);null!=e&&(s=ID({inputs:{x:s},backend:r,attrs:{shape:e}}),y.push(s))}if(!((1===d||1===h)&&p>1e3)&&c.isPacked&&f&&null!=c.texture&&u[2]%2!==0&&Qe(c.shape.slice(-3),u.slice(-3))){const e=u[0]*u[1]*(u[2]+1),p={dataId:t.dataId,shape:[1,e,a.inChannels],dtype:t.dtype},d=c.shape;c.shape=c.shape.slice(),c.shape[c.shape.length-2]++,qe(WA(c.shape,p.shape),(()=>`packed reshape ${c.shape} to ${p.shape} isn't free`));const h=ID({inputs:{x:n},backend:r,attrs:{shape:[1,a.inChannels,a.outChannels]}});y.push(h);const f=LD({a:p,b:h,backend:r,transposeA:false,transposeB:m,bias:s,activation:l,preluActivationWeights:i,leakyreluAlpha:o}),b=r.texData.get(f.dataId);qe(b.isPacked,(()=>"batchMatMul result is expected to be packed")),c.shape=d,b.shape=a.outShape,g=rD({inputs:{x:f},backend:r}),g.shape=a.outShape,y.push(f)}else{const e=a.outHeight*a.outWidth,u=ID({inputs:{x:t},backend:r,attrs:{shape:f?[a.batchSize,e,a.inChannels]:[a.batchSize,a.inChannels,e]}}),c=ID({inputs:{x:n},backend:r,attrs:{shape:[1,a.inChannels,a.outChannels]}}),p=LD({a:f?u:c,b:f?c:u,transposeA:!f,transposeB:m,backend:r,bias:s,activation:l,preluActivationWeights:i,leakyreluAlpha:o});g=ID({inputs:{x:p},backend:r,attrs:{shape:a.outShape}}),y.push(u),y.push(c),y.push(p)}for(const b of y)r.disposeIntermediateTensorInfo(b);return g}function pM(e){let{x:t,filter:n,convInfo:a,backend:r,bias:s=null,preluActivationWeights:i=null,leakyreluAlpha:o=0,activation:l=null}=e;const{filterWidth:u,filterHeight:c,inChannels:p,outWidth:d,outHeight:h,dataFormat:f}=a,m="channelsLast"===f,g=u*c*p,y=h*d,b=[a.batchSize,g,y],x=[];if(null!=i){const e=uM(i.shape,m);null!=e&&(i=ID({inputs:{x:i},backend:r,attrs:{shape:e}}),x.push(i))}if(null!=s){const e=uM(s.shape,m);null!=e&&(s=ID({inputs:{x:s},backend:r,attrs:{shape:e}}),x.push(s))}const v=ID({inputs:{x:n},backend:r,attrs:{shape:[1,g,Ye(n.shape)/g]}});x.push(v);const w=new lM(b,a),k=[t.shape,[a.padInfo.top,a.padInfo.left],[a.strideHeight,a.strideWidth],[a.dilationHeight,a.dilationWidth],[a.inChannels],[a.filterWidth*a.inChannels],[a.outWidth]],N=r.runWebGLProgram(w,[t],"float32",k),S=ID({inputs:{x:N},backend:r,attrs:{shape:b}});x.push(N),x.push(S);const I=null!=s,T=null!=i,C="leakyrelu"===l,E=l?yD(l,!0):null,$=new bD(m?S.shape:v.shape,m?v.shape:S.shape,m?[a.batchSize,y,a.outChannels]:[a.batchSize,a.outChannels,y],!0,!1,I,E,T,C),R=m?[S,v]:[v,S];if(s&&R.push(s),T&&R.push(i),C){const e=r.makeTensorInfo([],"float32",ms(o,"float32"));R.push(e),x.push(e)}const A=r.runWebGLProgram($,R,"float32"),_=ID({inputs:{x:A},backend:r,attrs:{shape:a.outShape}});x.push(A);for(const F of x)r.disposeIntermediateTensorInfo(F);return _}const dM={kernelName:ln,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,filter:s}=t,{strides:i,pad:o,dataFormat:l,dilations:u,dimRoundingMode:c}=a,p=Su(l),d=fu(r.shape,s.shape,i,u,o,c,!1,p);let h;if(1!==d.filterHeight||1!==d.filterWidth||1!==d.dilationHeight||1!==d.dilationWidth||1!==d.strideHeight||1!==d.strideWidth||"SAME"!==d.padInfo.type&&"VALID"!==d.padInfo.type)if(d.strideWidth<=2&&"channelsLast"===p&&Ct().getBool("WEBGL_EXP_CONV")){const e=new oM(d),t=[[d.padInfo.top,d.padInfo.left],[d.strideHeight,d.strideWidth],[d.dilationHeight,d.dilationWidth],[d.inHeight,d.inWidth]];h=n.runWebGLProgram(e,[r,s],"float32",t)}else if(Ct().getBool("WEBGL_CONV_IM2COL"))h=pM({x:r,filter:s,convInfo:d,backend:n});else{const e=new sM(d);h=n.runWebGLProgram(e,[r,s],"float32")}else h=cM({x:r,filter:s,convInfo:d,backend:n});const f=ID({inputs:{x:h},backend:n,attrs:{shape:d.outShape}});return n.disposeIntermediateTensorInfo(h),f}};class hM{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,a=e.padInfo.top,r=e.padInfo.left,s="channelsLast"===e.dataFormat;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int d2 = coords.w;\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${a};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${r};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              ${s?"float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);":"float dyValue = getDy(b, d2, yR, yC);\n              float xValue = getX(b, d1, xR, xC);\n              dotProd += (xValue * dyValue);"}\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class fM{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,a=e.strideHeight,r=e.strideWidth,s="channelsLast"===e.dataFormat,i=t-1-e.padInfo.top,o=n-1-e.padInfo.left,l=s?1:2,u=s?2:3,c=s?3:1;this.userCode=`\n      const ivec2 pads = ivec2(${i}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[${c}];\n\n        ivec2 dyCorner = ivec2(coords[${l}], coords[${u}]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${a}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${r}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n\n              if (${s}) {\n                float xValue = getDy(batch, idyR, idyC, d2);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              } else {\n                float xValue = getDy(batch, d2, idyR, idyC);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class mM{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideDepth,n=e.strideHeight,a=e.strideWidth,r=e.padInfo.front,s=e.padInfo.top,i=e.padInfo.left;this.userCode=`\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int wF = coords.x;\n        int wR = coords.y;\n        int wC = coords.z;\n        int d1 = coords.w;\n        int d2 = coords.u;\n\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yF = 0; yF < ${e.outDepth}; yF++) {\n            int xF = wF + yF * ${t} - ${r};\n\n            if (xF < 0 || xF >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int yR = 0; yR < ${e.outHeight}; yR++) {\n              int xR = wR + yR * ${n} - ${s};\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int yC = 0; yC < ${e.outWidth}; yC++) {\n                int xC = wC + yC * ${a} - ${i};\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float dyValue = getDy(b, yF, yR, yC, d2);\n                float xValue = getX(b, xF, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class gM{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,a=e.filterWidth,r=e.strideDepth,s=e.strideHeight,i=e.strideWidth,o=t-1-e.padInfo.front,l=n-1-e.padInfo.top,u=a-1-e.padInfo.left;this.userCode=`\n      const ivec3 pads = ivec3(${o}, ${l}, ${u});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.u;\n\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyFCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${t}; wF++) {\n          float dyF = float(dyFCorner + wF) / ${r}.0;\n\n          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {\n            continue;\n          }\n          int idyF = int(dyF);\n\n          int wFPerm = ${t} - 1 - wF;\n\n          for (int wR = 0; wR < ${n}; wR++) {\n            float dyR = float(dyRCorner + wR) / ${s}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n              fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            int wRPerm = ${n} - 1 - wR;\n\n            for (int wC = 0; wC < ${a}; wC++) {\n              float dyC = float(dyCCorner + wC) / ${i}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              int wCPerm = ${a} - 1 - wC;\n\n              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n                float xValue = getDy(batch, idyF, idyR, idyC, d2);\n                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const yM={kernelName:un,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,dy:s}=t,{strides:i,pad:o,dataFormat:l,dimRoundingMode:u,filterShape:c}=a,p=Su(l),d=fu(r.shape,c,i,1,o,u,!1,p),h=new hM(d);return n.runWebGLProgram(h,[r,s],"float32")}};class bM{constructor(e){this.variableNames=["dy","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"strides",type:"vec2"}],this.outputShape=e.inShape,this.enableShapeUniforms=v_(this.outputShape.length);const t=e.filterHeight,n=e.filterWidth,a=t-1-e.padInfo.top,r=n-1-e.padInfo.left;this.userCode=`\n      const ivec2 pads = ivec2(${a}, ${r});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n\n        ivec2 dyCorner = ivec2(coords[1], coords[2]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        vec4 result = vec4(0.);\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / strides[0];\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            int wCPerm = ${n} - 1 - wC;\n\n            float dyC = float(dyCCorner + wC) / strides[1];\n            bool idyCVal = (dyC >= 0.0) && (dyC < ${e.outWidth}.0)\n              && (fract(dyC) == 0.0);\n            int idyC = int(dyC);\n\n            float dyC2 = float(dyCCorner + wC + 1) / strides[1];\n            bool idyCVal2 = (dyC2 >= 0.0) && (dyC2 < ${e.outWidth}.0)\n              && (fract(dyC2) == 0.0);\n            int idyC2 = int(dyC2);\n\n            if (idyCVal && idyCVal2) {\n              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {\n                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);\n                vec4 dySample = getDy(batch, idyR, idyC, d2);\n                vec4 dySample2 = (idyC / 2 == idyC2 / 2) ?\n                  dySample : getDy(batch, idyR, idyC2, d2);\n\n                vec2 dyValue = mod(float(idyC), 2.) == 0. ?\n                  dySample.xy : dySample.zw;\n                result.xy += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n\n                dyValue = mod(float(idyC2), 2.) == 0. ?\n                  dySample2.xy : dySample2.zw;\n                result.zw += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n              }\n            } else if (idyCVal) {\n              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {\n                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);\n                vec4 dySample = getDy(batch, idyR, idyC, d2);\n                vec2 dyValue = mod(float(idyC), 2.) == 0. ?\n                  dySample.xy : dySample.zw;\n                result.xy += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n              }\n            } else if (idyCVal2) {\n              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {\n                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);\n                vec4 dySample = getDy(batch, idyR, idyC2, d2);\n                vec2 dyValue = mod(float(idyC2), 2.) == 0. ?\n                  dySample.xy : dySample.zw;\n                result.zw += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n              }\n            }\n          }\n        }\n        setOutput(result);\n      }\n    `}}const xM={kernelName:cn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,filter:s}=t,{inputShape:i,strides:o,pad:l,dataFormat:u,dimRoundingMode:c}=a,p=Su(u),d=fu(i,s.shape,o,1,l,c,!1,p);if(Ct().getBool("WEBGL_PACK_CONV2DTRANSPOSE")&&"channelsLast"===p){const e=[[d.strideHeight,d.strideWidth]],t=new bM(d);return n.runWebGLProgram(t,[r,s],"float32",e)}{const e=new fM(d);return n.runWebGLProgram(e,[r,s],"float32")}}};const vM={kernelName:pn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,filter:s}=t,{strides:i,pad:o,dilations:l}=a,u=mu(r.shape,s.shape,i,l,o),c=new iM(u);return n.runWebGLProgram(c,[r,s],"float32")}};const wM={kernelName:dn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,dy:s}=t,{strides:i,pad:o,filterShape:l}=a,u=mu(r.shape,l,i,1,o),c=new mM(u);return n.runWebGLProgram(c,[r,s],"float32")}};const kM={kernelName:hn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,filter:s}=t,{pad:i,strides:o,inputShape:l}=a,u=mu(l,s.shape,o,1,i),c=new gM(u);return n.runWebGLProgram(c,[r,s],"float32")}},NM=mD({opSnippet:fD+"\n  return cos(x);\n",packedOpSnippet:`\n  vec4 result = cos(x);\n  bvec4 isNaN = isnan(x);\n  ${nD}\n  return result;\n`}),SM={kernelName:fn,backendName:"webgl",kernelFunc:NM},IM=mD({opSnippet:"\n  float e2x = exp(-x);\n  return (e2x + 1.0 / e2x) / 2.0;\n"}),TM={kernelName:mn,backendName:"webgl",kernelFunc:IM};class CM{constructor(e,t,n,a,r){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[s,i,o,l]=e,[u]=t,[c,p]=n;this.outputShape=[u,c,p,l];const d="bilinear"===a?1:0,[h,f]=[i-1+".0",o-1+".0"],[m,g,y]=c>1?[""+(i-1)/(c-1),"(y2-y1) * height_ratio",`y1*${h} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${h}`],[b,x,v]=p>1?[""+(o-1)/(p-1),"(x2-x1) * width_ratio",`x1*${f} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${f}`];this.userCode=`\n      const float height_ratio = float(${m});\n      const float width_ratio = float(${b});\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int y = coords[1];\n        int x = coords[2];\n        int d = coords[3];\n\n        // get box vals\n        float y1 = getBoxes(b,0);\n        float x1 = getBoxes(b,1);\n        float y2 = getBoxes(b,2);\n        float x2 = getBoxes(b,3);\n\n        // get image in batch index\n        int bInd = round(getBoxInd(b));\n        if(bInd < 0 || bInd >= ${s}) {\n          return;\n        }\n\n        float height_scale = ${g};\n        float width_scale = ${x};\n\n        float in_y = ${y};\n        if( in_y < 0.0 || in_y > ${h} ) {\n          setOutput(float(${r}));\n          return;\n        }\n        float in_x = ${v};\n        if( in_x < 0.0 || in_x > ${f} ) {\n          setOutput(float(${r}));\n          return;\n        }\n\n        vec2 sourceFracIndexCR = vec2(in_x,in_y);\n        if(${d} == 1) {\n          // Compute the four integer indices.\n          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);\n          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));\n\n          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);\n          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);\n          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);\n          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);\n\n          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);\n\n          float top = topLeft + (topRight - topLeft) * fracCR.x;\n          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          float newValue = top + (bottom - top) * fracCR.y;\n          setOutput(newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          ivec2 sourceNearestCR = ivec2(floor(\n            sourceFracIndexCR + vec2(0.5,0.5)));\n          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutput(newValue);\n        }\n      }\n    `}}const EM={kernelName:bn,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:a}=e,{image:r,boxes:s,boxInd:i}=t,{cropSize:o,method:l,extrapolationValue:u}=a,c=new CM(r.shape,s.shape,o,l,u);return n.runWebGLProgram(c,[r,s,i],"float32")}};var $M;!function(e){e.Prod="*",e.Sum="+"}($M||($M={}));class RM{constructor(e,t,n,a){this.op=e,this.outputShape=t,this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}];const r=this.outputShape.length,s=this.op===$M.Prod?"1.0":"0.0",i=n?s:`getX(${AM(r,"coords",this.op)})`,o=this.outputShape[this.outputShape.length-1];let l="",u="";n?(l=a?"end != "+(o-1):"end != 0",u=a?"end + 1":"end - 1"):(l=a?`end + pow2 < ${o}`:"end >= pow2",u=a?"end + pow2":"end - pow2"),this.userCode=`\n      void main() {\n        ${h_(r)} coords = getOutputCoords();\n        int end = ${_M(r,"coords",this.op)};\n        float val = ${i};\n        int pow2 = int(pow(2.0, index));\n        if (${l}) {\n          int idx = ${u};\n          ${_M(r,"coords",this.op)} = idx;\n          val ${this.op}= getX(${AM(r,"coords",this.op)});\n        }\n        setOutput(val);\n      }\n    `}}function AM(e,t,n){if(1===e)return`${t}`;if(2===e)return`${t}.x, ${t}.y`;if(3===e)return`${t}.x, ${t}.y, ${t}.z`;if(4===e)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw new Error(`Cumulative ${n} for rank ${e} is not yet supported`)}function _M(e,t,n){if(1===e)return`${t}`;if(2===e)return`${t}.y`;if(3===e)return`${t}.z`;if(4===e)return`${t}.w`;throw new Error(`Cumulative ${n} for rank ${e} is not yet supported`)}function FM(e,t,n,a,r,s){const i=t.shape.length,o=Ic([a],i);let l=t;null!=o&&(l=OD({inputs:{x:t},backend:n,attrs:{perm:o}}));const u=Cc(1,i)[0];if(u!==i-1)throw new Error(`WebGL cumprod shader expects an inner-most axis=${t.shape.length-1} but got axis=${a}`);const c=l.shape[u];let p=rD({inputs:{x:l},backend:n});for(let d=0;d<=Math.ceil(Math.log2(c))-1;d++){const t=new RM(e,l.shape,!1,s),a=[[d]],r=p;p=n.runWebGLProgram(t,[p],p.dtype,a),n.disposeIntermediateTensorInfo(r)}if(r){const t=new RM(e,l.shape,r,s),a=p;p=n.runWebGLProgram(t,[p],p.dtype),n.disposeIntermediateTensorInfo(a)}if(null!=o){const e=OD({inputs:{x:p},backend:n,attrs:{perm:Tc(o)}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(l),e}return p}const DM={kernelName:gn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,exclusive:i,reverse:o}=a;return FM($M.Prod,r,n,s,i,o)}};const OM={kernelName:yn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,exclusive:i,reverse:o}=a;return FM($M.Sum,r,n,s,i,o)}};const MM={kernelName:xn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,weights:s}=t,{size:i,binaryOutput:o}=a;if(1===r.shape.length){const e=n.readSync(r.dataId),t=n.readSync(s.dataId),a=B_(e,t,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,a)}if(2===r.shape.length){const e=n.bufferSync(r),t=n.bufferSync(s),a=W_(e,t,i,o);return n.makeTensorInfo(a.shape,s.dtype,a.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${r.shape.length}.`)}};class LM{constructor(e,t,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=n,this.userCode=`\n    void main() {\n      ivec4 coords = getOutputCoords();\n      int b = coords[0];\n      int h = ${this.getHeightCoordString()};\n      int w = ${this.getWidthCoordString()};\n      int d = ${this.getDepthCoordString()};\n\n      int in_h = h / ${t};\n      int offset_h = imod(h, ${t});\n      int in_w = w / ${t};\n      int offset_w = imod(w, ${t});\n      int offset_d = (offset_h * ${t} + offset_w) *\n        ${this.getOutputDepthSize()};\n      int in_d = d + offset_d;\n\n      float result = ${this.getInputSamplingString()};\n      setOutput(result);\n    }\n  `}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}const zM={kernelName:vn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{blockSize:s,dataFormat:i}=a,o=r.shape[0],l=("NHWC"===i?r.shape[1]:r.shape[2])*s,u=("NHWC"===i?r.shape[2]:r.shape[3])*s,c=("NHWC"===i?r.shape[3]:r.shape[1])/(s*s),p=new LM("NHWC"===i?[o,l,u,c]:[o,c,l,u],s,i);return n.runWebGLProgram(p,[r],r.dtype)}};class PM{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r=arguments.length>4&&void 0!==arguments[4]&&arguments[4];this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=v_(this.outputShape.length);const s=e.filterHeight,i=e.filterWidth,o=e.outChannels/e.inChannels;let l="",u="";n&&(l=a?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:r?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,u="result = activation(result);");const c=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${l}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${o};\n        int q = d2 - d1 * ${o};\n\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.\n        for (int wR = 0; wR < ${s}; wR++) {\n          int xR = xRCorner + wR * dilations[0];\n\n          if (xR < 0 || xR >= inDims[0]) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${i}; wC++) {\n            int xC = xCCorner + wC * dilations[1];\n\n            if (xC < 0 || xC >= inDims[1]) {\n              continue;\n            }\n\n            float xVal = getX(batch, xR, xC, d1);\n            float wVal = getW(wR, wC, d1, q);\n            dotProd += xVal * wVal;\n          }\n        }\n\n        float result = dotProd;\n        ${c}\n        ${u}\n        setOutput(result);\n      }\n    `}}class BM{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r=arguments.length>4&&void 0!==arguments[4]&&arguments[4];this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=v_(this.outputShape.length);const s=e.outChannels/e.inChannels,i=e.padInfo.left,o=e.strideWidth,l=e.dilationWidth,u=e.filterHeight,c=e.filterWidth,p=c;let d="\n      int xR; int xC; int xCOffset;\n      vec4 wTexel; vec4 previous; vec4 final;";for(let g=0;g<c;g++)d+=`\n          vec4 xTexelC${2*g};\n          int xTexelC${2*g}Ready;\n          vec4 xTexelC${2*g+1};\n          int xTexelC${2*g+1}Ready;\n          vec4 xC${g};`;d+=`\n    for (int r = 0; r < ${u}; r++) {\n      `;for(let g=0;g<c;g++)d+=`\n          xTexelC${2*g} = vec4(0.0);\n          xTexelC${2*g}Ready = 0;\n          xTexelC${2*g+1} = vec4(0.0);\n          xTexelC${2*g+1}Ready = 0;\n          xC${g} = vec4(0.0);`;d+="\n        xR = xRCorner + r * dilations[0];\n        if (xR >=0 && xR < inDims[0]) {\n      ";for(let g=0;g<(p+1)/2;g++){const e=2*g;if(d+=`\n          xC = xCCorner + ${e*l};\n          `,1===o){if(e<c&&(i%2===1?(d+=`\n                xCOffset = xC + 1;\n                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${e}Ready == 0) {\n                  xTexelC${e} = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${e}.zw = vec2(0.0);\n                  }\n                  xTexelC${e}Ready = 1;\n                }\n              `,d+=1===l&&e>0?`\n                xC${e} = vec4(xTexelC${e-2}.zw, xTexelC${e}.xy);\n                `:`\n                  xCOffset = xC + 1 - 2;\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                    previous = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      previous.zw = vec2(0.0);\n                    }\n\n                    xC${e} = vec4(previous.zw, xTexelC${e}.xy);\n                  } else {\n                    xC${e} = vec4(0.0, 0.0, xTexelC${e}.xy);\n                  }\n                  `):d+=`\n                if (xC >= 0 && xC < inDims[1] && xTexelC${e}Ready == 0) {\n                  xTexelC${e} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${e}.zw = vec2(0.0);\n                  }\n                  xTexelC${e}Ready = 1;\n                }\n\n                xC${e} = xTexelC${e};\n                `,e+1<c)){const t=i%2===0?Ge(l):l;l%2===0&&i%2===1||l%2!==0&&i%2!==1?(d+=`\n                  xCOffset = xC + imod(pads[1], 2) + ${t};\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${e+1}Ready == 0) {\n                    xTexelC${e+1} = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      xTexelC${e+1}.zw = vec2(0.0);\n                    }\n                    xTexelC${e+1}Ready = 1;\n                  }\n                  `,d+=l>1?`\n                    xCOffset -= 2;\n                    if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                     previous = getX(batch, xR, xCOffset, d1);\n                     xC${e+1} = vec4(previous.zw, xTexelC${e+1}.xy);\n                    } else {\n                     xC${e+1} = vec4(0.0, 0.0, xTexelC${e+1}.xy);\n                    }\n                    `:`\n                    xC${e+1} = vec4(xTexelC${e}.zw, xTexelC${e+1}.xy);\n                    `):d+=1===t?`\n                    xC${e+1} = xTexelC${e};\n                    `:`\n                    xCOffset = xC + ${t};\n\n                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${e+1}Ready == 0) {\n                      xTexelC${e+1} = getX(batch, xR, xCOffset, d1);\n                      if (xCOffset + 1 >= inDims[1]) {\n                        xTexelC${e+1}.zw = vec2(0.0);\n                      }\n                      xTexelC${e+1}Ready = 1;\n                    }\n\n                    xC${e+1} = xTexelC${e+1};\n                    `}}else e<c&&(i%2===1?(d+=`\n                xCOffset = xC + 1 - strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${e}Ready == 0) {\n                  xTexelC${e} = getX(batch, xR, xCOffset, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${e}.zw = vec2(0.0);\n                  }\n                  xTexelC${e}Ready = 1;\n                }\n\n                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${e+1}Ready == 0) {\n                  xTexelC${e+1} = getX(batch, xR, xC + 1, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xC + 2 >= inDims[1]) {\n                    xTexelC${e+1}.zw = vec2(0.0);\n                  }\n                  xTexelC${e+1}Ready = 1;\n                }\n\n                xC${e} = vec4(xTexelC${e}.zw, xTexelC${e+1}.zw);\n              `,e+1<c&&(d+=`\n                  final = vec4(0.0);\n                  xCOffset = xC + 1 + strides[1];\n                  if(xCOffset >= 0 && xCOffset < inDims[1]) {\n                    final = getX(batch, xR, xCOffset, d1);\n                  }\n                  xC${e+1} = vec4(xTexelC${e+1}.xy, final.xy);\n                `)):(d+=`\n                if(xC >= 0 && xC < inDims[1] && xTexelC${e}Ready == 0) {\n                  xTexelC${e} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${e}.zw = vec2(0.0);\n                  }\n                  xTexelC${e}Ready = 1;\n                }\n\n                xCOffset = xC + strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${e+1}Ready == 0) {\n                  xTexelC${e+1} = getX(batch, xR, xCOffset, d1);\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${e+1}.zw = vec2(0.);\n                  }\n                  xTexelC${e+1}Ready = 1;\n                }\n\n                xC${e} = vec4(\n                  xTexelC${e}.xy, xTexelC${e+1}.xy);\n              `,e+1<c&&(d+=`\n                  xC${e+1} = vec4(xTexelC${e}.zw, xTexelC${e+1}.zw);\n                `)));e<c&&(d+=`\n            wTexel = getW(r, ${e}, d1, q);\n            dotProd += xC${e} * vec4(wTexel.xz, wTexel.xz);\n          `,e+1<c&&(d+=`\n              wTexel = getW(r, ${e+1}, d1, q);\n              dotProd += xC${e+1} * vec4(wTexel.xz, wTexel.xz);\n            `))}d+="\n    }\n  ",d+="\n      }\n    ";let h="",f="";n&&(h=a?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:r?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`vec4 activation(vec4 x) {\n          ${n}\n        }`,f="result = activation(result);");const m=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${h}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${s};\n        int q = d2 - d1 * ${s};\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n        vec4 dotProd = vec4(0.000000000000001);\n\n        ${d}\n\n        vec4 result = dotProd - vec4(0.000000000000001);\n        ${m}\n        ${f}\n        setOutput(result);\n      }\n    `}}const WM={kernelName:wn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,filter:s}=t,{strides:i,pad:o,dilations:l,dimRoundingMode:u}=a;let c=l;null==c&&(c=[1,1]),qe(ku(i,c),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${c}'`));const p=fu(r.shape,s.shape,i,c,o,u,!0);let d;d=Ct().getBool("WEBGL_PACK_DEPTHWISECONV")&&p.strideWidth<=2&&p.outChannels/p.inChannels===1?new BM(p):new PM(p);const h=[[p.padInfo.top,p.padInfo.left],[p.strideHeight,p.strideWidth],[p.dilationHeight,p.dilationWidth],[p.inHeight,p.inWidth]];return n.runWebGLProgram(d,[r,s],"float32",h)}};class VM{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,a=e.padInfo.top,r=e.padInfo.left,s=e.outChannels/e.inChannels;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int dm = coords.w;\n        int d2 = d1 * ${s} + dm;\n\n        float dotProd = 0.0;\n\n        // TO DO: Vec4 over the batch size\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${a};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${r};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class UM{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,a=e.strideHeight,r=e.strideWidth,s=t-1-e.padInfo.top,i=n-1-e.padInfo.left,o=e.outChannels/e.inChannels;this.userCode=`\n      const ivec2 pads = ivec2(${s}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n        ivec2 dyCorner = coords.yz - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        float dotProd = 0.0;\n\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${a}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${r}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            // TO DO: Vec4 over the channelMul\n            for (int dm = 0; dm < ${o}; dm++) {\n              int d2 = d1 * ${o} + dm;\n              float xValue = getDy(batch, idyR, idyC, d2);\n              float wValue = getW(wRPerm, wCPerm, d1, dm);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const jM={kernelName:kn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,dy:s}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,filterShape:c}=a,p=fu(r.shape,c,i,o,l,u,!0),d=new VM(p);return n.runWebGLProgram(d,[r,s],"float32")}};const GM={kernelName:Nn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,filter:s}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,inputShape:c}=a,p=fu(c,s.shape,i,o,l,u,!0),d=new UM(p);return n.runWebGLProgram(d,[r,s],"float32")}};class HM{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode="\n      void main() {\n          ivec2 coords = getOutputCoords();\n          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;\n          setOutput(val);\n      }\n    "}}const qM={kernelName:Sn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:a}=t,r=[...a.shape,...a.shape],s=Ye(a.shape),i=ID({inputs:{x:a},backend:n,attrs:{shape:[s]}}),o=new HM(s),l=n.runWebGLProgram(o,[i],i.dtype),u=ID({inputs:{x:l},backend:n,attrs:{shape:r}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(l),u}};class KM{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const{inHeight:t,inWidth:n,padInfo:a,strideHeight:r,strideWidth:s,filterHeight:i,filterWidth:o,dilationHeight:l,dilationWidth:u}=e,{top:c,left:p}=a;this.userCode=`\n      const ivec2 strides = ivec2(${r}, ${s});\n      const ivec2 pads = ivec2(${c}, ${p});\n      const float neg_infinity = -3.4e38;\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.w;\n        ivec2 outTopLeftCorner =\n            coords.yz * strides - pads;\n        int hBeg = outTopLeftCorner.x;\n        int wBeg = outTopLeftCorner.y;\n\n        float curVal = neg_infinity;\n        for (int h = 0; h < ${i}; h++) {\n          int hIn = hBeg + h * ${l};\n\n          if (hIn >= 0 && hIn < ${t}) {\n            for (int w = 0; w < ${o}; w++) {\n              int wIn = wBeg + w * ${u};\n\n              if (wIn >= 0 && wIn < ${n}) {\n                float xVal = getX(batch, hIn, wIn, d1);\n                float wVal = getW(h, w, d1);\n\n                float val = xVal + wVal;\n                if (val > curVal) {\n                  curVal = val;\n                }\n              }\n            }\n          }\n        }\n\n        float result = curVal;\n        setOutput(result);\n      }\n    `}}const XM={kernelName:In,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,filter:s}=t,{strides:i,pad:o,dilations:l}=a,u=pu(r.shape,s.shape,i,o,"NHWC",l);let c;const p=new KM(u);c=n.runWebGLProgram(p,[r,s],"float32");const d=ID({inputs:{x:c},backend:n,attrs:{shape:u.outShape}});return n.disposeIntermediateTensorInfo(c),d}};const YM={kernelName:Rn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{equation:r}=a,s=t,{allDims:i,summedDims:o,idDims:l}=sm(r,s.length);om(i.length,l,s);const{path:u,steps:c}=lm(o,l),p=c.length;let d=null,h=i.length;const f=[];for(let m=0;m<p;++m){for(const e of c[m]){const{permutationIndices:t,expandDims:a}=im(h,l[e]);let r;um(t)?r=s[e]:(r=OD({inputs:{x:s[e]},backend:n,attrs:{perm:t}}),f.push(r));const i=r.shape.slice();for(let e=0;e<a.length;++e)i.splice(a[e],0,1);Qe(r.shape,i)||(r=ID({inputs:{x:r},backend:n,attrs:{shape:i}}),f.push(r)),null===d?d=r:(d=ND({inputs:{a:r,b:d},backend:n}),f.push(d))}m<p-1&&(u[m]>=0&&(d=FD({inputs:{x:d},backend:n,attrs:{axis:u[m]-(i.length-h),keepDims:!1}}),f.push(d)),h--)}for(const m of f)m!==d&&n.disposeIntermediateTensorInfo(m);return d}},QM=mD({opSnippet:"return (x >= 0.0) ? x : (exp(x) - 1.0);",packedOpSnippet:"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n"}),ZM={kernelName:An,backendName:"webgl",kernelFunc:QM},JM={kernelName:_n,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n}=e,{dy:a,y:r}=t,s=Ct().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new aD("\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\n",a.shape,r.shape):new tD("return (b >= 0.0) ? a : a * (b + 1.0);",a.shape,r.shape);return n.runWebGLProgram(s,[a,r],a.dtype)}},eL=gD({opSnippet:"return float(a == b);",packedOpSnippet:"\n  return vec4(equal(a, b));\n",dtype:"bool",cpuKernelImpl:H_}),tL={kernelName:Dn,backendName:"webgl",kernelFunc:eL},nL=mD({opSnippet:`\n  // Error function is calculated approximately with elementary function.\n  // See "Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables", Abramowitz and Stegun.\n  float p = ${Wf};\n  float a1 = ${Vf};\n  float a2 = ${Uf};\n  float a3 = ${jf};\n  float a4 = ${Gf};\n  float a5 = ${Hf};\n\n  float sign = sign(x);\n  x = abs(x);\n  float t = 1.0 / (1.0 + p * x);\n  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));\n`}),aL={kernelName:Fn,backendName:"webgl",kernelFunc:nL},rL=mD({opSnippet:fD+"\n  return exp(x);\n",packedOpSnippet:"\n  vec4 result = exp(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",cpuKernelImpl:q_,dtype:"float32"}),sL={kernelName:On,backendName:"webgl",kernelFunc:rL};function iL(e){const{inputs:t,attrs:n,backend:a}=e,{dim:r}=n,{input:s}=t,i=s.shape.length,o=s.shape.slice();let l=r;return r<0&&(qe(-(i+1)<=r,(()=>`Axis must be in the interval [${-(i+1)}, ${i}]`)),l=i+r+1),o.splice(l,0,1),ID({inputs:{x:s},backend:a,attrs:{shape:o}})}const oL={kernelName:Mn,backendName:"webgl",kernelFunc:iL},lL="return exp(x) - 1.0;",uL=mD({opSnippet:lL,packedOpSnippet:lL,cpuKernelImpl:K_}),cL={kernelName:Ln,backendName:"webgl",kernelFunc:uL};class pL{constructor(e,t,n){this.variableNames=["real","imag"];const a=t[1];this.outputShape=t;const r=n?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,s=n?`${a}.0`:"1.0";let i;if("real"===e)i="return real * expR - imag * expI;";else{if("imag"!==e)throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);i="return real * expI + imag * expR;"}this.userCode=`\n      const float exponentMultiplier = ${r};\n\n      float unaryOpComplex(float real, float expR, float imag, float expI) {\n        ${i}\n      }\n\n      float mulMatDFT(int batch, int index) {\n        float indexRatio = float(index) / float(${a});\n        float exponentMultiplierTimesIndexRatio =\n            exponentMultiplier * indexRatio;\n\n        float result = 0.0;\n\n        for (int i = 0; i < ${a}; i++) {\n          // x = (-2|2 * PI / N) * index * i;\n          float x = exponentMultiplierTimesIndexRatio * float(i);\n          float expR = cos(x);\n          float expI = sin(x);\n          float real = getReal(batch, i);\n          float imag = getImag(batch, i);\n\n          result +=\n              unaryOpComplex(real, expR, imag, expI) / ${s};\n        }\n\n        return result;\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        setOutput(mulMatDFT(coords[0], coords[1]));\n      }\n    `}}function dL(e,t,n){const a=n.texData.get(e.dataId),r=Ye(e.shape),s=e.shape[e.shape.length-1],i=ID({inputs:{x:e},backend:n,attrs:{shape:[r/s,s]}}),o=i.shape,l=new pL("real",o,t),u=new pL("imag",o,t),c=[{dataId:a.complexTensorInfos.real.dataId,dtype:a.complexTensorInfos.real.dtype,shape:o},{dataId:a.complexTensorInfos.imag.dataId,dtype:a.complexTensorInfos.imag.dtype,shape:o}],p=n.runWebGLProgram(l,c,"float32"),d=n.runWebGLProgram(u,c,"float32"),h=iD({inputs:{real:p,imag:d},backend:n});n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(d);const f=ID({inputs:{x:h},backend:n,attrs:{shape:e.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(h),f}const hL={kernelName:zn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:a}=t;return dL(a,!1,n)}};class fL{constructor(e,t){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=e,this.userCode="\n      void main() {\n        // Input can be obtained from uniform value.\n        setOutput(value);\n      }\n    "}}function mL(e){const{backend:t,attrs:n}=e,{shape:a,value:r}=n;let{dtype:s}=n;if(s=s||pt(r),"string"===s){const e=it(s,Ye(a));return e.fill(r),t.makeTensorInfo(a,s,e)}{const e=new fL(a,r),n=[[r]];return t.runWebGLProgram(e,[],s,n)}}const gL={kernelName:Pn,backendName:"webgl",kernelFunc:mL};class yL{constructor(e){this.variableNames=["Image"],this.outputShape=[];const t=e[2];this.outputShape=e,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n\n          int coordX = ${t} - x - 1;\n          float outputValue;\n          if(coordX >= 0 && coordX < ${t}) {\n            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);\n          } else {\n            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const bL={kernelName:Bn,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:n}=e;const{image:a}=t,r=n,s=new yL(a.shape);return r.runWebGLProgram(s,[a],a.dtype)}},xL="return floor(x);",vL=mD({opSnippet:xL,packedOpSnippet:xL,cpuKernelImpl:X_}),wL={kernelName:Wn,backendName:"webgl",kernelFunc:vL},kL=gD({opSnippet:"\n  float s = sign(a) * sign(b);\n  int ia = round(a);\n  int ib = round(b);\n  if (ib != 0) {\n    // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n    return float(idiv(ia, ib, s));\n  } else {\n    return NAN;\n  }\n",packedOpSnippet:"\n  ivec4 ia = round(a);\n  ivec4 ib = round(b);\n  bvec4 cond = notEqual(ib, ivec4(0));\n  ivec4 result = ivec4(0);\n  vec4 s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    result[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    result[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    result[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    result[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4(result);\n",dtype:"int32"}),NL={kernelName:Vn,backendName:"webgl",kernelFunc:kL};class SL{constructor(e){this.variableNames=["A"];const t=YA(),[n,a]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${a}.0, ${n}.0);\n\n        vec4 values = ${t.texture2D}(A, uv);\n        float value;\n        if (depth == 0) {\n          value = values.r;\n        } else if (depth == 1) {\n          value = values.g;\n        } else if (depth == 2) {\n          value = values.b;\n        } else if (depth == 3) {\n          value = values.a;\n        }\n\n        setOutput(floor(value * 255.0 + 0.5));\n      }\n    `}}class IL{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const t=YA(),[n,a]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n\n        vec4 result = vec4(0.);\n\n        for(int row=0; row<=1; row++) {\n          for(int col=0; col<=1; col++) {\n            texC = coords[1] + row;\n            depth = coords[2] + col;\n\n            vec2 uv = (vec2(texC, texR) + halfCR) /\n                       vec2(${a}.0, ${n}.0);\n            vec4 values = ${t.texture2D}(A, uv);\n            float value;\n            if (depth == 0) {\n              value = values.r;\n            } else if (depth == 1) {\n              value = values.g;\n            } else if (depth == 2) {\n              value = values.b;\n            } else if (depth == 3) {\n              value = values.a;\n            }\n\n            result[row * 2 + col] = floor(value * 255.0 + 0.5);\n          }\n        }\n\n        ${t.output} = result;\n      }\n    `}}const TL={kernelName:Pr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e;let{pixels:r}=t;const{numChannels:s}=a,i="undefined"!==typeof HTMLVideoElement&&r instanceof HTMLVideoElement,o="undefined"!==typeof HTMLImageElement&&r instanceof HTMLImageElement,[l,u]=i?[r.videoWidth,r.videoHeight]:[r.width,r.height],c=[u,l],p=[u,l,s];if(o||i){const e=Ct().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");null!=CL&&e===EL||(EL=e,CL=document.createElement("canvas").getContext("2d",{willReadFrequently:EL})),CL.canvas.width=l,CL.canvas.height=u,CL.drawImage(r,0,0,l,u),r=CL.canvas}const d=n.makeTensorInfo(c,"int32");n.texData.get(d.dataId).usage=bA.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(d.dataId),r);const h=Ct().getBool("WEBGL_PACK")?new IL(p):new SL(p),f=n.runWebGLProgram(h,[d],"int32");return n.disposeData(d.dataId),f}};let CL,EL=Ct().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");const $L={kernelName:Vr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,filter:s,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dataFormat:c,dilations:p,dimRoundingMode:d,activation:h,leakyreluAlpha:f}=a,m=Su(c),g=fu(r.shape,s.shape,l,p,u,d,!1,m);let y;const b=[],x=null!=i,v=null!=o,w="leakyrelu"===h,k=()=>{const e=[r,s],t=(e,t)=>{if("NCHW"===t&&1===e.shape.length&&1!==e.shape[0]){const t=ID({inputs:{x:e},backend:n,attrs:{shape:[e.shape[0],1,1]}});return b.push(t),t}return e};if(x&&e.push(t(i,c)),v&&e.push(t(o,c)),w){const t=n.makeTensorInfo([],"float32",ms(f,"float32"));e.push(t),b.push(t)}return e};if(1!==g.filterHeight||1!==g.filterWidth||1!==g.dilationHeight||1!==g.dilationWidth||1!==g.strideHeight||1!==g.strideWidth||"SAME"!==g.padInfo.type&&"VALID"!==g.padInfo.type)if(g.strideWidth<=2&&"channelsLast"===m&&Ct().getBool("WEBGL_EXP_CONV")){const e=h?yD(h,!0):null,t=new oM(g,x,e,v,w),a=[[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inHeight,g.inWidth]],r=k();y=n.runWebGLProgram(t,r,"float32",a)}else if(Ct().getBool("WEBGL_CONV_IM2COL"))y=pM({x:r,filter:s,convInfo:g,backend:n,bias:i,activation:h,preluActivationWeights:o,leakyreluAlpha:f});else{const e=h?yD(h,!1):null,t=new sM(g,x,e,v,w),a=k();y=n.runWebGLProgram(t,a,"float32")}else y=cM({x:r,filter:s,convInfo:g,backend:n,bias:i,activation:h,preluActivationWeights:o,leakyreluAlpha:f});const N=ID({inputs:{x:y},backend:n,attrs:{shape:g.outShape}});return b.push(y),b.forEach((e=>n.disposeIntermediateTensorInfo(e))),N}};const RL={kernelName:Ur,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,filter:s,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dilations:c,dimRoundingMode:p,activation:d,leakyreluAlpha:h}=a,f=[];let m=c;null==m&&(m=[1,1]),qe(ku(l,m),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${l} and dilations '${m}'`));const g=fu(r.shape,s.shape,l,m,u,p,!0),y=Ct().getBool("WEBGL_PACK_DEPTHWISECONV")&&g.strideWidth<=2&&g.outChannels/g.inChannels===1,b=d?yD(d,y):null,x=[r,s],v=null!=i,w=null!=o,k="leakyrelu"===d;if(v&&x.push(i),w&&x.push(o),k){const e=n.makeTensorInfo([],"float32",ms(h,"float32"));x.push(e),f.push(e)}let N;N=y?new BM(g,v,b,w,k):new PM(g,v,b,w,k);const S=[[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inHeight,g.inWidth]],I=n.runWebGLProgram(N,x,"float32",S);return f.forEach((e=>n.disposeIntermediateTensorInfo(e))),I}};class AL{constructor(e,t,n,a){this.sliceDim=e,this.strides=t,this.paramsShape=a,this.variableNames=["x","indices"],this.outputShape=n;const r=h_(n.length);let s="\n    int index;";for(let i=0;i<this.sliceDim;i++)s+=`\n          index = round(getIndices(coords[0], ${i}));\n          out_of_bounds = out_of_bounds || index < 0;\n          out_of_bounds = out_of_bounds || index >= ${this.paramsShape[i]};\n          flattenIndex += index * ${this.strides[i]};`;this.userCode=`\n         void main() {\n          ${r} coords = getOutputCoords();\n          int flattenIndex = 0;\n          bool out_of_bounds = false;\n\n          ${s}\n\n          setOutput(out_of_bounds ? 0.0 : getX(flattenIndex, coords[1]));\n        }\n      `}}const _L={kernelName:Gn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:a,indices:r}=t,s=r.shape,i=s[s.length-1],o=Ye(a.shape),[l,u,c,p]=zf(a,r),d=ID({inputs:{x:r},backend:n,attrs:{shape:[u,i]}}),h=ID({inputs:{x:a},backend:n,attrs:{shape:[Ye(a.shape)/c,c]}});if(n.shouldExecuteOnCPU([a,r])||"string"===a.dtype){const e=n.readSync(r.dataId),t=n.bufferSync(a),s=Y_(e,t,a.dtype,u,i,c,p,a.shape,o);return n.makeTensorInfo(l,a.dtype,s.values)}const f=new AL(i,p,[u,c],a.shape),m=n.runWebGLProgram(f,[h,d],h.dtype),g=ID({inputs:{x:m},backend:n,attrs:{shape:l}});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(m),g}};class FL{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;const n=h_(this.rank),a=function(e){const t=["resRC.x","resRC.y","resRC.z","resRC.w"],n=[];for(let a=0;a<e.length;a++)2===a?n.push("index"):n.push(`${t[a]}`);return n.join()}(e);this.userCode=`\n      void main() {\n        ${n} resRC = getOutputCoords();\n        int index = int(getIndices(resRC.x, resRC.z));\n        float inBounds = (index >= 0) && (index < ${e[2]}) ? 1.0 : 0.0;\n        setOutput(inBounds * getA(${a}));\n      }\n    `}}function DL(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,indices:s}=t,{axis:i,batchDims:o}=a,l=at(i,r.shape)[0];if(Ct().get("DEBUG")){const e=n.readSync(s.dataId),t=r.shape[l];for(let n=0;n<e.length;++n){const a=e[n];qe(a<=t-1&&a>=0,(()=>`GatherV2: the index value ${a} is not in [0, ${t-1}]`))}}const u=Tm(r,s,l,o),c=Ye(s.shape),p=[],d=ID({inputs:{x:r},backend:n,attrs:{shape:[u.batchSize,u.outerSize,u.dimSize,u.sliceSize]}}),h=ID({inputs:{x:s},backend:n,attrs:{shape:[u.batchSize,c/u.batchSize]}});p.push(d),p.push(h);const f=[u.batchSize,u.outerSize,c/u.batchSize,u.sliceSize];if(n.shouldExecuteOnCPU([r,s])||"string"===r.dtype){const e=n.bufferSync(h),t=n.bufferSync(d),a=Q_(t,e,f);return p.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(u.outputShape,a.dtype,a.values)}const m=new FL(d.shape,f),g=n.runWebGLProgram(m,[d,h],d.dtype);p.push(g);const y=ID({inputs:{x:g},backend:n,attrs:{shape:u.outputShape}});return p.forEach((e=>n.disposeIntermediateTensorInfo(e))),y}const OL={kernelName:jn,backendName:"webgl",kernelFunc:DL},ML=gD({opSnippet:"return float(a > b);",packedOpSnippet:"\n  return vec4(greaterThan(a, b));\n",cpuKernelImpl:Z_,dtype:"bool"}),LL={kernelName:Hn,backendName:"webgl",kernelFunc:ML},zL=gD({opSnippet:"return float(a >= b);",packedOpSnippet:"\n  return vec4(greaterThanEqual(a, b));\n",dtype:"bool",cpuKernelImpl:J_}),PL={kernelName:qn,backendName:"webgl",kernelFunc:zL};const BL={kernelName:Xn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:a}=t;return dL(a,!0,n)}},WL=mD({opSnippet:"return float(!isnan(x) && !isinf(x));",dtype:"bool"}),VL={kernelName:Qn,backendName:"webgl",kernelFunc:WL},UL=mD({opSnippet:"return float(isinf(x));",dtype:"bool"}),jL={kernelName:Zn,backendName:"webgl",kernelFunc:UL},GL=mD({opSnippet:"return float(isnan(x));",dtype:"bool"}),HL={kernelName:Jn,backendName:"webgl",kernelFunc:GL},qL=gD({opSnippet:"return float(a < b);",packedOpSnippet:"\n  return vec4(lessThan(a, b));\n",cpuKernelImpl:eF,dtype:"bool"}),KL={kernelName:ta,backendName:"webgl",kernelFunc:qL},XL=gD({opSnippet:"return float(a <= b);",packedOpSnippet:"\n  return vec4(lessThanEqual(a, b));\n",cpuKernelImpl:tF,dtype:"bool"}),YL={kernelName:na,backendName:"webgl",kernelFunc:XL};const QL={kernelName:aa,backendName:"webgl",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:a,stop:r,num:s}=n,i=nF(a,r,s);return t.makeTensorInfo([i.length],"float32",i)}},ZL=mD({opSnippet:fD+"\n  return x < 0.0 ? 0./0. : log(x);\n",packedOpSnippet:"\n  vec4 result = log(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);\n  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);\n  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);\n  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);\n  return result;\n",cpuKernelImpl:aF}),JL={kernelName:ra,backendName:"webgl",kernelFunc:ZL},ez=mD({opSnippet:fD+"\n  return log(1.0 + x);\n"}),tz={kernelName:sa,backendName:"webgl",kernelFunc:ez},nz=gD({opSnippet:"return float(a >= 1.0 && b >= 1.0);",packedOpSnippet:"\n  return vec4(\n    vec4(greaterThanEqual(a, vec4(1.0))) *\n    vec4(greaterThanEqual(b, vec4(1.0))));\n",dtype:"bool"}),az={kernelName:ia,backendName:"webgl",kernelFunc:nz},rz=mD({opSnippet:"return float(!(x >= 1.0));"}),sz={kernelName:oa,backendName:"webgl",kernelFunc:rz},iz=gD({opSnippet:"return float(a >= 1.0 || b >= 1.0);",packedOpSnippet:"\n  return min(\n    vec4(greaterThanEqual(a, vec4(1.0))) +\n    vec4(greaterThanEqual(b, vec4(1.0))),\n    vec4(1.0));\n",dtype:"bool"}),oz={kernelName:la,backendName:"webgl",kernelFunc:iz};class lz{constructor(e,t,n,a,r){this.variableNames=["x"],this.outputShape=[];const s=t,i=e[3]-1;let o;this.outputShape=e;const l=`float(${n}) + float(${a}) * sum`;o=.5===r?`inversesqrt(${l})`:1===r?`1.0/(${l})`:`exp(log(${l}) * float(-${r}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n        int d = coords[3];\n        float x = getX(b, r, c, d);\n        float sum = 0.0;\n        for (int j = -${s}; j <= ${s}; j++) {\n          int idx = d + j;\n          if (idx >= 0 && idx <=  ${i}) {\n            float z = getX(b, r, c, idx);\n            sum += z * z;\n          }\n        }\n        float val = x * ${o};\n        setOutput(val);\n      }\n    `}}class uz{constructor(e,t,n,a,r){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const s=t,i=e[3]-1;let o;this.outputShape=e;const l=`float(${n}) + float(${a}) * sum`;o=.5===r?`inversesqrt(${l})`:1===r?`1.0/(${l})`:`exp(log(${l}) * float(-${r}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords.x;\n        int r = coords.y;\n        int c = coords.z;\n        int d = coords.w;\n\n        bool hasNextCol = d < ${this.outputShape[3]};\n        bool hasNextRow = c < ${this.outputShape[2]};\n\n        vec4 sum = vec4(0.);\n        vec4 xFragAtOutputCoords = getX(b, r, c, d);\n\n        vec4 xAtOutputCoords = vec4(\n          getChannel(xFragAtOutputCoords, vec2(c, d)),\n          hasNextCol ?\n            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,\n          hasNextRow ?\n            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0\n        );\n\n        int firstChannel = d - ${s};\n        vec2 cache = vec2(0.);\n        if(firstChannel >= 0){\n          vec4 firstChannelFrag = getX(b, r, c, firstChannel);\n          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));\n            if(hasNextRow){\n              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));\n            }\n        }\n\n        ivec2 depth = ivec2(d, d + 1);\n        for (int j = - ${s}; j <= ${s}; j++) {\n          ivec2 idx = depth + j;\n          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));\n          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${i}));\n\n          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;\n          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;\n\n          if(depthInRange || depthPlusOneInRange){\n            vec4 z = vec4(0.);\n            vec4 xFragAtCurrentDepth;\n            z.xz = cache.xy;\n            if(depthPlusOneInRange && hasNextCol){\n              xFragAtCurrentDepth = idx.y != d ?\n                getX(b, r, c, idx.y) : xFragAtOutputCoords;\n              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));\n              if(hasNextRow){\n                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));\n              }\n            }\n            cache.xy = z.yw;\n            sum += z * z;\n          }\n        }\n        vec4 result = xAtOutputCoords * ${o};\n        setOutput(result);\n      }\n    `}}const cz={kernelName:ua,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{depthRadius:s,bias:i,alpha:o,beta:l}=a,u=Ct().getBool("WEBGL_PACK_NORMALIZATION")?new uz(r.shape,s,i,o,l):new lz(r.shape,s,i,o,l);return n.runWebGLProgram(u,[r],r.dtype)}};class pz{constructor(e,t,n,a,r){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=n,this.alpha=a,this.beta=r,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n\n        float result = 0.0;\n        for (int d = 0; d < ${this.depth}; ++d) {\n          int depthBegin = int(max(0.0, float(d - ${t})));\n          int depthEnd = int(min(float(${this.depth}),\n              float(d + ${t} + 1)));\n\n          const int MIN_DEPTH_BEGIN = 0;\n          const int MAX_DEPTH_END = ${this.depth};\n\n          float norm = 0.0;\n          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd) {\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\n            }\n            else {\n              break;\n            }\n          }\n\n          norm = float(${a}) * norm + float(${n});\n\n          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd){\n              float dyi = -2.0 * float(${a})\n                * float(${r})\n                * getInputImage(b, r, c, k) * getOutputImage(b, r, c, d)\n                / norm;\n              if (k == d) {\n                dyi += pow(norm, -1.0 * ${r});\n              }\n              if (k == coords[3]) {\n                dyi *= getDy(b, r, c, d);\n                result += dyi;\n              }\n            }\n            else {\n              break;\n            }\n          }\n      }\n      setOutput(result);\n      }\n    `}}const dz={kernelName:ca,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:a}=e,{x:r,y:s,dy:i}=t,{depthRadius:o,bias:l,alpha:u,beta:c}=a,p=new pz(r.shape,o,l,u,c);return n.runWebGLProgram(p,[r,s,i],r.dtype)}};function hz(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{reductionIndices:s,keepDims:i}=a,o=r.shape.length,l=at(s,r.shape);let u=l;const c=Ic(u,o),p=null!=c,d=n.shouldExecuteOnCPU([r]);let h=r;if(p){if(d){const e=n.texData.get(h.dataId).values,t=new Array(o);for(let n=0;n<t.length;n++)t[n]=r.shape[c[n]];const a=_F(e,r.shape,r.dtype,c,t);h=n.makeTensorInfo(t,r.dtype);n.texData.get(h.dataId).values=a}else h=_D(r,c,n);u=Cc(u.length,o)}Sc("max",u,o);const[f,m]=kc(h.shape,u);let g,y=f;if(i&&(y=Nc(f,l)),d){const e=n.texData.get(h.dataId).values,t=rF(e,Ye(m),y,r.dtype);g=n.makeTensorInfo(y,r.dtype);n.texData.get(g.dataId).values=t}else g=function(e,t,n,a){const r=Ye(t),s=ID({inputs:{x:e},attrs:{shape:[Ye(e.shape)/r,r]},backend:a}),i=$D(s,e.dtype,"max",a),o=ID({inputs:{x:i},attrs:{shape:n},backend:a});return a.disposeIntermediateTensorInfo(s),a.disposeIntermediateTensorInfo(i),o}(h,m,y,n);return p&&n.disposeIntermediateTensorInfo(h),g}const fz={kernelName:pa,backendName:"webgl",kernelFunc:hz},mz=gD({opSnippet:eD+"\n  return max(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(max(a, b));\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  "+nD+"\n  return result;\n",cpuKernelImpl:sF}),gz={kernelName:da,backendName:"webgl",kernelFunc:mz};const yz={kernelName:ha,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t;KA(r,"maxPool");const{filterSize:s,strides:i,pad:o,dimRoundingMode:l}=a;qe(ku(i,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const u=du(r.shape,s,i,1,o,l);if(1===u.filterWidth&&1===u.filterHeight&&Qe(u.inShape,u.outShape))return rD({inputs:{x:r},backend:n});const c=new gO(u,"max",!1);return n.runWebGLProgram(c,[r],r.dtype)}};const bz={kernelName:ma,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{filterSize:s,strides:i,pad:o,dataFormat:l,dimRoundingMode:u}=a,c=hu(r.shape,s,i,[1,1,1],o,u,l),p=new yO(c,"max",!1);return n.runWebGLProgram(p,[r],r.dtype)}};class xz{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideHeight,n=e.strideWidth,a=e.dilationHeight,r=e.effectiveFilterHeight,s=e.effectiveFilterWidth,i=r-1-e.padInfo.top,o=s-1-e.padInfo.left,l=r*s-1;this.userCode=`\n      const ivec2 pads = ivec2(${i}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${r};\n          wR += ${a}) {\n          float dyR = float(dyRCorner + wR) / ${t}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${s}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${n}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n            int maxPosValue = ${l} - int(getMaxPos(b, idyR, idyC, d));\n\n            // Get the current value, check it against the value from the\n            // position matrix.\n            int curPosValue = wR * ${s} + wC;\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n            dotProd += dyValue * mask;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class vz{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideDepth,n=e.strideHeight,a=e.strideWidth,r=e.dilationDepth,s=e.dilationHeight,i=e.dilationWidth,o=e.effectiveFilterDepth,l=e.effectiveFilterHeight,u=e.effectiveFilterWidth,c=o-1-e.padInfo.front,p=l-1-e.padInfo.top,d=u-1-e.padInfo.left,h=o*l*u-1;this.userCode=`\n      const ivec3 pads = ivec3(${c}, ${p}, ${d});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${o};\n           wD += ${r}) {\n          float dyD = float(dyDCorner + wD) / ${t}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${l};\n              wR += ${s}) {\n            float dyR = float(dyRCorner + wR) / ${n}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${u};\n                wC += ${i}) {\n              float dyC = float(dyCCorner + wC) / ${a}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              int maxPosValue = ${h} -\n                  int(getMaxPos(batch, idyD, idyR, idyC, ch));\n\n              // Get the current value, check it against the value from the\n              // position matrix.\n              int curPosValue =\n                  wD * ${l} * ${u} +\n                  wR * ${u} + wC;\n              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n              dotProd += dyValue * mask;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const wz={kernelName:ga,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,input:s}=t,i=s,{filterSize:o,strides:l,pad:u,dimRoundingMode:c}=a,p=hu(i.shape,o,l,[1,1,1],u,c),d=new yO(p,"max",!0),h=n.runWebGLProgram(d,[i],i.dtype),f=new vz(p),m=n.runWebGLProgram(f,[r,h],i.dtype);return n.disposeIntermediateTensorInfo(h),m}};const kz={kernelName:fa,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,input:s,output:i}=t,o=s;KA([s,i],"maxPoolGrad");const{filterSize:l,strides:u,pad:c,dimRoundingMode:p}=a,d=du(o.shape,l,u,1,c,p),h=new gO(d,"max",!0),f=n.runWebGLProgram(h,[o],o.dtype),m=new xz(d),g=n.runWebGLProgram(m,[r,f],o.dtype);return n.disposeIntermediateTensorInfo(f),g}};const Nz={kernelName:ya,backendName:"webgl",kernelFunc:e=>{let{inputs:t,attrs:n,backend:a}=e;const{x:r}=t,{filterSize:s,strides:i,pad:o,includeBatchInIndex:l}=n,u=a;qe(4===r.shape.length,(()=>`Error in maxPool: input must be rank 4 but got rank ${r.shape.length}.`));const c=[1,1];qe(ku(i,c),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${c}'`));const p=du(r.shape,s,i,c,o),[d,h]=function(e,t,n,a){let r=new gO(n,"max",!1);const s=a.runWebGLProgram(r,[e],"float32");return r=new gO(n,"max",!0,!0,t),[s,a.runWebGLProgram(r,[e],"float32")]}(r,l,p,u);return[d,h]}};const Sz={kernelName:ba,backendName:"webgl",kernelFunc:e=>{let{inputs:t,attrs:n,backend:a}=e;const{x:r}=t,{keepDims:s,axis:i}=n,o=a,l=r.shape.length,u=at(i,r.shape);let c=u;const p=Ic(c,l),d=null!=p,h=o.shouldExecuteOnCPU([r]),f=[];let m=r;if(d){if(h){const e=o.texData.get(m.dataId).values,t=new Array(l);for(let a=0;a<t.length;a++)t[a]=r.shape[p[a]];const n=_F(e,r.shape,r.dtype,p,t);m=o.makeTensorInfo(t,r.dtype);o.texData.get(m.dataId).values=n}else m=_D(r,p,o);f.push(m),c=Cc(c.length,l)}Sc("sum",c,l);const[g,y]=kc(m.shape,c);let b=g;s&&(b=Nc(g,u));const x=function(e,t,n,a){const r=Ye(t),s=ID({inputs:{x:e},attrs:{shape:[Ye(e.shape)/r,r]},backend:a}),i=$D(s,"float32","mean",a),o=ID({inputs:{x:i},attrs:{shape:n},backend:a});return a.disposeIntermediateTensorInfo(s),a.disposeIntermediateTensorInfo(i),o}(m,y,b,o);for(const v of f)o.disposeIntermediateTensorInfo(v);return x}};const Iz={kernelName:xa,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,keepDims:i}=a,o=r.shape.length,l=at(s,r.shape);let u=l;const c=Ic(u,o);let p=r;null!=c&&(p=OD({inputs:{x:r},backend:n,attrs:{perm:c}}),u=Cc(u.length,r.shape.length)),Sc("min",u,o);const[d,h]=kc(p.shape,u),f=ID({inputs:{x:p},backend:n,attrs:{shape:[-1,Ye(h)]}}),m=$D(f,f.dtype,"min",n);let g;if(i){g=ID({inputs:{x:m},backend:n,attrs:{shape:Nc(d,l)}})}else g=ID({inputs:{x:m},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=c&&n.disposeIntermediateTensorInfo(p),g}},Tz=gD({opSnippet:eD+"\n  return min(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(min(a, b));\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  "+nD+"\n  return result;\n",cpuKernelImpl:iF}),Cz={kernelName:va,backendName:"webgl",kernelFunc:Tz};class Ez{constructor(e,t,n){this.variableNames=["x"],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const a=e.length,r=h_(a),s=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,a),l="reflect"===n?0:1;this.userCode=1!==a?`\n      ${r} start = ${r}(${s});\n      ${r} end = ${r}(${i});\n\n      void main() {\n        ${r} outC = getOutputCoords();\n        for (int i = 0; i < ${a}; i++) {\n          if (outC[i] < start[i]) {\n            outC[i] = start[i] * 2 - outC[i] - ${l};\n          } else if(outC[i] >= end[i]) {\n            outC[i] = (end[i] - 1) * 2 - outC[i] + ${l};\n          }\n        }\n        ${r} coords = outC - start;\n        setOutput(getX(${o}));\n      }\n    `:`\n        int start = ${s};\n        int end = ${i};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start) {\n            outC = start * 2 - outC - ${l};\n          } else if(outC >= end) {\n            outC = (end - 1) * 2 - outC + ${l};\n          }\n          setOutput(getX(outC - start));\n        }\n      `}}class $z{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const a=e.length,r=h_(a),s=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=OF("rc",a),l=OF("source",a),u=`${o[a-1]} < ${this.outputShape[a-1]}`,c=1===a?"source":`vec2(${l.slice(-2).join()})`,p="reflect"===n?0:1;let d="";if(1===a){const e=`\n        ${r} source = rc;\n        if (source < start) {\n          source = start * 2 - source - ${p};\n        } else if (source >= end) {\n          source = (end - 1) * 2 - source + ${p};\n        }\n        source -= start;\n      `;d=`\n        ${r} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${l.join()}), ${c});\n        ${o[a-1]} += 1;\n        if(${u}) {\n          ${e}\n          result[1] = getChannel(getX(${l.join()}), ${c});\n        }\n      `}else{const e=`\n        ${r} source = rc;\n        ${r} lt = ${r}(lessThan(source, start));\n        ${r} gte = ${r}(greaterThanEqual(source, end));\n        ${r} orig = 1 - (lt + gte);\n        source = orig * source +\n                lt * (start * 2 - source - ${p}) +\n                gte * ((end - 1) * 2 - source + ${p});\n        source -= start;\n      `;d=`\n        ${r} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${l.join()}), ${c});\n        ${o[a-1]} += 1;\n        if(${u}) {\n          ${e}\n          result[1] = getChannel(getX(${l.join()}), ${c});\n        }\n        rc = outputLoc;\n        ${o[a-2]} += 1;\n        if(${o[a-2]} < ${this.outputShape[a-2]}) {\n          ${e}\n          result[2] = getChannel(getX(${l.join()}), ${c});\n          ${o[a-1]} += 1;\n          if(${u}) {\n            ${e}\n            result[3] = getChannel(getX(${l.join()}), ${c});\n          }\n        }\n      `}this.userCode=`\n      const ${r} start = ${r}(${s});\n      const ${r} end = ${r}(${i});\n\n      void main() {\n        ${r} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${d}\n        setOutput(result);\n      }\n    `}}const Rz={kernelName:wa,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:n,attrs:a}=e;const{x:r}=t,{paddings:s,mode:i}=a,o=Ct().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new $z(r.shape,s,i):new Ez(r.shape,s,i);return n.runWebGLProgram(o,[r],r.dtype)}},Az=gD({opSnippet:"if (b == 0.0) return NAN;\n  return mod(a, b);",packedOpSnippet:"\n  vec4 result = mod(a, b);\n  bvec4 isNaN = equal(b, vec4(0.0));\n  "+nD+"\n  return result;\n"}),_z={kernelName:ka,backendName:"webgl",kernelFunc:Az};class Fz{constructor(e,t,n){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[e,n],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n\n        float r = random(seed);\n        float cdf = 0.0;\n\n        for (int i = 0; i < ${t-1}; i++) {\n          cdf += getProbs(batch, i);\n\n          if (r < cdf) {\n            setOutput(float(i));\n            return;\n          }\n        }\n\n        // If no other event happened, last event happened.\n        setOutput(float(${t-1}));\n      }\n    `}}const Dz=gD({opSnippet:"\nif (a == b) {\n  return 1.0;\n};\nreturn a / b;",packedOpSnippet:"\n  // vec4 one = vec4(equal(a, b));\n  // return one + (vec4(1.0) - one) * a / b;\n  vec4 result = a / b;\n  if(a.x == b.x) {\n    result.x = 1.;\n  }\n  if(a.y == b.y) {\n    result.y = 1.;\n  }\n  if(a.z == b.z) {\n    result.z = 1.;\n  }\n  if(a.w == b.w) {\n    result.w = 1.;\n  }\n\n  return result;\n",checkOutOfBounds:!0}),Oz={kernelName:$n,backendName:"webgl",kernelFunc:Dz},Mz="return a - b;",Lz=gD({opSnippet:Mz,packedOpSnippet:Mz,supportsComplex:!0,cpuKernelImpl:$F}),zz={kernelName:Cr,backendName:"webgl",kernelFunc:Lz};function Pz(e){const{inputs:t,backend:n,attrs:a}=e,{logits:r}=t,{dim:s}=a,i=at([s],r.shape),o=hz({inputs:{x:r},backend:n,attrs:{reductionIndices:i,keepDims:!1}}),l=Nc(o.shape,i),u=ID({inputs:{x:o},backend:n,attrs:{shape:l}}),c=Lz({inputs:{a:r,b:u},backend:n}),p=rL({inputs:{x:c},backend:n}),d=FD({inputs:{x:p},backend:n,attrs:{axis:i,keepDims:!1}}),h=ID({inputs:{x:d},backend:n,attrs:{shape:l}}),f=Dz({inputs:{a:p,b:h},backend:n});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(h),f}const Bz={kernelName:fr,backendName:"webgl",kernelFunc:Pz};const Wz={kernelName:Na,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{logits:r}=t,{numSamples:s,seed:i,normalized:o}=a,l=o?r:Pz({inputs:{logits:r},backend:n,attrs:{dim:r.shape.length-1}}),u=l.shape[0],c=l.shape[1],p=new Fz(u,c,s),d=[[i]],h=n.runWebGLProgram(p,[l],"int32",d);return o||n.disposeIntermediateTensorInfo(l),h}},Vz=UF+"\n  return -x;\n";const Uz={kernelName:Ia,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:a}=t;if(n.shouldExecuteOnCPU([a])){const e=n.texData.get(a.dataId),[t,r]=lF(e.values,a.shape,a.dtype);return n.makeTensorInfo(r,a.dtype,t)}let r;return r=Ct().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new KF(a.shape,"\n  vec4 result = -x;\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"):new VF(a.shape,Vz),n.runWebGLProgram(r,[a],a.dtype)}},jz=Eh;const Gz={kernelName:Ca,backendName:"webgl",kernelFunc:function(e){jr("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:a}=e,{boxes:r,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l}=a,u=n.readSync(r.dataId),c=n.readSync(s.dataId),{selectedIndices:p}=jz(u,c,i,o,l);return n.makeTensorInfo([p.length],"int32",new Int32Array(p))}},Hz=$h;const qz={kernelName:Ea,backendName:"webgl",kernelFunc:function(e){jr("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:a}=e,{boxes:r,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,padToMaxOutputSize:u}=a,c=n.readSync(r.dataId),p=n.readSync(s.dataId),{selectedIndices:d,validOutputs:h}=Hz(c,p,i,o,l,u);return[n.makeTensorInfo([d.length],"int32",new Int32Array(d)),n.makeTensorInfo([],"int32",new Int32Array([h]))]}},Kz=Rh;const Xz={kernelName:$a,backendName:"webgl",kernelFunc:function(e){jr("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:a}=e,{boxes:r,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,softNmsSigma:u}=a,c=n.readSync(r.dataId),p=n.readSync(s.dataId),d=i,h=o,f=l,m=u,{selectedIndices:g,selectedScores:y}=Kz(c,p,d,h,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}};class Yz{constructor(e,t,n,a){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int index = round(getIndices(coords.x));\n        setOutput(mix(float(${a}), float(${n}),\n                      float(index == coords.y)));\n      }\n    `}}const Qz={kernelName:Aa,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:a}=e,{indices:r}=t,{dtype:s,depth:i,onValue:o,offValue:l}=a,u=Ye(r.shape),c=new Yz(u,i,o,l),p=ID({inputs:{x:r},backend:n,attrs:{shape:[u]}}),d=n.runWebGLProgram(c,[p],s);n.disposeIntermediateTensorInfo(p);const h=ID({inputs:{x:d},backend:n,attrs:{shape:[...r.shape,i]}});return n.disposeIntermediateTensorInfo(d),h}};function Zz(e){const{inputs:t,backend:n}=e,{x:a}=t;if("complex64"===a.dtype){const e=PO({inputs:{input:a},backend:n}),t=Zz({inputs:{x:e},backend:n}),r=eM({inputs:{input:a},backend:n}),s=Zz({inputs:{x:r},backend:n}),i=iD({inputs:{real:t,imag:s},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(s),i}return mL({attrs:{shape:a.shape,dtype:a.dtype,value:"string"===a.dtype?"":0},backend:n})}const Jz={kernelName:Lr,backendName:"webgl",kernelFunc:Zz};const eP={kernelName:Ra,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:a}=t,{x:r}=n;if("string"===r.dtype)throw new Error("onesLike is not supported under string dtype");if("complex64"===r.dtype){const t=PO({inputs:{input:r},backend:a}),n=e({inputs:{x:t},backend:a}),s=eM({inputs:{input:r},backend:a}),i=Zz({inputs:{x:s},backend:a}),o=iD({inputs:{real:n,imag:i},backend:a});return a.disposeIntermediateTensorInfo(t),a.disposeIntermediateTensorInfo(n),a.disposeIntermediateTensorInfo(s),a.disposeIntermediateTensorInfo(i),o}return mL({attrs:{shape:r.shape,dtype:r.dtype,value:1},backend:a})}};const tP={kernelName:_a,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{axis:r}=a;if(1===t.length)return iL({inputs:{input:t[0]},backend:n,attrs:{dim:r}});const s=t[0].shape,i=t[0].dtype;t.forEach((e=>{Ke(s,e.shape,"All tensors passed to stack must have matching shapes"),qe(i===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const o=[],l=aM({inputs:t.map((e=>{const t=iL({inputs:{input:e},backend:n,attrs:{dim:r}});return o.push(t),t})),backend:n,attrs:{axis:r}});return o.forEach((e=>n.disposeIntermediateTensorInfo(e))),l}};class nP{constructor(e,t,n){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const a=e.length,r=h_(a),s=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,a);this.userCode=1!==a?`\n      ${r} start = ${r}(${s});\n      ${r} end = ${r}(${i});\n\n      void main() {\n        ${r} outC = getOutputCoords();\n        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {\n          setOutput(value);\n        } else {\n          ${r} coords = outC - start;\n          setOutput(getX(${o}));\n        }\n      }\n    `:`\n        int start = ${s};\n        int end = ${i};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start || outC >= end) {\n            setOutput(value);\n          } else {\n            setOutput(getX(outC - start));\n          }\n        }\n      `}}class aP{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const a=e.length,r=h_(a),s=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=OF("rc",a),l=OF("source",a),u=`${o[a-1]} < ${this.outputShape[a-1]}`,c=1===a?"source":`vec2(${l.slice(-2).join()})`,p=[`${r} rc = outputLoc;`,`${o[a-1]} += 1;\n       if(${u}) {\n      `,1===a?"":`}\n       rc = outputLoc;\n       ${o[a-2]} += 1;\n       if(${o[a-2]} < ${this.outputShape[a-2]}) {`,1===a?"":`  ${o[a-1]} += 1;\n         if(${u}) {`],d=1===a?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let h="";for(let f=0,m=1===a?2:4;f<m;f++)h+=`\n        ${p[f]}\n        if (${d}) {\n          result[${f}] = float(value);\n        } else {\n          ${r} source = rc - start;\n          result[${f}] = getChannel(getX(${l.join()}), ${c});\n        }\n      `;h+=1===a?"} ":"}}",this.userCode=`\n      const ${r} start = ${r}(${s});\n      const ${r} end = ${r}(${i});\n\n      void main() {\n        ${r} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${h}\n        setOutput(result);\n      }\n    `}}const rP=e=>{const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{paddings:s,constantValue:i}=a;if(0===Ye(r.shape)){const e=s.map(((e,t)=>e[0]+r.shape[t]+e[1]));return mL({backend:n,attrs:{shape:e,value:i,dtype:r.dtype}})}const o=Ct().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new aP(r.shape,s,i):new nP(r.shape,s,i),l=[[i]];return n.runWebGLProgram(o,[r],r.dtype,l)},sP={kernelName:Fa,backendName:"webgl",kernelFunc:rP},iP=gD({opSnippet:"\n  if(a < 0.0 && floor(b) < b){\n    return NAN;\n  }\n  if (b == 0.0) {\n    return 1.0;\n  }\n  return (round(mod(b, 2.0)) != 1) ?\n      pow(abs(a), b) : sign(a) * pow(abs(a), b);\n",packedOpSnippet:"\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\n  vec4 result = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  bvec4 isExpZero = equal(b, vec4(0.0));\n  result.r = isExpZero.r ? 1.0 : result.r;\n  result.g = isExpZero.g ? 1.0 : result.g;\n  result.b = isExpZero.b ? 1.0 : result.b;\n  result.a = isExpZero.a ? 1.0 : result.a;\n\n  bvec4 isNaN1 = lessThan(a, vec4(0.0));\n  bvec4 isNaN2 = lessThan(floor(b), b);\n  bvec4 isNaN = bvec4(isNaN1.x && isNaN2.x, isNaN1.y && isNaN2.y, isNaN1.z && isNaN2.z, isNaN1.w && isNaN2.w);\n  "+nD+"\n  return result;\n"}),oP={kernelName:Da,backendName:"webgl",kernelFunc:iP};const lP={kernelName:Ma,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,keepDims:i}=a,o=r.shape.length,l=[],u=at(s,r.shape);let c=u;const p=Ic(c,o);let d,h=r;if(null!=p&&(h=OD({inputs:{x:r},backend:n,attrs:{perm:p}}),c=Cc(c.length,o),l.push(h)),Sc("prod",c,o),n.shouldExecuteOnCPU([h])){const e=n.texData.get(h.dataId).values,{outVals:t,outShape:a,outDtype:r}=cF(h.shape,h.dtype,e,c);d=n.makeTensorInfo(a,r,t)}else{const[e,t]=kc(h.shape,c),a=Ye(t),s=ID({inputs:{x:h},backend:n,attrs:{shape:[-1,a]}}),i=$D(s,js(r.dtype),"prod",n);d=ID({inputs:{x:i},backend:n,attrs:{shape:e}}),l.push(s),l.push(i)}if(i){l.push(d);const e=Nc(d.shape,u);d=ID({inputs:{x:d},backend:n,attrs:{shape:e}})}return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),d}};const uP={kernelName:La,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{paramsNestedSplits:r,paramsDenseValues:s,indices:i}=t,{outputRaggedRank:o}=a,l=r.map((e=>n.readSync(e.dataId))),u=r.map((e=>e.shape)),c=n.readSync(s.dataId),p=n.readSync(i.dataId),[d,h,f]=pF(l,u,c,s.shape,s.dtype,p,i.shape,o),m=d.map((e=>n.makeTensorInfo([e.length],"int32",e))),g=n.makeTensorInfo(f,s.dtype,h);return m.concat([g])}};const cP={kernelName:za,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{starts:a,limits:r,deltas:s}=t,i=n.readSync(a.dataId),o=n.readSync(r.dataId),l=n.readSync(s.dataId),[u,c]=dF(i,a.shape,a.dtype,o,r.shape,l,s.shape);return[n.makeTensorInfo([u.length],"int32",u),n.makeTensorInfo([c.length],a.dtype,c)]}};const pP={kernelName:Pa,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{shape:r,values:s,defaultValue:i,rowPartitionTensors:o}=t,{rowPartitionTypes:l}=a,u=n.readSync(r.dataId),c=n.readSync(s.dataId),p=n.readSync(i.dataId),d=o.map((e=>n.readSync(e.dataId))),h=o.map((e=>e.shape)),[f,m]=hF(u,r.shape,c,s.shape,s.dtype,p,i.shape,d,h,l);return n.makeTensorInfo(f,s.dtype,m)}},dP=e=>{const{backend:t,attrs:n}=e,{start:a,stop:r,step:s,dtype:i}=n,o=fF(a,r,s,i);return t.makeTensorInfo([o.length],i,o)},hP={kernelName:Ba,backendName:"webgl",kernelFunc:dP},fP=mD({opSnippet:"return 1.0 / x;"}),mP={kernelName:Va,backendName:"webgl",kernelFunc:fP},gP=mD({opSnippet:UF+"\n  return (x < 0.0) ? 0.0 : x;\n",packedOpSnippet:"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),yP={kernelName:Ua,backendName:"webgl",kernelFunc:gP},bP=mD({opSnippet:UF+"\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",packedOpSnippet:"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),xP={kernelName:Xa,backendName:"webgl",kernelFunc:bP};class vP{constructor(e,t,n,a,r){this.variableNames=["A"],this.outputShape=[];const[s,i,o,l]=e;this.outputShape=[s,t,n,l];const u=[a&&t>1?i-1:i,a&&n>1?o-1:o],c=[a&&t>1?t-1:t,a&&n>1?n-1:n];let p;p=r?"(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${u[0]/c[0]},\n          ${u[1]/c[1]});\n      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${p};\n\n        // Compute the four integer indices.\n        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));\n        ivec2 sourceCeilRC = ivec2(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);\n        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);\n        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);\n        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\n\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n        float newValue = top + (bottom - top) * fracRC.x;\n\n        setOutput(newValue);\n      }\n    `}}class wP{constructor(e,t,n,a,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[s,i,o,l]=e;this.outputShape=[s,t,n,l];const u=[a&&t>1?i-1:i,a&&n>1?o-1:o],c=[a&&t>1?t-1:t,a&&n>1?n-1:n];let p;p=r?"(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${u[0]/c[0]},\n          ${u[1]/c[1]},\n          ${u[1]/c[1]});\n      const vec3 inputShapeRC = vec3(${i}.0, ${o}.0,\n                                     ${o}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${p};\n\n        // Compute the four integer indices.\n        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));\n        ivec3 sourceCeilRC = ivec3(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${l-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        // In parallel, construct four corners for all four components in\n        // packed 2x2 cell.\n        vec4 topLeft = vec4(\n          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 bottomLeft = vec4(\n          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 topRight = vec4(\n          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec4 bottomRight = vec4(\n          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);\n\n        vec4 top = mix(topLeft, topRight, fracRC.yyzz);\n        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);\n        vec4 newValue = mix(top, bottom, fracRC.x);\n\n        setOutput(newValue);\n      }\n    `}}const kP={kernelName:qa,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{images:r}=t,{alignCorners:s,halfPixelCenters:i,size:o}=a,[l,u]=o,c=Ct().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new wP(r.shape,l,u,s,i):new vP(r.shape,l,u,s,i);return n.runWebGLProgram(c,[r],"float32")}};class NP{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,a,r]=t,[,s,i]=e,o=[n&&s>1?a-1:a,n&&i>1?r-1:r],l=[n&&s>1?s-1:s,n&&i>1?i-1:i],u=o[0]/l[0],c=o[1]/l[1],p=1/u,d=1/c,h=2*Math.ceil(p)+2,f=2*Math.ceil(d)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${u});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${p});\n        const float invWidthScale = float(${d});\n\n        const int winHeight = int(${h});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(startRLerp - float(winHeight / 2));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(startCLerp - float(winWidth / 2));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${s}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${i}) {\n              continue;\n            }\n\n            float dxR = float(dyR) * heightScale;\n            int topDxRIndex = int(floor(dxR));\n            int bottomDxRIndex = int(min(ceil(dxR), ${a-1}.0));\n            float dxRLerp = dxR - float(topDxRIndex);\n            float inverseDxRLerp = 1.0 - dxRLerp;\n\n            float dxC = float(dyC) * widthScale;\n            int leftDxCIndex = int(floor(dxC));\n            int rightDxCIndex = int(min(ceil(dxC), ${r-1}.0));\n            float dxCLerp = dxC - float(leftDxCIndex);\n            float inverseDxCLerp = 1.0 - dxCLerp;\n\n            if (r == topDxRIndex && c == leftDxCIndex) {\n              // topLeft\n              accumulator +=\n                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\n            }\n\n            if (r == topDxRIndex && c == rightDxCIndex) {\n              // topRight\n              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == leftDxCIndex) {\n              // bottomLeft\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == rightDxCIndex) {\n              // bottomRight\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const SP={kernelName:Ka,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{images:r,dy:s}=t,{alignCorners:i}=a,o=new NP(s.shape,r.shape,i);return n.runWebGLProgram(o,[s],s.dtype)}};class IP{constructor(e,t,n,a,r){this.variableNames=["A"],this.outputShape=[];const[s,i,o,l]=e;this.outputShape=[s,t,n,l];const u=[a&&t>1?i-1:i,a&&n>1?o-1:o],c=[a&&t>1?t-1:t,a&&n>1?n-1:n],p=a?"0.5":"0.0";let d;d=r?"max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${u[0]/c[0]},\n          ${u[1]/c[1]});\n      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${d};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec2 sourceNearestRC = ivec2(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${p})));\n        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n        setOutput(newValue);\n      }\n    `}}class TP{constructor(e,t,n,a,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[s,i,o,l]=e;this.outputShape=[s,t,n,l];const u=[a&&t>1?i-1:i,a&&n>1?o-1:o],c=[a&&t>1?t-1:t,a&&n>1?n-1:n],p=a?"0.5":"0.0";let d;d=r?"max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${u[0]/c[0]},\n          ${u[1]/c[1]},\n          ${u[1]/c[1]});\n      const vec3 inputShapeRC = vec3(${i}.0, ${o}.0,\n                                     ${o}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${d};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec3 sourceNearestRC = ivec3(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${p})));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${l-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        vec4 newValue = vec4(\n          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),\n          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);\n\n        setOutput(newValue);\n      }\n    `}}const CP={kernelName:Ga,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{images:r}=t,{alignCorners:s,halfPixelCenters:i,size:o}=a,[l,u]=o,c=Ct().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new TP(r.shape,l,u,s,i):new IP(r.shape,l,u,s,i);return n.runWebGLProgram(c,[r],r.dtype)}};class EP{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,a,r]=t,[,s,i]=e,o=[n&&s>1?a-1:a,n&&i>1?r-1:r],l=[n&&s>1?s-1:s,n&&i>1?i-1:i],u=o[0]/l[0],c=o[1]/l[1],p=1/u,d=1/c,h=2*Math.ceil(p)+2,f=2*Math.ceil(d)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${u});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${p});\n        const float invWidthScale = float(${d});\n\n        const int winHeight = int(${h});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(floor(startRLerp - float(winHeight / 2)));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(floor(startCLerp - float(winWidth / 2)));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${s}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${i}) {\n              continue;\n            }\n\n            float sourceFracRow =\n              float(${o[0]}) *\n                (float(dyR) / float(${l[0]}));\n\n            float sourceFracCol =\n                float(${o[1]}) *\n                  (float(dyC) / float(${l[1]}));\n\n            int sourceNearestRow = int(min(\n                float(int(${a}) - 1),\n                ${n} ? float(round(sourceFracRow)) :\n                                  float(floor(sourceFracRow))));\n\n            int sourceNearestCol = int(min(\n                float(int(${r}) - 1),\n                ${n} ? float(round(sourceFracCol)) :\n                                  float(floor(sourceFracCol))));\n\n            if (r == sourceNearestRow && c == sourceNearestCol) {\n              accumulator += getDy(b, dyR, dyC, d);\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const $P={kernelName:Ha,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{images:r,dy:s}=t,{alignCorners:i}=a,o=new EP(s.shape,r.shape,i);return n.runWebGLProgram(o,[s],s.dtype)}};class RP{constructor(e,t){this.variableNames=["x"];const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=e,1===n)return void(this.userCode=`\n        void main() {\n          int coord = getOutputCoords();\n          setOutput(getX(${e[0]} - coord - 1));\n        }\n      `);const a=e.map(((n,a)=>(n=>-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - coords[${n}] - 1`:`coords[${n}]`)(a))).join(","),r=h_(n);this.userCode=`\n      void main() {\n        ${r} coords = getOutputCoords();\n        setOutput(getX(${a}));\n      }\n    `}}class AP{constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);this.outputShape=e;const a=OF("rc",n),r=`${a[n-1]} + 1 < ${this.outputShape[n-1]}`,s=`${a[n-2]} + 1 < ${this.outputShape[n-2]}`,i=h_(n);function o(n){const a=e.map(((a,r)=>function(n,a){return-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - ${a[n]} - 1`:`${a[n]}`}(r,n)));return`getChannel(getX(${a.join(",")}), vec2(${a.slice(-2).join(",")}))`}this.userCode=1===n?`\n        void main(){\n          int rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = getChannel(getX(${e[0]} - rc - 1),\n            ${e[0]} - rc - 1);\n          if(${r}){\n              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),\n                ${e[0]} - (rc  + 1) - 1);\n          }\n          setOutput(result);\n        }\n      `:`\n        void main() {\n          ${i} rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = ${function(e){return o(e)}(a.slice())};\n          if(${r}){\n            result.g = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",o(e)}(a.slice())};\n          }\n          if(${s}) {\n            result.b = ${function(e){return e[n-2]="("+e[n-2]+" + 1)",o(e)}(a.slice())};\n            if(${r}) {\n              result.a = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",e[n-2]="("+e[n-2]+" + 1)",o(e)}(a.slice())};\n            }\n          }\n          setOutput(result);\n        }\n    `}}const _P={kernelName:Ya,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{dims:s}=a,i=r.shape.length,o=at(s,r.shape);if(0===i)return rD({inputs:{x:r},backend:n});const l=Ct().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new AP(r.shape,o):new RP(r.shape,o);return n.runWebGLProgram(l,[r],r.dtype)}};class FP{constructor(e,t){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];const n=e[1],a=e[2];this.outputShape=e;let r="";r="number"===typeof t?`float outputValue = ${t.toFixed(2)};`:`\n        vec3 fill = vec3(${t.join(",")});\n        float outputValue = fill[coords[3]];`,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n          int y = coords[1];\n          float coordXFloat = (float(x) - params[0]) * params[3] -\n            (float(y) - params[1]) * params[2];\n          float coordYFloat = (float(x) - params[0]) * params[2] +\n            (float(y) - params[1]) * params[3];\n          int coordX = int(round(coordXFloat + params[0]));\n          int coordY = int(round(coordYFloat + params[1]));\n          ${r}\n          if(coordX >= 0 && coordX < ${a} && coordY >= 0 && coordY < ${n}) {\n            outputValue = getImage(coords[0], coordY, coordX, coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const DP={kernelName:Br,backendName:"webgl",kernelFunc:e=>{let{inputs:t,attrs:n,backend:a}=e;const{image:r}=t,{radians:s,fillValue:i,center:o}=n,l=a,u=new FP(r.shape,i),[c,p]=_f(o,r.shape[1],r.shape[2]),d=[[c,p,Math.sin(s),Math.cos(s)]];return l.runWebGLProgram(u,[r],r.dtype,d)}},OP=mD({opSnippet:"\n  // OpenGL ES does not support round function.\n  // The algorithm is based on banker's rounding.\n  float base = floor(x);\n  if ((x - base) < 0.5) {\n    return floor(x);\n  } else if ((x - base) > 0.5) {\n    return ceil(x);\n  } else {\n    if (mod(base, 2.0) == 0.0) {\n      return base;\n    } else {\n      return base + 1.0;\n    }\n  }\n"}),MP={kernelName:Qa,backendName:"webgl",kernelFunc:OP},LP=mD({opSnippet:"return inversesqrt(x);",cpuKernelImpl:mF}),zP={kernelName:Za,backendName:"webgl",kernelFunc:LP};class PP{constructor(e,t,n,a,r,s){let i=arguments.length>7&&void 0!==arguments[7]&&arguments[7];this.variableNames=["updates","indices","defaultValue"],this.outputShape=s;const o=h_(r.length),l=h_(s.length);let u="";1===n?u="i":2===n&&(u="i, j");const c=`getIndices(${u})`;let p="";1===a?p="i":2===a&&(p="i, coords[1]");const d=`getUpdates(${p})`;let h="";i&&(h="coords[0], coords[1]");const f=`getDefaultValue(${h})`,m=t>1?"strides[j]":"strides";this.userCode=`\n        ${o} strides = ${o}(${r});\n\n        void main() {\n          ${l} coords = getOutputCoords();\n          float sum = 0.0;\n          bool found = false;\n          for (int i = 0; i < ${e}; i++) {\n            int flattenedIndex = 0;\n            for (int j = 0; j < ${t}; j++) {\n              int index = round(${c});\n              flattenedIndex += index * ${m};\n            }\n            if (flattenedIndex == coords[0]) {\n              sum += ${d};\n              found = true;\n            }\n          }\n          setOutput(mix(${f}, sum, float(found)));\n        }\n      `}}class BP{constructor(e,t,n,a,r,s){let i=arguments.length>7&&void 0!==arguments[7]&&arguments[7];this.variableNames=["updates","indices","defaultValue"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=s;const o=h_(r.length),l=h_(s.length);let u="";1===n?u="i":2===n&&(u="i, j");const c=`getIndices(${u})`;let p="";1===a?p="i":2===a&&(p="i, coords[1]");const d=`getUpdates(${p})`;let h="";i&&(h="coords[0], coords[1]");const f=`getDefaultValue(${h})`,m=t>1?"strides[j]":"strides",g=t>1?"strides[j + 1]":"strides";this.userCode=`\n        ${o} strides = ${o}(${r});\n\n        void main() {\n          ${l} coords = getOutputCoords();\n          vec4 sum = vec4(0.);\n          vec4 found = vec4(0.);\n          for (int i = 0; i < ${e}; i+=2) {\n            ivec2 flattenedIndex = ivec2(0);\n            for (int j = 0; j < ${t}; j+=2) {\n              ivec4 index = round(${c});\n              flattenedIndex += index.xz * ${m};\n              if (j + 1 < ${t}) {\n                flattenedIndex += index.yw * ${g};\n              }\n            }\n            if (flattenedIndex[0] == coords[0] || flattenedIndex[1] == coords[0] ||\n                flattenedIndex[0] == coords[0] + 1 || flattenedIndex[1] == coords[0] + 1) {\n              vec4 updVals = ${d};\n              if (flattenedIndex[0] == coords[0]) {\n                sum.xy += updVals.xy;\n                found.xy = vec2(1.);\n              } else if (flattenedIndex[0] == coords[0] + 1) {\n                sum.zw += updVals.xy;\n                found.zw = vec2(1.);\n              }\n              if (flattenedIndex[1] == coords[0]) {\n                sum.xy += updVals.zw;\n                found.xy = vec2(1.);\n              } else if (flattenedIndex[1] == coords[0] + 1) {\n                sum.zw += updVals.zw;\n                found.zw = vec2(1.);\n              }\n            }\n          }\n          setOutput(mix(${f}, sum, found));\n        }\n      `}}const WP={kernelName:Ja,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{indices:r,updates:s}=t,{shape:i}=a,{sliceRank:o,numUpdates:l,sliceSize:u,strides:c,outputSize:p}=zd(0,r,i),d=[p/u,u];if(0===p)return n.makeTensorInfo(i,r.dtype);const h=ID({inputs:{x:r},backend:n,attrs:{shape:[l,o]}}),f=ID({inputs:{x:s},backend:n,attrs:{shape:[l,u]}}),m=n.makeTensorInfo([],"float32",new Float32Array([0]));let g;g=Ct().getBool("WEBGL_PACK")?new BP(l,o,h.shape.length,f.shape.length,c,d):new PP(l,o,h.shape.length,f.shape.length,c,d);const y=n.runWebGLProgram(g,[f,h,m],f.dtype),b=ID({inputs:{x:y},backend:n,attrs:{shape:i}});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(y),n.disposeIntermediateTensorInfo(m),b}};class VP{constructor(e,t,n,a){this.variableNames=["sortedSequence","values"],this.customUniforms=[{name:"numInputs",type:"int"}],this.outputShape=[e,n];const r=`for (int i = 0; i < ${Math.ceil(Math.log2(t+1))}; ++i) { if (left >= right) break;`,s=2===Ct().getNumber("WEBGL_VERSION")?"while (left < right) {":r,i="left"===a?"<":"<=";this.userCode=`\n       int findBound(int batch, float value) {\n         int left = 0;\n         int right = numInputs;\n         int mid;\n         ${s}\n           mid = (left + right) / 2;\n           if (getSortedSequence(batch, mid) ${i} value) {\n             left = mid + 1;\n           } else {\n             right = mid;\n           }\n         }\n         return right;\n       }\n\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int valueIndex = coords[1];\n\n         float value = getValues(batch, valueIndex);\n\n         setOutput(float(findBound(batch, value)));\n       }\n     `}}const UP={kernelName:tr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{sortedSequence:r,values:s}=t,{side:i}=a,o=new VP(r.shape[0],r.shape[1],s.shape[1],i),l=[[r.shape[1]]];return n.runWebGLProgram(o,[r,s],"int32",l)}};class jP{constructor(e,t,n){let a,r;if(this.variableNames=["c","a","b"],this.outputShape=t,n>4)throw Error(`Where for rank ${n} is not yet supported`);if(1===n)r="resRC",a="resRC";else{const n=["resRC.x","resRC.y","resRC.z","resRC.w"],s=[],i=[];for(let a=0;a<t.length;a++)i.push(`${n[a]}`),a<e&&s.push(`${n[a]}`);a=s.join(),r=i.join()}const s=h_(n);this.userCode=`\n      void main() {\n        ${s} resRC = getOutputCoords();\n        float cVal = getC(${a});\n        if (cVal >= 1.0) {\n          setOutput(getA(${r}));\n        } else {\n          setOutput(getB(${r}));\n        }\n      }\n    `}}const GP={kernelName:nr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:a,t:r,e:s}=t,i=new jP(a.shape.length,r.shape,r.shape.length);return n.runWebGLProgram(i,[a,r,s],Us(r.dtype,s.dtype))}},HP=mD({opSnippet:`\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\n  // see: https://arxiv.org/abs/1706.02515\n  float scaleAlpha = ${Pf};\n  float scale = ${Bf};\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\n`}),qP={kernelName:ar,backendName:"webgl",kernelFunc:HP},KP=mD({opSnippet:fD+"\n  return 1.0 / (1.0 + exp(-1.0 * x));\n",packedOpSnippet:"\n  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",cpuKernelImpl:yF}),XP={kernelName:lr,backendName:"webgl",kernelFunc:KP},YP=mD({opSnippet:"\n  if (isnan(x)) { return 0.0; }\n  return sign(x);\n"}),QP={kernelName:or,backendName:"webgl",kernelFunc:YP},ZP=mD({opSnippet:fD+"\n  return sin(x);\n",packedOpSnippet:`\n  vec4 result = sin(x);\n  bvec4 isNaN = isnan(x);\n  ${nD}\n  return result;\n`}),JP={kernelName:sr,backendName:"webgl",kernelFunc:ZP},eB=mD({opSnippet:"\n  float e2x = exp(x);\n  return (e2x - 1.0 / e2x) / 2.0;\n"}),tB={kernelName:ir,backendName:"webgl",kernelFunc:eB},nB=mD({opSnippet:"\n  float epsilon = 1.1920928955078125e-7;\n  float threshold = log(epsilon) + 2.0;\n\n  bool too_large = x > -threshold;\n  bool too_small = x < threshold;\n\n  float result;\n  float exp_x = exp(x);\n\n  if (too_large){\n    result = x;\n  }\n  else if (too_small){\n    result = exp_x;\n  }\n  else{\n    result = log(exp_x + 1.0);\n  }\n  return result;\n"}),aB={kernelName:ur,backendName:"webgl",kernelFunc:nB},rB={kernelName:dr,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{blockShape:s,paddings:i}=a;qe(r.shape.length<=4,(()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet"));const o=s.reduce(((e,t)=>e*t)),l=[[0,0]];l.push(...i);for(let y=1+s.length;y<r.shape.length;++y)l.push([0,0]);const u=[],c=rP({inputs:{x:r},backend:n,attrs:{paddings:l,constantValue:0}}),p=Ff(c.shape,s,o,!1),d=Df(p.length,s.length,!1),h=Of(c.shape,s,o,!1),f=ID({inputs:{x:c},backend:n,attrs:{shape:p}}),m=OD({inputs:{x:f},backend:n,attrs:{perm:d}}),g=ID({inputs:{x:m},backend:n,attrs:{shape:h}});return u.push(c),u.push(f),u.push(m),u.forEach((e=>n.disposeIntermediateTensorInfo(e))),g}};const sB={kernelName:mr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{indices:a,values:r,denseShape:s,defaultValue:i}=t;if(1!==s.shape.length)throw new Error(`Dense shape must be a vector, saw:\n         ${s.shape}`);if(2!==a.shape.length)throw new Error(`Indices must be a matrix, saw:\n         ${a.shape}`);if(1!==r.shape.length)throw new Error(`Values must be a vector, saw:\n         ${r.shape}`);if(0!==i.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${i.shape}`);const o=n.readSync(a.dataId),l=n.readSync(r.dataId),u=n.readSync(s.dataId),c=n.readSync(i.dataId)[0],[p,d,h,f,m]=vF(o,a.shape,a.dtype,l,r.dtype,u,c);return[n.makeTensorInfo(d,a.dtype,p),n.makeTensorInfo([d[0]],r.dtype,h),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map((e=>Number(e))))),n.makeTensorInfo([m.length],a.dtype,new Int32Array(m))]}};const iB={kernelName:gr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{inputIndices:a,inputShape:r,newShape:s}=t;if(2!==a.shape.length)throw new Error(`Input indices should be a matrix but received shape ${a.shape}`);if(1!==r.shape.length)throw new Error(`Input shape should be a vector but received shape ${r.shape}`);if(1!==s.shape.length)throw new Error(`Target shape should be a vector but received shape ${s.shape}`);const i=Array.from(n.readSync(r.dataId)),o=n.readSync(a.dataId),l=Array.from(n.readSync(s.dataId)),[u,c,p]=wF(o,a.shape,a.dtype,i,l);return[n.makeTensorInfo(c,a.dtype,u),n.makeTensorInfo([p.length],s.dtype,new Int32Array(p))]}};const oB={kernelName:yr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:a,indices:r,segmentIds:s}=t;if(a.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.shape.length)throw new Error(`Indices should be a vector but received shape\n              ${r.shape}`);if(1!==s.shape.length)throw new Error(`Segment ids should be a vector but received shape\n              ${s.shape}`);const i=n.readSync(a.dataId),o=n.readSync(r.dataId),l=n.readSync(s.dataId),[u,c]=kF(i,a.shape,a.dtype,o,l,!0);return n.makeTensorInfo(c,a.dtype,u)}};const lB={kernelName:br,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:a,indices:r,segmentIds:s}=t;if(a.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.shape.length)throw new Error(`Indices should be a vector but received shape\n             ${r.shape}`);if(1!==s.shape.length)throw new Error(`Segment ids should be a vector but received shape\n             ${s.shape}`);const i=n.readSync(a.dataId),o=n.readSync(r.dataId),l=n.readSync(s.dataId),[u,c]=kF(i,a.shape,a.dtype,o,l);return n.makeTensorInfo(c,a.dtype,u)}};const uB={kernelName:xr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{sparseIndices:r,sparseValues:s,defaultValue:i}=t,{outputShape:o}=a,{sliceRank:l,numUpdates:u,sliceSize:c,strides:p,outputSize:d}=zd(0,r,o),h=!1;if("string"===s.dtype){const e=n.bufferSync(r),t=n.bufferSync(s),a=xs(n.readSync(i.dataId)[0]),f=gF(e,t,o,d,c,u,l,p,a,h);return n.makeTensorInfo(o,f.dtype,f.values)}const f=new PP(u,l,r.shape.length,s.shape.length,p,[d,1],h),m=n.runWebGLProgram(f,[s,r,i],s.dtype),g=ID({inputs:{x:m},backend:n,attrs:{shape:o}});return n.disposeIntermediateTensorInfo(m),g}};const cB={kernelName:hr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{numOrSizeSplits:s,axis:i}=a,o=at(i,r.shape)[0],l=pm(r,s,o),u=r.shape.length,c=new Array(u).fill(0),p=r.shape.slice();return l.map((e=>{const t=[...p];t[o]=e;const a=AO({inputs:{x:r},backend:n,attrs:{begin:c,size:t}});return c[o]+=e,a}))}},pB="return sqrt(x);",dB=mD({opSnippet:pB,packedOpSnippet:pB,cpuKernelImpl:NF}),hB={kernelName:cr,backendName:"webgl",kernelFunc:dB},fB={kernelName:wr,backendName:"webgl",kernelFunc:mD({opSnippet:"return x * x;"})},mB="return (a - b) * (a - b);",gB=gD({opSnippet:mB,packedOpSnippet:mB}),yB={kernelName:vr,backendName:"webgl",kernelFunc:gB};const bB={kernelName:kr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t;if("string"!==r.dtype)throw new Error("Input must be of datatype string");const s=Cm(n.readSync(r.dataId)),i=SF(s,"string",a);return n.makeTensorInfo(r.shape,"string",i)}};const xB={kernelName:zr,backendName:"webgl",kernelFunc:function(e){let{inputs:t,attrs:n,backend:a}=e;const{x:r}=t,s=UF+`\n    return x > 0.0 ? 1.0 : float(${n.alpha});\n  `,i=new VF(r.shape,s);return a.runWebGLProgram(i,[r],r.dtype)}};class vB{constructor(e,t,n){this.variableNames=["x"],this.outputShape=n;const a=n.length,r=h_(n.length),s=h_(n.length);let i="";if(1===a)i="coords * strides + begin";else{let e=0;i=n.map(((t,a)=>(e++,1===n.length?`coords * strides[${a}] + begin[${a}]`:`coords[${e-1}] * strides[${a}] + begin[${a}]`))).join(",")}this.userCode=`\n      ${r} begin = ${r}(${e});\n      ${r} strides = ${r}(${t});\n\n      void main() {\n        ${s} coords = getOutputCoords();\n        setOutput(getX(${i}));\n      }\n    `}}const wB={kernelName:Nr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{begin:s,end:i,strides:o,beginMask:l,endMask:u,ellipsisMask:c,newAxisMask:p,shrinkAxisMask:d}=a,{finalShapeSparse:h,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:y,begin:b,end:x,strides:v}=Ql(r.shape,s,i,o,l,u,c,p,d);let w;if(m)w=ID({inputs:{x:r},backend:n,attrs:{shape:f}});else if(g||y){qe(r.shape.length>=1,(()=>`Input must have rank at least 1, got: ${r.shape.length}`));const e=zl(b,x,v),t=AO({inputs:{x:r},backend:n,attrs:{begin:b,size:e}});w=ID({inputs:{x:t},backend:n,attrs:{shape:f}}),n.disposeIntermediateTensorInfo(t)}else{if(n.shouldExecuteOnCPU([r])){const e=n.readSync(r.dataId),t=$o(r.shape,r.dtype,e),a=IF(h,t,v,b);w=n.makeTensorInfo(f,r.dtype,a.values)}else{const e=new vB(b,v,h);w=n.runWebGLProgram(e,[r],r.dtype)}}const k=ID({inputs:{x:w},backend:n,attrs:{shape:f}});return n.disposeIntermediateTensorInfo(w),k}};const kB={kernelName:Sr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{separator:r,nGramWidths:s,leftPad:i,rightPad:o,padWidth:l,preserveShortSequences:u}=a,{data:c,dataSplits:p}=t,d=n.readSync(c.dataId),h=n.readSync(p.dataId),[f,m]=TF(d,h,r,s,i,o,l,u);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(p.shape,"int32",m)]}};const NB={kernelName:Ir,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{skipEmpty:r}=a,{input:s,delimiter:i}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(1!==s.shape.length)throw new Error(`Input must be a vector, got shape: ${s.shape}`);if(0!==i.shape.length)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);const o=n.readSync(s.dataId),l=n.readSync(i.dataId)[0],[u,c,p]=CF(o,l,r),d=c.length;return[n.makeTensorInfo([d,2],"int32",u),n.makeTensorInfo([d],"string",c),n.makeTensorInfo([2],"int32",new Int32Array(p))]}};const SB={kernelName:Tr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{numBuckets:r}=a,{input:s}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(r<=0)throw new Error("Number of buckets must be at least 1");const i=n.readSync(s.dataId),o=EF(i,r);return n.makeTensorInfo(s.shape,"int32",o)}},IB=mD({opSnippet:"return tan(x);"}),TB={kernelName:Er,backendName:"webgl",kernelFunc:IB},CB=mD({opSnippet:"\n  float e2x = exp(-2.0 * abs(x));\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\n"}),EB={kernelName:$r,backendName:"webgl",kernelFunc:CB};const $B={kernelName:er,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{tensor:r,indices:s,updates:i}=t,{}=a,{sliceRank:o,numUpdates:l,sliceSize:u,strides:c,outputSize:p}=zd(0,s,r.shape),d=[p/u,u];if(0===p)return n.makeTensorInfo(r.shape,s.dtype);const h=ID({inputs:{x:s},backend:n,attrs:{shape:[l,o]}}),f=ID({inputs:{x:i},backend:n,attrs:{shape:[l,u]}}),m=ID({inputs:{x:r},backend:n,attrs:{shape:d}}),g=new PP(l,o,h.shape.length,f.shape.length,c,d,!1,!0),y=n.runWebGLProgram(g,[f,h,m],m.dtype),b=ID({inputs:{x:y},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(y),b}};class RB{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let s=0;s<n.length;s++)n[s]=e[s]*t[s];this.outputShape=n,this.rank=n.length;const a=h_(this.rank),r=function(e){const t=e.length;if(t>5)throw Error(`Tile for rank ${t} is not yet supported`);if(1===t)return`imod(resRC, ${e[0]})`;const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],a=[];for(let r=0;r<e.length;r++)a.push(`imod(${n[r]}, ${e[r]})`);return a.join()}(e);this.userCode=`\n      void main() {\n        ${a} resRC = getOutputCoords();\n        setOutput(getA(${r}));\n      }\n    `}}function AB(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{reps:s}=a;if("string"===r.dtype||r.shape.length>5){const e=n.readSync(r.dataId),t="string"===r.dtype?e.map((e=>xs(e))):e,a=$o(r.shape,r.dtype,t),i=RF(a,s);return n.makeTensorInfo(i.shape,i.dtype,i.values)}const i=new RB(r.shape,s);return n.runWebGLProgram(i,[r],r.dtype)}const _B={kernelName:Rr,backendName:"webgl",kernelFunc:AB};class FB{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=e,this.userCode="\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // We compare elements pair-wise within a group of size 2 * inc.\n         // The comparing rule for each group alternates between ascending\n         // and descending. Within each group, we compare each pair at\n         // positions i and i+inc. To decide whether an element at position i\n         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than\n         // inc, it is in the first half of the group, we denote it as x0,\n         // otherwise we denote it as x1.\n         // For example, as shown in the Bitonic top K paper referenced above,\n         // Figure5(a) shows that element[1] is in the\n         // second half of the group when group size is 2, but it is in the\n         // first half of the group when group size is 4.\n\n         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;\n         int i = isFirstInPair ? elemIdx : elemIdx - inc;\n\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));\n         float x0 = i0 < n ? getX(batch, i0) : negativeInf;\n         float x1 = i1 < n ? getX(batch, i1) : negativeInf;\n\n         // Denotes which direction indices are in (ascending or descending).\n         bool reverse = imod(elemIdx, 2 * dir) >= dir;\n         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);\n         if (reverse == isGreater) { // Elements in opposite order of direction\n           int iTemp = i0;\n           i0 = i1;\n           i1 = iTemp;\n         }\n         if (isFirstInPair) {\n            setOutput(float(i0));\n         } else {\n            setOutput(float(i1));\n         }\n       }\n     "}}class DB{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=e,this.userCode="\n    void main() {\n         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // The output size is half of the previous size.\n         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),\n         // we only need to output the indices at positions |, the indices at\n         // positions _ can be thrown away, see Figure5(b) After Phase 2\n         // (Merge phase) in the Bitonic Top K paper referenced above.\n         // For example, the paper shows we only need to output the orange bars.\n         // The output sequence should look like this | | | | | | | |.\n         // Because the sequence is halved, to map the output index back\n         // to the previous sequence to find the corresponding value,\n         // we need to double the index. When we double the index,\n         // we basically interpolate a position, so 2i looks like\n         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position\n         // of each 2k positions by - elemIdx % k. E.g. for output at\n         // index 4,5,6,7, we want to get the corresponding element at\n         // original index 8,9,10,11, for output at index 8,9,10,11,\n         // we want to get the corresponding element at original index\n         // 16,17,18,19, so on and so forth.\n\n         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));\n\n         float x0 = getX(batch, i0);\n         float x1 = i1 < n ? getX(batch, i1) : x0;\n\n         setOutput(x0 >= x1 ? float(i0) : float(i1));\n       }\n     "}}function OB(e,t){null!==t&&e.disposeIntermediateTensorInfo(t)}function MB(e){let t=1;for(;t<e;)t*=2;return t}const LB={kernelName:Ar,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{k:s,sorted:i}=a,o=Ct().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),l=Ct().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),u=r.shape,c=u[u.length-1];if(n.shouldExecuteOnCPU([r])||c<o||s>l){const e=n.readSync(r.dataId),[t,a]=AF(e,u,r.dtype,s,i);return[n.makeTensorInfo(t.shape,t.dtype,t.values),n.makeTensorInfo(a.shape,a.dtype,a.values)]}if(0===s)return u[u.length-1]=0,[n.makeTensorInfo(u,r.dtype,[]),n.makeTensorInfo(u,"int32",[])];if(1===c)return[r,mL({attrs:{shape:u,dtype:"int32",value:0},backend:n})];const p=n.texData.get(r.dataId),d=null!==p&&p.isPacked,h=d?n.unpackTensor(r):r,f=Ye(u)/c,m=ID({inputs:{x:h},attrs:{shape:[f,c]},backend:n});d&&OB(n,h);const g=MB(s),y=MB(c);let b=null;const x=()=>null===b?[m,m]:[m,b],v=(e,t,a)=>{const r=x(),s=new FB(a),i=[[c],[null===b?1:0],[Number.NEGATIVE_INFINITY],[e],[t]],o=b;b=n.runWebGLProgram(s,r,"int32",i),OB(n,o)};for(let I=1;I<g;I*=2){const e=2*I;for(let t=I;t>=1;t/=2)v(e,t,[f,y])}for(let I=y;I>g;I/=2){const e=x(),t=new DB([f,I/2]),a=[[c],[null===b?1:0],[g]],r=b;b=n.runWebGLProgram(t,e,"int32",a),OB(n,r);const s=g/2,i=2*s;for(let n=s;n>=1;n/=2)v(i,n,b.shape)}let w=b;b=AO({inputs:{x:b},backend:n,attrs:{begin:0,size:[f,s]}}),OB(n,w);let k=DL({inputs:{x:m,indices:b},backend:n,attrs:{axis:1,batchDims:1}});OB(n,m);const N=u.slice(0,-1);N.push(s),w=b,b=ID({inputs:{x:b},attrs:{shape:N},backend:n}),OB(n,w);const S=k;return k=ID({inputs:{x:k},attrs:{shape:N},backend:n}),OB(n,S),[k,b]}};class zB{constructor(e,t,n,a,r,s){this.variableNames=["Image","Transforms"],this.outputShape=s;const i="nearest"===n?1:2;let o;switch(a){case"constant":default:o=1;break;case"reflect":o=2;break;case"wrap":o=3;break;case"nearest":o=4}this.userCode=`\n            float mapCoord(float outCoord, float len) {\n              float inCoord = outCoord;\n              if(${o} == 2) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    if (inCoord < sz2) {\n                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +\n                      inCoord;\n                    }\n                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    inCoord -= sz2 * float(int(float(inCoord / sz2)));\n                    if (inCoord >= len) {\n                      inCoord = sz2 - inCoord - 1.0;\n                    }\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${o} == 3) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord -= len * float(int(float(inCoord / sz)));\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${o} == 4) {\n                return clamp(outCoord, 0.0, len - 1.0);\n              } else {\n                return outCoord;\n              }\n            }\n\n            float readWithFillValue(int batch, int coordY, int coordX,\n              int channel) {\n              float outputValue;\n              if (0 <= coordY && coordY < ${e} && 0 <= coordX && coordX < ${t}) {\n                  outputValue = getImage(batch, coordY, coordX, channel);\n              } else {\n                outputValue = float(${r});\n              }\n              return outputValue;\n            }\n\n            void main() {\n              ivec4 coords = getOutputCoords();\n              float outputValue;\n              int batch = coords[0];\n              int x = coords[2];\n              int y = coords[1];\n              int channel = coords[3];\n              float xf = float(x);\n              float yf = float(y);\n              float a1 = getTransforms(batch, 0);\n              float a2 = getTransforms(batch, 1);\n              float a3 = getTransforms(batch, 2);\n              float b1 = getTransforms(batch, 3);\n              float b2 = getTransforms(batch, 4);\n              float b3 = getTransforms(batch, 5);\n              float c1 = getTransforms(batch, 6);\n              float c2 = getTransforms(batch, 7);\n              float projection = c1 * xf + c2 * yf + 1.0;\n              if (projection == 0.0) {\n                outputValue = float(${r});\n              } else {\n                float inX = (a1 * xf + a2 * yf + a3) / projection;\n                float inY = (b1 * xf + b2 * yf + b3) / projection;\n                float mapX = mapCoord(inX, float(${t}));\n                float mapY = mapCoord(inY, float(${e}));\n\n                if (${i} == 1) {\n                  int coordY = int(round(mapY));\n                  int coordX = int(round(mapX));\n                  outputValue = readWithFillValue(batch, coordY, coordX,\n                    channel);\n                } else {\n                  float yFloor = floor(mapY);\n                  float xFloor = floor(mapX);\n                  float yCeil = yFloor + 1.0;\n                  float xCeil = xFloor + 1.0;\n                  float valueYFloor = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);\n                  float valueYCeil = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);\n                  outputValue = (yCeil - mapY) * valueYFloor +\n                  (mapY - yFloor) * valueYCeil;\n                }\n              }\n              setOutput(outputValue);\n            }\n        `}}const PB={kernelName:_r,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{image:r,transforms:s}=t,{interpolation:i,fillMode:o,fillValue:l,outputShape:u}=a,[c,p,d,h]=r.shape,[f,m]=null!=u?u:[p,d],g=new zB(p,d,i,o,l,[c,f,m,h]);return n.runWebGLProgram(g,[r,s],"float32")}};const BB={kernelName:Dr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,attrs:n,backend:a}=e,{axis:r}=n,{x:s}=t;KA(s,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const i=a.readSync(s.dataId),{outputValues:o,outputShape:l,indices:u}=FF(i,r,s.shape,s.dtype);return[a.makeTensorInfo(l,s.dtype,o),a.makeTensorInfo([u.length],"int32",u)]}};const WB={kernelName:Or,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{value:r}=t;let{axis:s}=a;s<0&&(s+=r.shape.length);const i=r,o=i.shape.length,l=r.shape[s],u=new Array(o-1);let c=0;for(let m=0;m<o;m++)m!==s&&(u[c++]=i.shape[m]);const p=[],d=new Array(o).fill(0),h=i.shape.slice();h[s]=1;const f=new Array(l);for(let m=0;m<f.length;m++){d[s]=m;const e=AO({inputs:{x:i},backend:n,attrs:{begin:d,size:h}}),t=ID({inputs:{x:e},backend:n,attrs:{shape:u}});f[m]=t,p.push(e)}return p.forEach((e=>n.disposeIntermediateTensorInfo(e))),f}};class VB{constructor(e,t){this.variableNames=["x","segmentIds"];const n=e.windowSize,a=e.batchSize,r=e.inSize,s=e.numSegments,i=s*Math.ceil(r/n);this.outputShape=[a,i];const o=4*Math.floor(n/4),l=n%4,u="\n        sumValue += dot(values, segFilter);\n    ";let c="";r%n>0&&(c=`\n        if (inIdx < 0 || inIdx >= ${r}) {\n          return initializationValue;\n        }\n      `);let p="";r%n>0&&(p=`\n        if (inIdx < 0 || inIdx >= ${r}) {\n          return -1.0;\n        }\n      `),this.userCode=`\n      const float initializationValue = 0.0;\n\n      float getValue(int batch, int inIdx) {\n        ${c}\n        return getX(batch, inIdx);\n      }\n\n      float getSegmentIdAtIndex(int inIdx) {\n        ${p}\n        return getSegmentIds(inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = int(floor(float(outIdx) / float(\n          ${s})) * float(${n}));\n        int currentSeg = int(mod(float(outIdx), float(${s})));\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${o}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0\n          );\n\n          ${u}\n        }\n\n        int inIdx = inOffset + ${o};\n        if (${1===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            0,\n            0,\n            0\n          );\n\n          ${u}\n        } else if (${2===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n              0,\n              0\n          );\n\n          ${u}\n        } else if (${3===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            0\n          );\n\n          ${u}\n        }\n        setOutput(sumValue);\n      }\n    `}}const UB={kernelName:Mr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,segmentIds:s}=t,{numSegments:i}=a,o=r.shape.length,l=[];let u=0;const c=Ic([u],o);let p=r;null!=c&&(p=OD({inputs:{x:r},backend:n,attrs:{perm:c}}),l.push(p),u=Cc(1,o)[0]);const d=Im(p.shape,u,i),h=Ye([p.shape[u]]),f=ID({inputs:{x:p},backend:n,attrs:{shape:[-1,h]}});l.push(f);const m=js(r.dtype),g=(e,t,a,r,s)=>{const i=e.shape[0],o=e.shape[1],u=Sm(o,s),c=new VB({windowSize:u,inSize:o,batchSize:i,numSegments:s},t),p=n.compileAndRun(c,[e,a],r);if(l.push(p),p.shape[1]===s)return p;const d=dP({backend:n,attrs:{start:0,stop:s,step:1,dtype:"float32"}}),h=AB({inputs:{x:d},backend:n,attrs:{reps:[o/u]}});l.push(d),l.push(h);return g(p,t,h,r,s)},y=ID({inputs:{x:g(f,"unsortedSegmentSum",s,m,i)},backend:n,attrs:{shape:d}});let b=y;if(null!=c){l.push(y);const e=Tc(c);b=OD({inputs:{x:b},backend:n,attrs:{perm:e}})}return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),b}},jB=[zD,BD,VD,jD,qD,YD,QD,ZD,rO,sO,oO,uO,pO,hO,mO,bO,xO,kO,NO,SO,CO,FO,DO,OO,MO,WO,jO,qO,oD,YO,rM,dM,yM,xM,vM,wM,kM,SM,TM,EM,DM,OM,MM,zM,WM,jM,GM,qM,XM,YM,ZM,JM,tL,aL,sL,oL,cL,hL,gL,bL,wL,NL,TL,$L,RL,_L,OL,LL,PL,sD,BL,tM,VL,jL,HL,cD,KL,YL,QL,JL,tz,az,sz,oz,cz,dz,fz,gz,yz,bz,wz,kz,Nz,Sz,Iz,Cz,Rz,_z,Wz,SD,Uz,Gz,qz,Xz,zO,Qz,eP,tP,sP,oP,hD,lP,uP,cP,pP,hP,BO,Oz,mP,yP,xP,TD,kP,SP,CP,$P,_P,DP,MP,zP,WP,UP,GP,qP,XP,QP,JP,tB,_O,Bz,aB,rB,sB,iB,oB,lB,uB,cB,hB,fB,yB,bB,xB,wB,kB,NB,SB,zz,DD,TB,EB,$B,_B,LB,PB,MD,BB,WB,UB,Jz];for(const n of jB)Qr(n);const GB=e=>new Promise(((t,n)=>{const a=document.createElement("canvas");a.width=256,a.height=256;const r=a.getContext("2d");if(!r)return void n(new Error("Failed to get canvas context"));const s=new Image;s.onload=()=>{r.drawImage(s,0,0,256,256),t(a)},s.onerror=()=>{n(new Error("Failed to load image"))},s.src=URL.createObjectURL(e)}));let HB=null;const qB=["CLL","FL","MCL"];async function KB(e){if(!HB)throw new Error("Model not loaded");const t=(n=e,wi((()=>{let e=Fl(n);return mf.resizeBilinear(e,[256,256]).div(Wo(255)).expandDims(0)})));var n;try{const e=HB.predict(t),n=await e.data(),a=ru(e,1).dataSync()[0],r=qB[a],s=[{name:"Grayscale Analysis",data:Array.from(await t.mean([3]).reshape([65536]).data())}];return e.dispose(),{class:r,probability:n[a],featureMaps:s}}catch(a){throw console.error("Prediction error:",a),new Error("Failed to analyze the lymphoma image")}finally{t.dispose()}}const XB=e=>{let{imageFile:t,imagePreview:n,onAnalysisComplete:a}=e;const[r,s]=(0,C.useState)(!1),[i,o]=(0,C.useState)(0),[l,u]=(0,C.useState)(""),[c,p]=(0,C.useState)(null),d=[{name:"Grayscale Analysis",duration:2e3},{name:"Cell Structure Detection",duration:1500},{name:"Feature Extraction",duration:1500},{name:"Classification Analysis",duration:1e3}];(0,C.useEffect)((()=>{t&&h()}),[t]),(0,C.useEffect)((()=>{if(!r)return;const e=setInterval((()=>{o((t=>t>=100?(clearInterval(e),100):t+1))}),50);return()=>clearInterval(e)}),[r]),(0,C.useEffect)((()=>{if(!r)return;u(d[0].name);(async()=>{for(let e=0;e<d.length;e++)u(d[e].name),await new Promise((t=>setTimeout(t,d[e].duration)))})()}),[r]);const h=async()=>{if(t)try{s(!0),p(null),o(0);const e=await GB(t),n=await KB(e);setTimeout((()=>{s(!1),a(n)}),5e3)}catch(JB){console.error("Analysis error:",JB);const t=JB instanceof Error?JB.message:"Analysis failed";p(t),s(!1)}};return t&&n?(0,$.jsx)("div",{className:"mt-6",children:c?(0,$.jsxs)("div",{className:"bg-red-100 border-l-4 border-red-500 text-red-700 p-4 mb-6 rounded",role:"alert",children:[(0,$.jsx)("p",{className:"font-bold",children:"Error"}),(0,$.jsx)("p",{children:c})]}):(0,$.jsx)("div",{className:"flex flex-col items-center justify-center",children:r&&(0,$.jsx)("div",{className:"w-full mb-6 flex flex-col items-center",children:(0,$.jsxs)("div",{className:"bg-white p-4 rounded-lg shadow-md w-full max-w-md",children:[(0,$.jsx)("div",{className:"mb-4",children:(0,$.jsx)("div",{className:"w-full bg-gray-200 rounded-full h-2.5",children:(0,$.jsx)("div",{className:"bg-primary-600 h-2.5 rounded-full transition-all duration-300 ease-in-out",style:{width:`${i}%`}})})}),(0,$.jsxs)("div",{className:"text-center",children:[(0,$.jsx)("p",{className:"font-medium text-gray-800",children:l}),(0,$.jsx)("p",{className:"text-sm text-gray-600 mt-1",children:"Please wait while we analyze the image..."})]}),(0,$.jsx)("div",{className:"flex justify-center mt-4 space-x-2",children:[0,1,2].map((e=>(0,$.jsx)("div",{className:"w-2 h-2 bg-primary-600 rounded-full animate-bounce",style:{animationDelay:.15*e+"s"}},e)))})]})})})}):null},YB=e=>{let{onSelectExample:t}=e;const[n,a]=(0,C.useState)(null);return(0,$.jsx)("div",{className:"mt-6",children:(0,$.jsxs)("div",{className:"border-t border-gray-200 pt-4",children:[(0,$.jsx)("h3",{className:"text-sm font-medium text-gray-500 mb-2",children:"Or try one of these examples:"}),(0,$.jsx)("div",{className:"grid grid-cols-1 sm:grid-cols-3 gap-3",children:[{id:"cll",name:"CLL Example",description:"Chronic Lymphocytic Leukemia",imagePath:"examples/lymph_cll_0044.jpg"},{id:"fl",name:"FL Example",description:"Follicular Lymphoma",imagePath:"examples/lymph_fl_0024.jpg"},{id:"mcl",name:"MCL Example",description:"Mantle Cell Lymphoma",imagePath:"examples/lymph_mcl_0048.jpg"}].map((e=>(0,$.jsxs)("button",{className:"bg-white border rounded-md overflow-hidden hover:shadow-md transition-shadow p-2 text-left",onClick:()=>(async e=>{try{a(e.id);const n=new Image,r=new Promise(((t,a)=>{n.onload=()=>t(n),n.onerror=()=>a(new Error(`Failed to load image: ${e.imagePath}`)),n.crossOrigin="anonymous",n.src=e.imagePath}));await r;const s=document.createElement("canvas");s.width=n.width,s.height=n.height;const i=s.getContext("2d");i&&(i.drawImage(n,0,0),s.toBlob((n=>{if(!n)throw new Error("Failed to convert image to blob");{const a=new File([n],`${e.id}_example.jpg`,{type:"image/jpeg"});t(a)}a(null)}),"image/jpeg"))}catch(n){console.error("Error loading example:",n),a(null),alert(`Failed to load example image: ${e.name}. Please check that the file exists.`)}})(e),disabled:null!==n,children:[(0,$.jsxs)("div",{className:"h-24 bg-gray-100 rounded flex items-center justify-center mb-2 relative",children:[(0,$.jsx)("img",{src:e.imagePath,alt:e.name,className:"w-full h-full object-cover",onError:t=>{var n;t.currentTarget.style.display="none",null===(n=t.currentTarget.parentElement)||void 0===n||n.classList.add("cll"===e.id?"bg-blue-100":"fl"===e.id?"bg-green-100":"bg-purple-100")}}),n===e.id&&(0,$.jsx)("div",{className:"absolute inset-0 bg-black bg-opacity-20 flex items-center justify-center",children:(0,$.jsx)("div",{className:"w-5 h-5 border-2 border-white border-t-transparent rounded-full animate-spin"})})]}),(0,$.jsxs)("div",{children:[(0,$.jsx)("p",{className:"font-medium text-sm",children:e.name}),(0,$.jsx)("p",{className:"text-xs text-gray-500",children:e.description})]})]},e.id)))})]})})},QB=()=>{const[e,t]=(0,C.useState)(!0),[n,a]=(0,C.useState)(0),[r,s]=(0,C.useState)(!1),[i,o]=(0,C.useState)(null),[l,u]=(0,C.useState)(!1);(0,C.useEffect)((()=>((async()=>{try{t(!0),o(null);const e=e=>{a(100*e)};await async function(e){if(HB)return HB;const t=e?{onProgress:t=>e(t)}:{};try{return HB=await nS("/lymphoma-detection-app/web-model/model.json",t),console.log("model loaded"),HB}catch(n){throw new Error(`Failed to load model as GraphModel (${n})`)}}(e),u(!0),t(!1)}catch(JB){const n=JB instanceof Error?JB.message:"Failed to load the model";o(n),t(!1),console.error("Model loading error:",JB)}})(),()=>{ti.disposeVariables()})),[]);return{isModelLoading:e,modelLoadingProgress:n,isPredicting:r,error:i,predict:(0,C.useCallback)((async e=>{if(!l)return o("Model is not ready yet. Please wait for it to load."),null;try{s(!0),o(null);const t=await GB(e),n=await KB(t);return s(!1),n}catch(JB){const t=JB instanceof Error?JB.message:"Prediction failed";return o(t),s(!1),console.error("Prediction error:",JB),null}}),[l]),resetError:(0,C.useCallback)((()=>{o(null)}),[])}},ZB=()=>{const{isModelLoading:e,modelLoadingProgress:t,isPredicting:n,error:a,predict:r,resetError:s}=QB(),[i,o]=(0,C.useState)(null),[l,u]=(0,C.useState)(null),[c,p]=(0,C.useState)(null),d=e=>{o(e),s(),p(null);const t=new FileReader;t.onloadend=()=>{u(t.result)},t.readAsDataURL(e)},h=()=>{o(null),u(null),p(null),s()};return(0,$.jsxs)("div",{className:"flex flex-col min-h-screen bg-gray-50",children:[(0,$.jsx)(R,{}),(0,$.jsx)("main",{className:"flex-grow container mx-auto px-4 py-8 max-w-4xl",children:e?(0,$.jsxs)("div",{className:"flex flex-col items-center justify-center h-64",children:[(0,$.jsx)(Pe,{progress:t}),(0,$.jsxs)("p",{className:"mt-4 text-gray-600",children:["Loading lymphoma detection model... ",t.toFixed(0),"%"]})]}):a?(0,$.jsx)("div",{className:"bg-red-100 border-l-4 border-red-500 text-red-700 p-4 mb-6",role:"alert",children:(0,$.jsx)("p",{children:a})}):(0,$.jsxs)($.Fragment,{children:[(0,$.jsxs)("div",{className:"bg-white rounded-lg shadow-md p-6 mb-6",children:[(0,$.jsx)("h2",{className:"text-xl font-semibold mb-4",children:"Upload Lymphoma Image for Analysis"}),!i||c?(0,$.jsxs)($.Fragment,{children:[(0,$.jsx)(Me,{onImageUpload:d,onReset:h,imagePreview:l,hasResult:!!c,onPredict:()=>{},isPredicting:!1}),!l&&(0,$.jsx)(YB,{onSelectExample:d})]}):(0,$.jsxs)("div",{className:"flex flex-col",children:[(0,$.jsx)("div",{className:"flex justify-center mb-4",children:(0,$.jsx)("div",{className:"relative w-full max-w-md h-56 md:h-64 rounded-lg overflow-hidden",children:(0,$.jsx)("img",{src:l||"",alt:"Uploaded lymphoma sample",className:"w-full h-full object-contain"})})}),(0,$.jsx)(XB,{imageFile:i,imagePreview:l,onAnalysisComplete:e=>{p(e)}}),(0,$.jsx)("div",{className:"flex justify-center mt-4",children:(0,$.jsx)("button",{onClick:h,className:"px-4 py-2 rounded-md text-gray-700 font-medium border border-gray-300 hover:bg-gray-50",children:"Cancel"})})]})]}),c&&(0,$.jsxs)($.Fragment,{children:[(0,$.jsx)(Le,{result:c}),(0,$.jsx)(ze,{featureMaps:c.featureMaps||[],originalImage:l||""})]})]})}),(0,$.jsx)(A,{})]})};E.createRoot(document.getElementById("root")).render((0,$.jsx)(C.StrictMode,{children:(0,$.jsx)(ZB,{})}))})()})();
//# sourceMappingURL=main.f07aac86.js.map